v8-version,9,4,146,24,-node.21,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff68ca00000,0x7ff690722000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ffdb8370000,0x7ffdb8568000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ffdb81c0000,0x7ffdb827f000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ffdb5ca0000,0x7ffdb5f72000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ffdb7680000,0x7ffdb76eb000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ffdb8090000,0x7ffdb81b5000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ffdb0050000,0x7ffdb0234000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ffdb6010000,0x7ffdb6110000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ffdb7ea0000,0x7ffdb7ea8000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ffdb7ae0000,0x7ffdb7b8e000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ffdb7ed0000,0x7ffdb7f6e000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffdb4ec0000,0x7ffdb4efb000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ffdb7cc0000,0x7ffdb7d5c000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ffdb5960000,0x7ffdb598e000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ffdb74c0000,0x7ffdb7661000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ffdb6270000,0x7ffdb6292000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ffdb7750000,0x7ffdb777b000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ffdb62a0000,0x7ffdb63af000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ffdb5bd0000,0x7ffdb5c6d000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ffdb6110000,0x7ffdb6266000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ffdb5c70000,0x7ffdb5c97000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ffdab260000,0x7ffdab287000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffdb5430000,0x7ffdb543c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ffdb6d30000,0x7ffdb6d62000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ffdb4fe0000,0x7ffdb502b000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ffdb4ea0000,0x7ffdb4eb2000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ffdb3420000,0x7ffdb34be000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ffdb7780000,0x7ffdb7ad5000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ffdb5220000,0x7ffdb528a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ffdb3860000,0x7ffdb3872000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ffdb5f80000,0x7ffdb6002000,0
shared-library-end
tick,0x7ffdb840d144,123142,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1d54a880000,0
new,MemoryChunk,0x2dc8c800000,262144
new,MemoryChunk,0x619a8c0000,262144
new,MemoryChunk,0x10268ac0000,262144
new,MemoryChunk,0x2b11af40000,262144
new,MemoryChunk,0x2512d380000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x622c080000,262144
new,MemoryChunk,0x13872940000,262144
new,MemoryChunk,0x1a058800000,262144
new,MemoryChunk,0x36a9fe00000,262144
new,MemoryChunk,0x1240440000,262144
new,MemoryChunk,0x10b76880000,262144
new,MemoryChunk,0x3482040000,262144
new,MemoryChunk,0x1d54a8c0000,262144
new,MemoryChunk,0x17e94880000,262144
code-creation,Builtin,2,126635,0x7ff68d5703c4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,126645,0x7ff68d570924,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,126651,0x7ff68d570b04,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,126658,0x7ff68d570d84,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,126664,0x7ff68d570e64,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,126670,0x7ff68d570fe4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,126676,0x7ff68d571084,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,126682,0x7ff68d5710c4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,126689,0x7ff68d571244,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,126695,0x7ff68d571404,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,126726,0x7ff68d5715c4,104,CallBoundFunction
code-creation,Builtin,2,126733,0x7ff68d571644,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,126739,0x7ff68d5716c4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,126746,0x7ff68d571744,120,Call_ReceiverIsAny
code-creation,Builtin,2,126751,0x7ff68d5717c4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,126758,0x7ff68d571bc4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,126764,0x7ff68d571fc4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,126770,0x7ff68d572404,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,126777,0x7ff68d572844,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,126783,0x7ff68d572c84,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,126789,0x7ff68d5730c4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,126795,0x7ff68d573484,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,126801,0x7ff68d573844,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,126807,0x7ff68d573c04,736,CallProxy
code-creation,Builtin,2,126813,0x7ff68d573f04,148,CallVarargs
code-creation,Builtin,2,126818,0x7ff68d573fa4,944,CallWithSpread
code-creation,Builtin,2,126824,0x7ff68d574364,1956,CallWithSpread_Baseline
code-creation,Builtin,2,126830,0x7ff68d574b24,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,126836,0x7ff68d5752c4,864,CallWithArrayLike
code-creation,Builtin,2,126841,0x7ff68d575644,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,126847,0x7ff68d575d64,156,CallForwardVarargs
code-creation,Builtin,2,126853,0x7ff68d575e04,156,CallFunctionForwardVarargs
code-creation,Builtin,2,126859,0x7ff68d575ea4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,126865,0x7ff68d575f44,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,126871,0x7ff68d576044,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,126878,0x7ff68d576184,28,ConstructFunction
code-creation,Builtin,2,126883,0x7ff68d5761a4,104,ConstructBoundFunction
code-creation,Builtin,2,126889,0x7ff68d576224,28,ConstructedNonConstructable
code-creation,Builtin,2,126895,0x7ff68d576244,100,Construct
code-creation,Builtin,2,126901,0x7ff68d5762c4,148,ConstructVarargs
code-creation,Builtin,2,126906,0x7ff68d576364,968,ConstructWithSpread
code-creation,Builtin,2,126912,0x7ff68d576744,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,126918,0x7ff68d576e24,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,126924,0x7ff68d577524,924,ConstructWithArrayLike
code-creation,Builtin,2,126930,0x7ff68d5778c4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,126936,0x7ff68d577f44,196,ConstructForwardVarargs
code-creation,Builtin,2,126941,0x7ff68d578024,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,126947,0x7ff68d578104,804,Construct_Baseline
code-creation,Builtin,2,126953,0x7ff68d578444,820,Construct_WithFeedback
code-creation,Builtin,2,126959,0x7ff68d578784,476,JSConstructStubGeneric
code-creation,Builtin,2,126965,0x7ff68d578964,376,JSBuiltinsConstructStub
code-creation,Builtin,2,126970,0x7ff68d578ae4,676,FastNewObject
code-creation,Builtin,2,126976,0x7ff68d578da4,292,FastNewClosure
code-creation,Builtin,2,126982,0x7ff68d578ee4,720,ConstructProxy
code-creation,Builtin,2,126987,0x7ff68d5791c4,360,JSEntry
code-creation,Builtin,2,126993,0x7ff68d579344,360,JSConstructEntry
code-creation,Builtin,2,126998,0x7ff68d5794c4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,127004,0x7ff68d579644,96,JSEntryTrampoline
code-creation,Builtin,2,127010,0x7ff68d5796c4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,127015,0x7ff68d579744,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,127021,0x7ff68d579864,1116,StringCodePointAt
code-creation,Builtin,2,127027,0x7ff68d579cc4,1552,StringFromCodePointAt
code-creation,Builtin,2,127033,0x7ff68d57a2e4,544,StringEqual
code-creation,Builtin,2,127038,0x7ff68d57a524,276,StringGreaterThan
code-creation,Builtin,2,127059,0x7ff68d57a644,276,StringGreaterThanOrEqual
code-creation,Builtin,2,127066,0x7ff68d57a764,276,StringLessThan
code-creation,Builtin,2,127072,0x7ff68d57a884,276,StringLessThanOrEqual
code-creation,Builtin,2,127077,0x7ff68d57a9a4,2492,StringSubstring
code-creation,Builtin,2,127083,0x7ff68d57b364,80,OrderedHashTableHealIndex
code-creation,Builtin,2,127089,0x7ff68d57b3c4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,127095,0x7ff68d57b864,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,127101,0x7ff68d57b8c4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,127107,0x7ff68d57b924,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,127113,0x7ff68d57b984,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,127119,0x7ff68d57b9e4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,127125,0x7ff68d57ba44,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,127132,0x7ff68d57baa4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,127138,0x7ff68d57bb04,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,127144,0x7ff68d57bbe4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,127149,0x7ff68d57bc24,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,127155,0x7ff68d57be84,56,BaselineOnStackReplacement
code-creation,Builtin,2,127161,0x7ff68d57bec4,84,BaselineLeaveFrame
code-creation,Builtin,2,127167,0x7ff68d57bf24,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,127173,0x7ff68d57c004,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,127179,0x7ff68d57c104,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,127185,0x7ff68d57c1e4,1004,CompileLazy
code-creation,Builtin,2,127191,0x7ff68d57c5e4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,127196,0x7ff68d57c644,252,InstantiateAsmJs
code-creation,Builtin,2,127202,0x7ff68d57c744,32,NotifyDeoptimized
code-creation,Builtin,2,127208,0x7ff68d57c784,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,127214,0x7ff68d57caa4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,127219,0x7ff68d57cdc4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,127225,0x7ff68d57d0e4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,127231,0x7ff68d57d404,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,127237,0x7ff68d57d444,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,127243,0x7ff68d57d484,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,127249,0x7ff68d57d4c4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,127255,0x7ff68d57d524,288,CallApiCallback
code-creation,Builtin,2,127260,0x7ff68d57d664,268,CallApiGetter
code-creation,Builtin,2,127266,0x7ff68d57d784,12,HandleApiCall
code-creation,Builtin,2,127271,0x7ff68d57d7a4,12,HandleApiCallAsFunction
code-creation,Builtin,2,127277,0x7ff68d57d7c4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,127283,0x7ff68d57d7e4,64,AllocateInYoungGeneration
code-creation,Builtin,2,127289,0x7ff68d57d844,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,127295,0x7ff68d57d884,64,AllocateInOldGeneration
code-creation,Builtin,2,127301,0x7ff68d57d8e4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,127306,0x7ff68d57d924,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,127312,0x7ff68d57dae4,496,GrowFastDoubleElements
code-creation,Builtin,2,127318,0x7ff68d57dce4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,127324,0x7ff68d57de84,388,DebugBreakTrampoline
code-creation,Builtin,2,127330,0x7ff68d57e024,180,ToNumber
code-creation,Builtin,2,127335,0x7ff68d57e0e4,292,ToNumber_Baseline
code-creation,Builtin,2,127341,0x7ff68d57e224,360,ToNumeric_Baseline
code-creation,Builtin,2,127346,0x7ff68d57e3a4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,127352,0x7ff68d57e424,212,ToNumberConvertBigInt
code-creation,Builtin,2,127357,0x7ff68d57e504,132,Typeof
code-creation,Builtin,2,127363,0x7ff68d57e5a4,104,BigIntToI64
code-creation,Builtin,2,127368,0x7ff68d57e624,4,BigIntToI32Pair
code-creation,Builtin,2,127375,0x7ff68d57e644,232,I64ToBigInt
code-creation,Builtin,2,127381,0x7ff68d57e744,4,I32PairToBigInt
code-creation,Builtin,2,127386,0x7ff68d57e764,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,127392,0x7ff68d57e7e4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,127398,0x7ff68d57f884,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,127404,0x7ff68d583684,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,127410,0x7ff68d5837a4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,127415,0x7ff68d5837e4,12,LoadIC_StringLength
code-creation,Builtin,2,127421,0x7ff68d583804,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,127428,0x7ff68d583824,3056,LoadIC_NoFeedback
code-creation,Builtin,2,127445,0x7ff68d584424,32,StoreGlobalIC_Slow
code-creation,Builtin,2,127450,0x7ff68d584464,7332,StoreIC_NoFeedback
code-creation,Builtin,2,127456,0x7ff68d586124,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,127462,0x7ff68d5861e4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,127468,0x7ff68d586244,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,127474,0x7ff68d586344,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127481,0x7ff68d586444,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,127487,0x7ff68d586544,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,127494,0x7ff68d586644,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,127499,0x7ff68d589e64,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127506,0x7ff68d58c404,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,127512,0x7ff68d58f844,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,127518,0x7ff68d591024,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,127524,0x7ff68d593164,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127530,0x7ff68d597d24,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,127537,0x7ff68d599e64,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,127543,0x7ff68d59c984,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,127549,0x7ff68d59cca4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,127555,0x7ff68d59cd64,72,HasIndexedInterceptorIC
code-creation,Builtin,2,127561,0x7ff68d59cdc4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,127566,0x7ff68d59ce44,224,DynamicCheckMaps
code-creation,Builtin,2,127572,0x7ff68d59cf44,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,127578,0x7ff68d59cfc4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,127584,0x7ff68d59d084,152,EnqueueMicrotask
code-creation,Builtin,2,127590,0x7ff68d59d124,8,RunMicrotasksTrampoline
code-creation,Builtin,2,127596,0x7ff68d59d144,3476,RunMicrotasks
code-creation,Builtin,2,127602,0x7ff68d59dee4,2636,HasProperty
code-creation,Builtin,2,127607,0x7ff68d59e944,1156,DeleteProperty
code-creation,Builtin,2,127613,0x7ff68d59ede4,1972,CopyDataProperties
code-creation,Builtin,2,127618,0x7ff68d59f5a4,9184,SetDataProperties
code-creation,Builtin,2,127624,0x7ff68d5a19a4,28,Abort
code-creation,Builtin,2,127630,0x7ff68d5a19c4,28,AbortCSAAssert
code-creation,Builtin,2,127635,0x7ff68d5a19e4,12,EmptyFunction
code-creation,Builtin,2,127641,0x7ff68d5a1a04,12,Illegal
code-creation,Builtin,2,127646,0x7ff68d5a1a24,12,StrictPoisonPillThrower
code-creation,Builtin,2,127652,0x7ff68d5a1a44,12,UnsupportedThrower
code-creation,Builtin,2,127657,0x7ff68d5a1a64,64,ReturnReceiver
code-creation,Builtin,2,127663,0x7ff68d5a1ac4,28,ArrayConstructor
code-creation,Builtin,2,127669,0x7ff68d5a1ae4,404,ArrayConstructorImpl
code-creation,Builtin,2,127674,0x7ff68d5a1c84,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,127681,0x7ff68d5a1d64,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,127687,0x7ff68d5a1e44,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,127694,0x7ff68d5a1f04,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,127715,0x7ff68d5a1fc4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,127723,0x7ff68d5a2084,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,127730,0x7ff68d5a2144,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,127736,0x7ff68d5a2204,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,127743,0x7ff68d5a22c4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,127750,0x7ff68d5a24e4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,127756,0x7ff68d5a26e4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,127763,0x7ff68d5a28a4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,127770,0x7ff68d5a2a44,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,127776,0x7ff68d5a2c04,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,127783,0x7ff68d5a2da4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,127789,0x7ff68d5a2f84,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,127796,0x7ff68d5a3124,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,127802,0x7ff68d5a3184,12,ArrayConcat
code-creation,Builtin,2,127807,0x7ff68d5a31a4,12,ArrayPrototypeFill
code-creation,Builtin,2,127813,0x7ff68d5a31c4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,127819,0x7ff68d5a3584,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,127825,0x7ff68d5a3624,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,127830,0x7ff68d5a3704,548,ArrayIncludes
code-creation,Builtin,2,127836,0x7ff68d5a3944,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,127842,0x7ff68d5a3ca4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,127847,0x7ff68d5a3d24,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,127853,0x7ff68d5a3da4,552,ArrayIndexOf
code-creation,Builtin,2,127859,0x7ff68d5a3fe4,12,ArrayPop
code-creation,Builtin,2,127864,0x7ff68d5a4004,616,ArrayPrototypePop
code-creation,Builtin,2,127870,0x7ff68d5a4284,12,ArrayPush
code-creation,Builtin,2,127875,0x7ff68d5a42a4,2424,ArrayPrototypePush
code-creation,Builtin,2,127881,0x7ff68d5a4c24,12,ArrayShift
code-creation,Builtin,2,127887,0x7ff68d5a4c44,12,ArrayUnshift
code-creation,Builtin,2,127892,0x7ff68d5a4c64,956,CloneFastJSArray
code-creation,Builtin,2,127898,0x7ff68d5a5024,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,127904,0x7ff68d5a58c4,976,ExtractFastJSArray
code-creation,Builtin,2,127909,0x7ff68d5a5ca4,260,ArrayPrototypeEntries
code-creation,Builtin,2,127915,0x7ff68d5a5dc4,248,ArrayPrototypeKeys
code-creation,Builtin,2,127920,0x7ff68d5a5ec4,260,ArrayPrototypeValues
code-creation,Builtin,2,127926,0x7ff68d5a5fe4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,127932,0x7ff68d5a7144,4168,FlattenIntoArray
code-creation,Builtin,2,127938,0x7ff68d5a81a4,4172,FlatMapIntoArray
code-creation,Builtin,2,127943,0x7ff68d5a9204,372,ArrayPrototypeFlat
code-creation,Builtin,2,127949,0x7ff68d5a9384,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,127955,0x7ff68d5a9544,12,ArrayBufferConstructor
code-creation,Builtin,2,127960,0x7ff68d5a9564,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,127966,0x7ff68d5a9584,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,127972,0x7ff68d5a95a4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,127978,0x7ff68d5a95c4,804,AsyncFunctionEnter
code-creation,Builtin,2,127984,0x7ff68d5a9904,132,AsyncFunctionReject
code-creation,Builtin,2,127989,0x7ff68d5a99a4,128,AsyncFunctionResolve
code-creation,Builtin,2,127995,0x7ff68d5a9a44,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,128001,0x7ff68d5a9a64,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,128007,0x7ff68d5aa564,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,128013,0x7ff68d5ab064,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,128020,0x7ff68d5ab124,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,128026,0x7ff68d5ab1e4,12,BigIntConstructor
code-creation,Builtin,2,128032,0x7ff68d5ab204,12,BigIntAsUintN
code-creation,Builtin,2,128037,0x7ff68d5ab224,12,BigIntAsIntN
code-creation,Builtin,2,128043,0x7ff68d5ab244,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,128049,0x7ff68d5ab264,12,BigIntPrototypeToString
code-creation,Builtin,2,128054,0x7ff68d5ab284,12,BigIntPrototypeValueOf
code-creation,Builtin,2,128060,0x7ff68d5ab2a4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,128066,0x7ff68d5ab2c4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,128072,0x7ff68d5ab2e4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,128079,0x7ff68d5ab304,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,128084,0x7ff68d5ab324,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,128090,0x7ff68d5ab344,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,128096,0x7ff68d5ab364,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,128102,0x7ff68d5ab384,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,128108,0x7ff68d5ab3a4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,128114,0x7ff68d5ab3c4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,128120,0x7ff68d5ab3e4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,128126,0x7ff68d5ab404,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,128132,0x7ff68d5ab424,12,CallSitePrototypeGetThis
code-creation,Builtin,2,128138,0x7ff68d5ab444,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,128143,0x7ff68d5ab464,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,128149,0x7ff68d5ab484,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,128155,0x7ff68d5ab4a4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,128161,0x7ff68d5ab4c4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,128167,0x7ff68d5ab4e4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,128172,0x7ff68d5ab504,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,128178,0x7ff68d5ab524,12,CallSitePrototypeToString
code-creation,Builtin,2,128184,0x7ff68d5ab544,12,ConsoleDebug
code-creation,Builtin,2,128190,0x7ff68d5ab564,12,ConsoleError
code-creation,Builtin,2,128195,0x7ff68d5ab584,12,ConsoleInfo
code-creation,Builtin,2,128201,0x7ff68d5ab5a4,12,ConsoleLog
code-creation,Builtin,2,128206,0x7ff68d5ab5c4,12,ConsoleWarn
code-creation,Builtin,2,128211,0x7ff68d5ab5e4,12,ConsoleDir
code-creation,Builtin,2,128217,0x7ff68d5ab604,12,ConsoleDirXml
code-creation,Builtin,2,128222,0x7ff68d5ab624,12,ConsoleTable
code-creation,Builtin,2,128228,0x7ff68d5ab644,12,ConsoleTrace
code-creation,Builtin,2,128234,0x7ff68d5ab664,12,ConsoleGroup
code-creation,Builtin,2,128239,0x7ff68d5ab684,12,ConsoleGroupCollapsed
code-creation,Builtin,2,128245,0x7ff68d5ab6a4,12,ConsoleGroupEnd
code-creation,Builtin,2,128251,0x7ff68d5ab6c4,12,ConsoleClear
code-creation,Builtin,2,128256,0x7ff68d5ab6e4,12,ConsoleCount
code-creation,Builtin,2,128262,0x7ff68d5ab704,12,ConsoleCountReset
code-creation,Builtin,2,128267,0x7ff68d5ab724,12,ConsoleAssert
code-creation,Builtin,2,128273,0x7ff68d5ab744,12,ConsoleProfile
code-creation,Builtin,2,128278,0x7ff68d5ab764,12,ConsoleProfileEnd
code-creation,Builtin,2,128284,0x7ff68d5ab784,12,ConsoleTime
code-creation,Builtin,2,128289,0x7ff68d5ab7a4,12,ConsoleTimeLog
code-creation,Builtin,2,128295,0x7ff68d5ab7c4,12,ConsoleTimeEnd
code-creation,Builtin,2,128300,0x7ff68d5ab7e4,12,ConsoleTimeStamp
code-creation,Builtin,2,128306,0x7ff68d5ab804,12,ConsoleContext
code-creation,Builtin,2,128311,0x7ff68d5ab824,12,DataViewConstructor
code-creation,Builtin,2,128317,0x7ff68d5ab844,12,DateConstructor
code-creation,Builtin,2,128323,0x7ff68d5ab864,216,DatePrototypeGetDate
code-creation,Builtin,2,128328,0x7ff68d5ab944,216,DatePrototypeGetDay
code-creation,Builtin,2,128334,0x7ff68d5aba24,216,DatePrototypeGetFullYear
code-creation,Builtin,2,128340,0x7ff68d5abb04,216,DatePrototypeGetHours
code-creation,Builtin,2,128346,0x7ff68d5abbe4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,128353,0x7ff68d5abcc4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,128359,0x7ff68d5abda4,216,DatePrototypeGetMonth
code-creation,Builtin,2,128364,0x7ff68d5abe84,216,DatePrototypeGetSeconds
code-creation,Builtin,2,128370,0x7ff68d5abf64,124,DatePrototypeGetTime
code-creation,Builtin,2,128376,0x7ff68d5abfe4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,128382,0x7ff68d5ac0c4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,128388,0x7ff68d5ac1a4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,128393,0x7ff68d5ac284,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,128399,0x7ff68d5ac364,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,128405,0x7ff68d5ac444,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,128411,0x7ff68d5ac524,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,128417,0x7ff68d5ac604,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,128422,0x7ff68d5ac6e4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,128429,0x7ff68d5ac7c4,124,DatePrototypeValueOf
code-creation,Builtin,2,128435,0x7ff68d5ac844,352,DatePrototypeToPrimitive
code-creation,Builtin,2,128441,0x7ff68d5ac9c4,12,DatePrototypeGetYear
code-creation,Builtin,2,128446,0x7ff68d5ac9e4,12,DatePrototypeSetYear
code-creation,Builtin,2,128452,0x7ff68d5aca04,12,DateNow
code-creation,Builtin,2,128457,0x7ff68d5aca24,12,DateParse
code-creation,Builtin,2,128463,0x7ff68d5aca44,12,DatePrototypeSetDate
code-creation,Builtin,2,128468,0x7ff68d5aca64,12,DatePrototypeSetFullYear
code-creation,Builtin,2,128474,0x7ff68d5aca84,12,DatePrototypeSetHours
code-creation,Builtin,2,128480,0x7ff68d5acaa4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,128486,0x7ff68d5acac4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,128491,0x7ff68d5acae4,12,DatePrototypeSetMonth
code-creation,Builtin,2,128497,0x7ff68d5acb04,12,DatePrototypeSetSeconds
code-creation,Builtin,2,128503,0x7ff68d5acb24,12,DatePrototypeSetTime
code-creation,Builtin,2,128508,0x7ff68d5acb44,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,128514,0x7ff68d5acb64,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,128520,0x7ff68d5acb84,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,128526,0x7ff68d5acba4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,128532,0x7ff68d5acbc4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,128538,0x7ff68d5acbe4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,128543,0x7ff68d5acc04,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,128549,0x7ff68d5acc24,12,DatePrototypeToDateString
code-creation,Builtin,2,128555,0x7ff68d5acc44,12,DatePrototypeToISOString
code-creation,Builtin,2,128561,0x7ff68d5acc64,12,DatePrototypeToUTCString
code-creation,Builtin,2,128566,0x7ff68d5acc84,12,DatePrototypeToString
code-creation,Builtin,2,128572,0x7ff68d5acca4,12,DatePrototypeToTimeString
code-creation,Builtin,2,128578,0x7ff68d5accc4,12,DatePrototypeToJson
code-creation,Builtin,2,128583,0x7ff68d5acce4,12,DateUTC
code-creation,Builtin,2,128589,0x7ff68d5acd04,12,ErrorConstructor
code-creation,Builtin,2,128594,0x7ff68d5acd24,12,ErrorCaptureStackTrace
code-creation,Builtin,2,128600,0x7ff68d5acd44,12,ErrorPrototypeToString
code-creation,Builtin,2,128606,0x7ff68d5acd64,12,FunctionConstructor
code-creation,Builtin,2,128611,0x7ff68d5acd84,68,FunctionPrototypeApply
code-creation,Builtin,2,128617,0x7ff68d5acde4,12,FunctionPrototypeBind
code-creation,Builtin,2,128623,0x7ff68d5ace04,32,FunctionPrototypeCall
code-creation,Builtin,2,128629,0x7ff68d5ace44,12,FunctionPrototypeToString
code-creation,Builtin,2,128635,0x7ff68d5ace64,192,CreateIterResultObject
code-creation,Builtin,2,128640,0x7ff68d5acf44,788,CreateGeneratorObject
code-creation,Builtin,2,128646,0x7ff68d5ad264,12,GeneratorFunctionConstructor
code-creation,Builtin,2,128652,0x7ff68d5ad284,412,GeneratorPrototypeNext
code-creation,Builtin,2,128657,0x7ff68d5ad424,420,GeneratorPrototypeReturn
code-creation,Builtin,2,128663,0x7ff68d5ad5e4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,128670,0x7ff68d5ad7a4,12,AsyncFunctionConstructor
code-creation,Builtin,2,128676,0x7ff68d5ad7c4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,128682,0x7ff68d5ad944,88,ResumeGeneratorBaseline
code-creation,Builtin,2,128688,0x7ff68d5ad9a4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,128694,0x7ff68d5ad9e4,12,GlobalDecodeURI
code-creation,Builtin,2,128699,0x7ff68d5ada04,12,GlobalDecodeURIComponent
code-creation,Builtin,2,128706,0x7ff68d5ada24,12,GlobalEncodeURI
code-creation,Builtin,2,128711,0x7ff68d5ada44,12,GlobalEncodeURIComponent
code-creation,Builtin,2,128718,0x7ff68d5ada64,12,GlobalEscape
code-creation,Builtin,2,128725,0x7ff68d5ada84,12,GlobalUnescape
code-creation,Builtin,2,128730,0x7ff68d5adaa4,12,GlobalEval
code-creation,Builtin,2,128736,0x7ff68d5adac4,132,GlobalIsFinite
code-creation,Builtin,2,128741,0x7ff68d5adb64,124,GlobalIsNaN
code-creation,Builtin,2,128747,0x7ff68d5adbe4,12,JsonParse
code-creation,Builtin,2,128752,0x7ff68d5adc04,12,JsonStringify
code-creation,Builtin,2,128758,0x7ff68d5adc24,4608,LoadIC
code-creation,Builtin,2,128763,0x7ff68d5aee44,4296,LoadIC_Megamorphic
code-creation,Builtin,2,128769,0x7ff68d5aff24,4520,LoadIC_Noninlined
code-creation,Builtin,2,128774,0x7ff68d5b10e4,44,LoadICTrampoline
code-creation,Builtin,2,128780,0x7ff68d5b1124,24,LoadICBaseline
code-creation,Builtin,2,128785,0x7ff68d5b1144,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,128791,0x7ff68d5b1184,7376,LoadSuperIC
code-creation,Builtin,2,128797,0x7ff68d5b2e64,24,LoadSuperICBaseline
code-creation,Builtin,2,128803,0x7ff68d5b2e84,8148,KeyedLoadIC
code-creation,Builtin,2,128808,0x7ff68d5b4e64,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,128814,0x7ff68d5b81a4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,128820,0x7ff68d5b81e4,24,KeyedLoadICBaseline
code-creation,Builtin,2,128825,0x7ff68d5b8204,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,128831,0x7ff68d5b8244,5104,StoreGlobalIC
code-creation,Builtin,2,128837,0x7ff68d5b9644,44,StoreGlobalICTrampoline
code-creation,Builtin,2,128842,0x7ff68d5b9684,24,StoreGlobalICBaseline
code-creation,Builtin,2,128848,0x7ff68d5b96a4,5340,StoreIC
code-creation,Builtin,2,128853,0x7ff68d5bab84,44,StoreICTrampoline
code-creation,Builtin,2,128859,0x7ff68d5babc4,24,StoreICBaseline
code-creation,Builtin,2,128864,0x7ff68d5babe4,5780,KeyedStoreIC
code-creation,Builtin,2,128870,0x7ff68d5bc284,44,KeyedStoreICTrampoline
code-creation,Builtin,2,128876,0x7ff68d5bc2c4,24,KeyedStoreICBaseline
code-creation,Builtin,2,128881,0x7ff68d5bc2e4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,128887,0x7ff68d5bc484,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,128893,0x7ff68d5bc4a4,140,LookupContextBaseline
code-creation,Builtin,2,128899,0x7ff68d5bc544,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,128905,0x7ff68d5bc5e4,3244,LoadGlobalIC
code-creation,Builtin,2,128910,0x7ff68d5bd2a4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,128916,0x7ff68d5bdf44,44,LoadGlobalICTrampoline
code-creation,Builtin,2,128921,0x7ff68d5bdf84,24,LoadGlobalICBaseline
code-creation,Builtin,2,128927,0x7ff68d5bdfa4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,128933,0x7ff68d5bdfe4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,128939,0x7ff68d5be004,140,LookupGlobalICBaseline
code-creation,Builtin,2,128945,0x7ff68d5be0a4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,128951,0x7ff68d5be144,2064,CloneObjectIC
code-creation,Builtin,2,128956,0x7ff68d5be964,24,CloneObjectICBaseline
code-creation,Builtin,2,128962,0x7ff68d5be984,1988,CloneObjectIC_Slow
code-creation,Builtin,2,128968,0x7ff68d5bf164,2756,KeyedHasIC
code-creation,Builtin,2,128973,0x7ff68d5bfc44,24,KeyedHasICBaseline
code-creation,Builtin,2,128979,0x7ff68d5bfc64,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,128985,0x7ff68d5c06c4,1436,IterableToList
code-creation,Builtin,2,128990,0x7ff68d5c0c64,1240,IterableToFixedArray
code-creation,Builtin,2,128996,0x7ff68d5c1144,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,129026,0x7ff68d5c1444,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,129033,0x7ff68d5c1484,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,129039,0x7ff68d5c1504,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,129045,0x7ff68d5c18e4,1616,StringListFromIterable
code-creation,Builtin,2,129051,0x7ff68d5c1f44,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,129056,0x7ff68d5c2424,4156,MapConstructor
code-creation,Builtin,2,129062,0x7ff68d5c3464,1996,MapPrototypeSet
code-creation,Builtin,2,129068,0x7ff68d5c3c44,1524,MapPrototypeDelete
code-creation,Builtin,2,129073,0x7ff68d5c4244,204,MapPrototypeGet
code-creation,Builtin,2,129079,0x7ff68d5c4324,164,MapPrototypeHas
code-creation,Builtin,2,129084,0x7ff68d5c43e4,12,MapPrototypeClear
code-creation,Builtin,2,129090,0x7ff68d5c4404,284,MapPrototypeEntries
code-creation,Builtin,2,129096,0x7ff68d5c4524,144,MapPrototypeGetSize
code-creation,Builtin,2,129101,0x7ff68d5c45c4,492,MapPrototypeForEach
code-creation,Builtin,2,129107,0x7ff68d5c47c4,284,MapPrototypeKeys
code-creation,Builtin,2,129113,0x7ff68d5c48e4,284,MapPrototypeValues
code-creation,Builtin,2,129118,0x7ff68d5c4a04,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,129124,0x7ff68d5c4e24,1168,MapIteratorToList
code-creation,Builtin,2,129130,0x7ff68d5c52c4,12,NumberPrototypeToExponential
code-creation,Builtin,2,129135,0x7ff68d5c52e4,12,NumberPrototypeToFixed
code-creation,Builtin,2,129141,0x7ff68d5c5304,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,129147,0x7ff68d5c5324,12,NumberPrototypeToPrecision
code-creation,Builtin,2,129153,0x7ff68d5c5344,328,SameValue
code-creation,Builtin,2,129158,0x7ff68d5c54a4,204,SameValueNumbersOnly
code-creation,Builtin,2,129164,0x7ff68d5c5584,792,Add_Baseline
code-creation,Builtin,2,129169,0x7ff68d5c58a4,828,Subtract_Baseline
code-creation,Builtin,2,129175,0x7ff68d5c5be4,808,Multiply_Baseline
code-creation,Builtin,2,129180,0x7ff68d5c5f24,832,Divide_Baseline
code-creation,Builtin,2,129186,0x7ff68d5c6284,764,Modulus_Baseline
code-creation,Builtin,2,129191,0x7ff68d5c6584,808,Exponentiate_Baseline
code-creation,Builtin,2,129197,0x7ff68d5c68c4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,129203,0x7ff68d5c6ba4,700,BitwiseOr_Baseline
code-creation,Builtin,2,129208,0x7ff68d5c6e64,708,BitwiseXor_Baseline
code-creation,Builtin,2,129214,0x7ff68d5c7144,720,ShiftLeft_Baseline
code-creation,Builtin,2,129219,0x7ff68d5c7424,720,ShiftRight_Baseline
code-creation,Builtin,2,129225,0x7ff68d5c7704,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,129231,0x7ff68d5c7a64,720,Add_WithFeedback
code-creation,Builtin,2,129236,0x7ff68d5c7d44,780,Subtract_WithFeedback
code-creation,Builtin,2,129242,0x7ff68d5c8064,776,Multiply_WithFeedback
code-creation,Builtin,2,129248,0x7ff68d5c8384,804,Divide_WithFeedback
code-creation,Builtin,2,129253,0x7ff68d5c86c4,724,Modulus_WithFeedback
code-creation,Builtin,2,129259,0x7ff68d5c89a4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,129265,0x7ff68d5c8ca4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,129271,0x7ff68d5c8f64,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,129276,0x7ff68d5c9224,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,129282,0x7ff68d5c94e4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,129288,0x7ff68d5c97a4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,129293,0x7ff68d5c9a64,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,129299,0x7ff68d5c9da4,1696,Equal_Baseline
code-creation,Builtin,2,129305,0x7ff68d5ca464,908,StrictEqual_Baseline
code-creation,Builtin,2,129310,0x7ff68d5ca804,1264,LessThan_Baseline
code-creation,Builtin,2,129316,0x7ff68d5cad04,1264,GreaterThan_Baseline
code-creation,Builtin,2,129322,0x7ff68d5cb204,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,129327,0x7ff68d5cb704,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,129333,0x7ff68d5cbc04,1620,Equal_WithFeedback
code-creation,Builtin,2,129339,0x7ff68d5cc264,940,StrictEqual_WithFeedback
code-creation,Builtin,2,129345,0x7ff68d5cc624,1240,LessThan_WithFeedback
code-creation,Builtin,2,129351,0x7ff68d5ccb04,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,129357,0x7ff68d5ccfe4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,129363,0x7ff68d5cd4c4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,129369,0x7ff68d5cd9a4,332,BitwiseNot_Baseline
code-creation,Builtin,2,129375,0x7ff68d5cdb04,460,Decrement_Baseline
code-creation,Builtin,2,129381,0x7ff68d5cdce4,464,Increment_Baseline
code-creation,Builtin,2,129386,0x7ff68d5cdec4,488,Negate_Baseline
code-creation,Builtin,2,129392,0x7ff68d5ce0c4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,129398,0x7ff68d5ce204,440,Decrement_WithFeedback
code-creation,Builtin,2,129403,0x7ff68d5ce3c4,444,Increment_WithFeedback
code-creation,Builtin,2,129409,0x7ff68d5ce584,472,Negate_WithFeedback
code-creation,Builtin,2,129415,0x7ff68d5ce764,252,ObjectAssign
code-creation,Builtin,2,129420,0x7ff68d5ce864,864,ObjectCreate
code-creation,Builtin,2,129427,0x7ff68d5cebe4,12,ObjectDefineGetter
code-creation,Builtin,2,129432,0x7ff68d5cec04,12,ObjectDefineProperties
code-creation,Builtin,2,129438,0x7ff68d5cec24,12,ObjectDefineProperty
code-creation,Builtin,2,129444,0x7ff68d5cec44,12,ObjectDefineSetter
code-creation,Builtin,2,129449,0x7ff68d5cec64,1516,ObjectEntries
code-creation,Builtin,2,129455,0x7ff68d5cf264,12,ObjectFreeze
code-creation,Builtin,2,129460,0x7ff68d5cf284,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,129466,0x7ff68d5d0884,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,129472,0x7ff68d5d08a4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,129478,0x7ff68d5d0b04,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,129484,0x7ff68d5d0b24,164,ObjectHasOwn
code-creation,Builtin,2,129489,0x7ff68d5d0be4,388,ObjectIs
code-creation,Builtin,2,129494,0x7ff68d5d0d84,12,ObjectIsFrozen
code-creation,Builtin,2,129500,0x7ff68d5d0da4,12,ObjectIsSealed
code-creation,Builtin,2,129505,0x7ff68d5d0dc4,536,ObjectKeys
code-creation,Builtin,2,129511,0x7ff68d5d0fe4,12,ObjectLookupGetter
code-creation,Builtin,2,129517,0x7ff68d5d1004,12,ObjectLookupSetter
code-creation,Builtin,2,129522,0x7ff68d5d1024,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,129528,0x7ff68d5d1924,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,129534,0x7ff68d5d1a04,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,129540,0x7ff68d5d1a24,12,ObjectPrototypeGetProto
code-creation,Builtin,2,129546,0x7ff68d5d1a44,12,ObjectPrototypeSetProto
code-creation,Builtin,2,129551,0x7ff68d5d1a64,12,ObjectSeal
code-creation,Builtin,2,129557,0x7ff68d5d1a84,1108,ObjectToString
code-creation,Builtin,2,129562,0x7ff68d5d1ee4,1284,ObjectValues
code-creation,Builtin,2,129568,0x7ff68d5d2404,280,OrdinaryHasInstance
code-creation,Builtin,2,129573,0x7ff68d5d2524,344,InstanceOf
code-creation,Builtin,2,129579,0x7ff68d5d2684,632,InstanceOf_WithFeedback
code-creation,Builtin,2,129585,0x7ff68d5d2904,648,InstanceOf_Baseline
code-creation,Builtin,2,129590,0x7ff68d5d2ba4,268,ForInEnumerate
code-creation,Builtin,2,129596,0x7ff68d5d2cc4,148,ForInPrepare
code-creation,Builtin,2,129601,0x7ff68d5d2d64,2584,ForInFilter
code-creation,Builtin,2,129607,0x7ff68d5d3784,52,ReflectApply
code-creation,Builtin,2,129612,0x7ff68d5d37c4,60,ReflectConstruct
code-creation,Builtin,2,129618,0x7ff68d5d3804,12,ReflectDefineProperty
code-creation,Builtin,2,129624,0x7ff68d5d3824,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,129630,0x7ff68d5d3844,12,ReflectOwnKeys
code-creation,Builtin,2,129635,0x7ff68d5d3864,12,ReflectSet
code-creation,Builtin,2,129640,0x7ff68d5d3884,12,RegExpCapture1Getter
code-creation,Builtin,2,129646,0x7ff68d5d38a4,12,RegExpCapture2Getter
code-creation,Builtin,2,129652,0x7ff68d5d38c4,12,RegExpCapture3Getter
code-creation,Builtin,2,129658,0x7ff68d5d38e4,12,RegExpCapture4Getter
code-creation,Builtin,2,129663,0x7ff68d5d3904,12,RegExpCapture5Getter
code-creation,Builtin,2,129669,0x7ff68d5d3924,12,RegExpCapture6Getter
code-creation,Builtin,2,129675,0x7ff68d5d3944,12,RegExpCapture7Getter
code-creation,Builtin,2,129680,0x7ff68d5d3964,12,RegExpCapture8Getter
code-creation,Builtin,2,129687,0x7ff68d5d3984,12,RegExpCapture9Getter
code-creation,Builtin,2,129693,0x7ff68d5d39a4,2212,RegExpConstructor
code-creation,Builtin,2,129699,0x7ff68d5d4264,12,RegExpInputGetter
code-creation,Builtin,2,129705,0x7ff68d5d4284,12,RegExpInputSetter
code-creation,Builtin,2,129712,0x7ff68d5d42a4,12,RegExpLastMatchGetter
code-creation,Builtin,2,129718,0x7ff68d5d42c4,12,RegExpLastParenGetter
code-creation,Builtin,2,129725,0x7ff68d5d42e4,12,RegExpLeftContextGetter
code-creation,Builtin,2,129732,0x7ff68d5d4304,908,RegExpPrototypeCompile
code-creation,Builtin,2,129738,0x7ff68d5d46a4,12,RegExpPrototypeToString
code-creation,Builtin,2,129745,0x7ff68d5d46c4,12,RegExpRightContextGetter
code-creation,Builtin,2,129752,0x7ff68d5d46e4,252,RegExpExecAtom
code-creation,Builtin,2,129758,0x7ff68d5d47e4,1040,RegExpExecInternal
code-creation,Builtin,2,129763,0x7ff68d5d4c04,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,129769,0x7ff68d5d4c24,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,129775,0x7ff68d5d4c44,2684,SetConstructor
code-creation,Builtin,2,129781,0x7ff68d5d56c4,1284,SetPrototypeHas
code-creation,Builtin,2,129786,0x7ff68d5d5be4,1736,SetPrototypeAdd
code-creation,Builtin,2,129792,0x7ff68d5d62c4,1476,SetPrototypeDelete
code-creation,Builtin,2,129797,0x7ff68d5d68a4,12,SetPrototypeClear
code-creation,Builtin,2,129803,0x7ff68d5d68c4,284,SetPrototypeEntries
code-creation,Builtin,2,129809,0x7ff68d5d69e4,144,SetPrototypeGetSize
code-creation,Builtin,2,129814,0x7ff68d5d6a84,444,SetPrototypeForEach
code-creation,Builtin,2,129820,0x7ff68d5d6c44,284,SetPrototypeValues
code-creation,Builtin,2,129826,0x7ff68d5d6d64,988,SetIteratorPrototypeNext
code-creation,Builtin,2,129831,0x7ff68d5d7144,1112,SetOrSetIteratorToList
code-creation,Builtin,2,129837,0x7ff68d5d75a4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,129843,0x7ff68d5d75c4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,129849,0x7ff68d5d75e4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,129855,0x7ff68d5d7604,1280,AtomicsLoad
code-creation,Builtin,2,129861,0x7ff68d5d7b24,1008,AtomicsStore
code-creation,Builtin,2,129866,0x7ff68d5d7f24,1704,AtomicsExchange
code-creation,Builtin,2,129872,0x7ff68d5d85e4,2092,AtomicsCompareExchange
code-creation,Builtin,2,129877,0x7ff68d5d8e24,1804,AtomicsAdd
code-creation,Builtin,2,129883,0x7ff68d5d9544,1804,AtomicsSub
code-creation,Builtin,2,129888,0x7ff68d5d9c64,1804,AtomicsAnd
code-creation,Builtin,2,129894,0x7ff68d5da384,1804,AtomicsOr
code-creation,Builtin,2,129899,0x7ff68d5daaa4,1804,AtomicsXor
code-creation,Builtin,2,129905,0x7ff68d5db1c4,12,AtomicsNotify
code-creation,Builtin,2,129910,0x7ff68d5db1e4,12,AtomicsIsLockFree
code-creation,Builtin,2,129916,0x7ff68d5db204,12,AtomicsWait
code-creation,Builtin,2,129921,0x7ff68d5db224,12,AtomicsWaitAsync
code-creation,Builtin,2,129927,0x7ff68d5db244,12,StringFromCodePoint
code-creation,Builtin,2,129933,0x7ff68d5db264,1428,StringFromCharCode
code-creation,Builtin,2,129938,0x7ff68d5db804,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,129944,0x7ff68d5db824,4360,StringPrototypeMatchAll
code-creation,Builtin,2,129950,0x7ff68d5dc944,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,129956,0x7ff68d5dc964,1228,StringPrototypeReplace
code-creation,Builtin,2,129961,0x7ff68d5dce44,2900,StringPrototypeSplit
code-creation,Builtin,2,129967,0x7ff68d5dd9a4,12,StringRaw
code-creation,Builtin,2,129973,0x7ff68d5dd9c4,12,SymbolConstructor
code-creation,Builtin,2,129978,0x7ff68d5dd9e4,12,SymbolFor
code-creation,Builtin,2,129984,0x7ff68d5dda04,12,SymbolKeyFor
code-creation,Builtin,2,129989,0x7ff68d5dda24,88,TypedArrayBaseConstructor
code-creation,Builtin,2,129995,0x7ff68d5dda84,256,TypedArrayConstructor
code-creation,Builtin,2,130001,0x7ff68d5ddba4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,130006,0x7ff68d5ddbc4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,130012,0x7ff68d5ddf44,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,130018,0x7ff68d5de0c4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,130024,0x7ff68d5de324,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,130031,0x7ff68d5de344,12,TypedArrayPrototypeFill
code-creation,Builtin,2,130037,0x7ff68d5de364,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,130043,0x7ff68d5de384,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,130049,0x7ff68d5de3a4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,130054,0x7ff68d5de3c4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,130060,0x7ff68d5de3e4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,130066,0x7ff68d5de524,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,130072,0x7ff68d5e0ee4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,130078,0x7ff68d5e1204,148,WasmCompileLazy
code-creation,Builtin,2,130083,0x7ff68d5e12a4,168,WasmDebugBreak
code-creation,Builtin,2,130089,0x7ff68d5e1364,16,WasmOnStackReplace
code-creation,Builtin,2,130095,0x7ff68d5e1384,140,WasmFloat32ToNumber
code-creation,Builtin,2,130100,0x7ff68d5e1424,152,WasmFloat64ToNumber
code-creation,Builtin,2,130106,0x7ff68d5e14c4,4,WasmI32AtomicWait32
code-creation,Builtin,2,130112,0x7ff68d5e14e4,4,WasmI64AtomicWait32
code-creation,Builtin,2,130117,0x7ff68d5e1504,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,130123,0x7ff68d5e1524,4320,WeakMapConstructor
code-creation,Builtin,2,130129,0x7ff68d5e2624,196,WeakMapLookupHashIndex
code-creation,Builtin,2,130134,0x7ff68d5e2704,220,WeakMapGet
code-creation,Builtin,2,130140,0x7ff68d5e27e4,176,WeakMapPrototypeHas
code-creation,Builtin,2,130145,0x7ff68d5e28a4,204,WeakMapPrototypeSet
code-creation,Builtin,2,130151,0x7ff68d5e2984,144,WeakMapPrototypeDelete
code-creation,Builtin,2,130157,0x7ff68d5e2a24,2876,WeakSetConstructor
code-creation,Builtin,2,130163,0x7ff68d5e3564,176,WeakSetPrototypeHas
code-creation,Builtin,2,130168,0x7ff68d5e3624,204,WeakSetPrototypeAdd
code-creation,Builtin,2,130174,0x7ff68d5e3704,144,WeakSetPrototypeDelete
code-creation,Builtin,2,130180,0x7ff68d5e37a4,372,WeakCollectionDelete
code-creation,Builtin,2,130185,0x7ff68d5e3924,764,WeakCollectionSet
code-creation,Builtin,2,130191,0x7ff68d5e3c24,296,AsyncGeneratorResolve
code-creation,Builtin,2,130197,0x7ff68d5e3d64,100,AsyncGeneratorReject
code-creation,Builtin,2,130202,0x7ff68d5e3de4,2760,AsyncGeneratorYield
code-creation,Builtin,2,130208,0x7ff68d5e48c4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,130214,0x7ff68d5e5404,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,130219,0x7ff68d5e5544,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,130225,0x7ff68d5e5564,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,130231,0x7ff68d5e5964,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,130237,0x7ff68d5e5d84,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,130243,0x7ff68d5e61a4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,130249,0x7ff68d5e6c64,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,130255,0x7ff68d5e7724,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,130260,0x7ff68d5e77a4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,130266,0x7ff68d5e7844,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,130272,0x7ff68d5e78c4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,130278,0x7ff68d5e7944,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,130285,0x7ff68d5e79c4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,130291,0x7ff68d5e7a64,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,130297,0x7ff68d5e80a4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,130303,0x7ff68d5e8764,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,130309,0x7ff68d5e8e24,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,130314,0x7ff68d5e8ea4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130321,0x7ff68d5e8fa4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130327,0x7ff68d5e90a4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130334,0x7ff68d5e9184,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130341,0x7ff68d5e9324,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130348,0x7ff68d5e94c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130355,0x7ff68d5e95c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130361,0x7ff68d5e96c4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130368,0x7ff68d5e97c4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130374,0x7ff68d5e9964,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130381,0x7ff68d5e9b04,4,DirectCEntry
code-creation,Builtin,2,130386,0x7ff68d5e9b24,1096,StringAdd_CheckNone
code-creation,Builtin,2,130392,0x7ff68d5e9f84,2484,SubString
code-creation,Builtin,2,130397,0x7ff68d5ea944,16,StackCheck
code-creation,Builtin,2,130403,0x7ff68d5ea964,84,DoubleToI
code-creation,Builtin,2,130408,0x7ff68d5ea9c4,2236,GetProperty
code-creation,Builtin,2,130414,0x7ff68d5eb284,2308,GetPropertyWithReceiver
code-creation,Builtin,2,130419,0x7ff68d5ebba4,16004,SetProperty
code-creation,Builtin,2,130425,0x7ff68d5efa44,13480,SetPropertyInLiteral
code-creation,Builtin,2,130431,0x7ff68d5f2f04,8,MemCopyUint8Uint8
code-creation,Builtin,2,130437,0x7ff68d5f2f24,8,MemMove
code-creation,Builtin,2,130442,0x7ff68d5f2f44,12,IsTraceCategoryEnabled
code-creation,Builtin,2,130448,0x7ff68d5f2f64,12,Trace
code-creation,Builtin,2,130454,0x7ff68d5f2f84,12,FinalizationRegistryUnregister
code-creation,Builtin,2,130459,0x7ff68d5f2fa4,416,AsyncModuleEvaluate
code-creation,Builtin,2,130465,0x7ff68d5f3164,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,130471,0x7ff68d5f3184,12,CallAsyncModuleRejected
code-creation,Builtin,2,130477,0x7ff68d5f31a4,260,AggregateErrorConstructor
code-creation,Builtin,2,130483,0x7ff68d5f32c4,856,ArrayPrototypeAt
code-creation,Builtin,2,130488,0x7ff68d5f3624,656,ArrayPrototypeConcat
code-creation,Builtin,2,130494,0x7ff68d5f38c4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,130500,0x7ff68d5f4fa4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,130506,0x7ff68d5f5084,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,130512,0x7ff68d5f5304,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,130518,0x7ff68d5f6004,1464,ArrayEvery
code-creation,Builtin,2,130523,0x7ff68d5f65c4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,130529,0x7ff68d5f66e4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,130535,0x7ff68d5f6ac4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,130541,0x7ff68d5f78c4,4260,ArrayFilter
code-creation,Builtin,2,130547,0x7ff68d5f8984,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,130553,0x7ff68d5f8a64,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,130559,0x7ff68d5f8aa4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,130565,0x7ff68d5f8be4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,130571,0x7ff68d5f8e04,1460,ArrayPrototypeFind
code-creation,Builtin,2,130577,0x7ff68d5f93c4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,130583,0x7ff68d5f94a4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,130589,0x7ff68d5f94e4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,130595,0x7ff68d5f9624,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,130601,0x7ff68d5f9844,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,130607,0x7ff68d5f9e04,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,130613,0x7ff68d5f9fe4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,130619,0x7ff68d5fa6a4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,130625,0x7ff68d5fa884,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,130631,0x7ff68d5faf44,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,130637,0x7ff68d5fb024,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,130644,0x7ff68d5fb104,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,130650,0x7ff68d5fbd64,1328,ArrayForEach
code-creation,Builtin,2,130656,0x7ff68d5fc2a4,3572,ArrayFrom
code-creation,Builtin,2,130661,0x7ff68d5fd0a4,148,ArrayIsArray
code-creation,Builtin,2,130667,0x7ff68d5fd144,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,130673,0x7ff68d5fd2e4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,130679,0x7ff68d5fd324,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,130685,0x7ff68d5fd3c4,312,ConvertToLocaleString
code-creation,Builtin,2,130691,0x7ff68d5fd504,752,JoinStackPush
code-creation,Builtin,2,130696,0x7ff68d5fd804,272,JoinStackPop
code-creation,Builtin,2,130702,0x7ff68d5fd924,6628,ArrayPrototypeJoin
code-creation,Builtin,2,130707,0x7ff68d5ff324,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,130714,0x7ff68d600824,236,ArrayPrototypeToString
code-creation,Builtin,2,130720,0x7ff68d600924,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,130727,0x7ff68d602064,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,130734,0x7ff68d603284,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,130739,0x7ff68d604184,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,130745,0x7ff68d6042a4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,130751,0x7ff68d6043a4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,130757,0x7ff68d6045c4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,130763,0x7ff68d605244,3912,ArrayMap
code-creation,Builtin,2,130768,0x7ff68d6061a4,1000,ArrayOf
code-creation,Builtin,2,130774,0x7ff68d6065a4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,130780,0x7ff68d606764,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,130786,0x7ff68d606844,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,130792,0x7ff68d606924,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,130798,0x7ff68d6075c4,2000,ArrayReduceRight
code-creation,Builtin,2,130804,0x7ff68d607da4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,130810,0x7ff68d607e64,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,130816,0x7ff68d607f44,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,130822,0x7ff68d608024,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,130828,0x7ff68d608ce4,1604,ArrayReduce
code-creation,Builtin,2,130833,0x7ff68d609344,3216,ArrayPrototypeReverse
code-creation,Builtin,2,130839,0x7ff68d609fe4,3592,ArrayPrototypeShift
code-creation,Builtin,2,130845,0x7ff68d60ae04,5220,ArrayPrototypeSlice
code-creation,Builtin,2,130850,0x7ff68d60c284,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,130856,0x7ff68d60c364,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,130862,0x7ff68d60c5c4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,130868,0x7ff68d60d2c4,1448,ArraySome
code-creation,Builtin,2,130873,0x7ff68d60d884,14216,ArrayPrototypeSplice
code-creation,Builtin,2,130879,0x7ff68d611024,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,130885,0x7ff68d611d04,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,130891,0x7ff68d611e64,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,130897,0x7ff68d611fc4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,130903,0x7ff68d6120a4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,130909,0x7ff68d612204,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,130915,0x7ff68d6122e4,96,ArrayBufferIsView
code-creation,Builtin,2,130920,0x7ff68d612364,396,ToInteger
code-creation,Builtin,2,130926,0x7ff68d612504,3084,FastCreateDataProperty
code-creation,Builtin,2,130931,0x7ff68d613124,676,CheckNumberInRange
code-creation,Builtin,2,130937,0x7ff68d6133e4,584,CheckSameObject
code-creation,Builtin,2,130943,0x7ff68d613644,904,BooleanConstructor
code-creation,Builtin,2,130948,0x7ff68d6139e4,164,BooleanPrototypeToString
code-creation,Builtin,2,130954,0x7ff68d613aa4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,130960,0x7ff68d613b44,1184,BigIntAddNoThrow
code-creation,Builtin,2,130966,0x7ff68d614004,1280,BigIntAdd
code-creation,Builtin,2,130972,0x7ff68d614524,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,130978,0x7ff68d6149e4,1280,BigIntSubtract
code-creation,Builtin,2,130983,0x7ff68d614f04,284,BigIntUnaryMinus
code-creation,Builtin,2,130989,0x7ff68d615024,1360,ToString
code-creation,Builtin,2,130994,0x7ff68d615584,156,StringPrototypeToString
code-creation,Builtin,2,131000,0x7ff68d615624,156,StringPrototypeValueOf
code-creation,Builtin,2,131006,0x7ff68d6156c4,2480,StringToList
code-creation,Builtin,2,131011,0x7ff68d616084,1012,StringPrototypeCharAt
code-creation,Builtin,2,131017,0x7ff68d616484,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,131023,0x7ff68d616744,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,131028,0x7ff68d616c64,400,StringPrototypeConcat
code-creation,Builtin,2,131034,0x7ff68d616e04,992,StringConstructor
code-creation,Builtin,2,131040,0x7ff68d617204,1436,StringAddConvertLeft
code-creation,Builtin,2,131045,0x7ff68d6177a4,1464,StringAddConvertRight
code-creation,Builtin,2,131051,0x7ff68d617d64,816,StringCharAt
code-creation,Builtin,2,131056,0x7ff68d6180a4,16,FastNewClosureBaseline
code-creation,Builtin,2,131062,0x7ff68d6180c4,196,FastNewFunctionContextEval
code-creation,Builtin,2,131068,0x7ff68d6181a4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,131074,0x7ff68d618284,248,CreateRegExpLiteral
code-creation,Builtin,2,131079,0x7ff68d618384,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,131085,0x7ff68d6187c4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,131091,0x7ff68d6189c4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,131097,0x7ff68d6190a4,384,ObjectConstructor
code-creation,Builtin,2,131102,0x7ff68d619244,176,CreateEmptyLiteralObject
code-creation,Builtin,2,131108,0x7ff68d619304,536,NumberConstructor
code-creation,Builtin,2,131114,0x7ff68d619524,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,131120,0x7ff68d619584,64,StringToNumber
code-creation,Builtin,2,131125,0x7ff68d6195e4,184,NonNumberToNumber
code-creation,Builtin,2,131131,0x7ff68d6196a4,240,NonNumberToNumeric
code-creation,Builtin,2,131136,0x7ff68d6197a4,36,ToNumeric
code-creation,Builtin,2,131142,0x7ff68d6197e4,1184,NumberToString
code-creation,Builtin,2,131147,0x7ff68d619ca4,92,ToBoolean
code-creation,Builtin,2,131153,0x7ff68d619d04,96,ToBooleanForBaselineJump
code-creation,Builtin,2,131158,0x7ff68d619d84,728,ToLength
code-creation,Builtin,2,131164,0x7ff68d61a064,1312,ToName
code-creation,Builtin,2,131169,0x7ff68d61a5a4,756,ToObject
code-creation,Builtin,2,131174,0x7ff68d61a8a4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,131180,0x7ff68d61a984,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,131186,0x7ff68d61aa64,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,131192,0x7ff68d61ab44,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,131198,0x7ff68d61ac84,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,131204,0x7ff68d61adc4,216,FastConsoleAssert
code-creation,Builtin,2,131209,0x7ff68d61aea4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,131216,0x7ff68d61af64,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,131221,0x7ff68d61b0c4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,131227,0x7ff68d61b224,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,131233,0x7ff68d61b464,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,131239,0x7ff68d61b6a4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,131245,0x7ff68d61b944,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,131250,0x7ff68d61bbe4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,131256,0x7ff68d61bf24,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,131262,0x7ff68d61c1e4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,131268,0x7ff68d61c544,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,131273,0x7ff68d61c8e4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,131280,0x7ff68d61ccc4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,131286,0x7ff68d61d0c4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,131292,0x7ff68d61d484,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,131298,0x7ff68d61d844,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,131304,0x7ff68d61dc64,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,131309,0x7ff68d61e084,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,131315,0x7ff68d61e4c4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,131321,0x7ff68d61e904,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,131327,0x7ff68d61ed24,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,131333,0x7ff68d61f184,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,131339,0x7ff68d61f544,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,131344,0x7ff68d61f904,828,FinalizationRegistryConstructor
code-creation,Builtin,2,131350,0x7ff68d61fc44,1152,FinalizationRegistryRegister
code-creation,Builtin,2,131356,0x7ff68d6200e4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,131362,0x7ff68d620384,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,131368,0x7ff68d6204e4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,131374,0x7ff68d620884,88,IncBlockCounter
code-creation,Builtin,2,131380,0x7ff68d6208e4,228,GetTemplateObject
code-creation,Builtin,2,131385,0x7ff68d6209e4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,131391,0x7ff68d620a04,92,ForInNext
code-creation,Builtin,2,131397,0x7ff68d620a64,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,131403,0x7ff68d620b04,116,GetIteratorWithFeedback
code-creation,Builtin,2,131408,0x7ff68d620b84,100,GetIteratorBaseline
code-creation,Builtin,2,131414,0x7ff68d620c04,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,131420,0x7ff68d620d24,1084,CallIteratorWithFeedback
code-creation,Builtin,2,131427,0x7ff68d621164,288,MathAbs
code-creation,Builtin,2,131432,0x7ff68d6212a4,428,MathCeil
code-creation,Builtin,2,131454,0x7ff68d621464,432,MathFloor
code-creation,Builtin,2,131464,0x7ff68d621624,488,MathRound
code-creation,Builtin,2,131473,0x7ff68d621824,428,MathTrunc
code-creation,Builtin,2,131481,0x7ff68d6219e4,368,MathPow
code-creation,Builtin,2,131488,0x7ff68d621b64,396,MathMax
code-creation,Builtin,2,131494,0x7ff68d621d04,404,MathMin
code-creation,Builtin,2,131501,0x7ff68d621ea4,320,MathAcos
code-creation,Builtin,2,131508,0x7ff68d622004,320,MathAcosh
code-creation,Builtin,2,131515,0x7ff68d622164,320,MathAsin
code-creation,Builtin,2,131521,0x7ff68d6222c4,320,MathAsinh
code-creation,Builtin,2,131527,0x7ff68d622424,320,MathAtan
code-creation,Builtin,2,131534,0x7ff68d622584,416,MathAtan2
code-creation,Builtin,2,131540,0x7ff68d622744,320,MathAtanh
code-creation,Builtin,2,131547,0x7ff68d6228a4,320,MathCbrt
code-creation,Builtin,2,131554,0x7ff68d622a04,168,MathClz32
code-creation,Builtin,2,131560,0x7ff68d622ac4,320,MathCos
code-creation,Builtin,2,131567,0x7ff68d622c24,320,MathCosh
code-creation,Builtin,2,131573,0x7ff68d622d84,320,MathExp
code-creation,Builtin,2,131580,0x7ff68d622ee4,320,MathExpm1
code-creation,Builtin,2,131586,0x7ff68d623044,272,MathFround
code-creation,Builtin,2,131593,0x7ff68d623164,304,MathImul
code-creation,Builtin,2,131599,0x7ff68d6232a4,320,MathLog
code-creation,Builtin,2,131606,0x7ff68d623404,320,MathLog1p
code-creation,Builtin,2,131612,0x7ff68d623564,320,MathLog10
code-creation,Builtin,2,131619,0x7ff68d6236c4,320,MathLog2
code-creation,Builtin,2,131625,0x7ff68d623824,320,MathSin
code-creation,Builtin,2,131632,0x7ff68d623984,180,MathSign
code-creation,Builtin,2,131638,0x7ff68d623a44,320,MathSinh
code-creation,Builtin,2,131645,0x7ff68d623ba4,268,MathSqrt
code-creation,Builtin,2,131651,0x7ff68d623cc4,320,MathTan
code-creation,Builtin,2,131658,0x7ff68d623e24,320,MathTanh
code-creation,Builtin,2,131664,0x7ff68d623f84,1060,MathHypot
code-creation,Builtin,2,131671,0x7ff68d6243c4,332,MathRandom
code-creation,Builtin,2,131677,0x7ff68d624524,2956,NumberPrototypeToString
code-creation,Builtin,2,131684,0x7ff68d6250c4,136,NumberIsFinite
code-creation,Builtin,2,131717,0x7ff68d625164,340,NumberIsInteger
code-creation,Builtin,2,131725,0x7ff68d6252c4,116,NumberIsNaN
code-creation,Builtin,2,131733,0x7ff68d625344,372,NumberIsSafeInteger
code-creation,Builtin,2,131741,0x7ff68d6254c4,156,NumberPrototypeValueOf
code-creation,Builtin,2,131749,0x7ff68d625564,196,NumberParseFloat
code-creation,Builtin,2,131757,0x7ff68d625644,248,ParseInt
code-creation,Builtin,2,131763,0x7ff68d625744,84,NumberParseInt
code-creation,Builtin,2,131770,0x7ff68d6257a4,860,Add
code-creation,Builtin,2,131776,0x7ff68d625b04,424,Subtract
code-creation,Builtin,2,131783,0x7ff68d625cc4,608,Multiply
code-creation,Builtin,2,131790,0x7ff68d625f44,532,Divide
code-creation,Builtin,2,131795,0x7ff68d626164,592,Modulus
code-creation,Builtin,2,131802,0x7ff68d6263c4,524,Exponentiate
code-creation,Builtin,2,131809,0x7ff68d6265e4,344,Negate
code-creation,Builtin,2,131815,0x7ff68d626744,112,BitwiseNot
code-creation,Builtin,2,131821,0x7ff68d6267c4,112,Decrement
code-creation,Builtin,2,131828,0x7ff68d626844,112,Increment
code-creation,Builtin,2,131835,0x7ff68d6268c4,392,ShiftLeft
code-creation,Builtin,2,131841,0x7ff68d626a64,392,ShiftRight
code-creation,Builtin,2,131848,0x7ff68d626c04,508,ShiftRightLogical
code-creation,Builtin,2,131855,0x7ff68d626e04,388,BitwiseAnd
code-creation,Builtin,2,131861,0x7ff68d626fa4,388,BitwiseOr
code-creation,Builtin,2,131868,0x7ff68d627144,388,BitwiseXor
code-creation,Builtin,2,131875,0x7ff68d6272e4,796,LessThan
code-creation,Builtin,2,131881,0x7ff68d627604,796,LessThanOrEqual
code-creation,Builtin,2,131888,0x7ff68d627924,796,GreaterThan
code-creation,Builtin,2,131895,0x7ff68d627c44,796,GreaterThanOrEqual
code-creation,Builtin,2,131901,0x7ff68d627f64,860,Equal
code-creation,Builtin,2,131908,0x7ff68d6282c4,348,StrictEqual
code-creation,Builtin,2,131914,0x7ff68d628424,3132,ObjectFromEntries
code-creation,Builtin,2,131921,0x7ff68d629064,756,CreateObjectWithoutProperties
code-creation,Builtin,2,131928,0x7ff68d629364,144,ObjectIsExtensible
code-creation,Builtin,2,131935,0x7ff68d629404,148,ObjectPreventExtensions
code-creation,Builtin,2,131942,0x7ff68d6294a4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,131949,0x7ff68d629544,300,ObjectSetPrototypeOf
code-creation,Builtin,2,131956,0x7ff68d629684,80,ObjectPrototypeToString
code-creation,Builtin,2,131963,0x7ff68d6296e4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,131970,0x7ff68d629764,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,131977,0x7ff68d629824,868,FulfillPromise
code-creation,Builtin,2,131984,0x7ff68d629ba4,988,RejectPromise
code-creation,Builtin,2,131990,0x7ff68d629f84,2416,NewPromiseCapability
code-creation,Builtin,2,131997,0x7ff68d62a904,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,132004,0x7ff68d62a9c4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,132012,0x7ff68d62aa64,1416,PerformPromiseThen
code-creation,Builtin,2,132018,0x7ff68d62b004,648,PromiseReject
code-creation,Builtin,2,132025,0x7ff68d62b2a4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,132032,0x7ff68d62b3c4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,132040,0x7ff68d62b444,4560,PromiseAll
code-creation,Builtin,2,132046,0x7ff68d62c624,4880,PromiseAllSettled
code-creation,Builtin,2,132053,0x7ff68d62d944,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,132060,0x7ff68d62dda4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,132068,0x7ff68d62e324,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,132075,0x7ff68d62e8a4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,132082,0x7ff68d62ed44,2368,PromiseAny
code-creation,Builtin,2,132089,0x7ff68d62f6a4,2908,PromiseConstructor
code-creation,Builtin,2,132096,0x7ff68d630204,296,PromisePrototypeCatch
code-creation,Builtin,2,132103,0x7ff68d630344,88,PromiseValueThunkFinally
code-creation,Builtin,2,132110,0x7ff68d6303a4,84,PromiseThrowerFinally
code-creation,Builtin,2,132117,0x7ff68d630404,904,PromiseCatchFinally
code-creation,Builtin,2,132124,0x7ff68d6307a4,904,PromiseThenFinally
code-creation,Builtin,2,132132,0x7ff68d630b44,1700,PromisePrototypeFinally
code-creation,Builtin,2,132139,0x7ff68d631204,1336,PromiseRace
code-creation,Builtin,2,132146,0x7ff68d631744,268,PromiseFulfillReactionJob
code-creation,Builtin,2,132153,0x7ff68d631864,364,PromiseRejectReactionJob
code-creation,Builtin,2,132160,0x7ff68d6319e4,156,PromiseResolveTrampoline
code-creation,Builtin,2,132167,0x7ff68d631a84,656,PromiseResolve
code-creation,Builtin,2,132174,0x7ff68d631d24,712,ResolvePromise
code-creation,Builtin,2,132180,0x7ff68d632004,2224,PromisePrototypeThen
code-creation,Builtin,2,132187,0x7ff68d6328c4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,132194,0x7ff68d632d44,448,ProxyConstructor
code-creation,Builtin,2,132201,0x7ff68d632f24,1760,ProxyDeleteProperty
code-creation,Builtin,2,132208,0x7ff68d633624,2112,ProxyGetProperty
code-creation,Builtin,2,132215,0x7ff68d633e84,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,132222,0x7ff68d6342c4,1668,ProxyHasProperty
code-creation,Builtin,2,132228,0x7ff68d634964,760,ProxyIsExtensible
code-creation,Builtin,2,132235,0x7ff68d634c64,800,ProxyPreventExtensions
code-creation,Builtin,2,132242,0x7ff68d634fa4,1148,ProxyRevocable
code-creation,Builtin,2,132249,0x7ff68d635424,120,ProxyRevoke
code-creation,Builtin,2,132255,0x7ff68d6354a4,2216,ProxySetProperty
code-creation,Builtin,2,132262,0x7ff68d635d64,1292,ProxySetPrototypeOf
code-creation,Builtin,2,132269,0x7ff68d636284,208,ReflectIsExtensible
code-creation,Builtin,2,132276,0x7ff68d636364,212,ReflectPreventExtensions
code-creation,Builtin,2,132283,0x7ff68d636444,188,ReflectGetPrototypeOf
code-creation,Builtin,2,132290,0x7ff68d636504,292,ReflectSetPrototypeOf
code-creation,Builtin,2,132297,0x7ff68d636644,284,ReflectGet
code-creation,Builtin,2,132303,0x7ff68d636764,160,ReflectDeleteProperty
code-creation,Builtin,2,132310,0x7ff68d636824,148,ReflectHas
code-creation,Builtin,2,132317,0x7ff68d6368c4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,132324,0x7ff68d637ce4,5104,RegExpPrototypeExec
code-creation,Builtin,2,132331,0x7ff68d6390e4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,132338,0x7ff68d639a24,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,132345,0x7ff68d63bf04,8840,RegExpMatchFast
code-creation,Builtin,2,132352,0x7ff68d63e1a4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,132358,0x7ff68d63efc4,6328,RegExpReplace
code-creation,Builtin,2,132365,0x7ff68d640884,524,RegExpPrototypeReplace
code-creation,Builtin,2,132372,0x7ff68d640aa4,1424,RegExpSearchFast
code-creation,Builtin,2,132379,0x7ff68d641044,1640,RegExpPrototypeSearch
code-creation,Builtin,2,132386,0x7ff68d6416c4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,132393,0x7ff68d6417a4,5872,RegExpSplit
code-creation,Builtin,2,132400,0x7ff68d642ea4,476,RegExpPrototypeSplit
code-creation,Builtin,2,132407,0x7ff68d643084,2252,RegExpPrototypeTest
code-creation,Builtin,2,132414,0x7ff68d643964,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,132421,0x7ff68d643ec4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,132429,0x7ff68d643fc4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,132436,0x7ff68d6440c4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,132443,0x7ff68d6441c4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,132450,0x7ff68d6442c4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,132457,0x7ff68d6443c4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,132464,0x7ff68d6444c4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,132471,0x7ff68d6445e4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,132478,0x7ff68d644704,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,132485,0x7ff68d644fe4,1500,StringPrototypeAt
code-creation,Builtin,2,132491,0x7ff68d6455c4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,132498,0x7ff68d6461a4,480,CreateHTML
code-creation,Builtin,2,132505,0x7ff68d6463a4,164,StringPrototypeAnchor
code-creation,Builtin,2,132512,0x7ff68d646464,128,StringPrototypeBig
code-creation,Builtin,2,132518,0x7ff68d646504,128,StringPrototypeBlink
code-creation,Builtin,2,132526,0x7ff68d6465a4,128,StringPrototypeBold
code-creation,Builtin,2,132533,0x7ff68d646644,168,StringPrototypeFontcolor
code-creation,Builtin,2,132540,0x7ff68d646704,168,StringPrototypeFontsize
code-creation,Builtin,2,132547,0x7ff68d6467c4,128,StringPrototypeFixed
code-creation,Builtin,2,132554,0x7ff68d646864,128,StringPrototypeItalics
code-creation,Builtin,2,132560,0x7ff68d646904,168,StringPrototypeLink
code-creation,Builtin,2,132567,0x7ff68d6469c4,128,StringPrototypeSmall
code-creation,Builtin,2,132574,0x7ff68d646a64,128,StringPrototypeStrike
code-creation,Builtin,2,132581,0x7ff68d646b04,128,StringPrototypeSub
code-creation,Builtin,2,132588,0x7ff68d646ba4,128,StringPrototypeSup
code-creation,Builtin,2,132594,0x7ff68d646c44,1028,StringPrototypeIncludes
code-creation,Builtin,2,132601,0x7ff68d647064,628,StringPrototypeIndexOf
code-creation,Builtin,2,132608,0x7ff68d6472e4,344,StringPrototypeIterator
code-creation,Builtin,2,132615,0x7ff68d647444,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,132622,0x7ff68d647c44,1304,StringPrototypeMatch
code-creation,Builtin,2,132629,0x7ff68d648164,1304,StringPrototypeSearch
code-creation,Builtin,2,132636,0x7ff68d648684,824,StringPrototypePadStart
code-creation,Builtin,2,132642,0x7ff68d6489c4,824,StringPrototypePadEnd
code-creation,Builtin,2,132649,0x7ff68d648d04,120,StringRepeat
code-creation,Builtin,2,132656,0x7ff68d648d84,400,StringPrototypeRepeat
code-creation,Builtin,2,132663,0x7ff68d648f24,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,132670,0x7ff68d64bae4,3388,StringPrototypeSlice
code-creation,Builtin,2,132676,0x7ff68d64c824,3028,StringPrototypeStartsWith
code-creation,Builtin,2,132683,0x7ff68d64d404,3328,StringPrototypeSubstr
code-creation,Builtin,2,132690,0x7ff68d64e124,3260,StringPrototypeSubstring
code-creation,Builtin,2,132697,0x7ff68d64ede4,6916,StringPrototypeTrim
code-creation,Builtin,2,132704,0x7ff68d650904,6332,StringPrototypeTrimStart
code-creation,Builtin,2,132711,0x7ff68d6521c4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,132717,0x7ff68d6538a4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,132724,0x7ff68d653964,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,132731,0x7ff68d653a04,172,SymbolPrototypeToString
code-creation,Builtin,2,132738,0x7ff68d653ac4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,132745,0x7ff68d653b64,832,TypedArrayPrototypeAt
code-creation,Builtin,2,132752,0x7ff68d653ec4,10064,CreateTypedArray
code-creation,Builtin,2,132758,0x7ff68d656624,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,132765,0x7ff68d656a24,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,132772,0x7ff68d656ba4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,132779,0x7ff68d657964,996,TypedArrayPrototypeFind
code-creation,Builtin,2,132786,0x7ff68d657d64,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,132793,0x7ff68d658164,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,132800,0x7ff68d658324,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,132807,0x7ff68d6587e4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,132815,0x7ff68d6589a4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,132822,0x7ff68d658e84,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,132829,0x7ff68d659204,2352,TypedArrayFrom
code-creation,Builtin,2,132836,0x7ff68d659b44,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,132842,0x7ff68d659cc4,1028,TypedArrayOf
code-creation,Builtin,2,132849,0x7ff68d65a0e4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,132856,0x7ff68d65a4a4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,132863,0x7ff68d65a864,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,132870,0x7ff68d65b244,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,132877,0x7ff68d65be44,992,TypedArrayPrototypeSome
code-creation,Builtin,2,132884,0x7ff68d65c244,1060,TypedArrayMergeSort
code-creation,Builtin,2,132890,0x7ff68d65c684,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,132897,0x7ff68d65cce4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,132905,0x7ff68d65d7a4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,132913,0x7ff68d65d924,952,WeakRefConstructor
code-creation,Builtin,2,132919,0x7ff68d65dce4,184,WeakRefDeref
code-creation,Builtin,2,132926,0x7ff68d65dda4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,132933,0x7ff68d65e064,296,NewStrictArgumentsElements
code-creation,Builtin,2,132940,0x7ff68d65e1a4,320,NewRestArgumentsElements
code-creation,Builtin,2,132947,0x7ff68d65e304,1388,FastNewSloppyArguments
code-creation,Builtin,2,132954,0x7ff68d65e884,524,FastNewStrictArguments
code-creation,Builtin,2,132961,0x7ff68d65eaa4,556,FastNewRestArguments
code-creation,Builtin,2,132968,0x7ff68d65ece4,676,StringSlowFlatten
code-creation,Builtin,2,132974,0x7ff68d65efa4,2068,StringIndexOf
code-creation,Builtin,2,132981,0x7ff68d65f7c4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,132988,0x7ff68d65f7e4,20,TestHelperPlus1
code-creation,Builtin,2,132995,0x7ff68d65f804,20,TestHelperPlus2
code-creation,Builtin,2,133002,0x7ff68d65f824,96,NewSmiBox
code-creation,Builtin,2,133008,0x7ff68d65f8a4,24,ReturnTwoValues
code-creation,Builtin,2,133015,0x7ff68d65f8c4,32,Load_FastSmiElements_0
code-creation,Builtin,2,133022,0x7ff68d65f904,32,Load_FastObjectElements_0
code-creation,Builtin,2,133029,0x7ff68d65f944,144,Load_FastDoubleElements_0
code-creation,Builtin,2,133036,0x7ff68d65f9e4,32,Store_FastSmiElements_0
code-creation,Builtin,2,133042,0x7ff68d65fa24,96,Store_FastObjectElements_0
code-creation,Builtin,2,133049,0x7ff68d65faa4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,133056,0x7ff68d65fae4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,133063,0x7ff68d65fb24,36,Delete_FastObjectElements_0
code-creation,Builtin,2,133070,0x7ff68d65fb64,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,133077,0x7ff68d65fba4,308,SortCompareDefault
code-creation,Builtin,2,133084,0x7ff68d65fce4,92,SortCompareUserFn
code-creation,Builtin,2,133091,0x7ff68d65fd44,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,133098,0x7ff68d65fd64,312,Copy
code-creation,Builtin,2,133104,0x7ff68d65fea4,5776,MergeAt
code-creation,Builtin,2,133111,0x7ff68d661544,792,GallopLeft
code-creation,Builtin,2,133118,0x7ff68d661864,832,GallopRight
code-creation,Builtin,2,133124,0x7ff68d661bc4,3832,ArrayTimSort
code-creation,Builtin,2,133131,0x7ff68d662ac4,2112,ArrayPrototypeSort
code-creation,Builtin,2,133137,0x7ff68d663324,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,133145,0x7ff68d6633a4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,133151,0x7ff68d663424,76,WasmTaggedToFloat64
code-creation,Builtin,2,133158,0x7ff68d663484,72,WasmMemoryGrow
code-creation,Builtin,2,133165,0x7ff68d6634e4,100,WasmTableInit
code-creation,Builtin,2,133171,0x7ff68d663564,100,WasmTableCopy
code-creation,Builtin,2,133178,0x7ff68d6635e4,84,WasmTableFill
code-creation,Builtin,2,133185,0x7ff68d663644,72,WasmTableGrow
code-creation,Builtin,2,133191,0x7ff68d6636a4,144,WasmTableGet
code-creation,Builtin,2,133198,0x7ff68d663744,236,WasmTableSet
code-creation,Builtin,2,133204,0x7ff68d663844,88,WasmRefFunc
code-creation,Builtin,2,133211,0x7ff68d6638a4,144,WasmAllocateFixedArray
code-creation,Builtin,2,133218,0x7ff68d663944,44,WasmThrow
code-creation,Builtin,2,133224,0x7ff68d663984,52,WasmRethrow
code-creation,Builtin,2,133231,0x7ff68d6639c4,44,WasmTriggerTierUp
code-creation,Builtin,2,133238,0x7ff68d663a04,32,WasmStackGuard
code-creation,Builtin,2,133245,0x7ff68d663a44,32,WasmStackOverflow
code-creation,Builtin,2,133252,0x7ff68d663a84,40,WasmTraceMemory
code-creation,Builtin,2,133259,0x7ff68d663ac4,32,WasmTraceEnter
code-creation,Builtin,2,133265,0x7ff68d663b04,40,WasmTraceExit
code-creation,Builtin,2,133272,0x7ff68d663b44,332,WasmAllocateJSArray
code-creation,Builtin,2,133279,0x7ff68d663ca4,104,WasmAllocatePair
code-creation,Builtin,2,133286,0x7ff68d663d24,64,WasmAllocateRtt
code-creation,Builtin,2,133293,0x7ff68d663d84,72,WasmAllocateFreshRtt
code-creation,Builtin,2,133300,0x7ff68d663de4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,133307,0x7ff68d663e64,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,133315,0x7ff68d663f04,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,133322,0x7ff68d663fc4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,133330,0x7ff68d664084,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,133337,0x7ff68d664104,60,WasmArrayCopy
code-creation,Builtin,2,133343,0x7ff68d664144,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,133350,0x7ff68d664244,52,WasmSubtypeCheck
code-creation,Builtin,2,133357,0x7ff68d664284,8,WasmInt32ToNumber
code-creation,Builtin,2,133364,0x7ff68d6642a4,116,WasmUint32ToNumber
code-creation,Builtin,2,133371,0x7ff68d664324,144,UintPtr53ToNumber
code-creation,Builtin,2,133378,0x7ff68d6643c4,96,WasmAtomicNotify
code-creation,Builtin,2,133385,0x7ff68d664444,116,WasmI32AtomicWait64
code-creation,Builtin,2,133392,0x7ff68d6644c4,116,WasmI64AtomicWait64
code-creation,Builtin,2,133399,0x7ff68d664544,580,WasmGetOwnProperty
code-creation,Builtin,2,133405,0x7ff68d6647a4,40,WasmTrap
code-creation,Builtin,2,133412,0x7ff68d6647e4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,133419,0x7ff68d664804,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,133426,0x7ff68d664824,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,133434,0x7ff68d664844,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,133441,0x7ff68d664864,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,133448,0x7ff68d664884,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,133455,0x7ff68d6648a4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,133463,0x7ff68d6648c4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,133469,0x7ff68d6648e4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,133477,0x7ff68d664904,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,133484,0x7ff68d664924,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,133491,0x7ff68d664944,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,133498,0x7ff68d664964,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,133505,0x7ff68d664984,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,133512,0x7ff68d6649a4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,133519,0x7ff68d6649c4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,133527,0x7ff68d6649e4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,133534,0x7ff68d664aa4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,133541,0x7ff68d664ac4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,133549,0x7ff68d664b44,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,133556,0x7ff68d664bc4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,133564,0x7ff68d664be4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,133571,0x7ff68d664cc4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,133578,0x7ff68d664dc4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,133586,0x7ff68d664de4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,133593,0x7ff68d664e04,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,133600,0x7ff68d664e24,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,133608,0x7ff68d664e44,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,133615,0x7ff68d664ee4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,133622,0x7ff68d664f04,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,133629,0x7ff68d664f44,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,133637,0x7ff68d664f84,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,133644,0x7ff68d664fc4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,133651,0x7ff68d665a44,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,133658,0x7ff68d665a64,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,133666,0x7ff68d665aa4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,133673,0x7ff68d665ac4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,133680,0x7ff68d665b84,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,133689,0x7ff68d665c44,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,133697,0x7ff68d665cc4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,133704,0x7ff68d665d04,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,133711,0x7ff68d665da4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,133719,0x7ff68d665e24,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,133726,0x7ff68d665e44,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,133734,0x7ff68d665ee4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,133741,0x7ff68d665f04,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,133749,0x7ff68d665f24,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,133756,0x7ff68d6661a4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,133764,0x7ff68d666284,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,133771,0x7ff68d6662c4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,133779,0x7ff68d6663a4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,133786,0x7ff68d6664a4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,133794,0x7ff68d6664e4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,133801,0x7ff68d6665c4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,133808,0x7ff68d6665e4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,133816,0x7ff68d666604,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,133823,0x7ff68d6666c4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,133830,0x7ff68d6666e4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,133838,0x7ff68d666704,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,133845,0x7ff68d6667c4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,133852,0x7ff68d6667e4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,133860,0x7ff68d666804,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,133867,0x7ff68d6668c4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,133874,0x7ff68d6668e4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,133882,0x7ff68d666904,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,133890,0x7ff68d6669c4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,133897,0x7ff68d666a64,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,133904,0x7ff68d666b24,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,133912,0x7ff68d666be4,12,CollatorConstructor
code-creation,Builtin,2,133918,0x7ff68d666c04,12,CollatorInternalCompare
code-creation,Builtin,2,133925,0x7ff68d666c24,12,CollatorPrototypeCompare
code-creation,Builtin,2,133932,0x7ff68d666c44,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,133940,0x7ff68d666c64,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,133947,0x7ff68d666c84,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,133954,0x7ff68d666ca4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,133961,0x7ff68d666cc4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,133968,0x7ff68d666ce4,12,DateTimeFormatConstructor
code-creation,Builtin,2,133975,0x7ff68d666d04,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,133982,0x7ff68d666d24,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,133990,0x7ff68d666d44,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,133997,0x7ff68d666d64,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,134004,0x7ff68d666d84,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,134011,0x7ff68d666da4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,134019,0x7ff68d666dc4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,134026,0x7ff68d666de4,12,DisplayNamesConstructor
code-creation,Builtin,2,134034,0x7ff68d666e04,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,134041,0x7ff68d666e24,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,134049,0x7ff68d666e44,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,134056,0x7ff68d666e64,12,IntlGetCanonicalLocales
code-creation,Builtin,2,134063,0x7ff68d666e84,12,ListFormatConstructor
code-creation,Builtin,2,134070,0x7ff68d666ea4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,134077,0x7ff68d666fa4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,134084,0x7ff68d6670a4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,134091,0x7ff68d6670c4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,134098,0x7ff68d6670e4,12,LocaleConstructor
code-creation,Builtin,2,134105,0x7ff68d667104,12,LocalePrototypeBaseName
code-creation,Builtin,2,134112,0x7ff68d667124,12,LocalePrototypeCalendar
code-creation,Builtin,2,134119,0x7ff68d667144,12,LocalePrototypeCalendars
code-creation,Builtin,2,134126,0x7ff68d667164,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,134134,0x7ff68d667184,12,LocalePrototypeCollation
code-creation,Builtin,2,134141,0x7ff68d6671a4,12,LocalePrototypeCollations
code-creation,Builtin,2,134147,0x7ff68d6671c4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,134155,0x7ff68d6671e4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,134162,0x7ff68d667204,12,LocalePrototypeLanguage
code-creation,Builtin,2,134169,0x7ff68d667224,12,LocalePrototypeMaximize
code-creation,Builtin,2,134175,0x7ff68d667244,12,LocalePrototypeMinimize
code-creation,Builtin,2,134182,0x7ff68d667264,12,LocalePrototypeNumeric
code-creation,Builtin,2,134189,0x7ff68d667284,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,134196,0x7ff68d6672a4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,134204,0x7ff68d6672c4,12,LocalePrototypeRegion
code-creation,Builtin,2,134210,0x7ff68d6672e4,12,LocalePrototypeScript
code-creation,Builtin,2,134217,0x7ff68d667304,12,LocalePrototypeTextInfo
code-creation,Builtin,2,134224,0x7ff68d667324,12,LocalePrototypeTimeZones
code-creation,Builtin,2,134231,0x7ff68d667344,12,LocalePrototypeToString
code-creation,Builtin,2,134238,0x7ff68d667364,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,134245,0x7ff68d667384,12,NumberFormatConstructor
code-creation,Builtin,2,134252,0x7ff68d6673a4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,134260,0x7ff68d6673c4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,134267,0x7ff68d6673e4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,134274,0x7ff68d667404,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,134281,0x7ff68d667424,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,134289,0x7ff68d667444,12,PluralRulesConstructor
code-creation,Builtin,2,134295,0x7ff68d667464,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,134303,0x7ff68d667484,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,134310,0x7ff68d6674a4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,134317,0x7ff68d6674c4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,134324,0x7ff68d6674e4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,134332,0x7ff68d667504,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,134339,0x7ff68d667524,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,134346,0x7ff68d667544,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,134354,0x7ff68d667564,12,SegmenterConstructor
code-creation,Builtin,2,134361,0x7ff68d667584,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,134368,0x7ff68d6675a4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,134375,0x7ff68d6675c4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,134382,0x7ff68d6675e4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,134389,0x7ff68d667604,12,SegmentsPrototypeContaining
code-creation,Builtin,2,134396,0x7ff68d667624,12,SegmentsPrototypeIterator
code-creation,Builtin,2,134402,0x7ff68d667644,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,134410,0x7ff68d667664,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,134418,0x7ff68d667684,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,134425,0x7ff68d6676a4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,134433,0x7ff68d667784,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,134440,0x7ff68d6677a4,636,StringToLowerCaseIntl
code-creation,Builtin,2,134447,0x7ff68d667a24,12,V8BreakIteratorConstructor
code-creation,Builtin,2,134454,0x7ff68d667a44,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,134461,0x7ff68d667a64,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,134468,0x7ff68d667a84,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,134475,0x7ff68d667aa4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,134482,0x7ff68d667ac4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,134489,0x7ff68d667ae4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,134497,0x7ff68d667b04,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,134504,0x7ff68d667b24,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,134511,0x7ff68d667b44,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,134518,0x7ff68d667b64,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,134525,0x7ff68d667b84,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,134533,0x7ff68d667ba4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,134540,0x7ff68d667bc4,24,Wide
code-creation,BytecodeHandler,0,134547,0x7ff68d667be4,24,ExtraWide
code-creation,BytecodeHandler,0,134554,0x7ff68d667c04,104,DebugBreakWide
code-creation,BytecodeHandler,0,134561,0x7ff68d667c84,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,134568,0x7ff68d667d04,164,DebugBreak0
code-creation,BytecodeHandler,0,134575,0x7ff68d667dc4,104,DebugBreak1
code-creation,BytecodeHandler,0,134582,0x7ff68d667e44,104,DebugBreak2
code-creation,BytecodeHandler,0,134588,0x7ff68d667ec4,104,DebugBreak3
code-creation,BytecodeHandler,0,134595,0x7ff68d667f44,104,DebugBreak4
code-creation,BytecodeHandler,0,134602,0x7ff68d667fc4,104,DebugBreak5
code-creation,BytecodeHandler,0,134609,0x7ff68d668044,104,DebugBreak6
code-creation,BytecodeHandler,0,134616,0x7ff68d6680c4,32,Ldar
code-creation,BytecodeHandler,0,134622,0x7ff68d668104,68,LdaZero
code-creation,BytecodeHandler,0,134629,0x7ff68d668164,76,LdaSmi
code-creation,BytecodeHandler,0,134635,0x7ff68d6681c4,68,LdaUndefined
code-creation,BytecodeHandler,0,134642,0x7ff68d668224,68,LdaNull
code-creation,BytecodeHandler,0,134649,0x7ff68d668284,68,LdaTheHole
code-creation,BytecodeHandler,0,134656,0x7ff68d6682e4,20,LdaTrue
code-creation,BytecodeHandler,0,134662,0x7ff68d668304,20,LdaFalse
code-creation,BytecodeHandler,0,134669,0x7ff68d668324,76,LdaConstant
code-creation,BytecodeHandler,0,134676,0x7ff68d668384,132,LdaContextSlot
code-creation,BytecodeHandler,0,134683,0x7ff68d668424,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,134690,0x7ff68d6684c4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,134697,0x7ff68d668524,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,134705,0x7ff68d668584,32,Star
code-creation,BytecodeHandler,0,134713,0x7ff68d6685c4,40,Mov
code-creation,BytecodeHandler,0,134721,0x7ff68d668604,40,PushContext
code-creation,BytecodeHandler,0,134728,0x7ff68d668644,36,PopContext
code-creation,BytecodeHandler,0,134736,0x7ff68d668684,48,TestReferenceEqual
code-creation,BytecodeHandler,0,134744,0x7ff68d6686c4,52,TestUndetectable
code-creation,BytecodeHandler,0,134751,0x7ff68d668704,36,TestNull
code-creation,BytecodeHandler,0,134758,0x7ff68d668744,36,TestUndefined
code-creation,BytecodeHandler,0,134764,0x7ff68d668784,336,TestTypeOf
code-creation,BytecodeHandler,0,134771,0x7ff68d6688e4,6036,LdaGlobal
code-creation,BytecodeHandler,0,134778,0x7ff68d66a084,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,134786,0x7ff68d66b244,168,StaGlobal
code-creation,BytecodeHandler,0,134792,0x7ff68d66b304,160,StaContextSlot
code-creation,BytecodeHandler,0,134799,0x7ff68d66b3c4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,134807,0x7ff68d66b444,124,LdaLookupSlot
code-creation,BytecodeHandler,0,134815,0x7ff68d66b4c4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,134822,0x7ff68d66b5c4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,134829,0x7ff68d66c884,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,134836,0x7ff68d66c904,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,134844,0x7ff68d66ca04,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,134851,0x7ff68d66dca4,220,StaLookupSlot
code-creation,BytecodeHandler,0,134858,0x7ff68d66dd84,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,134865,0x7ff68d66f204,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,134872,0x7ff68d66f2c4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,134879,0x7ff68d66f3a4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,134886,0x7ff68d66f464,292,StaModuleVariable
code-creation,BytecodeHandler,0,134893,0x7ff68d66f5a4,172,StaNamedProperty
code-creation,BytecodeHandler,0,134900,0x7ff68d66f664,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,134907,0x7ff68d66f724,164,StaKeyedProperty
code-creation,BytecodeHandler,0,134914,0x7ff68d66f7e4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,134921,0x7ff68d66f8a4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,134928,0x7ff68d66f984,160,CollectTypeProfile
code-creation,BytecodeHandler,0,134935,0x7ff68d66fa44,1028,Add
code-creation,BytecodeHandler,0,134942,0x7ff68d66fe64,1064,Sub
code-creation,BytecodeHandler,0,134948,0x7ff68d6702a4,1024,Mul
code-creation,BytecodeHandler,0,134955,0x7ff68d6706c4,988,Div
code-creation,BytecodeHandler,0,134962,0x7ff68d670aa4,912,Mod
code-creation,BytecodeHandler,0,134968,0x7ff68d670e44,964,Exp
code-creation,BytecodeHandler,0,134975,0x7ff68d671224,876,BitwiseOr
code-creation,BytecodeHandler,0,134982,0x7ff68d6715a4,888,BitwiseXor
code-creation,BytecodeHandler,0,134989,0x7ff68d671924,888,BitwiseAnd
code-creation,BytecodeHandler,0,134996,0x7ff68d671ca4,900,ShiftLeft
code-creation,BytecodeHandler,0,135003,0x7ff68d672044,900,ShiftRight
code-creation,BytecodeHandler,0,135010,0x7ff68d6723e4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,135017,0x7ff68d6727e4,960,AddSmi
code-creation,BytecodeHandler,0,135023,0x7ff68d672bc4,1000,SubSmi
code-creation,BytecodeHandler,0,135030,0x7ff68d672fc4,916,MulSmi
code-creation,BytecodeHandler,0,135037,0x7ff68d673364,920,DivSmi
code-creation,BytecodeHandler,0,135043,0x7ff68d673704,816,ModSmi
code-creation,BytecodeHandler,0,135050,0x7ff68d673a44,872,ExpSmi
code-creation,BytecodeHandler,0,135057,0x7ff68d673dc4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,135064,0x7ff68d673fc4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,135071,0x7ff68d6741c4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,135077,0x7ff68d6743c4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,135084,0x7ff68d6745c4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,135091,0x7ff68d6747c4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,135098,0x7ff68d674a64,656,Inc
code-creation,BytecodeHandler,0,135105,0x7ff68d674d04,656,Dec
code-creation,BytecodeHandler,0,135111,0x7ff68d674fa4,640,Negate
code-creation,BytecodeHandler,0,135118,0x7ff68d675244,480,BitwiseNot
code-creation,BytecodeHandler,0,135125,0x7ff68d675444,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,135132,0x7ff68d6754c4,36,LogicalNot
code-creation,BytecodeHandler,0,135138,0x7ff68d675504,208,TypeOf
code-creation,BytecodeHandler,0,135145,0x7ff68d6755e4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,135152,0x7ff68d675664,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,135159,0x7ff68d6756e4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,135166,0x7ff68d675724,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,135173,0x7ff68d675ba4,1132,CallProperty
code-creation,BytecodeHandler,0,135180,0x7ff68d676024,1012,CallProperty0
code-creation,BytecodeHandler,0,135187,0x7ff68d676424,1028,CallProperty1
code-creation,BytecodeHandler,0,135194,0x7ff68d676844,1040,CallProperty2
code-creation,BytecodeHandler,0,135202,0x7ff68d676c64,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,135209,0x7ff68d677064,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,135216,0x7ff68d677484,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,135224,0x7ff68d677884,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,135231,0x7ff68d677ca4,1132,CallWithSpread
code-creation,BytecodeHandler,0,135238,0x7ff68d678124,124,CallRuntime
code-creation,BytecodeHandler,0,135244,0x7ff68d6781a4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,135252,0x7ff68d678244,80,CallJSRuntime
code-creation,BytecodeHandler,0,135258,0x7ff68d6782a4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,135265,0x7ff68d678784,1020,Construct
code-creation,BytecodeHandler,0,135272,0x7ff68d678b84,536,ConstructWithSpread
code-creation,BytecodeHandler,0,135279,0x7ff68d678da4,1936,TestEqual
code-creation,BytecodeHandler,0,135286,0x7ff68d679544,1064,TestEqualStrict
code-creation,BytecodeHandler,0,135293,0x7ff68d679984,1624,TestLessThan
code-creation,BytecodeHandler,0,135300,0x7ff68d679fe4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,135307,0x7ff68d67a644,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,135314,0x7ff68d67aca4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,135321,0x7ff68d67b304,860,TestInstanceOf
code-creation,BytecodeHandler,0,135328,0x7ff68d67b664,156,TestIn
code-creation,BytecodeHandler,0,135335,0x7ff68d67b704,112,ToName
code-creation,BytecodeHandler,0,135341,0x7ff68d67b784,212,ToNumber
code-creation,BytecodeHandler,0,135348,0x7ff68d67b864,232,ToNumeric
code-creation,BytecodeHandler,0,135355,0x7ff68d67b964,112,ToObject
code-creation,BytecodeHandler,0,135362,0x7ff68d67b9e4,116,ToString
code-creation,BytecodeHandler,0,135369,0x7ff68d67ba64,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,135376,0x7ff68d67bc04,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,135383,0x7ff68d67c1c4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,135390,0x7ff68d67c224,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,135397,0x7ff68d67c544,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,135404,0x7ff68d67cda4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,135411,0x7ff68d67cea4,168,CloneObject
code-creation,BytecodeHandler,0,135418,0x7ff68d67cf64,212,GetTemplateObject
code-creation,BytecodeHandler,0,135425,0x7ff68d67d044,328,CreateClosure
code-creation,BytecodeHandler,0,135433,0x7ff68d67d1a4,120,CreateBlockContext
code-creation,BytecodeHandler,0,135440,0x7ff68d67d224,132,CreateCatchContext
code-creation,BytecodeHandler,0,135447,0x7ff68d67d2c4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,135454,0x7ff68d67d3e4,256,CreateEvalContext
code-creation,BytecodeHandler,0,135461,0x7ff68d67d504,132,CreateWithContext
code-creation,BytecodeHandler,0,135468,0x7ff68d67d5a4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,135475,0x7ff68d67dbe4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,135482,0x7ff68d67de44,632,CreateRestParameter
code-creation,BytecodeHandler,0,135489,0x7ff68d67e0c4,424,JumpLoop
code-creation,BytecodeHandler,0,135496,0x7ff68d67e284,44,Jump
code-creation,BytecodeHandler,0,135503,0x7ff68d67e2c4,56,JumpConstant
code-creation,BytecodeHandler,0,135510,0x7ff68d67e304,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,135517,0x7ff68d67e364,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,135524,0x7ff68d67e3c4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,135531,0x7ff68d67e424,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,135538,0x7ff68d67e484,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,135545,0x7ff68d67e4e4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,135553,0x7ff68d67e544,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,135560,0x7ff68d67e5a4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,135567,0x7ff68d67e604,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,135574,0x7ff68d67e6a4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,135582,0x7ff68d67e744,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,135590,0x7ff68d67e7e4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,135597,0x7ff68d67e884,64,JumpIfTrue
code-creation,BytecodeHandler,0,135603,0x7ff68d67e8e4,64,JumpIfFalse
code-creation,BytecodeHandler,0,135610,0x7ff68d67e944,64,JumpIfNull
code-creation,BytecodeHandler,0,135617,0x7ff68d67e9a4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,135624,0x7ff68d67ea04,64,JumpIfUndefined
code-creation,BytecodeHandler,0,135631,0x7ff68d67ea64,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,135638,0x7ff68d67eac4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,135645,0x7ff68d67eb24,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,135652,0x7ff68d67eb84,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,135659,0x7ff68d67ec04,464,ForInEnumerate
code-creation,BytecodeHandler,0,135666,0x7ff68d67ede4,252,ForInPrepare
code-creation,BytecodeHandler,0,135673,0x7ff68d67eee4,60,ForInContinue
code-creation,BytecodeHandler,0,135680,0x7ff68d67ef24,256,ForInNext
code-creation,BytecodeHandler,0,135686,0x7ff68d67f044,48,ForInStep
code-creation,BytecodeHandler,0,135693,0x7ff68d67f084,36,SetPendingMessage
code-creation,BytecodeHandler,0,135700,0x7ff68d67f0c4,116,Throw
code-creation,BytecodeHandler,0,135707,0x7ff68d67f144,116,ReThrow
code-creation,BytecodeHandler,0,135714,0x7ff68d67f1c4,112,Return
code-creation,BytecodeHandler,0,135720,0x7ff68d67f244,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,135727,0x7ff68d67f324,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,135735,0x7ff68d67f3c4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,135742,0x7ff68d67f464,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,135749,0x7ff68d67f504,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,135756,0x7ff68d67f584,512,SuspendGenerator
code-creation,BytecodeHandler,0,135763,0x7ff68d67f7a4,128,ResumeGenerator
code-creation,BytecodeHandler,0,135770,0x7ff68d67f844,152,GetIterator
code-creation,BytecodeHandler,0,135777,0x7ff68d67f8e4,116,Debugger
code-creation,BytecodeHandler,0,135784,0x7ff68d67f964,124,IncBlockCounter
code-creation,BytecodeHandler,0,135791,0x7ff68d67f9e4,56,Abort
code-creation,BytecodeHandler,0,135797,0x7ff68d67fa24,32,Star0
code-creation,BytecodeHandler,0,135804,0x7ff68d67fa64,60,Illegal
code-creation,BytecodeHandler,0,135811,0x7ff68d67faa4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,135818,0x7ff68d67fb24,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,135825,0x7ff68d67fba4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,135832,0x7ff68d67fc24,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,135839,0x7ff68d67fca4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,135846,0x7ff68d67fd24,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,135853,0x7ff68d67fda4,32,Ldar.Wide
code-creation,BytecodeHandler,0,135860,0x7ff68d67fde4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,135867,0x7ff68d67fe24,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,135874,0x7ff68d67fe64,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,135881,0x7ff68d67fec4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,135889,0x7ff68d67ff24,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,135896,0x7ff68d67ff64,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,135903,0x7ff68d67ffa4,32,Star.Wide
code-creation,BytecodeHandler,0,135910,0x7ff68d67ffe4,40,Mov.Wide
code-creation,BytecodeHandler,0,135917,0x7ff68d680024,40,PushContext.Wide
code-creation,BytecodeHandler,0,135924,0x7ff68d680064,36,PopContext.Wide
code-creation,BytecodeHandler,0,135931,0x7ff68d6800a4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,135938,0x7ff68d6800e4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,135945,0x7ff68d681324,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,135952,0x7ff68d682524,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,135959,0x7ff68d6825e4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,135967,0x7ff68d6826a4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,135976,0x7ff68d682724,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,135983,0x7ff68d6827c4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,135990,0x7ff68d6828c4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,135998,0x7ff68d683bc4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136005,0x7ff68d683c64,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136013,0x7ff68d683d64,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136021,0x7ff68d685044,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,136028,0x7ff68d685124,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,136035,0x7ff68d6865a4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,136043,0x7ff68d686664,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,136050,0x7ff68d686724,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,136057,0x7ff68d6867e4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,136064,0x7ff68d686924,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,136072,0x7ff68d6869e4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,136079,0x7ff68d686aa4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,136086,0x7ff68d686b64,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,136094,0x7ff68d686c24,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,136101,0x7ff68d686d04,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,136108,0x7ff68d686dc4,984,Add.Wide
code-creation,BytecodeHandler,0,136115,0x7ff68d6871a4,1020,Sub.Wide
code-creation,BytecodeHandler,0,136122,0x7ff68d6875a4,972,Mul.Wide
code-creation,BytecodeHandler,0,136129,0x7ff68d687984,988,Div.Wide
code-creation,BytecodeHandler,0,136136,0x7ff68d687d64,916,Mod.Wide
code-creation,BytecodeHandler,0,136142,0x7ff68d688104,988,Exp.Wide
code-creation,BytecodeHandler,0,136149,0x7ff68d6884e4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,136156,0x7ff68d688884,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,136163,0x7ff68d688c24,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,136170,0x7ff68d688fc4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,136177,0x7ff68d689384,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,136184,0x7ff68d689744,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,136191,0x7ff68d689b64,916,AddSmi.Wide
code-creation,BytecodeHandler,0,136198,0x7ff68d689f04,960,SubSmi.Wide
code-creation,BytecodeHandler,0,136205,0x7ff68d68a2e4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,136212,0x7ff68d68a684,920,DivSmi.Wide
code-creation,BytecodeHandler,0,136219,0x7ff68d68aa24,816,ModSmi.Wide
code-creation,BytecodeHandler,0,136226,0x7ff68d68ad64,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,136233,0x7ff68d68b0e4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,136240,0x7ff68d68b2e4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,136247,0x7ff68d68b4e4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,136255,0x7ff68d68b6e4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,136262,0x7ff68d68b8e4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,136269,0x7ff68d68bae4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,136276,0x7ff68d68bd84,616,Inc.Wide
code-creation,BytecodeHandler,0,136283,0x7ff68d68c004,616,Dec.Wide
code-creation,BytecodeHandler,0,136290,0x7ff68d68c284,648,Negate.Wide
code-creation,BytecodeHandler,0,136297,0x7ff68d68c524,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,136304,0x7ff68d68c724,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,136311,0x7ff68d68c7a4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,136319,0x7ff68d68c824,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,136326,0x7ff68d68c864,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,136333,0x7ff68d68cce4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,136340,0x7ff68d68d164,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,136348,0x7ff68d68d564,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,136356,0x7ff68d68d984,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,136363,0x7ff68d68dda4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,136371,0x7ff68d68e1a4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,136378,0x7ff68d68e5c4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,136386,0x7ff68d68e9e4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,136393,0x7ff68d68ee04,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,136400,0x7ff68d68f284,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,136408,0x7ff68d68f324,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,136415,0x7ff68d68f3e4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,136422,0x7ff68d68f444,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,136430,0x7ff68d68f924,968,Construct.Wide
code-creation,BytecodeHandler,0,136437,0x7ff68d68fd04,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,136444,0x7ff68d68fee4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,136451,0x7ff68d6906a4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,136459,0x7ff68d690ae4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,136466,0x7ff68d6910e4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,136473,0x7ff68d6916e4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,136480,0x7ff68d691ce4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,136488,0x7ff68d6922e4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,136495,0x7ff68d692664,160,TestIn.Wide
code-creation,BytecodeHandler,0,136502,0x7ff68d692724,116,ToName.Wide
code-creation,BytecodeHandler,0,136508,0x7ff68d6927a4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,136515,0x7ff68d692884,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,136522,0x7ff68d692984,116,ToObject.Wide
code-creation,BytecodeHandler,0,136529,0x7ff68d692a04,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,136537,0x7ff68d692ba4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,136544,0x7ff68d693124,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,136551,0x7ff68d693444,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,136558,0x7ff68d693c44,172,CloneObject.Wide
code-creation,BytecodeHandler,0,136566,0x7ff68d693d04,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,136573,0x7ff68d693dc4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,136580,0x7ff68d693f24,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,136587,0x7ff68d693fa4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,136595,0x7ff68d694044,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,136602,0x7ff68d694164,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,136609,0x7ff68d694284,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,136616,0x7ff68d694324,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,136623,0x7ff68d6944e4,44,Jump.Wide
code-creation,BytecodeHandler,0,136630,0x7ff68d694524,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,136637,0x7ff68d694564,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,136645,0x7ff68d6945c4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,136652,0x7ff68d694624,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,136660,0x7ff68d694684,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,136667,0x7ff68d6946e4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,136675,0x7ff68d694744,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,136682,0x7ff68d6947a4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,136690,0x7ff68d694804,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,136697,0x7ff68d694864,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,136705,0x7ff68d694904,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,136712,0x7ff68d6949a4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,136721,0x7ff68d694a44,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,136729,0x7ff68d694ae4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,136736,0x7ff68d694b44,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,136743,0x7ff68d694ba4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,136750,0x7ff68d694c04,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,136757,0x7ff68d694c64,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,136764,0x7ff68d694cc4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,136771,0x7ff68d694d24,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,136778,0x7ff68d694d84,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,136786,0x7ff68d694de4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,136793,0x7ff68d694e64,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,136800,0x7ff68d695044,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,136807,0x7ff68d695144,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,136814,0x7ff68d695184,260,ForInNext.Wide
code-creation,BytecodeHandler,0,136821,0x7ff68d6952a4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,136828,0x7ff68d6952e4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,136835,0x7ff68d695384,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,136843,0x7ff68d695444,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,136850,0x7ff68d6954c4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,136857,0x7ff68d6956e4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,136864,0x7ff68d695784,156,GetIterator.Wide
code-creation,BytecodeHandler,0,136872,0x7ff68d695824,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,136879,0x7ff68d6958c4,56,Abort.Wide
code-creation,BytecodeHandler,0,136886,0x7ff68d695904,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,136893,0x7ff68d695984,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,136901,0x7ff68d695a04,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,136908,0x7ff68d695a84,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,136915,0x7ff68d695b04,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,136922,0x7ff68d695b84,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,136929,0x7ff68d695c04,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,136936,0x7ff68d695c44,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,136944,0x7ff68d695c64,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,136951,0x7ff68d695ca4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,136958,0x7ff68d695d04,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,136966,0x7ff68d695d64,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,136973,0x7ff68d695da4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,136981,0x7ff68d695de4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,136988,0x7ff68d695e04,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,136995,0x7ff68d695e44,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,137002,0x7ff68d695e84,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,137010,0x7ff68d695ec4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,137017,0x7ff68d695f04,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,137025,0x7ff68d697144,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137032,0x7ff68d698344,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,137039,0x7ff68d698404,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137047,0x7ff68d6984a4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137054,0x7ff68d698524,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,137061,0x7ff68d6985c4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137069,0x7ff68d6986c4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,137076,0x7ff68d6999c4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137085,0x7ff68d699a64,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137094,0x7ff68d699b64,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137102,0x7ff68d69ae44,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,137109,0x7ff68d69af24,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,137117,0x7ff68d69c384,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,137124,0x7ff68d69c444,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,137132,0x7ff68d69c4e4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,137139,0x7ff68d69c5a4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,137147,0x7ff68d69c6e4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,137154,0x7ff68d69c7a4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,137162,0x7ff68d69c864,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,137169,0x7ff68d69c924,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,137177,0x7ff68d69c9e4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,137184,0x7ff68d69cac4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,137192,0x7ff68d69cb84,980,Add.ExtraWide
code-creation,BytecodeHandler,0,137199,0x7ff68d69cf64,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,137206,0x7ff68d69d364,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,137213,0x7ff68d69d744,988,Div.ExtraWide
code-creation,BytecodeHandler,0,137220,0x7ff68d69db24,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,137226,0x7ff68d69dec4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,137234,0x7ff68d69e2a4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,137241,0x7ff68d69e644,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,137248,0x7ff68d69e9e4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,137255,0x7ff68d69ed84,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,137263,0x7ff68d69f144,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,137270,0x7ff68d69f504,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,137277,0x7ff68d69f924,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,137285,0x7ff68d69fcc4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,137292,0x7ff68d6a00a4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,137299,0x7ff68d6a0444,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,137306,0x7ff68d6a07e4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,137314,0x7ff68d6a0b24,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,137321,0x7ff68d6a0ea4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,137328,0x7ff68d6a10a4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,137336,0x7ff68d6a12a4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,137343,0x7ff68d6a14a4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,137350,0x7ff68d6a16a4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,137358,0x7ff68d6a18a4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,137365,0x7ff68d6a1b44,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,137372,0x7ff68d6a1dc4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,137379,0x7ff68d6a2044,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,137386,0x7ff68d6a22e4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,137393,0x7ff68d6a24e4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,137401,0x7ff68d6a2564,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,137408,0x7ff68d6a25e4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,137416,0x7ff68d6a2624,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,137423,0x7ff68d6a2aa4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,137431,0x7ff68d6a2f24,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,137439,0x7ff68d6a3324,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,137446,0x7ff68d6a3744,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,137453,0x7ff68d6a3b64,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,137462,0x7ff68d6a3f64,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,137470,0x7ff68d6a4384,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,137478,0x7ff68d6a4784,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,137485,0x7ff68d6a4ba4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,137492,0x7ff68d6a5024,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,137499,0x7ff68d6a50c4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,137507,0x7ff68d6a5184,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,137514,0x7ff68d6a51e4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,137521,0x7ff68d6a56c4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,137529,0x7ff68d6a5aa4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,137536,0x7ff68d6a5c84,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,137543,0x7ff68d6a6444,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,137550,0x7ff68d6a6884,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,137558,0x7ff68d6a6e84,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,137565,0x7ff68d6a7484,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,137572,0x7ff68d6a7a84,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,137580,0x7ff68d6a8084,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,137587,0x7ff68d6a8404,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,137594,0x7ff68d6a84a4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,137601,0x7ff68d6a8524,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,137608,0x7ff68d6a8604,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,137615,0x7ff68d6a8704,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,137623,0x7ff68d6a8784,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,137630,0x7ff68d6a8924,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,137638,0x7ff68d6a8ea4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,137645,0x7ff68d6a91c4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,137653,0x7ff68d6a99c4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,137660,0x7ff68d6a9a84,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,137667,0x7ff68d6a9b44,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,137675,0x7ff68d6a9ca4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,137682,0x7ff68d6a9d24,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,137689,0x7ff68d6a9dc4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,137697,0x7ff68d6a9ee4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,137704,0x7ff68d6aa004,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,137711,0x7ff68d6aa0a4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,137718,0x7ff68d6aa264,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,137725,0x7ff68d6aa2a4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,137733,0x7ff68d6aa2e4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,137740,0x7ff68d6aa344,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,137748,0x7ff68d6aa3a4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,137755,0x7ff68d6aa404,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,137763,0x7ff68d6aa464,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,137771,0x7ff68d6aa4c4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,137778,0x7ff68d6aa524,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,137785,0x7ff68d6aa584,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,137793,0x7ff68d6aa5e4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,137801,0x7ff68d6aa684,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,137828,0x7ff68d6aa724,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,137837,0x7ff68d6aa7c4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,137844,0x7ff68d6aa864,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,137851,0x7ff68d6aa8c4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,137859,0x7ff68d6aa924,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,137866,0x7ff68d6aa984,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,137873,0x7ff68d6aa9e4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,137880,0x7ff68d6aaa44,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,137888,0x7ff68d6aaaa4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,137895,0x7ff68d6aab04,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,137903,0x7ff68d6aab64,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,137910,0x7ff68d6aabe4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,137917,0x7ff68d6aadc4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,137925,0x7ff68d6aaec4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,137932,0x7ff68d6aaf04,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,137939,0x7ff68d6ab024,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,137946,0x7ff68d6ab064,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,137954,0x7ff68d6ab104,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,137961,0x7ff68d6ab1c4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,137969,0x7ff68d6ab244,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,137976,0x7ff68d6ab464,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,137983,0x7ff68d6ab4e4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,137991,0x7ff68d6ab584,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,137998,0x7ff68d6ab604,56,Abort.ExtraWide
tick,0x7ffdb840d1c4,138008,0,0x0,6
new,MemoryChunk,0x18d6bf40000,262144
new,MemoryChunk,0x23e1a600000,262144
new,MemoryChunk,0xc221f00000,262144
new,MemoryChunk,0x1098fc80000,262144
new,MemoryChunk,0x27284b40000,262144
code-creation,Eval,10,141841,0x27284b41fae,5, node:internal/main/run_main_module:1:1,0x27284b41e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x27284b41fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,141900,0x27284b42056,58, node:internal/main/run_main_module:1:1,0x27284b41f28,~
code-source-info,0x27284b42056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,142143,0x27284b42296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x622c08fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x27284b42296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,142794,0x27284b42fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x622c08fcf0,~
code-source-info,0x27284b42fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,143148,0x27284b43f7e,5, node:internal/bootstrap/pre_execution:1:1,0x27284b43b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x27284b43f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,144047,0x27284b44bae,497, node:internal/bootstrap/pre_execution:1:1,0x27284b43ef8,~
code-source-info,0x27284b44bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,144276,0x27284b46476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x27284b43fb0,~
code-source-info,0x27284b
code-creation,LazyCompile,10,144396,0x27284b47886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x36a9fe0bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x27284b47886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,145974,0x27284b4a0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x27284b44000,~
code-source-info,0x27284b4a0be
code-creation,LazyCompile,10,146061,0x27284b4a3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x622c08f840,~
code-source-info,0x27284b4a3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,146155,0x27284b4a6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x36a9fe18598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x27284b4a6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,146913,0x27284b4b766,832,resolve node:path:158:10,0x124044d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x27284b4b
tick,0x7ff68ca91884,149436,0,0x0,3,0x7ff68d143fe0,0x27284b4a180,0x27284b4648b,0x27284b42065
code-creation,LazyCompile,10,149493,0x27284b4ed7e,30,validateString node:internal/validators:118:24,0x622c0bce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x27284b4ed7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,149969,0x27284b4f71e,17,isPathSeparator node:path:52:25,0x124044cf90,~
code-source-info,0x27284b4f71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,150003,0x27284b4f81e,35,isWindowsDeviceRoot node:path:60:29,0x124044d408,~
code-source-info,0x27284b4f81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,150051,0x27284b4f93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x622c0beee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x27284b4f93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,150366,0x27284b4ffa6,442,normalizeString node:path:66:25,0x124044d458,~
code-source-info,0x27284b4ffa
code-creation,LazyCompile,10,150522,0x27284b506c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x27284b44050,~
code-source-info,0x27284b506c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,150573,0x27284b50866,82,getOptionValue node:internal/options:39:24,0x348207db40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x27284b50866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,150730,0x27284b50c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x348207d848,~
code-source-info,0x27284b50c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,151032,0x27284b50d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x27284b443c0,~
code-source-info,0x27284b50d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,151084,0x27284b50f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x36a9fe18cb8,~
code-source-info,0x27284b50f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,151125,0x27284b510de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x27284b44410,~
code-source-info,0x27284b510de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,151170,0x27284b5125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x10b768ab218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x27284b5125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,151459,0x27284b51986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x1240462118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x27284b51986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,151563,0x27284b51bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x27284b44460,~
code-source-info,0x27284b51bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,151672,0x27284b51fa6,5, node:internal/inspector_async_hook:1:1,0x27284b51df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x27284b51fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,151790,0x27284b521c6,79, node:internal/inspector_async_hook:1:1,0x27284b51f20,~
code-source-info,0x27284b521c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,151888,0x27284b5282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x27284b440a0,~
code-source-info,0x27284b5282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,151990,0x27284b5298e,20,addListener node:events:618:58,0x1a05882ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x27284b5298e,23,18854,18928,C0O18876C14O18883C19O18925,,
code-creation,LazyCompile,10,153597,0x27284b55056,378,_addListener node:events:555:22,0x1a05882b998,~
code-source-info,0x27284b55056,23,16721,18648,C0O16764C2O16774C4O16789C6O16804C9O16804C13O16850C18O16862C20O16895C22O16921C27O16921C32O16919C39O16946C40O16966C46O17136C52O17179C60O17233C77O17179C82O17416C87O17437C89O17454C93O17472C97O17585C99O17598C103O17615C109O17624C115O17655C121O17762C129O17797C140O17808C149O17818C166O17831C175O17841C182O17786C193O17918C197O17949C202O17949C209O17998C214O17998C219O18060C222O18064C227O18095C228O18101C233O18117C240O18124C245O18141C251O18158C252O18174C256O18254C264O18337C281O18347C284O18347C304O18396C307O18404C312O18396C327O18373C338O18536C344O18550C348O18572C356O18254C362O18590C365O18598C370O18598C375O18631C377O18645,,
code-creation,LazyCompile,10,153698,0x27284b55366,15,checkListener node:events:258:23,0x1a05882b2f8,~
code-source-info,0x27284b55366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,153736,0x27284b55456,30, node:internal/validators:236:42,0x622c0bd308,~
code-source-info,0x27284b55456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,153870,0x27284b556d6,380,emit node:events:475:44,0x1a05882b8d8,~
code-source-info,0x27284b556d
code-creation,LazyCompile,10,154021,0x27284b55a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x622c0bdca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x27284b55a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,154166,0x27284b55e3e,19,isSignal node:internal/process/signal:17:18,0x622c0bdaf0,~
code-source-info,0x27284b55e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,154225,0x27284b56076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x27284b440f0,~
code-source-info,0x27284b56076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x1d54a900000,262144
code-creation,Function,11,154344,0x1d54a903060,572,getOptionValue node:internal/options:39:24,0x348207db40,^
code-source-info,0x1d54a903060,91,940,1190,,,
code-creation,Function,11,154372,0x1d54a903300,216,isPathSeparator node:path:52:25,0x124044cf90,^
code-source-info,0x1d54a903300,41,1794,1876,,,
code-creation,Function,11,154434,0x1d54a903440,3076,normalizeString node:path:66:25,0x124044d458,^
code-source-info,0x1d54a903440,41,2226,4212,,,
code-creation,LazyCompile,10,154527,0x27284b56886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x27284b44140,~
code-source-info,0x27284b56886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,154629,0x27284b56b06,5,get node:internal/bootstrap/node:135:6,0x622c094a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x27284b56b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,155401,0x27284b57c76,52,get node:internal/bootstrap/node:112:6,0x622c094988,~
code-source-info,0x27284b57c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,155461,0x27284b57e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x27284b442d0,~
code-source-info,0x27284b57e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,155538,0x27284b582d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x1a0588219f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x27284b582d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,155739,0x27284b588de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x27284b44208,~
code-source-info,0x27284b588de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,155788,0x27284b58af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x27284b44258,~
code-source-info,0x27284b58af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,155932,0x27284b590a6,5, node:internal/process/report:1:1,0x27284b58eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x27284b590a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,156088,0x27284b59bb6,306, node:internal/process/report:1:1,0x27284b59020,~
code-source-info,0x27284b59bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,156255,0x27284b5ba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x27284b44320,~
code-source-info,0x27284b5ba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,156303,0x27284b5bb76,57,addSignalHandler node:internal/process/report:98:26,0x27284b590d8,~
code-source-info,0x27284b5bb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,156353,0x27284b5c13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x27284b44370,~
code-source-info,0x27284b5c13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,156415,0x27284b5c3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x27284b44540,~
code-source-info,0x27284b5c3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,156480,0x27284b5c55e,21,assert node:internal/assert:11:16,0x1a0588209c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x27284b5c55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,156990,0x27284b5d3d6,5, node:child_process:1:1,0x27284b5cf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x27284b5d3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,158312,0x27284b5de36,748, node:child_process:1:1,0x27284b5d350,~
code-source-info,0x27284b5de
code-creation,LazyCompile,10,158524,0x27284b60406,82,debuglog node:internal/util/debuglog:71:18,0x1a058821d40,~
code-source-info,0x27284b60406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,159229,0x27284b633ee,5, node:internal/child_process:1:1,0x27284b62cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x27284b633ee,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,160794,0x27284b64a0e,1265, node:internal/child_process:1:1,0x27284b63368,~
code-source-info,0x27284b64a0e
code-creation,Function,10,160936,0x27284b65186,35,<instance_members_initializer> node:internal/child_process:525:3,0x27284b640d0,~
code-source-info,0x27284b65186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,162011,0x27284b69476,5, node:net:1:1,0x27284b68c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x27284b69476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,164598,0x27284b6c356,2547, node:net:1:1,0x27284b693f0,~
code-source-info,0x27284b6c356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
tick,0x7ff68daf00ff,164910,1,0x7ff68cbce150,3,0x7ff68d5158c0,0x27284b42fec,0x27284b422dd,0x27284b64bfc,0x27284b4300d,0x27284b422dd,0x27284b5e07a,0x27284b4300d,0x27284b422dd,0x27284b5c43a,0x27284b46502,0x27284b42065
code-creation,Eval,10,165203,0x27284b71cf6,5, node:internal/net:1:1,0x27284b71b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x27284b71cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,165369,0x27284b720e6,617, node:internal/net:1:1,0x27284b71c70,~
code-source-info,0x27284b720e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,165689,0x27284b73aee,5, node:internal/dtrace:1:1,0x27284b739a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x27284b73aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,165744,0x27284b73fc6,140, node:internal/dtrace:1:1,0x27284b73a68,~
code-source-info,0x27284b73fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,165972,0x27284b74f8e,34,protoGetter node:net:740:21,0x27284b698b8,~
code-source-info,0x27284b74f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,166680,0x27284b7a31e,5, node:dgram:1:1,0x27284b79db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x27284b7a31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,168158,0x27284b7c22e,1501, node:dgram:1:1,0x27284b7a298,~
code-source-info,0x27284b7c22e
code-creation,Eval,10,168552,0x27284b7f636,5, node:internal/dgram:1:1,0x27284b7f430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x27284b7f636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,168675,0x27284b7f8fe,196, node:internal/dgram:1:1,0x27284b7f5b0,~
code-source-info,0x27284b7f8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x38a30e40000,262144
code-creation,LazyCompile,10,168935,0x38a30e43406,152,deprecate node:internal/util:96:19,0x1a058805aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e43406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,169781,0x1d54a9040c0,1344,deprecate node:internal/util:96:19,0x1a058805aa8,^
code-source-info,0x1d54a9040c0,16,2503,3720,,,
code-creation,Function,11,169814,0x1d54a904660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x622c08fdc0,^
code-source-info,0x1d54a904660,9,10647,11000,,,
code-creation,Function,11,169836,0x1d54a904960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x622c08f840,^
code-source-info,0x1d54a904960,9,5278,5523,,,
code-creation,Function,11,169866,0x1d54a904c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x622c08fcf0,^
code-source-info,0x1d54a904c00,9,9827,10410,,,
code-creation,Eval,10,170062,0x38a30e45ad6,5, node:internal/socket_list:1:1,0x38a30e45980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x38a30e45ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,170220,0x38a30e46116,126, node:internal/socket_list:1:1,0x38a30e45a50,~
code-source-info,0x38a30e46116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,170419,0x38a30e46cb6,14,customPromiseExecFunction node:child_process:230:35,0x27284b5d9b8,~
code-source-info,0x38a30e46cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,170493,0x38a30e48cd6,129,_forkChild node:child_process:169:20,0x27284b5d458,~
code-source-info,0x38a30e48cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
code-creation,LazyCompile,10,174019,0x38a30e496d6,396,setupChannel node:internal/child_process:571:22,0x27284b636a0,~
code-source-info,0x38a30e496d
code-creation,LazyCompile,10,174112,0x38a30e4beae,72,Control node:internal/child_process:529:14,0x27284b63ed8,~
code-source-info,0x38a30e4beae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,174148,0x38a30e4bfe6,21,EventEmitter node:events:208:22,0x1a05882b1b0,~
code-source-info,0x38a30e4bfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,174203,0x38a30e4c12e,149,EventEmitter.init node:events:327:29,0x1a05882b5a8,~
code-source-info,0x38a30e4c12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,174450,0x38a30e4cc76,5, node:internal/child_process/serialization:1:1,0x38a30e4c990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x38a30e4cc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,174663,0x38a30e4d4de,369, node:internal/child_process/serialization:1:1,0x38a30e4cbf0,~
code-source-info,0x38a30e4d4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,174823,0x38a30e4e17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x38a30e4ced8,~
code-source-info,0x38a30e4e17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,174891,0x38a30e4e7d6,19,_getMaxListeners node:events:404:26,0x1a05882b778,~
code-source-info,0x38a30e4e7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,174920,0x38a30e4e8ce,5,get node:events:264:16,0x1a05882b398,~
code-source-info,0x38a30e4e8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,174976,0x38a30e4ec2e,322,arrayClone node:events:879:20,0x1a05882c040,~
code-source-info,0x38a30e4ec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,175048,0x38a30e4eefe,22, node:internal/child_process:706:36,0x38a30e491f0,~
code-source-info,0x38a30e4eefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,175133,0x38a30e4f19e,368,nextTick node:internal/process/task_queues:104:18,0x36a9fe1aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x38a30e4f19e,32,2705,3580,C0O2705C2O2721C7O2721C11O2754C14O2766C20O2781C21O2788C22O2798C24O2825C59O2848C61O2868C70O2885C82O2891C84O2911C93O2928C105O2942C117O2948C119O2968C128O2985C140O2999C152O3013C164O3019C166O3047C171O3074C175O3081C181O3054C187O3107C190O3124C194O3112C199O3146C201O3153C207O3169C210O3158C214O3133C219O3094C222O3184C227O3194C232O3194C238O3210C243O3210C247O3256C252O3256C256O3296C261O3296C265O3346C272O3354C278O3372C285O3387C291O3413C301O3434C311O3449C319O3463C324O3467C329O3490C346O3490C351O3554C356O3560C361O3560C367O3579,,
code-creation,LazyCompile,10,175412,0x38a30e4fa0e,21, node:internal/validators:222:42,0x622c0bd268,~
code-source-info,0x38a30e4fa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,175449,0x38a30e4fb0e,15,isEmpty node:internal/fixed_queue:95:10,0x36a9fe1fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x38a30e4fb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,175649,0x38a30e4ffc6,13,isEmpty node:internal/fixed_queue:67:10,0x36a9fe1fa10,~
code-source-info,0x38a30e4ffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,175679,0x38a30e500b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x36a9fe1a960,~
code-source-info,0x38a30e500b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,175738,0x38a30e501ae,23,newAsyncId node:internal/async_hooks:417:20,0x622c0b8838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x38a30e501ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,176605,0x38a30e5168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x622c0b88d8,~
code-source-info,0x38a30e5168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,176646,0x38a30e5179e,13,initHooksExist node:internal/async_hooks:479:24,0x622c0b8ac8,~
code-source-info,0x38a30e5179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,176673,0x38a30e51886,16,hasHooks node:internal/async_hooks:471:18,0x622c0b8a28,~
code-source-info,0x38a30e51886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,176707,0x38a30e51996,59,push node:internal/fixed_queue:99:7,0x36a9fe1fcd0,~
code-source-info,0x38a30e51996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,176743,0x38a30e51ade,24,isFull node:internal/fixed_queue:71:9,0x36a9fe1fa60,~
code-source-info,0x38a30e51ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,176775,0x38a30e51bee,37,push node:internal/fixed_queue:75:7,0x36a9fe1fac8,~
code-source-info,0x38a30e51bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,176825,0x38a30e51d0e,30,onNewListener node:child_process:175:51,0x38a30e48b90,~
code-source-info,0x38a30e51d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,176931,0x38a30e5205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x27284b445e0,~
code-source-info,0x38a30e5205e,96,13401,15246,C0O13436C10O13436C15O13480C17O13511C21O13519C35O13519C41O13646C49O13646C55O13623C60O13638C65O13768C67O13786C75O13790C81O13805C87O13806C94O13847C100O13879C108O13861C116O13938C120O13960C126O13960C132O13938C138O13975C149O13991C153O14006C161O14020C167O14080C175O14080C180O14115C190O14115C197O14191C207O14191C212O14234C214O14288C222O14288C227O14367C235O14367C241O14335C246O14347C251O14417C257O14417C263O14468C269O14468C275O14528C277O14555C279O14579C283O14560C288O14673C290O14689C295O14622C300O14651C305O14716C311O14753C317O14753C322O14795C328O14795C334O14825C340O14845C344O14832C349O14866C356O14914C358O14944C360O14987C366O15009C376O15009C383O14987C389O14588C394O14542C397O15046C401O15074C415O15080C420O15074C421O15166C429O15166C435O15208C441O15232C447O15209C454O15245,,
code-creation,LazyCompile,10,177032,0x38a30e5242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x27284b44590,~
code-source-info,0x38a30e5242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,177077,0x38a30e5259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x27284b44720,~
code-source-info,0x38a30e5259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,177287,0x38a30e52ed6,5, node:internal/source_map/source_map_cache:1:1,0x38a30e52b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e52ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,177659,0x38a30e5354e,435, node:internal/source_map/source_map_cache:1:1,0x38a30e52e50,~
code-source-info,0x38a30e5354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,177869,0x38a30e5458e,5, node:internal/util/iterable_weak_map:1:1,0x38a30e54340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e5458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,177989,0x38a30e54cee,196, node:internal/util/iterable_weak_map:1:1,0x38a30e54508,~
code-source-info,0x38a30e54cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,178014,0x38a30e54e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x38a30e54818,~
code-source-info,0x38a30e54e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,178263,0x38a30e55aa6,5, node:internal/modules/cjs/helpers:1:1,0x38a30e557f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e55aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,178658,0x38a30e56026,536, node:internal/modules/cjs/helpers:1:1,0x38a30e55a20,~
code-source-info,0x38a30e56026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,178824,0x38a30e56c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x622c08a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x38a30e56c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
tick,0x7ff68cb10be6,179535,0,0x0,3,0x7ff68d143fe0,0x38a30e561f7,0x1d54a904f03,0x1d54a9048e5,0x38a30e53685,0x1d54a904f03,0x1d54a9048e5,0x38a30e525a4,0x27284b46514,0x27284b42065
code-creation,LazyCompile,10,179556,0x38a30e57b16,27,SafeMap node:internal/per_context/primordials:360:16,0x622c08a0a8,~
code-source-info,0x38a30e57b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,179607,0x38a30e57c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x38a30e54610,~
code-source-info,0x38a30e57c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,179637,0x38a30e57f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x622c08a168,~
code-source-info,0x38a30e57f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,179671,0x38a30e5809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x622c08a3b8,~
code-source-info,0x38a30e5809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,179789,0x38a30e5891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x27284b444b0,~
code-source-info,0x38a30e5891e
code-creation,LazyCompile,10,179896,0x38a30e58ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x27284b44630,~
code-source-info,0x38a30e58ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,179946,0x38a30e590c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x27284b44680,~
code-source-info,0x38a30e590c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,180791,0x38a30e5b016,5, node:internal/modules/cjs/loader:1:1,0x38a30e5a730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x38a30e5b016,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,182645,0x38a30e5cdb6,2547, node:internal/modules/cjs/loader:1:1,0x38a30e5af90,~
code-source-info,0x38a30e5cdb
code-creation,Eval,10,183109,0x38a30e60d76,5, node:internal/modules/package_json_reader:1:1,0x38a30e60bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x38a30e60d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,183182,0x38a30e60ec6,113, node:internal/modules/package_json_reader:1:1,0x38a30e60cf0,~
code-source-info,0x38a30e60ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,183333,0x38a30e6170e,5, node:internal/process/esm_loader:1:1,0x38a30e61518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x38a30e6170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,183489,0x38a30e619ae,182, node:internal/process/esm_loader:1:1,0x38a30e61688,~
code-source-info,0x38a30e619ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,183858,0x38a30e62cbe,5, node:internal/modules/esm/loader:1:1,0x38a30e62830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x38a30e62cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,184715,0x38a30e6358e,659, node:internal/modules/esm/loader:1:1,0x38a30e62c38,~
code-source-info,0x38a30e6358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,184782,0x38a30e63a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x38a30e630b0,~
code-source-info,0x38a30e63a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,184949,0x38a30e6540e,5, node:internal/modules/esm/module_map:1:1,0x38a30e65220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x38a30e6540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,185036,0x38a30e65846,175, node:internal/modules/esm/module_map:1:1,0x38a30e65388,~
code-source-info,0x38a30e65846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,185262,0x38a30e662ee,5, node:internal/modules/esm/module_job:1:1,0x38a30e65ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x38a30e662ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,185639,0x38a30e667e6,343, node:internal/modules/esm/module_job:1:1,0x38a30e66268,~
code-source-info,0x38a30e667e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,185851,0x38a30e6843e,5, node:internal/modules/esm/assert:1:1,0x38a30e68248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e6843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,186037,0x38a30e68716,201, node:internal/modules/esm/assert:1:1,0x38a30e683b8,~
code-source-info,0x38a30e68716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,186134,0x38a30e68d26,9, node:internal/modules/esm/assert:43:3,0x38a30e68510,~
code-source-info,0x38a30e68d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,186874,0x38a30e6a966,5, node:internal/modules/esm/resolve:1:1,0x38a30e6a1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x38a30e6a966,118,0,42310,C0O0C4O42310,,
code-creation,Function,10,188859,0x38a30e6ba96,1191, node:internal/modules/esm/resolve:1:1,0x38a30e6a8e0,~
code-source-info,0x38a30e6ba
code-creation,Eval,10,189244,0x38a30e6f556,5, node:internal/modules/esm/get_format:1:1,0x38a30e6f2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e6f556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,189457,0x38a30e6f9d6,368, node:internal/modules/esm/get_format:1:1,0x38a30e6f4d0,~
code-source-info,0x38a30e6f9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,189726,0x38a30e70846,5, node:internal/modules/esm/fetch_module:1:1,0x38a30e70580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x38a30e70846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,190104,0x38a30e70cde,318, node:internal/modules/esm/fetch_module:1:1,0x38a30e707c0,~
code-source-info,0x38a30e70cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,190208,0x38a30e719be,37,get BlockList node:net:1826:16,0x27284b6b7e8,~
code-source-info,0x38a30e719be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,190364,0x38a30e71e9e,5, node:internal/blocklist:1:1,0x38a30e71cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e71e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,190586,0x38a30e728a6,359, node:internal/blocklist:1:1,0x38a30e71e18,~
code-source-info,0x38a30e728a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,190838,0x38a30e74176,5, node:internal/socketaddress:1:1,0x38a30e73f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e74176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,191034,0x38a30e74c9e,366, node:internal/socketaddress:1:1,0x38a30e740f0,~
code-source-info,0x38a30e74c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,191196,0x38a30e7574e,72,BlockList node:internal/blocklist:40:14,0x38a30e71ed0,~
code-source-info,0x38a30e7574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,191267,0x38a30e75ef6,115,addAddress node:internal/blocklist:60:13,0x38a30e71f70,~
code-source-info,0x38a30e75ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,191317,0x38a30e76076,20,isSocketAddress node:internal/socketaddress:43:25,0x38a30e741f8,~
code-source-info,0x38a30e76076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,191400,0x38a30e7680e,323,SocketAddress node:internal/socketaddress:47:14,0x38a30e741a8,~
code-source-info,0x38a30e7680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,191491,0x38a30e76b5e,99, node:internal/validators:154:3,0x622c0bd020,~
code-source-info,0x38a30e76b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,191551,0x38a30e76d0e,129,validatePort node:internal/validators:211:22,0x622c0bd1f8,~
code-source-info,0x38a30e76d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,191612,0x38a30e76f5e,149, node:internal/validators:101:40,0x622c0bce20,~
code-source-info,0x38a30e76f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,191654,0x38a30e770ee,9,isUint32 node:internal/validators:40:18,0x622c0bccc0,~
code-source-info,0x38a30e770ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,191734,0x38a30e77326,229,addRange node:internal/blocklist:72:11,0x38a30e71fc0,~
code-source-info,0x38a30e77326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,191878,0x38a30e777a6,5, node:internal/modules/esm/formats:1:1,0x38a30e77630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e777a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,191965,0x38a30e77a5e,120, node:internal/modules/esm/formats:1:1,0x38a30e77720,~
code-source-info,0x38a30e77a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,192109,0x38a30e780e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x38a30e77f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x38a30e780e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,192185,0x38a30e782ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x38a30e78060,~
code-source-info,0x38a30e782ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,192291,0x38a30e787c6,5, node:internal/modules/esm/load:1:1,0x38a30e78650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e787c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,192361,0x38a30e7890e,80, node:internal/modules/esm/load:1:1,0x38a30e78740,~
code-source-info,0x38a30e7890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,192485,0x38a30e78f06,5, node:internal/modules/esm/get_source:1:1,0x38a30e78d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x38a30e78f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,192594,0x38a30e7909e,212, node:internal/modules/esm/get_source:1:1,0x38a30e78e80,~
code-source-info,0x38a30e7909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,193231,0x38a30e7a466,5, node:internal/fs/promises:1:1,0x38a30e79cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x38a30e7a466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,194357,0x38a30e7cba6,1672, node:internal/fs/promises:1:1,0x38a30e7a3e0,~
code-source-info,0x38a30e7cba
code-creation,Function,10,194510,0x38a30e7d55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x38a30e7ba40,~
code-source-info,0x38a30e7d55e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0xdc62c80000,262144
code-creation,Eval,10,194873,0xdc62c8114e,5, node:internal/fs/rimraf:1:1,0x38a30e7fca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0xdc62c8114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,195245,0xdc62c8174e,409, node:internal/fs/rimraf:1:1,0x38a30e7ff88,~
code-source-info,0xdc62c8174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
tick,0x7ff68d1f59d3,195474,0,0x0,3,0x7ff68d143fe0,0xdc62c818c1,0x1d54a904f03,0x1d54a9048e5,0x38a30e7ce74,0x1d54a904f03,0x1d54a9048e5,0x38a30e7912d,0x1d54a904f03,0x1d54a9048e5,0x38a30e78932,0x1d54a904f03,0x1d54a9048e5,0x38a30e6372a,0x1d54a904f03,0x1d54a9048e5,0x38a30e619fc,0x1d54a904f03,0x1d54a9048e5,0x38a30e5d261,0x1d54a904f03,0x1d54a9048e5,0x38a30e590cc,0x27284b46526,0x27284b42065
code-creation,LazyCompile,10,195514,0xdc62c825e6,188,from node:buffer:296:28,0x1a058836f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xdc62c825e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,197385,0xdc62c85016,110,fromString node:buffer:432:20,0x1a058837378,~
code-source-info,0xdc62c85016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,197464,0xdc62c851ce,177,fromStringFast node:buffer:413:24,0x1a0588372d8,~
code-source-info,0xdc62c851ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,197525,0xdc62c853be,36,FastBuffer node:internal/buffer:958:14,0x36a9fe0bb00,~
code-source-info,0xdc62c853be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,197559,0xdc62c854be,23,write node:buffer:593:12,0x1a0588376e8,~
code-source-info,0xdc62c854be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,197594,0xdc62c855ae,42,alignPool node:buffer:159:19,0x1a058836d10,~
code-source-info,0xdc62c855ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,197706,0xdc62c8596e,251,promisify node:internal/util:324:19,0x1a0588061f8,~
code-source-info,0xdc62c8596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,197870,0xdc62c85f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x124045e378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0xdc62c85f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
code-creation,Eval,10,199524,0xdc62c889de,5, node:internal/modules/esm/translators:1:1,0xdc62c88578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0xdc62c889de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,200038,0xdc62c8917e,715, node:internal/modules/esm/translators:1:1,0xdc62c88958,~
code-source-info,0xdc62c8917e
code-creation,Eval,10,200281,0xdc62c8a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0xdc62c8a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0xdc62c8a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,200394,0xdc62c8a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0xdc62c8a600,~
code-source-info,0xdc62c8a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,200800,0xdc62c8bb56,5, node:internal/vm/module:1:1,0xdc62c8b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0xdc62c8bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,201417,0xdc62c8cdb6,872, node:internal/vm/module:1:1,0xdc62c8bad0,~
code-source-info,0xdc62c8cdb
code-creation,Function,10,201547,0xdc62c8d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0xdc62c8c140,~
code-source-info,0xdc62c8d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,201783,0xdc62c8e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x38a30e62d40,~
code-source-info,0xdc62c8e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,201840,0xdc62c8fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x38a30e65490,~
code-source-info,0xdc62c8fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,201883,0xdc62c8fe4e,13,desc.value node:internal/per_context/primordials:334:32,0x622c08a000,~
code-source-info,0xdc62c8fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,201920,0xdc62c8ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x622c089a50,~
code-source-info,0xdc62c8ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,201957,0xdc62c9008e,13,next node:internal/per_context/primordials:282:9,0x622c089b18,~
code-source-info,0xdc62c9008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,202111,0xdc62c90706,28,getEmbedderOptions node:internal/options:32:28,0x348207dac8,~
code-source-info,0xdc62c90706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,202254,0xdc62c909ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x38a30e5c298,~
code-source-info,0xdc62c909ae
code-creation,Eval,10,202462,0xdc62c93906,5, node:internal/modules/run_main:1:1,0xdc62c936e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0xdc62c93906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,202602,0xdc62c93bee,178, node:internal/modules/run_main:1:1,0xdc62c93880,~
code-source-info,0xdc62c93bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,202716,0xdc62c9441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x27284b446d0,~
code-source-info,0xdc62c9441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,202779,0xdc62c94636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x38a30e5b788,~
code-source-info,0xdc62c94636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,202815,0xdc62c9471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x27284b447c0,~
code-source-info,0xdc62c9471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,202855,0xdc62c9490e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x27284b44770,~
code-source-info,0xdc62c9490e,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,202907,0xdc62c94a36,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0xdc62c93a78,~
code-source-info,0xdc62c94a36,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,202954,0xdc62c94e66,68,resolveMainPath node:internal/modules/run_main:15:25,0xdc62c93938,~
code-source-info,0xdc62c94e66,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,203090,0xdc62c950b6,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x38a30e5baa8,~
code-source-info,0xdc62c950b
code-creation,LazyCompile,10,203211,0xdc62c95466,109,isAbsolute node:path:402:13,0x124044d5d0,~
code-source-info,0xdc62c95466,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,203336,0xdc62c95706,85,stat node:internal/modules/cjs/loader:151:14,0x38a30e5b048,~
code-source-info,0xdc62c95706,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,203414,0xdc62c95916,232,toNamespacedPath node:path:618:19,0x124044d6f8,~
code-source-info,0xdc62c95916,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,203569,0xdc62c95b76,42,toRealPath node:internal/modules/cjs/loader:393:20,0x38a30e5b318,~
code-source-info,0xdc62c95b76,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,203879,0xdc62c95f8e,1042,realpathSync node:fs:2425:22,0x34820593f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xdc62c95f8e
code-creation,LazyCompile,10,207942,0xdc62c9c6b6,123,getOptions node:internal/fs/utils:315:20,0x3482061c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0xdc62c9c6b6,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
code-creation,LazyCompile,10,209160,0xdc62c9e63e,48,assertEncoding node:internal/fs/utils:152:24,0x34820616a0,~
code-source-info,0xdc62c9e63e,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,209263,0xdc62c9e756,20,toPathIfFileURL node:internal/url:1499:25,0x36a9fe39258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0xdc62c9e756,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,211366,0xdc62ca189e,17,isURLInstance node:internal/url:1495:23,0x36a9fe39208,~
code-source-info,0xdc62ca189e,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,211412,0xdc62ca19fe,81, node:internal/fs/utils:669:38,0x34820626c0,~
code-source-info,0xdc62ca19fe,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
tick,0x7ff68d533750,211469,0,0x0,2,0x7ff68d143fe0,0xdc62ca1a42,0xdc62c95fc1,0xdc62c95b99,0xdc62c951e1,0xdc62c94e84,0xdc62c94a4f,0x27284b42089
code-creation,LazyCompile,10,211518,0xdc62ca1c0e,110, node:internal/fs/utils:358:35,0x3482061d38,~
code-source-info,0xdc62ca1c0e,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,211597,0xdc62ca1d86,16,isUint8Array node:internal/util/types:13:22,0x1a058807418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xdc62ca1d86,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,211877,0xdc62ca21ee,23,splitRoot node:fs:2375:33,0x34820592a8,~
code-source-info,0xdc62ca21ee,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,212061,0xdc62ca22f6,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x3482061ce8,~
code-source-info,0xdc62ca22f6,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,212138,0xdc62ca246e,53,nextPart node:fs:2401:31,0x34820593a0,~
code-source-info,0xdc62ca246e,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,212270,0xdc62ca25ce,34,isFileType node:fs:205:20,0x3482057010,~
code-source-info,0xdc62ca25ce,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,212761,0x1d54a905160,6232,resolve node:path:158:10,0x124044d510,^
code-source-info,0x1d54a905160,41,4875,9786,,,
code-creation,Function,11,212792,0x1d54a906a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x348207d848,^
code-source-info,0x1d54a906a20,91,514,620,,,
code-creation,Function,11,212810,0x1d54a906c40,104,next node:internal/per_context/primordials:282:9,0x622c089b18,^
code-source-info,0x1d54a906c40,6,8270,8317,,,
code-creation,Function,11,212831,0x1d54a906d20,252,SafeMap node:internal/per_context/primordials:360:16,0x622c08a0a8,^
code-source-info,0x1d54a906d20,6,10694,10711,,,
code-creation,Function,11,212888,0x1d54a906e80,272,validateString node:internal/validators:118:24,0x622c0bce70,^
code-source-info,0x1d54a906e80,15,3534,3646,,,
code-creation,Function,11,212916,0x1d54a907000,412,isWindowsDeviceRoot node:path:60:29,0x124044d408,^
code-source-info,0x1d54a907000,41,1991,2136,,,
code-creation,Function,11,212938,0x1d54a907200,544,nextPart node:fs:2401:31,0x34820593a0,^
code-source-info,0x1d54a907200,80,66157,66408,,,
code-creation,LazyCompile,10,213123,0xdc62ca329e,72,encodeRealpathResult node:fs:2388:30,0x3482059350,~
code-source-info,0xdc62ca329e,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,213209,0xdc62ca344e,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0xdc62c93988,~
code-source-info,0xdc62ca344e,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,213284,0xdc62ca366e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x38a30e5b228,~
code-source-info,0xdc62ca366e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,213375,0xdc62ca39ce,234,readPackage node:internal/modules/cjs/loader:290:21,0x38a30e5b1d8,~
code-source-info,0xdc62ca39ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,213489,0xdc62ca3cd6,199,read node:internal/modules/package_json_reader:16:14,0x38a30e60da8,~
code-source-info,0xdc62ca3cd6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,213803,0xdc62ca4896,619,Module._load node:internal/modules/cjs/loader:757:24,0x38a30e5bd88,~
code-source-info,0xdc62ca
code-creation,LazyCompile,10,214055,0xdc62ca4ffe,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x38a30e5be10,~
code-source-info,0xdc62ca4ffe
code-creation,LazyCompile,10,214236,0xdc62ca55be,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x622c08fb20,~
code-source-info,0xdc62ca55be,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,214315,0xdc62ca5876,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x38a30e5bc58,~
code-source-info,0xdc62ca5876,111,20630,21844,C0O20653C5O20670C10O20670C17O20708C25O20708C30O20753C31O20765C32O20812C39O20816C47O20850C52O20877C59O20884C66O20898C72O20898C80O20932C87O20950C93O20950C101O20984C108O21004C114O21017C120O21017C128O21051C133O21084C138O21102C145O21112C152O21119C161O21138C166O21174C171O21146C177O21203C191O21203C196O21268C202O21275C212O21294C213O21345C217O21368C223O21382C229O21556C234O21570C248O21570C253O21626C255O21643C256O21654C264O21721C272O21654C277O21749C286O21750C289O21755C294O21770C299O21755C311O21785C319O21785C324O21824C326O21841,,
code-creation,LazyCompile,10,214399,0xdc62ca5b3e,89,logger node:internal/util/debuglog:95:18,0x1a058821f90,~
code-source-info,0xdc62ca5b3e,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,214442,0xdc62ca5c7e,3, node:internal/per_context/primordials:285:21,0x622c089bc0,~
code-source-info,0xdc62ca5c7e,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,214491,0xdc62ca5d56,140,debug node:internal/util/debuglog:76:15,0x1a058821ef0,~
code-source-info,0xdc62ca5d56,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,214540,0xdc62ca5f06,41,init node:internal/util/debuglog:72:16,0x1a058821ea0,~
code-source-info,0xdc62ca5f06,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,214569,0xdc62ca5ff6,2,testEnabled node:internal/util/debuglog:32:19,0x27284b581b0,~
code-source-info,0xdc62ca5ff6,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,214620,0xdc62ca618e,116,debuglogImpl node:internal/util/debuglog:49:22,0x1a058821cf0,~
code-source-info,0xdc62ca618e,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,214663,0xdc62ca6346,10, node:internal/modules/cjs/loader:272:66,0x38a30e5ba58,~
code-source-info,0xdc62ca6346,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,214688,0xdc62ca63f6,2,noop node:internal/util/debuglog:47:14,0x1a058821ca0,~
code-source-info,0xdc62ca63f6,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,214764,0xdc62ca6536,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x38a30e5b408,~
code-source-info,0xdc62ca6536,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,214843,0xdc62ca6776,235,trySelf node:internal/modules/cjs/loader:441:17,0x38a30e5b458,~
code-source-info,0xdc62ca6776,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,214945,0xdc62ca6a0e,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x38a30e55ad8,~
code-source-info,0xdc62ca6a0e,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,214995,0xdc62ca72f6,94,Module node:internal/modules/cjs/loader:172:16,0x38a30e5b0e8,~
code-source-info,0xdc62ca72f6,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,215112,0xdc62ca74ee,449,dirname node:path:653:10,0x124044d768,~
code-source-info,0xdc62ca74ee
code-creation,LazyCompile,10,215235,0xdc62ca78a6,45,updateChildren node:internal/modules/cjs/loader:165:24,0x38a30e5b098,~
code-source-info,0xdc62ca78a6,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,215310,0xdc62ca7a9e,246,Module.load node:internal/modules/cjs/loader:969:33,0x38a30e5bea0,~
code-source-info,0xdc62ca7a9e,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,215420,0xdc62ca7da6,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x38a30e5bb38,~
code-source-info,0xdc62ca7da
code-creation,LazyCompile,10,215549,0xdc62ca819e,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x38a30e5b3b8,~
code-source-info,0xdc62ca819e,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,215661,0xdc62ca837e,415,basename node:path:749:11,0x124044d7d0,~
code-source-info,0xdc62ca837e
code-creation,LazyCompile,10,215839,0xdc62ca889e,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0x38a30e5c040,~
code-source-info,0xdc62ca889e
code-creation,LazyCompile,10,215994,0xdc62ca8ce6,376,readFileSync node:fs:450:22,0x34820574c8,~
code-source-info,0xdc62ca8ce
code-creation,LazyCompile,10,216094,0xdc62ca9006,30,isEncoding node:buffer:530:40,0x1a0588375c0,~
code-source-info,0xdc62ca9006,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,216130,0xdc62ca910e,30,normalizeEncoding node:internal/util:160:27,0x1a058805d58,~
code-source-info,0xdc62ca910e,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,216179,0xdc62ca9286,113,openSync node:fs:576:18,0x34820576b0,~
code-source-info,0xdc62ca9286,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,216226,0xdc62ca9406,37, node:internal/fs/utils:681:42,0x3482062710,~
code-source-info,0xdc62ca9406,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,216305,0xdc62ca97de,515,stringToFlags node:internal/fs/utils:556:23,0x3482062530,~
code-source-info,0xdc62ca97de
code-creation,LazyCompile,10,216421,0xdc62ca9bce,97,parseFileMode node:internal/validators:59:23,0x622c0bcd10,~
code-source-info,0xdc62ca9bce,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,216482,0xdc62ca9d66,206, node:internal/validators:84:3,0x622c0bcdd0,~
code-source-info,0xdc62ca9d66,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,216527,0xdc62ca9f2e,9,isInt32 node:internal/validators:36:17,0x622c0bc7b0,~
code-source-info,0xdc62ca9f2e,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,Function,11,216608,0x1d54a907480,1936,toNamespacedPath node:path:618:19,0x124044d6f8,^
code-source-info,0x1d54a907480,41,20086,21201,,,
code-creation,Function,11,216630,0x1d54a907c80,320,isFileType node:fs:205:20,0x3482057010,^
code-source-info,0x1d54a907c80,80,5489,5737,,,
code-creation,Function,11,216669,0x1d54a907e20,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x38a30e5bb38,^
code-source-info,0x1d54a907e20,111,17765,19316,,,
code-creation,LazyCompile,10,216756,0xdc62caa3d6,66,tryStatSync node:fs:404:21,0x34820573d8,~
code-source-info,0xdc62caa3d6,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,216825,0xdc62caa54e,96,tryCreateBuffer node:fs:414:25,0x3482057428,~
code-source-info,0xdc62caa54e,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,216868,0xdc62caa6a6,17,allocUnsafe node:buffer:373:42,0x1a058837138,~
code-source-info,0xdc62caa6a6,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,216903,0xdc62caa7ae,54, node:buffer:349:36,0x1a058837080,~
code-source-info,0xdc62caa7ae,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,216937,0xdc62caa8d6,30,validateNumber node:internal/validators:123:24,0x622c0bcf10,~
code-source-info,0xdc62caa8d6,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,216981,0xdc62caa9ee,119,allocate node:buffer:398:18,0x1a058837288,~
code-source-info,0xdc62caa9ee,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,217047,0xdc62caabae,86,tryReadSync node:fs:429:21,0x3482057478,~
code-source-info,0xdc62caabae,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,217125,0xdc62caad9e,258,readSync node:fs:684:18,0x3482057780,~
code-source-info,0xdc62caad9e,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,217194,0xdc62cab00e,52, node:internal/fs/utils:687:40,0x3482062760,~
code-source-info,0xdc62cab00e,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,217233,0xdc62cab17e,51, node:internal/validators:191:40,0x622c0bd138,~
code-source-info,0xdc62cab17e,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,217279,0xdc62cab2d6,151, node:internal/validators:73:3,0x622c0bcd80,~
code-source-info,0xdc62cab2d6,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,217335,0xdc62cab4de,103, node:internal/fs/utils:637:3,0x3482062620,~
code-source-info,0xdc62cab4de,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,217394,0xdc62cab7e6,151, node:internal/fs/utils:892:42,0x3482062a80,~
code-source-info,0xdc62cab7e6,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,217477,0xdc62cab99e,47,closeSync node:fs:526:19,0x34820575d8,~
code-source-info,0xdc62cab99e,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,217564,0xdc62cabad6,162,toString node:buffer:783:46,0x1a058838fc0,~
code-source-info,0xdc62cabad6,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,217686,0xdc62cabd96,499,getEncodingOps node:buffer:679:24,0x1a058838e18,~
code-source-info,0xdc62cabd
code-creation,LazyCompile,10,217816,0xdc62cac17e,12,slice node:buffer:594:12,0x1a0588377e0,~
code-source-info,0xdc62cac17e,24,17229,17275,C0O17254C5O17254C11O17275,,
code-creation,LazyCompile,10,217952,0xdc62cac3fe,499,Module._compile node:internal/modules/cjs/loader:1059:37,0x38a30e5bfb0,~
code-source-info,0xdc62cac3fe
code-creation,LazyCompile,10,218098,0xdc62cac966,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x38a30e52ff8,~
code-source-info,0xdc62cac966,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,218162,0xdc62cad3be,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x38a30e52f58,~
code-source-info,0xdc62cad3be,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,218211,0xdc62cad536,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x38a30e52fa8,~
code-source-info,0xdc62cad536,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,218255,0xdc62cad6ae,30,validateBoolean node:internal/validators:139:25,0x622c0bcfb0,~
code-source-info,0xdc62cad6ae,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,218326,0xdc62cadaa6,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x38a30e5b638,~
code-source-info,0xdc62cadaa6,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,218494,0xdc62cae27e,472,compileFunction node:vm:308:25,0x3482074570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0xdc62cae27e
code-creation,LazyCompile,10,219178,0xdc62caf446,95, node:internal/validators:168:39,0x622c0bd070,~
code-source-info,0xdc62caf446,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,219216,0xdc62caf5a6,27, node:vm:313:27,0xdc62cadf50,~
code-source-info,0xdc62caf5a6,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,219279,0xdc62caf836,5, C:\\Users\\Giuliano\\Desktop\\Coderhouse\\Back-end\\DESAFIOS\\desafioClase26\\desafio26\\child.js:1:1,0xdc62caf6e0,~
script-source,133,C:\\Users\\Giuliano\\Desktop\\Coderhouse\\Back-end\\DESAFIOS\\desafioClase26\\desafio26\\child.js,function random(num) {\x0d\n  let randoms = {};\x0d\n\x0d\n  for (let i = 0; i < num; i++) {\x0d\n    const num = (Math.random() * 1000).toFixed(0);\x0d\n    if (randoms.hasOwnProperty(num)) {\x0d\n      randoms[num] += 1;\x0d\n    } else {\x0d\n      randoms[num] = 1;\x0d\n    }\x0d\n  }\x0d\n  return JSON.stringify(randoms);\x0d\n}\x0d\n\x0d\nprocess.on("message"\x2C (msg) => {\x0d\n  const array = random(parseInt(msg));\x0d\n  process.send(array);\x0d\n});\x0d\n\x0d\nmodule.exports = random;\x0d\n
code-source-info,0xdc62caf836,133,0,422,C0O0C4O422,,
code-creation,Function,10,219331,0xdc62caf986,42, C:\\Users\\Giuliano\\Desktop\\Coderhouse\\Back-end\\DESAFIOS\\desafioClase26\\desafio26\\child.js:1:1,0xdc62caf7b0,~
code-source-info,0xdc62caf986,133,0,422,C0O0C11O291C15O299C28O299C34O396C36O411C41O421,,
code-creation,LazyCompile,10,219418,0xdc62cafca6,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0xdc62c8bb88,~
code-source-info,0xdc62cafca6,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,219495,0xdc62cb0fee,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x38a30e55b28,~
code-source-info,0xdc62cb0fee,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,219560,0xdc62cb123e,5,get node:internal/bootstrap/pre_execution:370:8,0x38a30e58478,~
code-source-info,0xdc62cb123e,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,219606,0xdc62cb1306,44,refCounted node:internal/child_process:539:13,0x27284b63f28,~
code-source-info,0xdc62cb1306,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,219701,0xdc62cb14c6,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x36a9fe1aa00,~
code-source-info,0xdc62cb14c
code-creation,LazyCompile,10,219783,0xdc62cb179e,43,shift node:internal/fixed_queue:108:8,0x36a9fe1fd20,~
code-source-info,0xdc62cb179e,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,219823,0xdc62cb18e6,54,shift node:internal/fixed_queue:80:8,0x36a9fe1fb30,~
code-source-info,0xdc62cb18e6,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,219868,0xdc62cb1a1e,42,emitBeforeScript node:internal/async_hooks:510:26,0x622c0b8c78,~
code-source-info,0xdc62cb1a1e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,219916,0xdc62cb1b6e,180,pushAsyncContext node:internal/async_hooks:540:26,0x622c0b8e20,~
code-source-info,0xdc62cb1b6e,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,219998,0xdc62cb1d86,125, node:internal/child_process:708:22,0x38a30e4ee58,~
code-source-info,0xdc62cb1d86,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,220058,0xdc62cb1f46,31,listenerCount node:events:854:23,0x1a05882bf80,~
code-source-info,0xdc62cb1f46,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,220095,0xdc62cb204e,13,destroyHooksExist node:internal/async_hooks:487:27,0x622c0b8b88,~
code-source-info,0xdc62cb204e,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,220125,0xdc62cb213e,32,emitAfterScript node:internal/async_hooks:518:25,0x622c0b8cc8,~
code-source-info,0xdc62cb213e,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,220174,0xdc62cb22a6,167,popAsyncContext node:internal/async_hooks:554:25,0x622c0b8e70,~
code-source-info,0xdc62cb22a6,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,220230,0xdc62cb2486,13,enabledHooksExist node:internal/async_hooks:475:27,0x622c0b8a78,~
code-source-info,0xdc62cb2486,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,220388,0xdc62cb2796,627,processPromiseRejections node:internal/process/promises:211:34,0x36a9fe1e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0xdc62cb
code-creation,LazyCompile,10,220966,0xdc62cb36ee,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x36a9fe1d9a8,~
code-source-info,0xdc62cb36ee,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7ffdb840feb4,227483,0,0x0,8
tick,0x7ffdb840feb4,243485,0,0x0,8
tick,0x7ffdb840feb4,259482,0,0x0,8
tick,0x7ffdb840feb4,275507,0,0x0,8
tick,0x7ffdb840feb4,291481,0,0x0,8
tick,0x7ffdb840feb4,306772,0,0x0,8
tick,0x7ffdb840feb4,322790,0,0x0,8
tick,0x7ffdb840feb4,338510,0,0x0,8
tick,0x7ffdb840feb4,354498,0,0x0,8
tick,0x7ffdb840feb4,370397,0,0x0,8
tick,0x7ffdb840feb4,385763,0,0x0,8
tick,0x7ffdb840feb4,401004,0,0x0,8
tick,0x7ffdb840feb4,416319,0,0x0,8
tick,0x7ffdb840feb4,431535,0,0x0,8
tick,0x7ffdb840feb4,447182,0,0x0,8
tick,0x7ffdb840feb4,462205,0,0x0,8
tick,0x7ffdb840feb4,478189,0,0x0,8
tick,0x7ffdb840feb4,493201,0,0x0,8
tick,0x7ffdb840feb4,508403,0,0x0,8
tick,0x7ffdb840feb4,523979,0,0x0,8
tick,0x7ffdb840feb4,539404,0,0x0,8
tick,0x7ffdb840feb4,554448,0,0x0,8
tick,0x7ffdb840feb4,569501,0,0x0,8
tick,0x7ffdb840feb4,585615,0,0x0,8
tick,0x7ffdb840feb4,600842,0,0x0,8
tick,0x7ffdb840feb4,616113,0,0x0,8
tick,0x7ffdb840feb4,631302,0,0x0,8
tick,0x7ffdb840feb4,646639,0,0x0,8
tick,0x7ffdb840feb4,662704,0,0x0,8
tick,0x7ffdb840feb4,678143,0,0x0,8
tick,0x7ffdb840feb4,693288,0,0x0,8
tick,0x7ffdb840feb4,708662,0,0x0,8
tick,0x7ffdb840feb4,724576,0,0x0,8
tick,0x7ffdb840feb4,739553,0,0x0,8
tick,0x7ffdb840feb4,754698,0,0x0,8
tick,0x7ffdb840feb4,769721,0,0x0,8
tick,0x7ffdb840feb4,784945,0,0x0,8
tick,0x7ffdb840feb4,800244,0,0x0,8
tick,0x7ffdb840feb4,815510,0,0x0,8
tick,0x7ffdb840feb4,831645,0,0x0,8
tick,0x7ffdb840feb4,846735,0,0x0,8
tick,0x7ffdb840feb4,861596,0,0x0,8
tick,0x7ffdb840feb4,876830,0,0x0,8
tick,0x7ffdb840feb4,892022,0,0x0,8
tick,0x7ffdb840feb4,907571,0,0x0,8
tick,0x7ffdb840feb4,923432,0,0x0,8
tick,0x7ffdb840feb4,938846,0,0x0,8
tick,0x7ffdb840feb4,954564,0,0x0,8
tick,0x7ffdb840feb4,969598,0,0x0,8
tick,0x7ffdb840feb4,984370,0,0x0,8
tick,0x7ffdb840feb4,999511,0,0x0,8
tick,0x7ffdb840feb4,1015461,0,0x0,8
tick,0x7ffdb840feb4,1031011,0,0x0,8
tick,0x7ffdb840feb4,1046041,0,0x0,8
tick,0x7ffdb840feb4,1061896,0,0x0,8
tick,0x7ffdb840feb4,1077031,0,0x0,8
tick,0x7ffdb840feb4,1092819,0,0x0,8
tick,0x7ffdb840feb4,1108112,0,0x0,8
tick,0x7ffdb840feb4,1123678,0,0x0,8
tick,0x7ffdb840feb4,1139658,0,0x0,8
tick,0x7ffdb840feb4,1155664,0,0x0,8
tick,0x7ffdb840feb4,1171866,0,0x0,8
tick,0x7ffdb840feb4,1187673,0,0x0,8
tick,0x7ffdb840feb4,1203674,0,0x0,8
tick,0x7ffdb840feb4,1219926,0,0x0,8
tick,0x7ffdb840feb4,1235620,0,0x0,8
tick,0x7ffdb840feb4,1250797,0,0x0,8
tick,0x7ffdb840feb4,1265803,0,0x0,8
tick,0x7ffdb840feb4,1280836,0,0x0,8
tick,0x7ffdb840feb4,1296101,0,0x0,8
tick,0x7ffdb840feb4,1312061,0,0x0,8
tick,0x7ffdb840feb4,1327913,0,0x0,8
tick,0x7ffdb840feb4,1343632,0,0x0,8
tick,0x7ffdb840feb4,1358647,0,0x0,8
tick,0x7ffdb840feb4,1373815,0,0x0,8
tick,0x7ffdb840feb4,1389098,0,0x0,8
tick,0x7ffdb840feb4,1404961,0,0x0,8
tick,0x7ffdb840feb4,1420870,0,0x0,8
tick,0x7ffdb840feb4,1435826,0,0x0,8
tick,0x7ffdb840feb4,1451059,0,0x0,8
tick,0x7ffdb840feb4,1467074,0,0x0,8
tick,0x7ffdb840feb4,1482261,0,0x0,8
tick,0x7ffdb840feb4,1497396,0,0x0,8
tick,0x7ffdb840feb4,1512871,0,0x0,8
tick,0x7ffdb840feb4,1528585,0,0x0,8
tick,0x7ffdb840feb4,1544518,0,0x0,8
tick,0x7ffdb840feb4,1560318,0,0x0,8
tick,0x7ffdb840feb4,1575808,0,0x0,8
tick,0x7ffdb840feb4,1591804,0,0x0,8
tick,0x7ffdb840feb4,1606991,0,0x0,8
tick,0x7ffdb840feb4,1622309,0,0x0,8
tick,0x7ffdb840feb4,1637357,0,0x0,8
tick,0x7ffdb840feb4,1653134,0,0x0,8
tick,0x7ffdb840feb4,1668506,0,0x0,8
tick,0x7ffdb840feb4,1684419,0,0x0,8
tick,0x7ffdb840feb4,1700233,0,0x0,8
tick,0x7ffdb840feb4,1715782,0,0x0,8
tick,0x7ffdb840feb4,1732079,0,0x0,8
tick,0x7ffdb840feb4,1747930,0,0x0,8
tick,0x7ffdb840feb4,1762554,0,0x0,8
tick,0x7ffdb840feb4,1778554,0,0x0,8
tick,0x7ffdb840feb4,1793712,0,0x0,8
tick,0x7ffdb840feb4,1809552,0,0x0,8
tick,0x7ffdb840feb4,1825432,0,0x0,8
tick,0x7ffdb840feb4,1841438,0,0x0,8
tick,0x7ffdb840feb4,1857548,0,0x0,8
tick,0x7ffdb840feb4,1873425,0,0x0,8
tick,0x7ffdb840feb4,1889425,0,0x0,8
tick,0x7ffdb840feb4,1904623,0,0x0,8
tick,0x7ffdb840feb4,1920421,0,0x0,8
tick,0x7ffdb840feb4,1935436,0,0x0,8
tick,0x7ffdb840feb4,1951437,0,0x0,8
tick,0x7ffdb840feb4,1967444,0,0x0,8
tick,0x7ffdb840feb4,1983434,0,0x0,8
tick,0x7ffdb840feb4,1999439,0,0x0,8
tick,0x7ffdb840feb4,2015437,0,0x0,8
tick,0x7ffdb840feb4,2031449,0,0x0,8
tick,0x7ffdb840feb4,2047439,0,0x0,8
tick,0x7ffdb840feb4,2063453,0,0x0,8
tick,0x7ffdb840feb4,2079471,0,0x0,8
tick,0x7ffdb840feb4,2095458,0,0x0,8
tick,0x7ffdb840feb4,2111458,0,0x0,8
tick,0x7ffdb840feb4,2127465,0,0x0,8
tick,0x7ffdb840feb4,2143486,0,0x0,8
tick,0x7ffdb840feb4,2159467,0,0x0,8
tick,0x7ffdb840feb4,2175494,0,0x0,8
tick,0x7ffdb840feb4,2191487,0,0x0,8
tick,0x7ffdb840feb4,2207483,0,0x0,8
tick,0x7ffdb840feb4,2223454,0,0x0,8
tick,0x7ffdb840feb4,2239451,0,0x0,8
tick,0x7ffdb840feb4,2255453,0,0x0,8
tick,0x7ffdb840feb4,2271476,0,0x0,8
tick,0x7ffdb840feb4,2287472,0,0x0,8
tick,0x7ffdb840feb4,2303509,0,0x0,8
tick,0x7ffdb840feb4,2318466,0,0x0,8
tick,0x7ffdb840feb4,2333487,0,0x0,8
tick,0x7ffdb840feb4,2349503,0,0x0,8
tick,0x7ffdb840feb4,2365499,0,0x0,8
tick,0x7ffdb840feb4,2381500,0,0x0,8
tick,0x7ffdb840feb4,2397518,0,0x0,8
tick,0x7ffdb840feb4,2413520,0,0x0,8
tick,0x7ffdb840feb4,2429517,0,0x0,8
tick,0x7ffdb840feb4,2445519,0,0x0,8
tick,0x7ffdb840feb4,2461530,0,0x0,8
tick,0x7ffdb840feb4,2477524,0,0x0,8
tick,0x7ffdb840feb4,2493274,0,0x0,8
tick,0x7ffdb840feb4,2508500,0,0x0,8
tick,0x7ffdb840feb4,2524508,0,0x0,8
tick,0x7ffdb840feb4,2539228,0,0x0,8
tick,0x7ffdb840feb4,2555227,0,0x0,8
tick,0x7ffdb840feb4,2570516,0,0x0,8
tick,0x7ffdb840feb4,2586362,0,0x0,8
tick,0x7ffdb840feb4,2602142,0,0x0,8
tick,0x7ffdb840feb4,2617481,0,0x0,8
tick,0x7ffdb840feb4,2633046,0,0x0,8
tick,0x7ffdb840feb4,2648595,0,0x0,8
tick,0x7ffdb840feb4,2664583,0,0x0,8
tick,0x7ffdb840feb4,2680591,0,0x0,8
tick,0x7ffdb840feb4,2696061,0,0x0,8
tick,0x7ffdb840feb4,2711407,0,0x0,8
tick,0x7ffdb840feb4,2726522,0,0x0,8
tick,0x7ffdb840feb4,2742251,0,0x0,8
tick,0x7ffdb840feb4,2758241,0,0x0,8
tick,0x7ffdb840feb4,2774245,0,0x0,8
tick,0x7ffdb840feb4,2789380,0,0x0,8
tick,0x7ffdb840feb4,2804729,0,0x0,8
tick,0x7ffdb840feb4,2820632,0,0x0,8
tick,0x7ffdb840feb4,2836256,0,0x0,8
tick,0x7ffdb840feb4,2852126,0,0x0,8
tick,0x7ffdb840feb4,2867473,0,0x0,8
tick,0x7ffdb840feb4,2882475,0,0x0,8
tick,0x7ffdb840feb4,2898498,0,0x0,8
tick,0x7ffdb840feb4,2913818,0,0x0,8
tick,0x7ffdb840feb4,2929934,0,0x0,8
tick,0x7ffdb840feb4,2945939,0,0x0,8
tick,0x7ffdb840feb4,2962100,0,0x0,8
tick,0x7ffdb840feb4,2978092,0,0x0,8
tick,0x7ffdb840feb4,2993954,0,0x0,8
tick,0x7ffdb840feb4,3010064,0,0x0,8
tick,0x7ffdb840feb4,3025551,0,0x0,8
tick,0x7ffdb840feb4,3040853,0,0x0,8
tick,0x7ffdb840feb4,3056197,0,0x0,8
tick,0x7ffdb840feb4,3072310,0,0x0,8
tick,0x7ffdb840feb4,3088484,0,0x0,8
tick,0x7ffdb840feb4,3103739,0,0x0,8
tick,0x7ffdb840feb4,3119578,0,0x0,8
tick,0x7ffdb840feb4,3134770,0,0x0,8
tick,0x7ffdb840feb4,3150774,0,0x0,8
tick,0x7ffdb840feb4,3165940,0,0x0,8
tick,0x7ffdb840feb4,3181795,0,0x0,8
tick,0x7ffdb840feb4,3197796,0,0x0,8
tick,0x7ffdb840feb4,3213490,0,0x0,8
tick,0x7ffdb840feb4,3228961,0,0x0,8
tick,0x7ffdb840feb4,3243956,0,0x0,8
tick,0x7ffdb840feb4,3259933,0,0x0,8
tick,0x7ffdb840feb4,3275861,0,0x0,8
tick,0x7ffdb840feb4,3291147,0,0x0,8
tick,0x7ffdb840feb4,3306181,0,0x0,8
tick,0x7ffdb840feb4,3321855,0,0x0,8
tick,0x7ffdb840feb4,3336865,0,0x0,8
tick,0x7ffdb840feb4,3352168,0,0x0,8
tick,0x7ffdb840feb4,3367906,0,0x0,8
tick,0x7ffdb840feb4,3383649,0,0x0,8
tick,0x7ffdb840feb4,3399526,0,0x0,8
tick,0x7ffdb840feb4,3415279,0,0x0,8
tick,0x7ffdb840feb4,3430803,0,0x0,8
tick,0x7ffdb840feb4,3445648,0,0x0,8
tick,0x7ffdb840feb4,3461645,0,0x0,8
tick,0x7ffdb840feb4,3477651,0,0x0,8
tick,0x7ffdb840feb4,3493688,0,0x0,8
tick,0x7ffdb840feb4,3509702,0,0x0,8
tick,0x7ffdb840feb4,3525719,0,0x0,8
tick,0x7ffdb840feb4,3541619,0,0x0,8
tick,0x7ffdb840feb4,3557710,0,0x0,8
tick,0x7ffdb840feb4,3572717,0,0x0,8
tick,0x7ffdb840feb4,3587740,0,0x0,8
tick,0x7ffdb840feb4,3603080,0,0x0,8
tick,0x7ffdb840feb4,3618318,0,0x0,8
tick,0x7ffdb840feb4,3633765,0,0x0,8
tick,0x7ffdb840feb4,3649744,0,0x0,8
tick,0x7ffdb840feb4,3665757,0,0x0,8
tick,0x7ffdb840feb4,3681468,0,0x0,8
tick,0x7ffdb840feb4,3696713,0,0x0,8
tick,0x7ffdb840feb4,3711720,0,0x0,8
tick,0x7ffdb840feb4,3726732,0,0x0,8
tick,0x7ffdb840feb4,3742186,0,0x0,8
tick,0x7ffdb840feb4,3757361,0,0x0,8
tick,0x7ffdb840feb4,3772395,0,0x0,8
tick,0x7ffdb840feb4,3787909,0,0x0,8
tick,0x7ffdb840feb4,3803430,0,0x0,8
tick,0x7ffdb840feb4,3818475,0,0x0,8
tick,0x7ffdb840feb4,3833774,0,0x0,8
tick,0x7ffdb840feb4,3848849,0,0x0,8
tick,0x7ffdb840feb4,3864911,0,0x0,8
tick,0x7ffdb840feb4,3880200,0,0x0,8
tick,0x7ffdb840feb4,3895413,0,0x0,8
tick,0x7ffdb840feb4,3910517,0,0x0,8
tick,0x7ffdb840feb4,3925992,0,0x0,8
tick,0x7ffdb840feb4,3941073,0,0x0,8
tick,0x7ffdb840feb4,3956215,0,0x0,8
tick,0x7ffdb840feb4,3972156,0,0x0,8
tick,0x7ffdb840feb4,3987971,0,0x0,8
tick,0x7ffdb840feb4,4004387,0,0x0,8
tick,0x7ffdb840feb4,4020412,0,0x0,8
tick,0x7ffdb840feb4,4035969,0,0x0,8
tick,0x7ffdb840feb4,4052180,0,0x0,8
tick,0x7ffdb840feb4,4067836,0,0x0,8
tick,0x7ffdb840feb4,4083533,0,0x0,8
tick,0x7ffdb840feb4,4099337,0,0x0,8
tick,0x7ffdb840feb4,4114970,0,0x0,8
tick,0x7ffdb840feb4,4130430,0,0x0,8
tick,0x7ffdb840feb4,4145961,0,0x0,8
tick,0x7ffdb840feb4,4160966,0,0x0,8
tick,0x7ffdb840feb4,4177156,0,0x0,8
tick,0x7ffdb840feb4,4192156,0,0x0,8
tick,0x7ffdb840feb4,4207611,0,0x0,8
tick,0x7ffdb840feb4,4223366,0,0x0,8
tick,0x7ffdb840feb4,4238484,0,0x0,8
tick,0x7ffdb840feb4,4253862,0,0x0,8
tick,0x7ffdb840feb4,4268928,0,0x0,8
tick,0x7ffdb840feb4,4284330,0,0x0,8
tick,0x7ffdb840feb4,4299779,0,0x0,8
tick,0x7ffdb840feb4,4315015,0,0x0,8
tick,0x7ffdb840feb4,4330145,0,0x0,8
tick,0x7ffdb840feb4,4345697,0,0x0,8
tick,0x7ffdb840feb4,4360992,0,0x0,8
tick,0x7ffdb840feb4,4376236,0,0x0,8
tick,0x7ffdb840feb4,4391687,0,0x0,8
tick,0x7ffdb840feb4,4407533,0,0x0,8
tick,0x7ffdb840feb4,4423250,0,0x0,8
tick,0x7ffdb840feb4,4438755,0,0x0,8
tick,0x7ffdb840feb4,4453779,0,0x0,8
tick,0x7ffdb840feb4,4469141,0,0x0,8
tick,0x7ffdb840feb4,4484847,0,0x0,8
tick,0x7ffdb840feb4,4499682,0,0x0,8
tick,0x7ffdb840feb4,4515913,0,0x0,8
tick,0x7ffdb840feb4,4531393,0,0x0,8
tick,0x7ffdb840feb4,4546659,0,0x0,8
tick,0x7ffdb840feb4,4562197,0,0x0,8
tick,0x7ffdb840feb4,4577744,0,0x0,8
tick,0x7ffdb840feb4,4594177,0,0x0,8
tick,0x7ffdb840feb4,4609717,0,0x0,8
tick,0x7ffdb840feb4,4625846,0,0x0,8
tick,0x7ffdb840feb4,4641455,0,0x0,8
tick,0x7ffdb840feb4,4656877,0,0x0,8
tick,0x7ffdb840feb4,4672602,0,0x0,8
tick,0x7ffdb840feb4,4687837,0,0x0,8
tick,0x7ffdb840feb4,4703322,0,0x0,8
tick,0x7ffdb840feb4,4718963,0,0x0,8
tick,0x7ffdb840feb4,4734507,0,0x0,8
tick,0x7ffdb840feb4,4750466,0,0x0,8
tick,0x7ffdb840feb4,4766503,0,0x0,8
tick,0x7ffdb840feb4,4781968,0,0x0,8
tick,0x7ffdb840feb4,4797367,0,0x0,8
tick,0x7ffdb840feb4,4812855,0,0x0,8
tick,0x7ffdb840feb4,4828207,0,0x0,8
tick,0x7ffdb840feb4,4843747,0,0x0,8
tick,0x7ffdb840feb4,4859213,0,0x0,8
tick,0x7ffdb840feb4,4875022,0,0x0,8
tick,0x7ffdb840feb4,4891163,0,0x0,8
tick,0x7ffdb840feb4,4906775,0,0x0,8
tick,0x7ffdb840feb4,4922318,0,0x0,8
tick,0x7ffdb840feb4,4937747,0,0x0,8
tick,0x7ffdb840feb4,4953285,0,0x0,8
tick,0x7ffdb840feb4,4969591,0,0x0,8
tick,0x7ffdb840feb4,4985632,0,0x0,8
tick,0x7ffdb840feb4,5002097,0,0x0,8
tick,0x7ffdb840feb4,5017782,0,0x0,8
tick,0x7ffdb840feb4,5034126,0,0x0,8
tick,0x7ffdb840feb4,5049632,0,0x0,8
tick,0x7ffdb840feb4,5065164,0,0x0,8
tick,0x7ffdb840feb4,5080615,0,0x0,8
tick,0x7ffdb840feb4,5096815,0,0x0,8
tick,0x7ffdb840feb4,5112355,0,0x0,8
tick,0x7ffdb840feb4,5128109,0,0x0,8
tick,0x7ffdb840feb4,5144189,0,0x0,8
tick,0x7ffdb840feb4,5159602,0,0x0,8
tick,0x7ffdb840feb4,5175571,0,0x0,8
tick,0x7ffdb840feb4,5191698,0,0x0,8
tick,0x7ffdb840feb4,5207566,0,0x0,8
tick,0x7ffdb840feb4,5222653,0,0x0,8
tick,0x7ffdb840feb4,5237873,0,0x0,8
tick,0x7ffdb840feb4,5253143,0,0x0,8
tick,0x7ffdb840feb4,5268587,0,0x0,8
tick,0x7ffdb840feb4,5283909,0,0x0,8
tick,0x7ffdb840feb4,5299269,0,0x0,8
tick,0x7ffdb840feb4,5315185,0,0x0,8
tick,0x7ffdb840feb4,5330794,0,0x0,8
tick,0x7ffdb840feb4,5346455,0,0x0,8
tick,0x7ffdb840feb4,5361668,0,0x0,8
tick,0x7ffdb840feb4,5376702,0,0x0,8
tick,0x7ffdb840feb4,5392752,0,0x0,8
tick,0x7ffdb840feb4,5408809,0,0x0,8
tick,0x7ffdb840feb4,5424669,0,0x0,8
tick,0x7ffdb840feb4,5439925,0,0x0,8
tick,0x7ffdb840feb4,5454946,0,0x0,8
tick,0x7ffdb840feb4,5471138,0,0x0,8
tick,0x7ffdb840feb4,5486799,0,0x0,8
tick,0x7ffdb840feb4,5502390,0,0x0,8
tick,0x7ffdb840feb4,5518805,0,0x0,8
tick,0x7ffdb840feb4,5534457,0,0x0,8
tick,0x7ffdb840feb4,5549796,0,0x0,8
tick,0x7ffdb840feb4,5564707,0,0x0,8
tick,0x7ffdb840feb4,5580367,0,0x0,8
tick,0x7ffdb840feb4,5596173,0,0x0,8
tick,0x7ffdb840feb4,5612564,0,0x0,8
tick,0x7ffdb840feb4,5628986,0,0x0,8
tick,0x7ffdb840feb4,5644675,0,0x0,8
tick,0x7ffdb840feb4,5660337,0,0x0,8
tick,0x7ffdb840feb4,5675696,0,0x0,8
tick,0x7ffdb840feb4,5691368,0,0x0,8
tick,0x7ffdb840feb4,5706219,0,0x0,8
tick,0x7ffdb840feb4,5721713,0,0x0,8
tick,0x7ffdb840feb4,5737381,0,0x0,8
tick,0x7ffdb840feb4,5752540,0,0x0,8
tick,0x7ffdb840feb4,5768485,0,0x0,8
tick,0x7ffdb840feb4,5784222,0,0x0,8
tick,0x7ffdb840feb4,5799541,0,0x0,8
tick,0x7ffdb840feb4,5814778,0,0x0,8
tick,0x7ffdb840feb4,5830429,0,0x0,8
tick,0x7ffdb840feb4,5846410,0,0x0,8
tick,0x7ffdb840feb4,5862346,0,0x0,8
tick,0x7ffdb840feb4,5878049,0,0x0,8
tick,0x7ffdb840feb4,5894039,0,0x0,8
tick,0x7ffdb840feb4,5910220,0,0x0,8
tick,0x7ffdb840feb4,5926058,0,0x0,8
tick,0x7ffdb840feb4,5942049,0,0x0,8
tick,0x7ffdb840feb4,5957957,0,0x0,8
tick,0x7ffdb840feb4,5972922,0,0x0,8
tick,0x7ffdb840feb4,5988821,0,0x0,8
tick,0x7ffdb840feb4,6003942,0,0x0,8
tick,0x7ffdb840feb4,6019930,0,0x0,8
tick,0x7ffdb840feb4,6035844,0,0x0,8
tick,0x7ffdb840feb4,6051862,0,0x0,8
tick,0x7ffdb840feb4,6067276,0,0x0,8
tick,0x7ffdb840feb4,6082956,0,0x0,8
tick,0x7ffdb840feb4,6098938,0,0x0,8
tick,0x7ffdb840feb4,6114929,0,0x0,8
tick,0x7ffdb840feb4,6130968,0,0x0,8
tick,0x7ffdb840feb4,6146945,0,0x0,8
tick,0x7ffdb840feb4,6162947,0,0x0,8
tick,0x7ffdb840feb4,6178939,0,0x0,8
tick,0x7ffdb840feb4,6193944,0,0x0,8
tick,0x7ffdb840feb4,6208952,0,0x0,8
tick,0x7ffdb840feb4,6224946,0,0x0,8
tick,0x7ffdb840feb4,6240953,0,0x0,8
tick,0x7ffdb840feb4,6256953,0,0x0,8
tick,0x7ffdb840feb4,6272948,0,0x0,8
tick,0x7ffdb840feb4,6288948,0,0x0,8
tick,0x7ffdb840feb4,6304250,0,0x0,8
tick,0x7ffdb840feb4,6320253,0,0x0,8
tick,0x7ffdb840feb4,6336258,0,0x0,8
tick,0x7ffdb840feb4,6352000,0,0x0,8
tick,0x7ffdb840feb4,6367955,0,0x0,8
tick,0x7ffdb840feb4,6383957,0,0x0,8
tick,0x7ffdb840feb4,6399546,0,0x0,8
tick,0x7ffdb840feb4,6415560,0,0x0,8
tick,0x7ffdb840feb4,6430854,0,0x0,8
tick,0x7ffdb840feb4,6446127,0,0x0,8
tick,0x7ffdb840feb4,6461971,0,0x0,8
tick,0x7ffdb840feb4,6476960,0,0x0,8
tick,0x7ffdb840feb4,6492962,0,0x0,8
tick,0x7ffdb840feb4,6508718,0,0x0,8
tick,0x7ffdb840feb4,6523964,0,0x0,8
tick,0x7ffdb840feb4,6539969,0,0x0,8
tick,0x7ffdb840feb4,6555650,0,0x0,8
tick,0x7ffdb840feb4,6570973,0,0x0,8
tick,0x7ffdb840feb4,6586030,0,0x0,8
tick,0x7ffdb840feb4,6602369,0,0x0,8
tick,0x7ffdb840feb4,6618209,0,0x0,8
tick,0x7ffdb840feb4,6634029,0,0x0,8
tick,0x7ffdb840feb4,6649530,0,0x0,8
tick,0x7ffdb840feb4,6665062,0,0x0,8
tick,0x7ffdb840feb4,6680069,0,0x0,8
tick,0x7ffdb840feb4,6695458,0,0x0,8
tick,0x7ffdb840feb4,6711601,0,0x0,8
tick,0x7ffdb840feb4,6727192,0,0x0,8
tick,0x7ffdb840feb4,6742346,0,0x0,8
tick,0x7ffdb840feb4,6758248,0,0x0,8
tick,0x7ffdb840feb4,6773159,0,0x0,8
tick,0x7ffdb840feb4,6789181,0,0x0,8
tick,0x7ffdb840feb4,6804038,0,0x0,8
tick,0x7ffdb840feb4,6820204,0,0x0,8
tick,0x7ffdb840feb4,6836158,0,0x0,8
tick,0x7ffdb840feb4,6852282,0,0x0,8
tick,0x7ffdb840feb4,6868580,0,0x0,8
tick,0x7ffdb840feb4,6884564,0,0x0,8
tick,0x7ffdb840feb4,6899221,0,0x0,8
tick,0x7ffdb840feb4,6915229,0,0x0,8
tick,0x7ffdb840feb4,6931063,0,0x0,8
tick,0x7ffdb840feb4,6947163,0,0x0,8
tick,0x7ffdb840feb4,6963174,0,0x0,8
tick,0x7ffdb840feb4,6979165,0,0x0,8
tick,0x7ffdb840feb4,6995037,0,0x0,8
tick,0x7ffdb840feb4,7010193,0,0x0,8
tick,0x7ffdb840feb4,7025691,0,0x0,8
tick,0x7ffdb840feb4,7041973,0,0x0,8
tick,0x7ffdb840feb4,7057220,0,0x0,8
tick,0x7ffdb840feb4,7073214,0,0x0,8
tick,0x7ffdb840feb4,7088180,0,0x0,8
tick,0x7ffdb840feb4,7104058,0,0x0,8
tick,0x7ffdb840feb4,7118952,0,0x0,8
tick,0x7ffdb840feb4,7135215,0,0x0,8
tick,0x7ffdb840feb4,7151541,0,0x0,8
tick,0x7ffdb840feb4,7167083,0,0x0,8
tick,0x7ffdb840feb4,7183069,0,0x0,8
tick,0x7ffdb840feb4,7199079,0,0x0,8
tick,0x7ffdb840feb4,7215071,0,0x0,8
tick,0x7ffdb840feb4,7231073,0,0x0,8
tick,0x7ffdb840feb4,7247068,0,0x0,8
tick,0x7ffdb840feb4,7263066,0,0x0,8
tick,0x7ffdb840feb4,7279066,0,0x0,8
tick,0x7ffdb840feb4,7295072,0,0x0,8
tick,0x7ffdb840feb4,7311069,0,0x0,8
tick,0x7ffdb840feb4,7326295,0,0x0,8
tick,0x7ffdb840feb4,7342089,0,0x0,8
tick,0x7ffdb840feb4,7357084,0,0x0,8
tick,0x7ffdb840feb4,7372085,0,0x0,8
tick,0x7ffdb840feb4,7388085,0,0x0,8
tick,0x7ffdb840feb4,7403089,0,0x0,8
tick,0x7ffdb840feb4,7419092,0,0x0,8
tick,0x7ffdb840feb4,7435077,0,0x0,8
tick,0x7ffdb840feb4,7451080,0,0x0,8
tick,0x7ffdb840feb4,7467094,0,0x0,8
tick,0x7ffdb840feb4,7482402,0,0x0,8
tick,0x7ffdb840feb4,7498109,0,0x0,8
tick,0x7ffdb840feb4,7513113,0,0x0,8
tick,0x7ffdb840feb4,7528409,0,0x0,8
tick,0x7ffdb840feb4,7544099,0,0x0,8
tick,0x7ffdb840feb4,7559108,0,0x0,8
tick,0x7ffdb840feb4,7575110,0,0x0,8
tick,0x7ffdb840feb4,7590404,0,0x0,8
tick,0x7ffdb840feb4,7606108,0,0x0,8
tick,0x7ffdb840feb4,7621350,0,0x0,8
tick,0x7ffdb840feb4,7637111,0,0x0,8
tick,0x7ffdb840feb4,7652578,0,0x0,8
tick,0x7ffdb840feb4,7667915,0,0x0,8
tick,0x7ffdb840feb4,7683917,0,0x0,8
tick,0x7ffdb840feb4,7699920,0,0x0,8
tick,0x7ffdb840feb4,7715261,0,0x0,8
tick,0x7ffdb840feb4,7730598,0,0x0,8
tick,0x7ffdb840feb4,7746182,0,0x0,8
tick,0x7ffdb840feb4,7761347,0,0x0,8
tick,0x7ffdb840feb4,7777509,0,0x0,8
tick,0x7ffdb840feb4,7793327,0,0x0,8
tick,0x7ffdb840feb4,7808906,0,0x0,8
tick,0x7ffdb840feb4,7824579,0,0x0,8
tick,0x7ffdb840feb4,7840368,0,0x0,8
tick,0x7ffdb840feb4,7856470,0,0x0,8
tick,0x7ffdb840feb4,7872119,0,0x0,8
tick,0x7ffdb840feb4,7887987,0,0x0,8
tick,0x7ffdb840feb4,7903142,0,0x0,8
tick,0x7ffdb840feb4,7918357,0,0x0,8
tick,0x7ffdb840feb4,7933462,0,0x0,8
tick,0x7ffdb840feb4,7948701,0,0x0,8
tick,0x7ffdb840feb4,7964178,0,0x0,8
tick,0x7ffdb840feb4,7980377,0,0x0,8
tick,0x7ffdb840feb4,7996300,0,0x0,8
tick,0x7ffdb840feb4,8012167,0,0x0,8
tick,0x7ffdb840feb4,8027298,0,0x0,8
tick,0x7ffdb840feb4,8043472,0,0x0,8
tick,0x7ffdb840feb4,8058486,0,0x0,8
tick,0x7ffdb840feb4,8073798,0,0x0,8
tick,0x7ffdb840feb4,8089697,0,0x0,8
tick,0x7ffdb840feb4,8104512,0,0x0,8
tick,0x7ffdb840feb4,8120432,0,0x0,8
tick,0x7ffdb840feb4,8136479,0,0x0,8
tick,0x7ffdb840feb4,8151502,0,0x0,8
tick,0x7ffdb840feb4,8167426,0,0x0,8
tick,0x7ffdb840feb4,8182401,0,0x0,8
tick,0x7ffdb840feb4,8198397,0,0x0,8
tick,0x7ffdb840feb4,8214402,0,0x0,8
tick,0x7ffdb840feb4,8230403,0,0x0,8
tick,0x7ffdb840feb4,8246001,0,0x0,8
tick,0x7ffdb840feb4,8261007,0,0x0,8
tick,0x7ffdb840feb4,8276396,0,0x0,8
tick,0x7ffdb840feb4,8292113,0,0x0,8
tick,0x7ffdb840feb4,8307110,0,0x0,8
tick,0x7ffdb840feb4,8323129,0,0x0,8
tick,0x7ffdb840feb4,8338008,0,0x0,8
tick,0x7ffdb840feb4,8353838,0,0x0,8
tick,0x7ffdb840feb4,8369591,0,0x0,8
tick,0x7ffdb840feb4,8384778,0,0x0,8
tick,0x7ffdb840feb4,8400383,0,0x0,8
tick,0x7ffdb840feb4,8415597,0,0x0,8
tick,0x7ffdb840feb4,8431767,0,0x0,8
tick,0x7ffdb840feb4,8447712,0,0x0,8
tick,0x7ffdb840feb4,8463178,0,0x0,8
tick,0x7ffdb840feb4,8478562,0,0x0,8
tick,0x7ffdb840feb4,8494456,0,0x0,8
tick,0x7ffdb840feb4,8510657,0,0x0,8
tick,0x7ffdb840feb4,8526607,0,0x0,8
tick,0x7ffdb840feb4,8541780,0,0x0,8
tick,0x7ffdb840feb4,8557768,0,0x0,8
tick,0x7ffdb840feb4,8572854,0,0x0,8
tick,0x7ffdb840feb4,8588259,0,0x0,8
tick,0x7ffdb840feb4,8603999,0,0x0,8
tick,0x7ffdb840feb4,8618855,0,0x0,8
tick,0x7ffdb840feb4,8635286,0,0x0,8
tick,0x7ffdb840feb4,8650940,0,0x0,8
tick,0x7ffdb840feb4,8666945,0,0x0,8
tick,0x7ffdb840feb4,8683356,0,0x0,8
tick,0x7ffdb840feb4,8698665,0,0x0,8
tick,0x7ffdb840feb4,8714041,0,0x0,8
tick,0x7ffdb840feb4,8729579,0,0x0,8
tick,0x7ffdb840feb4,8746041,0,0x0,8
tick,0x7ffdb840feb4,8761303,0,0x0,8
tick,0x7ffdb840feb4,8777162,0,0x0,8
tick,0x7ffdb840feb4,8792342,0,0x0,8
tick,0x7ffdb840feb4,8807323,0,0x0,8
tick,0x7ffdb840feb4,8823066,0,0x0,8
tick,0x7ffdb840feb4,8838246,0,0x0,8
tick,0x7ffdb840feb4,8853247,0,0x0,8
tick,0x7ffdb840feb4,8868941,0,0x0,8
tick,0x7ffdb840feb4,8884940,0,0x0,8
tick,0x7ffdb840feb4,8900398,0,0x0,8
tick,0x7ffdb840feb4,8916097,0,0x0,8
tick,0x7ffdb840feb4,8931278,0,0x0,8
tick,0x7ffdb840feb4,8947165,0,0x0,8
tick,0x7ffdb840feb4,8962229,0,0x0,8
tick,0x7ffdb840feb4,8977390,0,0x0,8
tick,0x7ffdb840feb4,8993664,0,0x0,8
tick,0x7ffdb840feb4,9009407,0,0x0,8
tick,0x7ffdb840feb4,9024788,0,0x0,8
tick,0x7ffdb840feb4,9040194,0,0x0,8
tick,0x7ffdb840feb4,9055621,0,0x0,8
tick,0x7ffdb840feb4,9071921,0,0x0,8
tick,0x7ffdb840feb4,9088052,0,0x0,8
tick,0x7ffdb840feb4,9103740,0,0x0,8
tick,0x7ffdb840feb4,9119526,0,0x0,8
tick,0x7ffdb840feb4,9134490,0,0x0,8
tick,0x7ffdb840feb4,9149792,0,0x0,8
tick,0x7ffdb840feb4,9165450,0,0x0,8
tick,0x7ffdb840feb4,9181535,0,0x0,8
tick,0x7ffdb840feb4,9197388,0,0x0,8
tick,0x7ffdb840feb4,9213380,0,0x0,8
tick,0x7ffdb840feb4,9229519,0,0x0,8
tick,0x7ffdb840feb4,9245554,0,0x0,8
tick,0x7ffdb840feb4,9260929,0,0x0,8
tick,0x7ffdb840feb4,9276459,0,0x0,8
tick,0x7ffdb840feb4,9292433,0,0x0,8
tick,0x7ffdb840feb4,9308387,0,0x0,8
tick,0x7ffdb840feb4,9324376,0,0x0,8
tick,0x7ffdb840feb4,9340374,0,0x0,8
tick,0x7ffdb840feb4,9356373,0,0x0,8
tick,0x7ffdb840feb4,9372383,0,0x0,8
tick,0x7ffdb840feb4,9388424,0,0x0,8
tick,0x7ffdb840feb4,9404398,0,0x0,8
tick,0x7ffdb840feb4,9420257,0,0x0,8
tick,0x7ffdb840feb4,9436065,0,0x0,8
tick,0x7ffdb840feb4,9451305,0,0x0,8
tick,0x7ffdb840feb4,9466308,0,0x0,8
tick,0x7ffdb840feb4,9482295,0,0x0,8
tick,0x7ffdb840feb4,9498307,0,0x0,8
tick,0x7ffdb840feb4,9513474,0,0x0,8
tick,0x7ffdb840feb4,9529166,0,0x0,8
tick,0x7ffdb840feb4,9544471,0,0x0,8
tick,0x7ffdb840feb4,9559990,0,0x0,8
tick,0x7ffdb840feb4,9576001,0,0x0,8
tick,0x7ffdb840feb4,9591817,0,0x0,8
tick,0x7ffdb840feb4,9607002,0,0x0,8
tick,0x7ffdb840feb4,9621984,0,0x0,8
tick,0x7ffdb840feb4,9637694,0,0x0,8
tick,0x7ffdb840feb4,9652941,0,0x0,8
tick,0x7ffdb840feb4,9668625,0,0x0,8
tick,0x7ffdb840feb4,9683882,0,0x0,8
tick,0x7ffdb840feb4,9699628,0,0x0,8
tick,0x7ffdb840feb4,9714626,0,0x0,8
tick,0x7ffdb840feb4,9730648,0,0x0,8
tick,0x7ffdb840feb4,9746652,0,0x0,8
tick,0x7ffdb840feb4,9762637,0,0x0,8
tick,0x7ffdb840feb4,9778020,0,0x0,8
tick,0x7ffdb840feb4,9793500,0,0x0,8
tick,0x7ffdb840feb4,9808677,0,0x0,8
tick,0x7ffdb840feb4,9824433,0,0x0,8
tick,0x7ffdb840feb4,9839527,0,0x0,8
tick,0x7ffdb840feb4,9855447,0,0x0,8
tick,0x7ffdb840feb4,9870369,0,0x0,8
tick,0x7ffdb840feb4,9885777,0,0x0,8
tick,0x7ffdb840feb4,9901078,0,0x0,8
tick,0x7ffdb840feb4,9916681,0,0x0,8
tick,0x7ffdb840feb4,9931652,0,0x0,8
tick,0x7ffdb840feb4,9946770,0,0x0,8
tick,0x7ffdb840feb4,9962775,0,0x0,8
tick,0x7ffdb840feb4,9978777,0,0x0,8
tick,0x7ffdb840feb4,9994195,0,0x0,8
tick,0x7ffdb840feb4,10009711,0,0x0,8
tick,0x7ffdb840feb4,10025705,0,0x0,8
tick,0x7ffdb840feb4,10041533,0,0x0,8
tick,0x7ffdb840feb4,10057387,0,0x0,8
tick,0x7ffdb840feb4,10072606,0,0x0,8
tick,0x7ffdb840feb4,10088155,0,0x0,8
tick,0x7ffdb840feb4,10103559,0,0x0,8
tick,0x7ffdb840feb4,10119084,0,0x0,8
tick,0x7ffdb840feb4,10135078,0,0x0,8
tick,0x7ffdb840feb4,10150819,0,0x0,8
tick,0x7ffdb840feb4,10166078,0,0x0,8
tick,0x7ffdb840feb4,10181148,0,0x0,8
tick,0x7ffdb840feb4,10197146,0,0x0,8
tick,0x7ffdb840feb4,10212158,0,0x0,8
tick,0x7ffdb840feb4,10227145,0,0x0,8
tick,0x7ffdb840feb4,10243162,0,0x0,8
tick,0x7ffdb840feb4,10258555,0,0x0,8
tick,0x7ffdb840feb4,10274557,0,0x0,8
tick,0x7ffdb840feb4,10290147,0,0x0,8
tick,0x7ffdb840feb4,10305572,0,0x0,8
tick,0x7ffdb840feb4,10321566,0,0x0,8
tick,0x7ffdb840feb4,10337567,0,0x0,8
tick,0x7ffdb840feb4,10353569,0,0x0,8
tick,0x7ffdb840feb4,10369571,0,0x0,8
tick,0x7ffdb840feb4,10385579,0,0x0,8
tick,0x7ffdb840feb4,10401594,0,0x0,8
tick,0x7ffdb840feb4,10417379,0,0x0,8
tick,0x7ffdb840feb4,10432577,0,0x0,8
tick,0x7ffdb840feb4,10448211,0,0x0,8
tick,0x7ffdb840feb4,10463600,0,0x0,8
tick,0x7ffdb840feb4,10478580,0,0x0,8
tick,0x7ffdb840feb4,10494143,0,0x0,8
tick,0x7ffdb840feb4,10510168,0,0x0,8
tick,0x7ffdb840feb4,10526154,0,0x0,8
tick,0x7ffdb840feb4,10541595,0,0x0,8
tick,0x7ffdb840feb4,10557566,0,0x0,8
tick,0x7ffdb840feb4,10572555,0,0x0,8
tick,0x7ffdb840feb4,10587675,0,0x0,8
tick,0x7ffdb840feb4,10603345,0,0x0,8
tick,0x7ffdb840feb4,10619373,0,0x0,8
tick,0x7ffdb840feb4,10634614,0,0x0,8
tick,0x7ffdb840feb4,10650611,0,0x0,8
tick,0x7ffdb840feb4,10665847,0,0x0,8
tick,0x7ffdb840feb4,10681546,0,0x0,8
tick,0x7ffdb840feb4,10696498,0,0x0,8
tick,0x7ffdb840feb4,10711577,0,0x0,8
tick,0x7ffdb840feb4,10727157,0,0x0,8
tick,0x7ffdb840feb4,10743153,0,0x0,8
tick,0x7ffdb840feb4,10758624,0,0x0,8
tick,0x7ffdb840feb4,10774628,0,0x0,8
tick,0x7ffdb840feb4,10790624,0,0x0,8
tick,0x7ffdb840feb4,10806639,0,0x0,8
tick,0x7ffdb840feb4,10822563,0,0x0,8
tick,0x7ffdb840feb4,10838642,0,0x0,8
tick,0x7ffdb840feb4,10854156,0,0x0,8
tick,0x7ffdb840feb4,10869647,0,0x0,8
tick,0x7ffdb840feb4,10884630,0,0x0,8
tick,0x7ffdb840feb4,10899847,0,0x0,8
tick,0x7ffdb840feb4,10915517,0,0x0,8
tick,0x7ffdb840feb4,10930558,0,0x0,8
tick,0x7ffdb840feb4,10946511,0,0x0,8
tick,0x7ffdb840feb4,10961515,0,0x0,8
tick,0x7ffdb840feb4,10976644,0,0x0,8
tick,0x7ffdb840feb4,10992590,0,0x0,8
tick,0x7ffdb840feb4,11007846,0,0x0,8
tick,0x7ffdb840feb4,11022571,0,0x0,8
tick,0x7ffdb840feb4,11037503,0,0x0,8
tick,0x7ffdb840feb4,11052576,0,0x0,8
tick,0x7ffdb840feb4,11068584,0,0x0,8
tick,0x7ffdb840feb4,11084662,0,0x0,8
tick,0x7ffdb840feb4,11100737,0,0x0,8
tick,0x7ffdb840feb4,11115614,0,0x0,8
tick,0x7ffdb840feb4,11131545,0,0x0,8
tick,0x7ffdb840feb4,11146584,0,0x0,8
tick,0x7ffdb840feb4,11162594,0,0x0,8
tick,0x7ffdb840feb4,11177727,0,0x0,8
tick,0x7ffdb840feb4,11192587,0,0x0,8
tick,0x7ffdb840feb4,11207581,0,0x0,8
tick,0x7ffdb840feb4,11223592,0,0x0,8
tick,0x7ffdb840feb4,11238597,0,0x0,8
tick,0x7ffdb840feb4,11254599,0,0x0,8
tick,0x7ffdb840feb4,11270613,0,0x0,8
tick,0x7ffdb840feb4,11286612,0,0x0,8
tick,0x7ffdb840feb4,11302611,0,0x0,8
tick,0x7ffdb840feb4,11318694,0,0x0,8
tick,0x7ffdb840feb4,11334694,0,0x0,8
tick,0x7ffdb840feb4,11350687,0,0x0,8
tick,0x7ffdb840feb4,11365698,0,0x0,8
tick,0x7ffdb840feb4,11381545,0,0x0,8
tick,0x7ffdb840feb4,11397376,0,0x0,8
tick,0x7ffdb840feb4,11412600,0,0x0,8
tick,0x7ffdb840feb4,11427654,0,0x0,8
tick,0x7ffdb840feb4,11443735,0,0x0,8
tick,0x7ffdb840feb4,11459716,0,0x0,8
tick,0x7ffdb840feb4,11474937,0,0x0,8
tick,0x7ffdb840feb4,11490726,0,0x0,8
tick,0x7ffdb840feb4,11505727,0,0x0,8
tick,0x7ffdb840feb4,11521735,0,0x0,8
tick,0x7ffdb840feb4,11537719,0,0x0,8
tick,0x7ffdb840feb4,11553615,0,0x0,8
tick,0x7ffdb840feb4,11569715,0,0x0,8
tick,0x7ffdb840feb4,11584903,0,0x0,8
tick,0x7ffdb840feb4,11600920,0,0x0,8
tick,0x7ffdb840feb4,11616502,0,0x0,8
tick,0x7ffdb840feb4,11631622,0,0x0,8
tick,0x7ffdb840feb4,11647710,0,0x0,8
tick,0x7ffdb840feb4,11662611,0,0x0,8
tick,0x7ffdb840feb4,11678715,0,0x0,8
tick,0x7ffdb840feb4,11694726,0,0x0,8
tick,0x7ffdb840feb4,11710634,0,0x0,8
tick,0x7ffdb840feb4,11725043,0,0x0,8
tick,0x7ffdb840feb4,11740300,0,0x0,8
tick,0x7ffdb840feb4,11755745,0,0x0,8
tick,0x7ffdb840feb4,11771736,0,0x0,8
tick,0x7ffdb840feb4,11787744,0,0x0,8
tick,0x7ffdb840feb4,11803748,0,0x0,8
tick,0x7ffdb840feb4,11819708,0,0x0,8
tick,0x7ffdb840feb4,11834771,0,0x0,8
tick,0x7ffdb840feb4,11849754,0,0x0,8
tick,0x7ffdb840feb4,11864757,0,0x0,8
tick,0x7ffdb840feb4,11880755,0,0x0,8
tick,0x7ffdb840feb4,11895637,0,0x0,8
tick,0x7ffdb840feb4,11911753,0,0x0,8
tick,0x7ffdb840feb4,11927763,0,0x0,8
tick,0x7ffdb840feb4,11943639,0,0x0,8
tick,0x7ffdb840feb4,11959016,0,0x0,8
tick,0x7ffdb840feb4,11974754,0,0x0,8
tick,0x7ffdb840feb4,11990447,0,0x0,8
tick,0x7ffdb840feb4,12005773,0,0x0,8
tick,0x7ffdb840feb4,12020659,0,0x0,8
tick,0x7ffdb840feb4,12035907,0,0x0,8
tick,0x7ffdb840feb4,12051651,0,0x0,8
tick,0x7ffdb840feb4,12067607,0,0x0,8
tick,0x7ffdb840feb4,12083593,0,0x0,8
tick,0x7ffdb840feb4,12098792,0,0x0,8
tick,0x7ffdb840feb4,12113613,0,0x0,8
tick,0x7ffdb840feb4,12128785,0,0x0,8
tick,0x7ffdb840feb4,12144787,0,0x0,8
tick,0x7ffdb840feb4,12159802,0,0x0,8
tick,0x7ffdb840feb4,12175780,0,0x0,8
tick,0x7ffdb840feb4,12191053,0,0x0,8
tick,0x7ffdb840feb4,12206789,0,0x0,8
tick,0x7ffdb840feb4,12222606,0,0x0,8
tick,0x7ffdb840feb4,12238611,0,0x0,8
tick,0x7ffdb840feb4,12254627,0,0x0,8
tick,0x7ffdb840feb4,12270620,0,0x0,8
tick,0x7ffdb840feb4,12285800,0,0x0,8
tick,0x7ffdb840feb4,12300754,0,0x0,8
tick,0x7ffdb840feb4,12315947,0,0x0,8
tick,0x7ffdb840feb4,12331421,0,0x0,8
tick,0x7ffdb840feb4,12346618,0,0x0,8
tick,0x7ffdb840feb4,12362637,0,0x0,8
tick,0x7ffdb840feb4,12378741,0,0x0,8
tick,0x7ffdb840feb4,12394809,0,0x0,8
tick,0x7ffdb840feb4,12410391,0,0x0,8
tick,0x7ffdb840feb4,12426223,0,0x0,8
tick,0x7ffdb840feb4,12441370,0,0x0,8
tick,0x7ffdb840feb4,12456648,0,0x0,8
tick,0x7ffdb840feb4,12472648,0,0x0,8
tick,0x7ffdb840feb4,12487828,0,0x0,8
tick,0x7ffdb840feb4,12502823,0,0x0,8
tick,0x7ffdb840feb4,12519024,0,0x0,8
tick,0x7ffdb840feb4,12534080,0,0x0,8
tick,0x7ffdb840feb4,12549789,0,0x0,8
tick,0x7ffdb840feb4,12565465,0,0x0,8
tick,0x7ffdb840feb4,12580169,0,0x0,8
tick,0x7ffdb840feb4,12595688,0,0x0,8
tick,0x7ffdb840feb4,12611005,0,0x0,8
tick,0x7ffdb840feb4,12626008,0,0x0,8
tick,0x7ffdb840feb4,12641682,0,0x0,8
tick,0x7ffdb840feb4,12657117,0,0x0,8
tick,0x7ffdb840feb4,12672852,0,0x0,8
tick,0x7ffdb840feb4,12688872,0,0x0,8
tick,0x7ffdb840feb4,12704847,0,0x0,8
tick,0x7ffdb840feb4,12720090,0,0x0,8
tick,0x7ffdb840feb4,12734850,0,0x0,8
tick,0x7ffdb840feb4,12750862,0,0x0,8
tick,0x7ffdb840feb4,12766276,0,0x0,8
tick,0x7ffdb840feb4,12781846,0,0x0,8
tick,0x7ffdb840feb4,12797690,0,0x0,8
tick,0x7ffdb840feb4,12812861,0,0x0,8
tick,0x7ffdb840feb4,12828891,0,0x0,8
tick,0x7ffdb840feb4,12843702,0,0x0,8
tick,0x7ffdb840feb4,12859914,0,0x0,8
tick,0x7ffdb840feb4,12875495,0,0x0,8
tick,0x7ffdb840feb4,12891438,0,0x0,8
tick,0x7ffdb840feb4,12906037,0,0x0,8
tick,0x7ffdb840feb4,12921733,0,0x0,8
tick,0x7ffdb840feb4,12937343,0,0x0,8
tick,0x7ffdb840feb4,12952890,0,0x0,8
tick,0x7ffdb840feb4,12968881,0,0x0,8
tick,0x7ffdb840feb4,12983883,0,0x0,8
tick,0x7ffdb840feb4,12999711,0,0x0,8
tick,0x7ffdb840feb4,13014887,0,0x0,8
tick,0x7ffdb840feb4,13030752,0,0x0,8
tick,0x7ffdb840feb4,13046037,0,0x0,8
tick,0x7ffdb840feb4,13061524,0,0x0,8
tick,0x7ffdb840feb4,13077067,0,0x0,8
tick,0x7ffdb840feb4,13092711,0,0x0,8
tick,0x7ffdb840feb4,13108884,0,0x0,8
tick,0x7ffdb840feb4,13123727,0,0x0,8
tick,0x7ffdb840feb4,13138923,0,0x0,8
tick,0x7ffdb840feb4,13155010,0,0x0,8
tick,0x7ffdb840feb4,13170540,0,0x0,8
tick,0x7ffdb840feb4,13185367,0,0x0,8
tick,0x7ffdb840feb4,13200920,0,0x0,8
tick,0x7ffdb840feb4,13216757,0,0x0,8
tick,0x7ffdb840feb4,13232768,0,0x0,8
tick,0x7ffdb840feb4,13248758,0,0x0,8
tick,0x7ffdb840feb4,13264757,0,0x0,8
tick,0x7ffdb840feb4,13280760,0,0x0,8
tick,0x7ffdb840feb4,13296776,0,0x0,8
tick,0x7ffdb840feb4,13312753,0,0x0,8
tick,0x7ffdb840feb4,13327936,0,0x0,8
tick,0x7ffdb840feb4,13343935,0,0x0,8
tick,0x7ffdb840feb4,13358942,0,0x0,8
tick,0x7ffdb840feb4,13374948,0,0x0,8
tick,0x7ffdb840feb4,13390789,0,0x0,8
tick,0x7ffdb840feb4,13405947,0,0x0,8
tick,0x7ffdb840feb4,13421947,0,0x0,8
tick,0x7ffdb840feb4,13436951,0,0x0,8
tick,0x7ffdb840feb4,13452768,0,0x0,8
tick,0x7ffdb840feb4,13467956,0,0x0,8
tick,0x7ffdb840feb4,13483783,0,0x0,8
tick,0x7ffdb840feb4,13499216,0,0x0,8
tick,0x7ffdb840feb4,13514952,0,0x0,8
tick,0x7ffdb840feb4,13530289,0,0x0,8
tick,0x7ffdb840feb4,13545951,0,0x0,8
tick,0x7ffdb840feb4,13561960,0,0x0,8
tick,0x7ffdb840feb4,13577651,0,0x0,8
tick,0x7ffdb840feb4,13592785,0,0x0,8
tick,0x7ffdb840feb4,13607786,0,0x0,8
tick,0x7ffdb840feb4,13622967,0,0x0,8
tick,0x7ffdb840feb4,13638313,0,0x0,8
tick,0x7ffdb840feb4,13653794,0,0x0,8
tick,0x7ffdb840feb4,13669792,0,0x0,8
tick,0x7ffdb840feb4,13684966,0,0x0,8
tick,0x7ffdb840feb4,13699980,0,0x0,8
tick,0x7ffdb840feb4,13715388,0,0x0,8
tick,0x7ffdb840feb4,13730550,0,0x0,8
tick,0x7ffdb840feb4,13745860,0,0x0,8
tick,0x7ffdb840feb4,13761957,0,0x0,8
tick,0x7ffdb840feb4,13777975,0,0x0,8
tick,0x7ffdb840feb4,13794007,0,0x0,8
tick,0x7ffdb840feb4,13810006,0,0x0,8
tick,0x7ffdb840feb4,13826028,0,0x0,8
tick,0x7ffdb840feb4,13842026,0,0x0,8
tick,0x7ffdb840feb4,13858036,0,0x0,8
tick,0x7ffdb840feb4,13874034,0,0x0,8
tick,0x7ffdb840feb4,13890051,0,0x0,8
tick,0x7ffdb840feb4,13906030,0,0x0,8
tick,0x7ffdb840feb4,13922047,0,0x0,8
tick,0x7ffdb840feb4,13938193,0,0x0,8
tick,0x7ffdb840feb4,13954193,0,0x0,8
tick,0x7ffdb840feb4,13970191,0,0x0,8
tick,0x7ffdb840feb4,13986008,0,0x0,8
tick,0x7ffdb840feb4,14002027,0,0x0,8
tick,0x7ffdb840feb4,14018056,0,0x0,8
tick,0x7ffdb840feb4,14033852,0,0x0,8
tick,0x7ffdb840feb4,14049190,0,0x0,8
tick,0x7ffdb840feb4,14065038,0,0x0,8
tick,0x7ffdb840feb4,14079910,0,0x0,8
tick,0x7ffdb840feb4,14095368,0,0x0,8
tick,0x7ffdb840feb4,14110536,0,0x0,8
tick,0x7ffdb840feb4,14126530,0,0x0,8
tick,0x7ffdb840feb4,14142537,0,0x0,8
tick,0x7ffdb840feb4,14158550,0,0x0,8
tick,0x7ffdb840feb4,14174553,0,0x0,8
tick,0x7ffdb840feb4,14190548,0,0x0,8
tick,0x7ffdb840feb4,14206050,0,0x0,8
tick,0x7ffdb840feb4,14221559,0,0x0,8
tick,0x7ffdb840feb4,14237038,0,0x0,8
tick,0x7ffdb840feb4,14253054,0,0x0,8
tick,0x7ffdb840feb4,14269057,0,0x0,8
tick,0x7ffdb840feb4,14285056,0,0x0,8
tick,0x7ffdb840feb4,14300061,0,0x0,8
tick,0x7ffdb840feb4,14315052,0,0x0,8
tick,0x7ffdb840feb4,14330086,0,0x0,8
tick,0x7ffdb840feb4,14346051,0,0x0,8
tick,0x7ffdb840feb4,14361531,0,0x0,8
tick,0x7ffdb840feb4,14377523,0,0x0,8
tick,0x7ffdb840feb4,14392787,0,0x0,8
tick,0x7ffdb840feb4,14408059,0,0x0,8
tick,0x7ffdb840feb4,14423890,0,0x0,8
tick,0x7ffdb840feb4,14438898,0,0x0,8
tick,0x7ffdb840feb4,14454077,0,0x0,8
tick,0x7ffdb840feb4,14470084,0,0x0,8
tick,0x7ffdb840feb4,14485074,0,0x0,8
tick,0x7ffdb840feb4,14500358,0,0x0,8
tick,0x7ffdb840feb4,14515932,0,0x0,8
tick,0x7ffdb840feb4,14531672,0,0x0,8
tick,0x7ffdb840feb4,14546919,0,0x0,8
tick,0x7ffdb840feb4,14562918,0,0x0,8
tick,0x7ffdb840feb4,14577922,0,0x0,8
tick,0x7ffdb840feb4,14593079,0,0x0,8
tick,0x7ffdb840feb4,14608221,0,0x0,8
tick,0x7ffdb840feb4,14623904,0,0x0,8
tick,0x7ffdb840feb4,14639610,0,0x0,8
tick,0x7ffdb840feb4,14655085,0,0x0,8
tick,0x7ffdb840feb4,14669854,0,0x0,8
tick,0x7ffdb840feb4,14685080,0,0x0,8
tick,0x7ffdb840feb4,14701076,0,0x0,8
tick,0x7ffdb840feb4,14716086,0,0x0,8
tick,0x7ffdb840feb4,14731284,0,0x0,8
tick,0x7ffdb840feb4,14746858,0,0x0,8
tick,0x7ffdb840feb4,14761867,0,0x0,8
tick,0x7ffdb840feb4,14777093,0,0x0,8
tick,0x7ffdb840feb4,14792920,0,0x0,8
tick,0x7ffdb840feb4,14807941,0,0x0,8
tick,0x7ffdb840feb4,14822928,0,0x0,8
tick,0x7ffdb840feb4,14838271,0,0x0,8
tick,0x7ffdb840feb4,14854280,0,0x0,8
tick,0x7ffdb840feb4,14870364,0,0x0,8
tick,0x7ffdb840feb4,14886267,0,0x0,8
tick,0x7ffdb840feb4,14901419,0,0x0,8
tick,0x7ffdb840feb4,14917506,0,0x0,8
tick,0x7ffdb840feb4,14932972,0,0x0,8
tick,0x7ffdb840feb4,14948958,0,0x0,8
tick,0x7ffdb840feb4,14963964,0,0x0,8
tick,0x7ffdb840feb4,14979129,0,0x0,8
tick,0x7ffdb840feb4,14994296,0,0x0,8
tick,0x7ffdb840feb4,15010139,0,0x0,8
tick,0x7ffdb840feb4,15025099,0,0x0,8
tick,0x7ffdb840feb4,15040832,0,0x0,8
tick,0x7ffdb840feb4,15055309,0,0x0,8
tick,0x7ffdb840feb4,15071001,0,0x0,8
tick,0x7ffdb840feb4,15086125,0,0x0,8
tick,0x7ffdb840feb4,15101969,0,0x0,8
tick,0x7ffdb840feb4,15117134,0,0x0,8
tick,0x7ffdb840feb4,15133125,0,0x0,8
tick,0x7ffdb840feb4,15148175,0,0x0,8
tick,0x7ffdb840feb4,15163349,0,0x0,8
tick,0x7ffdb840feb4,15177956,0,0x0,8
tick,0x7ffdb840feb4,15193448,0,0x0,8
tick,0x7ffdb840feb4,15209295,0,0x0,8
tick,0x7ffdb840feb4,15224153,0,0x0,8
tick,0x7ffdb840feb4,15239688,0,0x0,8
tick,0x7ffdb840feb4,15254687,0,0x0,8
tick,0x7ffdb840feb4,15270688,0,0x0,8
tick,0x7ffdb840feb4,15286691,0,0x0,8
tick,0x7ffdb840feb4,15302174,0,0x0,8
tick,0x7ffdb840feb4,15317647,0,0x0,8
tick,0x7ffdb840feb4,15333179,0,0x0,8
tick,0x7ffdb840feb4,15348656,0,0x0,8
tick,0x7ffdb840feb4,15364162,0,0x0,8
tick,0x7ffdb840feb4,15379431,0,0x0,8
tick,0x7ffdb840feb4,15395049,0,0x0,8
tick,0x7ffdb840feb4,15410264,0,0x0,8
tick,0x7ffdb840feb4,15425776,0,0x0,8
tick,0x7ffdb840feb4,15441176,0,0x0,8
tick,0x7ffdb840feb4,15457176,0,0x0,8
tick,0x7ffdb840feb4,15473037,0,0x0,8
tick,0x7ffdb840feb4,15488183,0,0x0,8
tick,0x7ffdb840feb4,15503192,0,0x0,8
tick,0x7ffdb840feb4,15519194,0,0x0,8
tick,0x7ffdb840feb4,15535182,0,0x0,8
tick,0x7ffdb840feb4,15551192,0,0x0,8
tick,0x7ffdb840feb4,15567195,0,0x0,8
tick,0x7ffdb840feb4,15583029,0,0x0,8
tick,0x7ffdb840feb4,15598189,0,0x0,8
tick,0x7ffdb840feb4,15614042,0,0x0,8
tick,0x7ffdb840feb4,15630048,0,0x0,8
tick,0x7ffdb840feb4,15645200,0,0x0,8
tick,0x7ffdb840feb4,15660256,0,0x0,8
tick,0x7ffdb840feb4,15676208,0,0x0,8
tick,0x7ffdb840feb4,15691702,0,0x0,8
tick,0x7ffdb840feb4,15707205,0,0x0,8
tick,0x7ffdb840feb4,15723027,0,0x0,8
tick,0x7ffdb840feb4,15738242,0,0x0,8
tick,0x7ffdb840feb4,15754218,0,0x0,8
tick,0x7ffdb840feb4,15769053,0,0x0,8
tick,0x7ffdb840feb4,15784214,0,0x0,8
tick,0x7ffdb840feb4,15799366,0,0x0,8
tick,0x7ffdb840feb4,15815446,0,0x0,8
tick,0x7ffdb840feb4,15830709,0,0x0,8
tick,0x7ffdb840feb4,15846238,0,0x0,8
tick,0x7ffdb840feb4,15861955,0,0x0,8
tick,0x7ffdb840feb4,15877236,0,0x0,8
tick,0x7ffdb840feb4,15893057,0,0x0,8
tick,0x7ffdb840feb4,15908225,0,0x0,8
tick,0x7ffdb840feb4,15924052,0,0x0,8
tick,0x7ffdb840feb4,15939236,0,0x0,8
tick,0x7ffdb840feb4,15954238,0,0x0,8
tick,0x7ffdb840feb4,15970069,0,0x0,8
tick,0x7ffdb840feb4,15985251,0,0x0,8
tick,0x7ffdb840feb4,16001070,0,0x0,8
tick,0x7ffdb840feb4,16017032,0,0x0,8
tick,0x7ffdb840feb4,16033071,0,0x0,8
tick,0x7ffdb840feb4,16048934,0,0x0,8
tick,0x7ffdb840feb4,16064078,0,0x0,8
tick,0x7ffdb840feb4,16079079,0,0x0,8
tick,0x7ffdb840feb4,16094250,0,0x0,8
tick,0x7ffdb840feb4,16110259,0,0x0,8
tick,0x7ffdb840feb4,16125792,0,0x0,8
tick,0x7ffdb840feb4,16141771,0,0x0,8
tick,0x7ffdb840feb4,16157256,0,0x0,8
tick,0x7ffdb840feb4,16173104,0,0x0,8
tick,0x7ffdb840feb4,16189261,0,0x0,8
tick,0x7ffdb840feb4,16204262,0,0x0,8
tick,0x7ffdb840feb4,16219874,0,0x0,8
tick,0x7ffdb840feb4,16235272,0,0x0,8
tick,0x7ffdb840feb4,16251123,0,0x0,8
tick,0x7ffdb840feb4,16267305,0,0x0,8
tick,0x7ffdb840feb4,16283394,0,0x0,8
tick,0x7ffdb840feb4,16299367,0,0x0,8
tick,0x7ffdb840feb4,16314286,0,0x0,8
tick,0x7ffdb840feb4,16330078,0,0x0,8
tick,0x7ffdb840feb4,16345707,0,0x0,8
tick,0x7ffdb840feb4,16361276,0,0x0,8
tick,0x7ffdb840feb4,16376289,0,0x0,8
tick,0x7ffdb840feb4,16391957,0,0x0,8
tick,0x7ffdb840feb4,16407737,0,0x0,8
tick,0x7ffdb840feb4,16423601,0,0x0,8
tick,0x7ffdb840feb4,16439610,0,0x0,8
tick,0x7ffdb840feb4,16454278,0,0x0,8
tick,0x7ffdb840feb4,16469298,0,0x0,8
tick,0x7ffdb840feb4,16484293,0,0x0,8
tick,0x7ffdb840feb4,16500296,0,0x0,8
tick,0x7ffdb840feb4,16515506,0,0x0,8
tick,0x7ffdb840feb4,16531487,0,0x0,8
tick,0x7ffdb840feb4,16547083,0,0x0,8
tick,0x7ffdb840feb4,16562299,0,0x0,8
tick,0x7ffdb840feb4,16578146,0,0x0,8
tick,0x7ffdb840feb4,16593311,0,0x0,8
tick,0x7ffdb840feb4,16609308,0,0x0,8
tick,0x7ffdb840feb4,16624313,0,0x0,8
tick,0x7ffdb840feb4,16639817,0,0x0,8
tick,0x7ffdb840feb4,16655303,0,0x0,8
tick,0x7ffdb840feb4,16671323,0,0x0,8
tick,0x7ffdb840feb4,16686478,0,0x0,8
tick,0x7ffdb840feb4,16702317,0,0x0,8
tick,0x7ffdb840feb4,16716778,0,0x0,8
tick,0x7ffdb840feb4,16732329,0,0x0,8
tick,0x7ffdb840feb4,16748039,0,0x0,8
tick,0x7ffdb840feb4,16763339,0,0x0,8
tick,0x7ffdb840feb4,16779189,0,0x0,8
tick,0x7ffdb840feb4,16793804,0,0x0,8
tick,0x7ffdb840feb4,16808994,0,0x0,8
tick,0x7ffdb840feb4,16824305,0,0x0,8
tick,0x7ffdb840feb4,16839174,0,0x0,8
tick,0x7ffdb840feb4,16854515,0,0x0,8
tick,0x7ffdb840feb4,16869678,0,0x0,8
tick,0x7ffdb840feb4,16885612,0,0x0,8
tick,0x7ffdb840feb4,16901011,0,0x0,8
tick,0x7ffdb840feb4,16916202,0,0x0,8
tick,0x7ffdb840feb4,16932111,0,0x0,8
tick,0x7ffdb840feb4,16948120,0,0x0,8
tick,0x7ffdb840feb4,16963704,0,0x0,8
tick,0x7ffdb840feb4,16979482,0,0x0,8
tick,0x7ffdb840feb4,16994750,0,0x0,8
tick,0x7ffdb840feb4,17010196,0,0x0,8
tick,0x7ffdb840feb4,17025191,0,0x0,8
tick,0x7ffdb840feb4,17040870,0,0x0,8
tick,0x7ffdb840feb4,17056360,0,0x0,8
tick,0x7ffdb840feb4,17072377,0,0x0,8
tick,0x7ffdb840feb4,17087389,0,0x0,8
tick,0x7ffdb840feb4,17103376,0,0x0,8
tick,0x7ffdb840feb4,17119351,0,0x0,8
tick,0x7ffdb840feb4,17134410,0,0x0,8
tick,0x7ffdb840feb4,17149710,0,0x0,8
tick,0x7ffdb840feb4,17165405,0,0x0,8
tick,0x7ffdb840feb4,17181384,0,0x0,8
tick,0x7ffdb840feb4,17196413,0,0x0,8
tick,0x7ffdb840feb4,17211586,0,0x0,8
tick,0x7ffdb840feb4,17227396,0,0x0,8
tick,0x7ffdb840feb4,17243397,0,0x0,8
tick,0x7ffdb840feb4,17259581,0,0x0,8
tick,0x7ffdb840feb4,17275578,0,0x0,8
tick,0x7ffdb840feb4,17291409,0,0x0,8
tick,0x7ffdb840feb4,17307596,0,0x0,8
tick,0x7ffdb840feb4,17323395,0,0x0,8
tick,0x7ffdb840feb4,17338904,0,0x0,8
tick,0x7ffdb840feb4,17354455,0,0x0,8
tick,0x7ffdb840feb4,17369248,0,0x0,8
tick,0x7ffdb840feb4,17384408,0,0x0,8
tick,0x7ffdb840feb4,17399574,0,0x0,8
tick,0x7ffdb840feb4,17415247,0,0x0,8
tick,0x7ffdb840feb4,17431293,0,0x0,8
tick,0x7ffdb840feb4,17446590,0,0x0,8
tick,0x7ffdb840feb4,17462301,0,0x0,8
tick,0x7ffdb840feb4,17477253,0,0x0,8
tick,0x7ffdb840feb4,17493265,0,0x0,8
tick,0x7ffdb840feb4,17509262,0,0x0,8
tick,0x7ffdb840feb4,17524257,0,0x0,8
tick,0x7ffdb840feb4,17539453,0,0x0,8
tick,0x7ffdb840feb4,17554430,0,0x0,8
tick,0x7ffdb840feb4,17570513,0,0x0,8
tick,0x7ffdb840feb4,17586539,0,0x0,8
tick,0x7ffdb840feb4,17602458,0,0x0,8
tick,0x7ffdb840feb4,17617306,0,0x0,8
tick,0x7ffdb840feb4,17632444,0,0x0,8
tick,0x7ffdb840feb4,17647891,0,0x0,8
tick,0x7ffdb840feb4,17663434,0,0x0,8
tick,0x7ffdb840feb4,17679271,0,0x0,8
tick,0x7ffdb840feb4,17694451,0,0x0,8
tick,0x7ffdb840feb4,17710450,0,0x0,8
tick,0x7ffdb840feb4,17726059,0,0x0,8
tick,0x7ffdb840feb4,17741027,0,0x0,8
tick,0x7ffdb840feb4,17756633,0,0x0,8
tick,0x7ffdb840feb4,17772446,0,0x0,8
tick,0x7ffdb840feb4,17787640,0,0x0,8
tick,0x7ffdb840feb4,17803455,0,0x0,8
tick,0x7ffdb840feb4,17818690,0,0x0,8
tick,0x7ffdb840feb4,17834485,0,0x0,8
tick,0x7ffdb840feb4,17850306,0,0x0,8
tick,0x7ffdb840feb4,17865816,0,0x0,8
tick,0x7ffdb840feb4,17881538,0,0x0,8
tick,0x7ffdb840feb4,17895940,0,0x0,8
tick,0x7ffdb840feb4,17911377,0,0x0,8
tick,0x7ffdb840feb4,17927132,0,0x0,8
tick,0x7ffdb840feb4,17942141,0,0x0,8
tick,0x7ffdb840feb4,17957553,0,0x0,8
tick,0x7ffdb840feb4,17973317,0,0x0,8
tick,0x7ffdb840feb4,17988981,0,0x0,8
tick,0x7ffdb840feb4,18004337,0,0x0,8
tick,0x7ffdb840feb4,18019339,0,0x0,8
tick,0x7ffdb840feb4,18034484,0,0x0,8
tick,0x7ffdb840feb4,18050500,0,0x0,8
tick,0x7ffdb840feb4,18065670,0,0x0,8
tick,0x7ffdb840feb4,18081138,0,0x0,8
tick,0x7ffdb840feb4,18096723,0,0x0,8
tick,0x7ffdb840feb4,18112522,0,0x0,8
tick,0x7ffdb840feb4,18127527,0,0x0,8
tick,0x7ffdb840feb4,18143348,0,0x0,8
tick,0x7ffdb840feb4,18158492,0,0x0,8
tick,0x7ffdb840feb4,18174353,0,0x0,8
tick,0x7ffdb840feb4,18189858,0,0x0,8
tick,0x7ffdb840feb4,18204529,0,0x0,8
tick,0x7ffdb840feb4,18219959,0,0x0,8
tick,0x7ffdb840feb4,18235537,0,0x0,8
tick,0x7ffdb840feb4,18251456,0,0x0,8
tick,0x7ffdb840feb4,18266231,0,0x0,8
tick,0x7ffdb840feb4,18282271,0,0x0,8
tick,0x7ffdb840feb4,18298101,0,0x0,8
tick,0x7ffdb840feb4,18314279,0,0x0,8
tick,0x7ffdb840feb4,18330172,0,0x0,8
tick,0x7ffdb840feb4,18345882,0,0x0,8
tick,0x7ffdb840feb4,18361694,0,0x0,8
tick,0x7ffdb840feb4,18376835,0,0x0,8
tick,0x7ffdb840feb4,18392290,0,0x0,8
tick,0x7ffdb840feb4,18407426,0,0x0,8
tick,0x7ffdb840feb4,18423358,0,0x0,8
tick,0x7ffdb840feb4,18439039,0,0x0,8
tick,0x7ffdb840feb4,18454389,0,0x0,8
tick,0x7ffdb840feb4,18470264,0,0x0,8
tick,0x7ffdb840feb4,18485722,0,0x0,8
tick,0x7ffdb840feb4,18501542,0,0x0,8
tick,0x7ffdb840feb4,18516715,0,0x0,8
tick,0x7ffdb840feb4,18532375,0,0x0,8
tick,0x7ffdb840feb4,18548060,0,0x0,8
tick,0x7ffdb840feb4,18563392,0,0x0,8
tick,0x7ffdb840feb4,18579341,0,0x0,8
tick,0x7ffdb840feb4,18594761,0,0x0,8
tick,0x7ffdb840feb4,18610564,0,0x0,8
tick,0x7ffdb840feb4,18625156,0,0x0,8
tick,0x7ffdb840feb4,18641220,0,0x0,8
tick,0x7ffdb840feb4,18656587,0,0x0,8
tick,0x7ffdb840feb4,18671655,0,0x0,8
tick,0x7ffdb840feb4,18687229,0,0x0,8
tick,0x7ffdb840feb4,18702571,0,0x0,8
tick,0x7ffdb840feb4,18717397,0,0x0,8
tick,0x7ffdb840feb4,18733584,0,0x0,8
tick,0x7ffdb840feb4,18749388,0,0x0,8
tick,0x7ffdb840feb4,18764569,0,0x0,8
tick,0x7ffdb840feb4,18780414,0,0x0,8
tick,0x7ffdb840feb4,18795583,0,0x0,8
tick,0x7ffdb840feb4,18811582,0,0x0,8
tick,0x7ffdb840feb4,18826589,0,0x0,8
tick,0x7ffdb840feb4,18842239,0,0x0,8
tick,0x7ffdb840feb4,18857415,0,0x0,8
tick,0x7ffdb840feb4,18872411,0,0x0,8
tick,0x7ffdb840feb4,18887925,0,0x0,8
tick,0x7ffdb840feb4,18903427,0,0x0,8
tick,0x7ffdb840feb4,18919610,0,0x0,8
tick,0x7ffdb840feb4,18934760,0,0x0,8
tick,0x7ffdb840feb4,18950589,0,0x0,8
tick,0x7ffdb840feb4,18966112,0,0x0,8
tick,0x7ffdb840feb4,18981616,0,0x0,8
tick,0x7ffdb840feb4,18996762,0,0x0,8
tick,0x7ffdb840feb4,19012450,0,0x0,8
tick,0x7ffdb840feb4,19028221,0,0x0,8
tick,0x7ffdb840feb4,19043606,0,0x0,8
tick,0x7ffdb840feb4,19058604,0,0x0,8
tick,0x7ffdb840feb4,19074669,0,0x0,8
tick,0x7ffdb840feb4,19090451,0,0x0,8
tick,0x7ffdb840feb4,19105621,0,0x0,8
tick,0x7ffdb840feb4,19120918,0,0x0,8
tick,0x7ffdb840feb4,19136794,0,0x0,8
tick,0x7ffdb840feb4,19152728,0,0x0,8
tick,0x7ffdb840feb4,19168743,0,0x0,8
tick,0x7ffdb840feb4,19183781,0,0x0,8
tick,0x7ffdb840feb4,19199002,0,0x0,8
tick,0x7ffdb840feb4,19214526,0,0x0,8
tick,0x7ffdb840feb4,19230449,0,0x0,8
tick,0x7ffdb840feb4,19246141,0,0x0,8
tick,0x7ffdb840feb4,19261583,0,0x0,8
tick,0x7ffdb840feb4,19276808,0,0x0,8
tick,0x7ffdb840feb4,19292644,0,0x0,8
tick,0x7ffdb840feb4,19308863,0,0x0,8
tick,0x7ffdb840feb4,19324658,0,0x0,8
tick,0x7ffdb840feb4,19340294,0,0x0,8
tick,0x7ffdb840feb4,19355810,0,0x0,8
tick,0x7ffdb840feb4,19370813,0,0x0,8
tick,0x7ffdb840feb4,19386428,0,0x0,8
tick,0x7ffdb840feb4,19401576,0,0x0,8
tick,0x7ffdb840feb4,19416592,0,0x0,8
tick,0x7ffdb840feb4,19431645,0,0x0,8
tick,0x7ffdb840feb4,19446939,0,0x0,8
tick,0x7ffdb840feb4,19461960,0,0x0,8
tick,0x7ffdb840feb4,19477363,0,0x0,8
tick,0x7ffdb840feb4,19493007,0,0x0,8
tick,0x7ffdb840feb4,19508359,0,0x0,8
tick,0x7ffdb840feb4,19523491,0,0x0,8
tick,0x7ffdb840feb4,19538675,0,0x0,8
tick,0x7ffdb840feb4,19554485,0,0x0,8
tick,0x7ffdb840feb4,19569825,0,0x0,8
tick,0x7ffdb840feb4,19585667,0,0x0,8
tick,0x7ffdb840feb4,19600824,0,0x0,8
tick,0x7ffdb840feb4,19615842,0,0x0,8
tick,0x7ffdb840feb4,19631286,0,0x0,8
tick,0x7ffdb840feb4,19646682,0,0x0,8
tick,0x7ffdb840feb4,19662677,0,0x0,8
tick,0x7ffdb840feb4,19678506,0,0x0,8
tick,0x7ffdb840feb4,19694186,0,0x0,8
tick,0x7ffdb840feb4,19709860,0,0x0,8
tick,0x7ffdb840feb4,19724530,0,0x0,8
tick,0x7ffdb840feb4,19739706,0,0x0,8
tick,0x7ffdb840feb4,19755739,0,0x0,8
tick,0x7ffdb840feb4,19770932,0,0x0,8
tick,0x7ffdb840feb4,19786919,0,0x0,8
tick,0x7ffdb840feb4,19802071,0,0x0,8
tick,0x7ffdb840feb4,19816969,0,0x0,8
tick,0x7ffdb840feb4,19832725,0,0x0,8
tick,0x7ffdb840feb4,19847722,0,0x0,8
tick,0x7ffdb840feb4,19863554,0,0x0,8
tick,0x7ffdb840feb4,19879731,0,0x0,8
tick,0x7ffdb840feb4,19894200,0,0x0,8
tick,0x7ffdb840feb4,19909911,0,0x0,8
tick,0x7ffdb840feb4,19925742,0,0x0,8
tick,0x7ffdb840feb4,19941397,0,0x0,8
tick,0x7ffdb840feb4,19956736,0,0x0,8
tick,0x7ffdb840feb4,19972573,0,0x0,8
tick,0x7ffdb840feb4,19988639,0,0x0,8
tick,0x7ffdb840feb4,20004581,0,0x0,8
tick,0x7ffdb840feb4,20020193,0,0x0,8
tick,0x7ffdb840feb4,20035725,0,0x0,8
tick,0x7ffdb840feb4,20050736,0,0x0,8
tick,0x7ffdb840feb4,20065867,0,0x0,8
tick,0x7ffdb840feb4,20081576,0,0x0,8
tick,0x7ffdb840feb4,20096735,0,0x0,8
tick,0x7ffdb840feb4,20112569,0,0x0,8
tick,0x7ffdb840feb4,20128355,0,0x0,8
tick,0x7ffdb840feb4,20143561,0,0x0,8
tick,0x7ffdb840feb4,20159595,0,0x0,8
tick,0x7ffdb840feb4,20174569,0,0x0,8
tick,0x7ffdb840feb4,20190068,0,0x0,8
tick,0x7ffdb840feb4,20205750,0,0x0,8
tick,0x7ffdb840feb4,20221359,0,0x0,8
tick,0x7ffdb840feb4,20236758,0,0x0,8
tick,0x7ffdb840feb4,20252257,0,0x0,8
tick,0x7ffdb840feb4,20267233,0,0x0,8
tick,0x7ffdb840feb4,20282598,0,0x0,8
tick,0x7ffdb840feb4,20298593,0,0x0,8
tick,0x7ffdb840feb4,20314598,0,0x0,8
tick,0x7ffdb840feb4,20330591,0,0x0,8
tick,0x7ffdb840feb4,20346592,0,0x0,8
tick,0x7ffdb840feb4,20362607,0,0x0,8
tick,0x7ffdb840feb4,20378800,0,0x0,8
tick,0x7ffdb840feb4,20394093,0,0x0,8
tick,0x7ffdb840feb4,20410451,0,0x0,8
tick,0x7ffdb840feb4,20426422,0,0x0,8
tick,0x7ffdb840feb4,20442278,0,0x0,8
tick,0x7ffdb840feb4,20457961,0,0x0,8
tick,0x7ffdb840feb4,20473754,0,0x0,8
tick,0x7ffdb840feb4,20489434,0,0x0,8
tick,0x7ffdb840feb4,20504803,0,0x0,8
tick,0x7ffdb840feb4,20520831,0,0x0,8
tick,0x7ffdb840feb4,20535991,0,0x0,8
tick,0x7ffdb840feb4,20551193,0,0x0,8
tick,0x7ffdb840feb4,20566557,0,0x0,8
tick,0x7ffdb840feb4,20582560,0,0x0,8
tick,0x7ffdb840feb4,20597972,0,0x0,8
tick,0x7ffdb840feb4,20613669,0,0x0,8
tick,0x7ffdb840feb4,20629062,0,0x0,8
tick,0x7ffdb840feb4,20645067,0,0x0,8
tick,0x7ffdb840feb4,20661160,0,0x0,8
tick,0x7ffdb840feb4,20676650,0,0x0,8
tick,0x7ffdb840feb4,20692642,0,0x0,8
tick,0x7ffdb840feb4,20707810,0,0x0,8
tick,0x7ffdb840feb4,20723635,0,0x0,8
tick,0x7ffdb840feb4,20738653,0,0x0,8
tick,0x7ffdb840feb4,20754645,0,0x0,8
tick,0x7ffdb840feb4,20770664,0,0x0,8
tick,0x7ffdb840feb4,20785828,0,0x0,8
tick,0x7ffdb840feb4,20801659,0,0x0,8
tick,0x7ffdb840feb4,20816677,0,0x0,8
tick,0x7ffdb840feb4,20832654,0,0x0,8
tick,0x7ffdb840feb4,20848676,0,0x0,8
tick,0x7ffdb840feb4,20863661,0,0x0,8
tick,0x7ffdb840feb4,20879695,0,0x0,8
tick,0x7ffdb840feb4,20894665,0,0x0,8
tick,0x7ffdb840feb4,20910679,0,0x0,8
tick,0x7ffdb840feb4,20926678,0,0x0,8
tick,0x7ffdb840feb4,20942370,0,0x0,8
tick,0x7ffdb840feb4,20957843,0,0x0,8
tick,0x7ffdb840feb4,20972681,0,0x0,8
tick,0x7ffdb840feb4,20988297,0,0x0,8
tick,0x7ffdb840feb4,21003671,0,0x0,8
tick,0x7ffdb840feb4,21018702,0,0x0,8
tick,0x7ffdb840feb4,21033846,0,0x0,8
tick,0x7ffdb840feb4,21048689,0,0x0,8
tick,0x7ffdb840feb4,21063686,0,0x0,8
tick,0x7ffdb840feb4,21079704,0,0x0,8
tick,0x7ffdb840feb4,21095661,0,0x0,8
tick,0x7ffdb840feb4,21110691,0,0x0,8
tick,0x7ffdb840feb4,21126282,0,0x0,8
tick,0x7ffdb840feb4,21141300,0,0x0,8
tick,0x7ffdb840feb4,21156869,0,0x0,8
tick,0x7ffdb840feb4,21172623,0,0x0,8
tick,0x7ffdb840feb4,21187908,0,0x0,8
tick,0x7ffdb840feb4,21202715,0,0x0,8
tick,0x7ffdb840feb4,21217362,0,0x0,8
tick,0x7ffdb840feb4,21232706,0,0x0,8
tick,0x7ffdb840feb4,21248730,0,0x0,8
tick,0x7ffdb840feb4,21263708,0,0x0,8
tick,0x7ffdb840feb4,21279734,0,0x0,8
tick,0x7ffdb840feb4,21294720,0,0x0,8
tick,0x7ffdb840feb4,21310737,0,0x0,8
tick,0x7ffdb840feb4,21326721,0,0x0,8
tick,0x7ffdb840feb4,21341736,0,0x0,8
tick,0x7ffdb840feb4,21357737,0,0x0,8
tick,0x7ffdb840feb4,21372743,0,0x0,8
tick,0x7ffdb840feb4,21388731,0,0x0,8
tick,0x7ffdb840feb4,21404748,0,0x0,8
tick,0x7ffdb840feb4,21420217,0,0x0,8
tick,0x7ffdb840feb4,21436241,0,0x0,8
tick,0x7ffdb840feb4,21451513,0,0x0,8
tick,0x7ffdb840feb4,21466533,0,0x0,8
tick,0x7ffdb840feb4,21482538,0,0x0,8
tick,0x7ffdb840feb4,21498539,0,0x0,8
tick,0x7ffdb840feb4,21514547,0,0x0,8
tick,0x7ffdb840feb4,21530562,0,0x0,8
tick,0x7ffdb840feb4,21546581,0,0x0,8
tick,0x7ffdb840feb4,21562527,0,0x0,8
tick,0x7ffdb840feb4,21578590,0,0x0,8
tick,0x7ffdb840feb4,21594091,0,0x0,8
tick,0x7ffdb840feb4,21609230,0,0x0,8
tick,0x7ffdb840feb4,21624248,0,0x0,8
tick,0x7ffdb840feb4,21639241,0,0x0,8
tick,0x7ffdb840feb4,21654575,0,0x0,8
tick,0x7ffdb840feb4,21670483,0,0x0,8
tick,0x7ffdb840feb4,21686450,0,0x0,8
tick,0x7ffdb840feb4,21702473,0,0x0,8
tick,0x7ffdb840feb4,21718510,0,0x0,8
tick,0x7ffdb840feb4,21734497,0,0x0,8
tick,0x7ffdb840feb4,21750210,0,0x0,8
tick,0x7ffdb840feb4,21766286,0,0x0,8
tick,0x7ffdb840feb4,21780977,0,0x0,8
tick,0x7ffdb840feb4,21796109,0,0x0,8
tick,0x7ffdb840feb4,21812120,0,0x0,8
tick,0x7ffdb840feb4,21827118,0,0x0,8
tick,0x7ffdb840feb4,21843131,0,0x0,8
tick,0x7ffdb840feb4,21858134,0,0x0,8
tick,0x7ffdb840feb4,21873126,0,0x0,8
tick,0x7ffdb840feb4,21888719,0,0x0,8
tick,0x7ffdb840feb4,21903821,0,0x0,8
tick,0x7ffdb840feb4,21919728,0,0x0,8
tick,0x7ffdb840feb4,21935764,0,0x0,8
tick,0x7ffdb840feb4,21950574,0,0x0,8
tick,0x7ffdb840feb4,21966223,0,0x0,8
tick,0x7ffdb840feb4,21982242,0,0x0,8
tick,0x7ffdb840feb4,21997747,0,0x0,8
tick,0x7ffdb840feb4,22013704,0,0x0,8
tick,0x7ffdb840feb4,22029725,0,0x0,8
tick,0x7ffdb840feb4,22045724,0,0x0,8
tick,0x7ffdb840feb4,22060727,0,0x0,8
tick,0x7ffdb840feb4,22076746,0,0x0,8
tick,0x7ffdb840feb4,22091612,0,0x0,8
tick,0x7ffdb840feb4,22106868,0,0x0,8
tick,0x7ffdb840feb4,22122879,0,0x0,8
tick,0x7ffdb840feb4,22138896,0,0x0,8
tick,0x7ffdb840feb4,22154453,0,0x0,8
tick,0x7ffdb840feb4,22169462,0,0x0,8
tick,0x7ffdb840feb4,22185445,0,0x0,8
tick,0x7ffdb840feb4,22200617,0,0x0,8
tick,0x7ffdb840feb4,22216360,0,0x0,8
tick,0x7ffdb840feb4,22232372,0,0x0,8
tick,0x7ffdb840feb4,22247804,0,0x0,8
tick,0x7ffdb840feb4,22263831,0,0x0,8
tick,0x7ffdb840feb4,22278809,0,0x0,8
tick,0x7ffdb840feb4,22294829,0,0x0,8
tick,0x7ffdb840feb4,22310194,0,0x0,8
tick,0x7ffdb840feb4,22325227,0,0x0,8
tick,0x7ffdb840feb4,22341210,0,0x0,8
tick,0x7ffdb840feb4,22356209,0,0x0,8
tick,0x7ffdb840feb4,22372248,0,0x0,8
tick,0x7ffdb840feb4,22387439,0,0x0,8
tick,0x7ffdb840feb4,22402479,0,0x0,8
tick,0x7ffdb840feb4,22418454,0,0x0,8
tick,0x7ffdb840feb4,22434453,0,0x0,8
tick,0x7ffdb840feb4,22449883,0,0x0,8
tick,0x7ffdb840feb4,22465902,0,0x0,8
tick,0x7ffdb840feb4,22481547,0,0x0,8
tick,0x7ffdb840feb4,22496777,0,0x0,8
tick,0x7ffdb840feb4,22511773,0,0x0,8
tick,0x7ffdb840feb4,22527776,0,0x0,8
tick,0x7ffdb840feb4,22543513,0,0x0,8
tick,0x7ffdb840feb4,22558534,0,0x0,8
tick,0x7ffdb840feb4,22574530,0,0x0,8
tick,0x7ffdb840feb4,22589551,0,0x0,8
tick,0x7ffdb840feb4,22605530,0,0x0,8
tick,0x7ffdb840feb4,22621132,0,0x0,8
tick,0x7ffdb840feb4,22637159,0,0x0,8
tick,0x7ffdb840feb4,22652541,0,0x0,8
tick,0x7ffdb840feb4,22668547,0,0x0,8
tick,0x7ffdb840feb4,22683685,0,0x0,8
tick,0x7ffdb840feb4,22698699,0,0x0,8
tick,0x7ffdb840feb4,22714697,0,0x0,8
tick,0x7ffdb840feb4,22729967,0,0x0,8
tick,0x7ffdb840feb4,22745220,0,0x0,8
tick,0x7ffdb840feb4,22761235,0,0x0,8
tick,0x7ffdb840feb4,22776727,0,0x0,8
tick,0x7ffdb840feb4,22792731,0,0x0,8
tick,0x7ffdb840feb4,22808022,0,0x0,8
tick,0x7ffdb840feb4,22823953,0,0x0,8
tick,0x7ffdb840feb4,22838952,0,0x0,8
tick,0x7ffdb840feb4,22854985,0,0x0,8
tick,0x7ffdb840feb4,22870201,0,0x0,8
tick,0x7ffdb840feb4,22886203,0,0x0,8
tick,0x7ffdb840feb4,22901219,0,0x0,8
tick,0x7ffdb840feb4,22916217,0,0x0,8
tick,0x7ffdb840feb4,22932248,0,0x0,8
tick,0x7ffdb840feb4,22948228,0,0x0,8
tick,0x7ffdb840feb4,22964242,0,0x0,8
tick,0x7ffdb840feb4,22980238,0,0x0,8
tick,0x7ffdb840feb4,22996254,0,0x0,8
tick,0x7ffdb840feb4,23012270,0,0x0,8
tick,0x7ffdb840feb4,23028291,0,0x0,8
tick,0x7ffdb840feb4,23043573,0,0x0,8
tick,0x7ffdb840feb4,23059574,0,0x0,8
tick,0x7ffdb840feb4,23074747,0,0x0,8
tick,0x7ffdb840feb4,23089761,0,0x0,8
tick,0x7ffdb840feb4,23105234,0,0x0,8
tick,0x7ffdb840feb4,23121252,0,0x0,8
tick,0x7ffdb840feb4,23136791,0,0x0,8
tick,0x7ffdb840feb4,23152262,0,0x0,8
tick,0x7ffdb840feb4,23167248,0,0x0,8
tick,0x7ffdb840feb4,23182813,0,0x0,8
tick,0x7ffdb840feb4,23198129,0,0x0,8
tick,0x7ffdb840feb4,23213232,0,0x0,8
tick,0x7ffdb840feb4,23228875,0,0x0,8
tick,0x7ffdb840feb4,23244378,0,0x0,8
tick,0x7ffdb840feb4,23259710,0,0x0,8
tick,0x7ffdb840feb4,23275712,0,0x0,8
tick,0x7ffdb840feb4,23291522,0,0x0,8
tick,0x7ffdb840feb4,23306828,0,0x0,8
tick,0x7ffdb840feb4,23322234,0,0x0,8
tick,0x7ffdb840feb4,23337892,0,0x0,8
tick,0x7ffdb840feb4,23353744,0,0x0,8
tick,0x7ffdb840feb4,23369740,0,0x0,8
tick,0x7ffdb840feb4,23385742,0,0x0,8
tick,0x7ffdb840feb4,23401738,0,0x0,8
tick,0x7ffdb840feb4,23417768,0,0x0,8
tick,0x7ffdb840feb4,23433273,0,0x0,8
tick,0x7ffdb840feb4,23448611,0,0x0,8
tick,0x7ffdb840feb4,23463848,0,0x0,8
tick,0x7ffdb840feb4,23479059,0,0x0,8
tick,0x7ffdb840feb4,23495150,0,0x0,8
tick,0x7ffdb840feb4,23511175,0,0x0,8
tick,0x7ffdb840feb4,23526452,0,0x0,8
tick,0x7ffdb840feb4,23541758,0,0x0,8
tick,0x7ffdb840feb4,23557342,0,0x0,8
tick,0x7ffdb840feb4,23573363,0,0x0,8
tick,0x7ffdb840feb4,23588633,0,0x0,8
tick,0x7ffdb840feb4,23603630,0,0x0,8
tick,0x7ffdb840feb4,23618470,0,0x0,8
tick,0x7ffdb840feb4,23634462,0,0x0,8
tick,0x7ffdb840feb4,23649462,0,0x0,8
tick,0x7ffdb840feb4,23664786,0,0x0,8
tick,0x7ffdb840feb4,23680681,0,0x0,8
tick,0x7ffdb840feb4,23696124,0,0x0,8
tick,0x7ffdb840feb4,23711919,0,0x0,8
tick,0x7ffdb840feb4,23727543,0,0x0,8
tick,0x7ffdb840feb4,23743359,0,0x0,8
tick,0x7ffdb840feb4,23758828,0,0x0,8
tick,0x7ffdb840feb4,23773975,0,0x0,8
tick,0x7ffdb840feb4,23789652,0,0x0,8
tick,0x7ffdb840feb4,23805327,0,0x0,8
tick,0x7ffdb840feb4,23821464,0,0x0,8
tick,0x7ffdb840feb4,23836712,0,0x0,8
tick,0x7ffdb840feb4,23852473,0,0x0,8
tick,0x7ffdb840feb4,23867104,0,0x0,8
tick,0x7ffdb840feb4,23882876,0,0x0,8
tick,0x7ffdb840feb4,23898744,0,0x0,8
tick,0x7ffdb840feb4,23914316,0,0x0,8
tick,0x7ffdb840feb4,23930114,0,0x0,8
tick,0x7ffdb840feb4,23945854,0,0x0,8
tick,0x7ffdb840feb4,23961346,0,0x0,8
tick,0x7ffdb840feb4,23977053,0,0x0,8
tick,0x7ffdb840feb4,23991800,0,0x0,8
tick,0x7ffdb840feb4,24007854,0,0x0,8
tick,0x7ffdb840feb4,24023413,0,0x0,8
tick,0x7ffdb840feb4,24038435,0,0x0,8
tick,0x7ffdb840feb4,24053706,0,0x0,8
tick,0x7ffdb840feb4,24069019,0,0x0,8
tick,0x7ffdb840feb4,24084274,0,0x0,8
tick,0x7ffdb840feb4,24100192,0,0x0,8
tick,0x7ffdb840feb4,24115486,0,0x0,8
tick,0x7ffdb840feb4,24130931,0,0x0,8
tick,0x7ffdb840feb4,24146252,0,0x0,8
tick,0x7ffdb840feb4,24161391,0,0x0,8
tick,0x7ffdb840feb4,24177025,0,0x0,8
tick,0x7ffdb840feb4,24192210,0,0x0,8
tick,0x7ffdb840feb4,24207874,0,0x0,8
tick,0x7ffdb840feb4,24223266,0,0x0,8
tick,0x7ffdb840feb4,24238223,0,0x0,8
tick,0x7ffdb840feb4,24253355,0,0x0,8
tick,0x7ffdb840feb4,24269135,0,0x0,8
tick,0x7ffdb840feb4,24284517,0,0x0,8
tick,0x7ffdb840feb4,24300113,0,0x0,8
tick,0x7ffdb840feb4,24315398,0,0x0,8
tick,0x7ffdb840feb4,24330936,0,0x0,8
tick,0x7ffdb840feb4,24346566,0,0x0,8
tick,0x7ffdb840feb4,24362716,0,0x0,8
tick,0x7ffdb840feb4,24378699,0,0x0,8
tick,0x7ffdb840feb4,24394737,0,0x0,8
tick,0x7ffdb840feb4,24410064,0,0x0,8
tick,0x7ffdb840feb4,24425883,0,0x0,8
tick,0x7ffdb840feb4,24441201,0,0x0,8
tick,0x7ffdb840feb4,24457218,0,0x0,8
tick,0x7ffdb840feb4,24472616,0,0x0,8
tick,0x7ffdb840feb4,24487762,0,0x0,8
tick,0x7ffdb840feb4,24503053,0,0x0,8
tick,0x7ffdb840feb4,24518464,0,0x0,8
tick,0x7ffdb840feb4,24533727,0,0x0,8
tick,0x7ffdb840feb4,24549382,0,0x0,8
tick,0x7ffdb840feb4,24564333,0,0x0,8
tick,0x7ffdb840feb4,24579692,0,0x0,8
tick,0x7ffdb840feb4,24595660,0,0x0,8
tick,0x7ffdb840feb4,24610953,0,0x0,8
tick,0x7ffdb840feb4,24626317,0,0x0,8
tick,0x7ffdb840feb4,24642251,0,0x0,8
tick,0x7ffdb840feb4,24657401,0,0x0,8
tick,0x7ffdb840feb4,24672782,0,0x0,8
tick,0x7ffdb840feb4,24688644,0,0x0,8
tick,0x7ffdb840feb4,24704540,0,0x0,8
tick,0x7ffdb840feb4,24720421,0,0x0,8
tick,0x7ffdb840feb4,24736608,0,0x0,8
tick,0x7ffdb840feb4,24752513,0,0x0,8
tick,0x7ffdb840feb4,24768063,0,0x0,8
tick,0x7ffdb840feb4,24783401,0,0x0,8
tick,0x7ffdb840feb4,24798623,0,0x0,8
tick,0x7ffdb840feb4,24814394,0,0x0,8
tick,0x7ffdb840feb4,24830428,0,0x0,8
tick,0x7ffdb840feb4,24845885,0,0x0,8
tick,0x7ffdb840feb4,24861093,0,0x0,8
tick,0x7ffdb840feb4,24876082,0,0x0,8
tick,0x7ffdb840feb4,24891730,0,0x0,8
tick,0x7ffdb840feb4,24907792,0,0x0,8
tick,0x7ffdb840feb4,24923951,0,0x0,8
tick,0x7ffdb840feb4,24939514,0,0x0,8
tick,0x7ffdb840feb4,24955082,0,0x0,8
tick,0x7ffdb840feb4,24970202,0,0x0,8
tick,0x7ffdb840feb4,24985983,0,0x0,8
tick,0x7ffdb840feb4,25001547,0,0x0,8
tick,0x7ffdb840feb4,25017386,0,0x0,8
tick,0x7ffdb840feb4,25032865,0,0x0,8
tick,0x7ffdb840feb4,25048738,0,0x0,8
tick,0x7ffdb840feb4,25063562,0,0x0,8
tick,0x7ffdb840feb4,25078896,0,0x0,8
tick,0x7ffdb840feb4,25094566,0,0x0,8
tick,0x7ffdb840feb4,25110541,0,0x0,8
tick,0x7ffdb840feb4,25125607,0,0x0,8
tick,0x7ffdb840feb4,25140950,0,0x0,8
tick,0x7ffdb840feb4,25156223,0,0x0,8
tick,0x7ffdb840feb4,25172071,0,0x0,8
tick,0x7ffdb840feb4,25187595,0,0x0,8
tick,0x7ffdb840feb4,25202839,0,0x0,8
tick,0x7ffdb840feb4,25218400,0,0x0,8
tick,0x7ffdb840feb4,25233983,0,0x0,8
tick,0x7ffdb840feb4,25248967,0,0x0,8
tick,0x7ffdb840feb4,25264236,0,0x0,8
tick,0x7ffdb840feb4,25279582,0,0x0,8
tick,0x7ffdb840feb4,25294699,0,0x0,8
tick,0x7ffdb840feb4,25310250,0,0x0,8
tick,0x7ffdb840feb4,25325370,0,0x0,8
tick,0x7ffdb840feb4,25340438,0,0x0,8
tick,0x7ffdb840feb4,25356415,0,0x0,8
tick,0x7ffdb840feb4,25371490,0,0x0,8
tick,0x7ffdb840feb4,25387253,0,0x0,8
tick,0x7ffdb840feb4,25403493,0,0x0,8
tick,0x7ffdb840feb4,25418718,0,0x0,8
tick,0x7ffdb840feb4,25434057,0,0x0,8
tick,0x7ffdb840feb4,25449807,0,0x0,8
tick,0x7ffdb840feb4,25465551,0,0x0,8
tick,0x7ffdb840feb4,25480851,0,0x0,8
tick,0x7ffdb840feb4,25496226,0,0x0,8
tick,0x7ffdb840feb4,25511284,0,0x0,8
tick,0x7ffdb840feb4,25527407,0,0x0,8
tick,0x7ffdb840feb4,25543155,0,0x0,8
tick,0x7ffdb840feb4,25559114,0,0x0,8
tick,0x7ffdb840feb4,25574293,0,0x0,8
tick,0x7ffdb840feb4,25589621,0,0x0,8
tick,0x7ffdb840feb4,25604835,0,0x0,8
tick,0x7ffdb840feb4,25619929,0,0x0,8
tick,0x7ffdb840feb4,25635602,0,0x0,8
tick,0x7ffdb840feb4,25651757,0,0x0,8
tick,0x7ffdb840feb4,25667627,0,0x0,8
tick,0x7ffdb840feb4,25683657,0,0x0,8
tick,0x7ffdb840feb4,25699670,0,0x0,8
tick,0x7ffdb840feb4,25715118,0,0x0,8
tick,0x7ffdb840feb4,25730448,0,0x0,8
tick,0x7ffdb840feb4,25746226,0,0x0,8
tick,0x7ffdb840feb4,25761161,0,0x0,8
tick,0x7ffdb840feb4,25776512,0,0x0,8
tick,0x7ffdb840feb4,25791550,0,0x0,8
tick,0x7ffdb840feb4,25806908,0,0x0,8
tick,0x7ffdb840feb4,25822136,0,0x0,8
tick,0x7ffdb840feb4,25837900,0,0x0,8
tick,0x7ffdb840feb4,25853133,0,0x0,8
tick,0x7ffdb840feb4,25868815,0,0x0,8
tick,0x7ffdb840feb4,25883835,0,0x0,8
tick,0x7ffdb840feb4,25899696,0,0x0,8
tick,0x7ffdb840feb4,25915627,0,0x0,8
tick,0x7ffdb840feb4,25930943,0,0x0,8
tick,0x7ffdb840feb4,25946264,0,0x0,8
tick,0x7ffdb840feb4,25961832,0,0x0,8
tick,0x7ffdb840feb4,25977913,0,0x0,8
tick,0x7ffdb840feb4,25993974,0,0x0,8
tick,0x7ffdb840feb4,26009424,0,0x0,8
tick,0x7ffdb840feb4,26024932,0,0x0,8
tick,0x7ffdb840feb4,26039845,0,0x0,8
tick,0x7ffdb840feb4,26055904,0,0x0,8
tick,0x7ffdb840feb4,26071717,0,0x0,8
tick,0x7ffdb840feb4,26087687,0,0x0,8
tick,0x7ffdb840feb4,26103701,0,0x0,8
tick,0x7ffdb840feb4,26119690,0,0x0,8
tick,0x7ffdb840feb4,26135445,0,0x0,8
tick,0x7ffdb840feb4,26151128,0,0x0,8
tick,0x7ffdb840feb4,26166458,0,0x0,8
tick,0x7ffdb840feb4,26181685,0,0x0,8
tick,0x7ffdb840feb4,26197457,0,0x0,8
tick,0x7ffdb840feb4,26213454,0,0x0,8
tick,0x7ffdb840feb4,26229420,0,0x0,8
tick,0x7ffdb840feb4,26245143,0,0x0,8
tick,0x7ffdb840feb4,26260791,0,0x0,8
tick,0x7ffdb840feb4,26276802,0,0x0,8
tick,0x7ffdb840feb4,26292812,0,0x0,8
tick,0x7ffdb840feb4,26308829,0,0x0,8
tick,0x7ffdb840feb4,26325050,0,0x0,8
tick,0x7ffdb840feb4,26341041,0,0x0,8
tick,0x7ffdb840feb4,26355828,0,0x0,8
tick,0x7ffdb840feb4,26371873,0,0x0,8
tick,0x7ffdb840feb4,26387712,0,0x0,8
tick,0x7ffdb840feb4,26403880,0,0x0,8
tick,0x7ffdb840feb4,26419711,0,0x0,8
tick,0x7ffdb840feb4,26435483,0,0x0,8
tick,0x7ffdb840feb4,26450462,0,0x0,8
tick,0x7ffdb840feb4,26466105,0,0x0,8
tick,0x7ffdb840feb4,26481769,0,0x0,8
tick,0x7ffdb840feb4,26497746,0,0x0,8
tick,0x7ffdb840feb4,26512594,0,0x0,8
tick,0x7ffdb840feb4,26528761,0,0x0,8
tick,0x7ffdb840feb4,26544183,0,0x0,8
tick,0x7ffdb840feb4,26560465,0,0x0,8
tick,0x7ffdb840feb4,26574782,0,0x0,8
tick,0x7ffdb840feb4,26590170,0,0x0,8
tick,0x7ffdb840feb4,26605317,0,0x0,8
tick,0x7ffdb840feb4,26620755,0,0x0,8
tick,0x7ffdb840feb4,26636934,0,0x0,8
tick,0x7ffdb840feb4,26652938,0,0x0,8
tick,0x7ffdb840feb4,26668813,0,0x0,8
tick,0x7ffdb840feb4,26684504,0,0x0,8
tick,0x7ffdb840feb4,26700373,0,0x0,8
tick,0x7ffdb840feb4,26715632,0,0x0,8
tick,0x7ffdb840feb4,26731702,0,0x0,8
tick,0x7ffdb840feb4,26747237,0,0x0,8
tick,0x7ffdb840feb4,26762702,0,0x0,8
tick,0x7ffdb840feb4,26778561,0,0x0,8
tick,0x7ffdb840feb4,26794321,0,0x0,8
tick,0x7ffdb840feb4,26809863,0,0x0,8
tick,0x7ffdb840feb4,26825882,0,0x0,8
tick,0x7ffdb840feb4,26841028,0,0x0,8
tick,0x7ffdb840feb4,26856158,0,0x0,8
tick,0x7ffdb840feb4,26871745,0,0x0,8
tick,0x7ffdb840feb4,26887025,0,0x0,8
tick,0x7ffdb840feb4,26902861,0,0x0,8
tick,0x7ffdb840feb4,26918021,0,0x0,8
tick,0x7ffdb840feb4,26933594,0,0x0,8
tick,0x7ffdb840feb4,26949595,0,0x0,8
tick,0x7ffdb840feb4,26965776,0,0x0,8
tick,0x7ffdb840feb4,26980678,0,0x0,8
tick,0x7ffdb840feb4,26996195,0,0x0,8
tick,0x7ffdb840feb4,27011854,0,0x0,8
tick,0x7ffdb840feb4,27027140,0,0x0,8
tick,0x7ffdb840feb4,27042371,0,0x0,8
tick,0x7ffdb840feb4,27057992,0,0x0,8
tick,0x7ffdb840feb4,27072845,0,0x0,8
tick,0x7ffdb840feb4,27088575,0,0x0,8
tick,0x7ffdb840feb4,27103981,0,0x0,8
tick,0x7ffdb840feb4,27119166,0,0x0,8
tick,0x7ffdb840feb4,27134840,0,0x0,8
tick,0x7ffdb840feb4,27150508,0,0x0,8
tick,0x7ffdb840feb4,27166443,0,0x0,8
tick,0x7ffdb840feb4,27181827,0,0x0,8
tick,0x7ffdb840feb4,27196617,0,0x0,8
tick,0x7ffdb840feb4,27211875,0,0x0,8
tick,0x7ffdb840feb4,27227532,0,0x0,8
tick,0x7ffdb840feb4,27243465,0,0x0,8
tick,0x7ffdb840feb4,27257967,0,0x0,8
tick,0x7ffdb840feb4,27272972,0,0x0,8
tick,0x7ffdb840feb4,27287917,0,0x0,8
tick,0x7ffdb840feb4,27303936,0,0x0,8
tick,0x7ffdb840feb4,27319245,0,0x0,8
tick,0x7ffdb840feb4,27334536,0,0x0,8
tick,0x7ffdb840feb4,27350415,0,0x0,8
tick,0x7ffdb840feb4,27366126,0,0x0,8
tick,0x7ffdb840feb4,27381429,0,0x0,8
tick,0x7ffdb840feb4,27397283,0,0x0,8
tick,0x7ffdb840feb4,27413453,0,0x0,8
tick,0x7ffdb840feb4,27429279,0,0x0,8
tick,0x7ffdb840feb4,27444452,0,0x0,8
tick,0x7ffdb840feb4,27459680,0,0x0,8
tick,0x7ffdb840feb4,27474863,0,0x0,8
tick,0x7ffdb840feb4,27490032,0,0x0,8
tick,0x7ffdb840feb4,27505352,0,0x0,8
tick,0x7ffdb840feb4,27521369,0,0x0,8
tick,0x7ffdb840feb4,27536608,0,0x0,8
tick,0x7ffdb840feb4,27552502,0,0x0,8
tick,0x7ffdb840feb4,27567542,0,0x0,8
tick,0x7ffdb840feb4,27582927,0,0x0,8
tick,0x7ffdb840feb4,27598453,0,0x0,8
tick,0x7ffdb840feb4,27614447,0,0x0,8
tick,0x7ffdb840feb4,27630258,0,0x0,8
tick,0x7ffdb840feb4,27645394,0,0x0,8
tick,0x7ffdb840feb4,27660357,0,0x0,8
tick,0x7ffdb840feb4,27675828,0,0x0,8
tick,0x7ffdb840feb4,27691881,0,0x0,8
tick,0x7ffdb840feb4,27707688,0,0x0,8
tick,0x7ffdb840feb4,27722823,0,0x0,8
tick,0x7ffdb840feb4,27737893,0,0x0,8
tick,0x7ffdb840feb4,27753471,0,0x0,8
tick,0x7ffdb840feb4,27769925,0,0x0,8
tick,0x7ffdb840feb4,27785850,0,0x0,8
tick,0x7ffdb840feb4,27801036,0,0x0,8
tick,0x7ffdb840feb4,27816017,0,0x0,8
tick,0x7ffdb840feb4,27831542,0,0x0,8
tick,0x7ffdb840feb4,27847310,0,0x0,8
tick,0x7ffdb840feb4,27862849,0,0x0,8
tick,0x7ffdb840feb4,27879157,0,0x0,8
tick,0x7ffdb840feb4,27894681,0,0x0,8
tick,0x7ffdb840feb4,27910183,0,0x0,8
tick,0x7ffdb840feb4,27926030,0,0x0,8
tick,0x7ffdb840feb4,27941945,0,0x0,8
tick,0x7ffdb840feb4,27957523,0,0x0,8
tick,0x7ffdb840feb4,27973738,0,0x0,8
tick,0x7ffdb840feb4,27989310,0,0x0,8
tick,0x7ffdb840feb4,28004847,0,0x0,8
tick,0x7ffdb840feb4,28020403,0,0x0,8
tick,0x7ffdb840feb4,28036221,0,0x0,8
tick,0x7ffdb840feb4,28051690,0,0x0,8
tick,0x7ffdb840feb4,28067545,0,0x0,8
tick,0x7ffdb840feb4,28083564,0,0x0,8
tick,0x7ffdb840feb4,28098472,0,0x0,8
tick,0x7ffdb840feb4,28114148,0,0x0,8
tick,0x7ffdb840feb4,28129390,0,0x0,8
tick,0x7ffdb840feb4,28144378,0,0x0,8
tick,0x7ffdb840feb4,28160376,0,0x0,8
tick,0x7ffdb840feb4,28175735,0,0x0,8
tick,0x7ffdb840feb4,28191544,0,0x0,8
tick,0x7ffdb840feb4,28206897,0,0x0,8
tick,0x7ffdb840feb4,28222531,0,0x0,8
tick,0x7ffdb840feb4,28238040,0,0x0,8
tick,0x7ffdb840feb4,28253931,0,0x0,8
tick,0x7ffdb840feb4,28269510,0,0x0,8
tick,0x7ffdb840feb4,28284565,0,0x0,8
tick,0x7ffdb840feb4,28300653,0,0x0,8
tick,0x7ffdb840feb4,28316264,0,0x0,8
tick,0x7ffdb840feb4,28332208,0,0x0,8
tick,0x7ffdb840feb4,28347417,0,0x0,8
tick,0x7ffdb840feb4,28362966,0,0x0,8
tick,0x7ffdb840feb4,28377800,0,0x0,8
tick,0x7ffdb840feb4,28393001,0,0x0,8
tick,0x7ffdb840feb4,28408497,0,0x0,8
tick,0x7ffdb840feb4,28424506,0,0x0,8
tick,0x7ffdb840feb4,28440652,0,0x0,8
tick,0x7ffdb840feb4,28455810,0,0x0,8
tick,0x7ffdb840feb4,28471559,0,0x0,8
tick,0x7ffdb840feb4,28487173,0,0x0,8
tick,0x7ffdb840feb4,28501823,0,0x0,8
tick,0x7ffdb840feb4,28517528,0,0x0,8
tick,0x7ffdb840feb4,28533190,0,0x0,8
tick,0x7ffdb840feb4,28548621,0,0x0,8
tick,0x7ffdb840feb4,28563475,0,0x0,8
tick,0x7ffdb840feb4,28579647,0,0x0,8
tick,0x7ffdb840feb4,28595051,0,0x0,8
tick,0x7ffdb840feb4,28610510,0,0x0,8
tick,0x7ffdb840feb4,28625827,0,0x0,8
tick,0x7ffdb840feb4,28641567,0,0x0,8
tick,0x7ffdb840feb4,28656937,0,0x0,8
tick,0x7ffdb840feb4,28672536,0,0x0,8
tick,0x7ffdb840feb4,28687596,0,0x0,8
tick,0x7ffdb840feb4,28702821,0,0x0,8
tick,0x7ffdb840feb4,28718882,0,0x0,8
tick,0x7ffdb840feb4,28734632,0,0x0,8
tick,0x7ffdb840feb4,28750166,0,0x0,8
tick,0x7ffdb840feb4,28765207,0,0x0,8
tick,0x7ffdb840feb4,28780445,0,0x0,8
tick,0x7ffdb840feb4,28795945,0,0x0,8
tick,0x7ffdb840feb4,28811831,0,0x0,8
tick,0x7ffdb840feb4,28826953,0,0x0,8
tick,0x7ffdb840feb4,28842302,0,0x0,8
tick,0x7ffdb840feb4,28857823,0,0x0,8
tick,0x7ffdb840feb4,28872862,0,0x0,8
tick,0x7ffdb840feb4,28888664,0,0x0,8
tick,0x7ffdb840feb4,28903218,0,0x0,8
tick,0x7ffdb840feb4,28918862,0,0x0,8
tick,0x7ffdb840feb4,28935056,0,0x0,8
tick,0x7ffdb840feb4,28950555,0,0x0,8
tick,0x7ffdb840feb4,28965691,0,0x0,8
tick,0x7ffdb840feb4,28981011,0,0x0,8
tick,0x7ffdb840feb4,28996129,0,0x0,8
tick,0x7ffdb840feb4,29012060,0,0x0,8
tick,0x7ffdb840feb4,29027080,0,0x0,8
tick,0x7ffdb840feb4,29043174,0,0x0,8
tick,0x7ffdb840feb4,29058313,0,0x0,8
tick,0x7ffdb840feb4,29073439,0,0x0,8
tick,0x7ffdb840feb4,29088575,0,0x0,8
tick,0x7ffdb840feb4,29103991,0,0x0,8
tick,0x7ffdb840feb4,29119603,0,0x0,8
tick,0x7ffdb840feb4,29135624,0,0x0,8
tick,0x7ffdb840feb4,29150559,0,0x0,8
tick,0x7ffdb840feb4,29165636,0,0x0,8
tick,0x7ffdb840feb4,29181057,0,0x0,8
tick,0x7ffdb840feb4,29196931,0,0x0,8
tick,0x7ffdb840feb4,29212993,0,0x0,8
tick,0x7ffdb840feb4,29228083,0,0x0,8
tick,0x7ffdb840feb4,29243476,0,0x0,8
tick,0x7ffdb840feb4,29259092,0,0x0,8
tick,0x7ffdb840feb4,29275025,0,0x0,8
tick,0x7ffdb840feb4,29290102,0,0x0,8
tick,0x7ffdb840feb4,29305363,0,0x0,8
tick,0x7ffdb840feb4,29320903,0,0x0,8
tick,0x7ffdb840feb4,29336726,0,0x0,8
tick,0x7ffdb840feb4,29351901,0,0x0,8
tick,0x7ffdb840feb4,29366973,0,0x0,8
tick,0x7ffdb840feb4,29382183,0,0x0,8
tick,0x7ffdb840feb4,29397530,0,0x0,8
tick,0x7ffdb840feb4,29413687,0,0x0,8
tick,0x7ffdb840feb4,29429704,0,0x0,8
tick,0x7ffdb840feb4,29445676,0,0x0,8
tick,0x7ffdb840feb4,29461224,0,0x0,8
tick,0x7ffdb840feb4,29476710,0,0x0,8
tick,0x7ffdb840feb4,29491707,0,0x0,8
tick,0x7ffdb840feb4,29506794,0,0x0,8
tick,0x7ffdb840feb4,29522648,0,0x0,8
tick,0x7ffdb840feb4,29538158,0,0x0,8
tick,0x7ffdb840feb4,29553035,0,0x0,8
tick,0x7ffdb840feb4,29568090,0,0x0,8
tick,0x7ffdb840feb4,29584212,0,0x0,8
tick,0x7ffdb840feb4,29599423,0,0x0,8
tick,0x7ffdb840feb4,29614575,0,0x0,8
tick,0x7ffdb840feb4,29629966,0,0x0,8
tick,0x7ffdb840feb4,29645713,0,0x0,8
tick,0x7ffdb840feb4,29661594,0,0x0,8
tick,0x7ffdb840feb4,29676965,0,0x0,8
tick,0x7ffdb840feb4,29692462,0,0x0,8
tick,0x7ffdb840feb4,29708111,0,0x0,8
tick,0x7ffdb840feb4,29723586,0,0x0,8
tick,0x7ffdb840feb4,29738791,0,0x0,8
tick,0x7ffdb840feb4,29754266,0,0x0,8
tick,0x7ffdb840feb4,29769474,0,0x0,8
tick,0x7ffdb840feb4,29785110,0,0x0,8
tick,0x7ffdb840feb4,29800461,0,0x0,8
tick,0x7ffdb840feb4,29815744,0,0x0,8
tick,0x7ffdb840feb4,29831606,0,0x0,8
tick,0x7ffdb840feb4,29847714,0,0x0,8
tick,0x7ffdb840feb4,29862782,0,0x0,8
tick,0x7ffdb840feb4,29878416,0,0x0,8
tick,0x7ffdb840feb4,29893996,0,0x0,8
tick,0x7ffdb840feb4,29909854,0,0x0,8
tick,0x7ffdb840feb4,29925455,0,0x0,8
tick,0x7ffdb840feb4,29940988,0,0x0,8
tick,0x7ffdb840feb4,29956720,0,0x0,8
tick,0x7ffdb840feb4,29972009,0,0x0,8
tick,0x7ffdb840feb4,29987843,0,0x0,8
tick,0x7ffdb840feb4,30003359,0,0x0,8
tick,0x7ffdb840feb4,30019038,0,0x0,8
tick,0x7ffdb840feb4,30035048,0,0x0,8
tick,0x7ffdb840feb4,30050791,0,0x0,8
tick,0x7ffdb840feb4,30066289,0,0x0,8
tick,0x7ffdb840feb4,30081468,0,0x0,8
tick,0x7ffdb840feb4,30097164,0,0x0,8
tick,0x7ffdb840feb4,30112263,0,0x0,8
tick,0x7ffdb840feb4,30127270,0,0x0,8
tick,0x7ffdb840feb4,30143263,0,0x0,8
tick,0x7ffdb840feb4,30158615,0,0x0,8
tick,0x7ffdb840feb4,30173950,0,0x0,8
tick,0x7ffdb840feb4,30189284,0,0x0,8
tick,0x7ffdb840feb4,30204812,0,0x0,8
tick,0x7ffdb840feb4,30220572,0,0x0,8
tick,0x7ffdb840feb4,30236614,0,0x0,8
tick,0x7ffdb840feb4,30251800,0,0x0,8
tick,0x7ffdb840feb4,30267347,0,0x0,8
tick,0x7ffdb840feb4,30282517,0,0x0,8
tick,0x7ffdb840feb4,30297989,0,0x0,8
tick,0x7ffdb840feb4,30313334,0,0x0,8
tick,0x7ffdb840feb4,30329007,0,0x0,8
tick,0x7ffdb840feb4,30344442,0,0x0,8
tick,0x7ffdb840feb4,30360378,0,0x0,8
tick,0x7ffdb840feb4,30375781,0,0x0,8
tick,0x7ffdb840feb4,30391327,0,0x0,8
tick,0x7ffdb840feb4,30406734,0,0x0,8
tick,0x7ffdb840feb4,30422545,0,0x0,8
tick,0x7ffdb840feb4,30438543,0,0x0,8
tick,0x7ffdb840feb4,30454714,0,0x0,8
tick,0x7ffdb840feb4,30470022,0,0x0,8
tick,0x7ffdb840feb4,30485635,0,0x0,8
tick,0x7ffdb840feb4,30501572,0,0x0,8
tick,0x7ffdb840feb4,30516746,0,0x0,8
tick,0x7ffdb840feb4,30533036,0,0x0,8
tick,0x7ffdb840feb4,30548817,0,0x0,8
tick,0x7ffdb840feb4,30564278,0,0x0,8
tick,0x7ffdb840feb4,30579756,0,0x0,8
tick,0x7ffdb840feb4,30594932,0,0x0,8
tick,0x7ffdb840feb4,30610314,0,0x0,8
tick,0x7ffdb840feb4,30625121,0,0x0,8
tick,0x7ffdb840feb4,30640629,0,0x0,8
tick,0x7ffdb840feb4,30656390,0,0x0,8
tick,0x7ffdb840feb4,30671358,0,0x0,8
tick,0x7ffdb840feb4,30686974,0,0x0,8
tick,0x7ffdb840feb4,30702969,0,0x0,8
tick,0x7ffdb840feb4,30718749,0,0x0,8
tick,0x7ffdb840feb4,30734546,0,0x0,8
tick,0x7ffdb840feb4,30750119,0,0x0,8
tick,0x7ffdb840feb4,30766126,0,0x0,8
tick,0x7ffdb840feb4,30781496,0,0x0,8
tick,0x7ffdb840feb4,30797004,0,0x0,8
tick,0x7ffdb840feb4,30812146,0,0x0,8
tick,0x7ffdb840feb4,30828177,0,0x0,8
tick,0x7ffdb840feb4,30843429,0,0x0,8
tick,0x7ffdb840feb4,30858989,0,0x0,8
tick,0x7ffdb840feb4,30874524,0,0x0,8
tick,0x7ffdb840feb4,30890418,0,0x0,8
tick,0x7ffdb840feb4,30905718,0,0x0,8
tick,0x7ffdb840feb4,30920790,0,0x0,8
tick,0x7ffdb840feb4,30935900,0,0x0,8
tick,0x7ffdb840feb4,30951260,0,0x0,8
tick,0x7ffdb840feb4,30966302,0,0x0,8
tick,0x7ffdb840feb4,30981658,0,0x0,8
tick,0x7ffdb840feb4,30997116,0,0x0,8
tick,0x7ffdb840feb4,31012286,0,0x0,8
tick,0x7ffdb840feb4,31027900,0,0x0,8
tick,0x7ffdb840feb4,31042970,0,0x0,8
tick,0x7ffdb840feb4,31058773,0,0x0,8
tick,0x7ffdb840feb4,31074383,0,0x0,8
tick,0x7ffdb840feb4,31090433,0,0x0,8
tick,0x7ffdb840feb4,31106190,0,0x0,8
tick,0x7ffdb840feb4,31121710,0,0x0,8
tick,0x7ffdb840feb4,31137362,0,0x0,8
tick,0x7ffdb840feb4,31152391,0,0x0,8
tick,0x7ffdb840feb4,31167762,0,0x0,8
tick,0x7ffdb840feb4,31183456,0,0x0,8
tick,0x7ffdb840feb4,31198340,0,0x0,8
tick,0x7ffdb840feb4,31213539,0,0x0,8
tick,0x7ffdb840feb4,31229771,0,0x0,8
tick,0x7ffdb840feb4,31244765,0,0x0,8
tick,0x7ffdb840feb4,31260538,0,0x0,8
tick,0x7ffdb840feb4,31276213,0,0x0,8
tick,0x7ffdb840feb4,31292081,0,0x0,8
tick,0x7ffdb840feb4,31307268,0,0x0,8
tick,0x7ffdb840feb4,31322739,0,0x0,8
tick,0x7ffdb840feb4,31338708,0,0x0,8
tick,0x7ffdb840feb4,31353812,0,0x0,8
tick,0x7ffdb840feb4,31368685,0,0x0,8
tick,0x7ffdb840feb4,31384038,0,0x0,8
tick,0x7ffdb840feb4,31399545,0,0x0,8
tick,0x7ffdb840feb4,31414677,0,0x0,8
tick,0x7ffdb840feb4,31430682,0,0x0,8
tick,0x7ffdb840feb4,31446878,0,0x0,8
tick,0x7ffdb840feb4,31462698,0,0x0,8
tick,0x7ffdb840feb4,31478176,0,0x0,8
tick,0x7ffdb840feb4,31493194,0,0x0,8
tick,0x7ffdb840feb4,31508372,0,0x0,8
tick,0x7ffdb840feb4,31523844,0,0x0,8
tick,0x7ffdb840feb4,31538883,0,0x0,8
tick,0x7ffdb840feb4,31554729,0,0x0,8
tick,0x7ffdb840feb4,31569922,0,0x0,8
tick,0x7ffdb840feb4,31585209,0,0x0,8
tick,0x7ffdb840feb4,31600283,0,0x0,8
tick,0x7ffdb840feb4,31615461,0,0x0,8
tick,0x7ffdb840feb4,31630802,0,0x0,8
tick,0x7ffdb840feb4,31645949,0,0x0,8
tick,0x7ffdb840feb4,31661216,0,0x0,8
tick,0x7ffdb840feb4,31676376,0,0x0,8
tick,0x7ffdb840feb4,31692208,0,0x0,8
tick,0x7ffdb840feb4,31707110,0,0x0,8
tick,0x7ffdb840feb4,31722872,0,0x0,8
tick,0x7ffdb840feb4,31738117,0,0x0,8
tick,0x7ffdb840feb4,31753140,0,0x0,8
tick,0x7ffdb840feb4,31768618,0,0x0,8
tick,0x7ffdb840feb4,31784032,0,0x0,8
tick,0x7ffdb840feb4,31799237,0,0x0,8
tick,0x7ffdb840feb4,31814306,0,0x0,8
tick,0x7ffdb840feb4,31829907,0,0x0,8
tick,0x7ffdb840feb4,31845059,0,0x0,8
tick,0x7ffdb840feb4,31861318,0,0x0,8
tick,0x7ffdb840feb4,31877627,0,0x0,8
tick,0x7ffdb840feb4,31893327,0,0x0,8
tick,0x7ffdb840feb4,31908466,0,0x0,8
tick,0x7ffdb840feb4,31923768,0,0x0,8
tick,0x7ffdb840feb4,31939437,0,0x0,8
tick,0x7ffdb840feb4,31955778,0,0x0,8
tick,0x7ffdb840feb4,31970881,0,0x0,8
tick,0x7ffdb840feb4,31986615,0,0x0,8
tick,0x7ffdb840feb4,32001817,0,0x0,8
tick,0x7ffdb840feb4,32016999,0,0x0,8
tick,0x7ffdb840feb4,32033201,0,0x0,8
tick,0x7ffdb840feb4,32049407,0,0x0,8
tick,0x7ffdb840feb4,32064809,0,0x0,8
tick,0x7ffdb840feb4,32080480,0,0x0,8
tick,0x7ffdb840feb4,32096488,0,0x0,8
tick,0x7ffdb840feb4,32112467,0,0x0,8
tick,0x7ffdb840feb4,32127965,0,0x0,8
tick,0x7ffdb840feb4,32143881,0,0x0,8
tick,0x7ffdb840feb4,32158396,0,0x0,8
tick,0x7ffdb840feb4,32173730,0,0x0,8
tick,0x7ffdb840feb4,32189727,0,0x0,8
tick,0x7ffdb840feb4,32204359,0,0x0,8
tick,0x7ffdb840feb4,32219972,0,0x0,8
tick,0x7ffdb840feb4,32235399,0,0x0,8
tick,0x7ffdb840feb4,32250752,0,0x0,8
tick,0x7ffdb840feb4,32266219,0,0x0,8
tick,0x7ffdb840feb4,32281688,0,0x0,8
tick,0x7ffdb840feb4,32297186,0,0x0,8
tick,0x7ffdb840feb4,32312075,0,0x0,8
tick,0x7ffdb840feb4,32328285,0,0x0,8
tick,0x7ffdb840feb4,32343277,0,0x0,8
tick,0x7ffdb840feb4,32358682,0,0x0,8
tick,0x7ffdb840feb4,32374858,0,0x0,8
tick,0x7ffdb840feb4,32390909,0,0x0,8
tick,0x7ffdb840feb4,32406893,0,0x0,8
tick,0x7ffdb840feb4,32423306,0,0x0,8
tick,0x7ffdb840feb4,32439414,0,0x0,8
tick,0x7ffdb840feb4,32455232,0,0x0,8
tick,0x7ffdb840feb4,32471234,0,0x0,8
tick,0x7ffdb840feb4,32486467,0,0x0,8
tick,0x7ffdb840feb4,32501750,0,0x0,8
tick,0x7ffdb840feb4,32517264,0,0x0,8
tick,0x7ffdb840feb4,32533299,0,0x0,8
tick,0x7ffdb840feb4,32548989,0,0x0,8
tick,0x7ffdb840feb4,32564103,0,0x0,8
tick,0x7ffdb840feb4,32579446,0,0x0,8
tick,0x7ffdb840feb4,32595398,0,0x0,8
tick,0x7ffdb840feb4,32610668,0,0x0,8
tick,0x7ffdb840feb4,32625869,0,0x0,8
tick,0x7ffdb840feb4,32642141,0,0x0,8
tick,0x7ffdb840feb4,32656905,0,0x0,8
tick,0x7ffdb840feb4,32672130,0,0x0,8
tick,0x7ffdb840feb4,32687562,0,0x0,8
tick,0x7ffdb840feb4,32702916,0,0x0,8
tick,0x7ffdb840feb4,32718421,0,0x0,8
tick,0x7ffdb840feb4,32734084,0,0x0,8
tick,0x7ffdb840feb4,32749150,0,0x0,8
tick,0x7ffdb840feb4,32764921,0,0x0,8
tick,0x7ffdb840feb4,32780467,0,0x0,8
tick,0x7ffdb840feb4,32796030,0,0x0,8
tick,0x7ffdb840feb4,32811066,0,0x0,8
tick,0x7ffdb840feb4,32826513,0,0x0,8
tick,0x7ffdb840feb4,32842399,0,0x0,8
tick,0x7ffdb840feb4,32858841,0,0x0,8
tick,0x7ffdb840feb4,32875095,0,0x0,8
tick,0x7ffdb840feb4,32891265,0,0x0,8
tick,0x7ffdb840feb4,32907229,0,0x0,8
tick,0x7ffdb840feb4,32923147,0,0x0,8
tick,0x7ffdb840feb4,32938795,0,0x0,8
tick,0x7ffdb840feb4,32954926,0,0x0,8
tick,0x7ffdb840feb4,32970488,0,0x0,8
tick,0x7ffdb840feb4,32986689,0,0x0,8
tick,0x7ffdb840feb4,33002847,0,0x0,8
tick,0x7ffdb840feb4,33018445,0,0x0,8
tick,0x7ffdb840feb4,33034566,0,0x0,8
tick,0x7ffdb840feb4,33050315,0,0x0,8
tick,0x7ffdb840feb4,33066139,0,0x0,8
tick,0x7ffdb840feb4,33081693,0,0x0,8
tick,0x7ffdb840feb4,33097876,0,0x0,8
tick,0x7ffdb840feb4,33114057,0,0x0,8
tick,0x7ffdb840feb4,33129982,0,0x0,8
tick,0x7ffdb840feb4,33145534,0,0x0,8
tick,0x7ffdb840feb4,33161958,0,0x0,8
tick,0x7ffdb840feb4,33177761,0,0x0,8
tick,0x7ffdb840feb4,33193104,0,0x0,8
tick,0x7ffdb840feb4,33208201,0,0x0,8
tick,0x7ffdb840feb4,33223439,0,0x0,8
tick,0x7ffdb840feb4,33239657,0,0x0,8
tick,0x7ffdb840feb4,33254124,0,0x0,8
tick,0x7ffdb840feb4,33270275,0,0x0,8
tick,0x7ffdb840feb4,33286635,0,0x0,8
tick,0x7ffdb840feb4,33302250,0,0x0,8
tick,0x7ffdb840feb4,33317967,0,0x0,8
tick,0x7ffdb840feb4,33333678,0,0x0,8
tick,0x7ffdb840feb4,33348582,0,0x0,8
tick,0x7ffdb840feb4,33364501,0,0x0,8
tick,0x7ffdb840feb4,33379822,0,0x0,8
tick,0x7ffdb840feb4,33395385,0,0x0,8
tick,0x7ffdb840feb4,33411177,0,0x0,8
tick,0x7ffdb840feb4,33426292,0,0x0,8
tick,0x7ffdb840feb4,33442430,0,0x0,8
tick,0x7ffdb840feb4,33457288,0,0x0,8
tick,0x7ffdb840feb4,33473470,0,0x0,8
tick,0x7ffdb840feb4,33489302,0,0x0,8
tick,0x7ffdb840feb4,33505236,0,0x0,8
tick,0x7ffdb840feb4,33521245,0,0x0,8
tick,0x7ffdb840feb4,33536917,0,0x0,8
tick,0x7ffdb840feb4,33552637,0,0x0,8
tick,0x7ffdb840feb4,33567885,0,0x0,8
tick,0x7ffdb840feb4,33583237,0,0x0,8
tick,0x7ffdb840feb4,33599387,0,0x0,8
tick,0x7ffdb840feb4,33615330,0,0x0,8
tick,0x7ffdb840feb4,33631287,0,0x0,8
tick,0x7ffdb840feb4,33646423,0,0x0,8
tick,0x7ffdb840feb4,33661570,0,0x0,8
tick,0x7ffdb840feb4,33676977,0,0x0,8
tick,0x7ffdb840feb4,33692984,0,0x0,8
tick,0x7ffdb840feb4,33708481,0,0x0,8
tick,0x7ffdb840feb4,33724441,0,0x0,8
tick,0x7ffdb840feb4,33740296,0,0x0,8
tick,0x7ffdb840feb4,33754822,0,0x0,8
tick,0x7ffdb840feb4,33770425,0,0x0,8
tick,0x7ffdb840feb4,33785250,0,0x0,8
tick,0x7ffdb840feb4,33800444,0,0x0,8
tick,0x7ffdb840feb4,33816722,0,0x0,8
tick,0x7ffdb840feb4,33833105,0,0x0,8
tick,0x7ffdb840feb4,33848349,0,0x0,8
tick,0x7ffdb840feb4,33863355,0,0x0,8
tick,0x7ffdb840feb4,33878795,0,0x0,8
tick,0x7ffdb840feb4,33894362,0,0x0,8
tick,0x7ffdb840feb4,33909803,0,0x0,8
tick,0x7ffdb840feb4,33925810,0,0x0,8
tick,0x7ffdb840feb4,33941919,0,0x0,8
tick,0x7ffdb840feb4,33958060,0,0x0,8
tick,0x7ffdb840feb4,33973714,0,0x0,8
tick,0x7ffdb840feb4,33990123,0,0x0,8
tick,0x7ffdb840feb4,34005677,0,0x0,8
tick,0x7ffdb840feb4,34021242,0,0x0,8
tick,0x7ffdb840feb4,34036980,0,0x0,8
tick,0x7ffdb840feb4,34052115,0,0x0,8
tick,0x7ffdb840feb4,34067698,0,0x0,8
tick,0x7ffdb840feb4,34083146,0,0x0,8
tick,0x7ffdb840feb4,34098980,0,0x0,8
tick,0x7ffdb840feb4,34115364,0,0x0,8
tick,0x7ffdb840feb4,34130998,0,0x0,8
tick,0x7ffdb840feb4,34146801,0,0x0,8
tick,0x7ffdb840feb4,34162544,0,0x0,8
tick,0x7ffdb840feb4,34178338,0,0x0,8
tick,0x7ffdb840feb4,34193524,0,0x0,8
tick,0x7ffdb840feb4,34209128,0,0x0,8
tick,0x7ffdb840feb4,34224555,0,0x0,8
tick,0x7ffdb840feb4,34240781,0,0x0,8
tick,0x7ffdb840feb4,34255493,0,0x0,8
tick,0x7ffdb840feb4,34270624,0,0x0,8
tick,0x7ffdb840feb4,34286752,0,0x0,8
tick,0x7ffdb840feb4,34302272,0,0x0,8
tick,0x7ffdb840feb4,34317995,0,0x0,8
tick,0x7ffdb840feb4,34333685,0,0x0,8
tick,0x7ffdb840feb4,34349667,0,0x0,8
tick,0x7ffdb840feb4,34365975,0,0x0,8
tick,0x7ffdb840feb4,34381351,0,0x0,8
tick,0x7ffdb840feb4,34396335,0,0x0,8
tick,0x7ffdb840feb4,34412623,0,0x0,8
tick,0x7ffdb840feb4,34428644,0,0x0,8
tick,0x7ffdb840feb4,34444349,0,0x0,8
tick,0x7ffdb840feb4,34460592,0,0x0,8
tick,0x7ffdb840feb4,34476362,0,0x0,8
tick,0x7ffdb840feb4,34491777,0,0x0,8
tick,0x7ffdb840feb4,34507653,0,0x0,8
tick,0x7ffdb840feb4,34522972,0,0x0,8
tick,0x7ffdb840feb4,34538742,0,0x0,8
tick,0x7ffdb840feb4,34553741,0,0x0,8
tick,0x7ffdb840feb4,34569581,0,0x0,8
tick,0x7ffdb840feb4,34584947,0,0x0,8
tick,0x7ffdb840feb4,34599851,0,0x0,8
tick,0x7ffdb840feb4,34615135,0,0x0,8
tick,0x7ffdb840feb4,34630841,0,0x0,8
tick,0x7ffdb840feb4,34646365,0,0x0,8
tick,0x7ffdb840feb4,34661363,0,0x0,8
tick,0x7ffdb840feb4,34676576,0,0x0,8
tick,0x7ffdb840feb4,34691811,0,0x0,8
tick,0x7ffdb840feb4,34707364,0,0x0,8
tick,0x7ffdb840feb4,34722742,0,0x0,8
tick,0x7ffdb840feb4,34738365,0,0x0,8
tick,0x7ffdb840feb4,34754533,0,0x0,8
tick,0x7ffdb840feb4,34769774,0,0x0,8
tick,0x7ffdb840feb4,34785375,0,0x0,8
tick,0x7ffdb840feb4,34801380,0,0x0,8
tick,0x7ffdb840feb4,34816762,0,0x0,8
tick,0x7ffdb840feb4,34832931,0,0x0,8
tick,0x7ffdb840feb4,34847752,0,0x0,8
tick,0x7ffdb840feb4,34863765,0,0x0,8
tick,0x7ffdb840feb4,34879668,0,0x0,8
tick,0x7ffdb840feb4,34894971,0,0x0,8
tick,0x7ffdb840feb4,34910439,0,0x0,8
tick,0x7ffdb840feb4,34925788,0,0x0,8
tick,0x7ffdb840feb4,34941121,0,0x0,8
tick,0x7ffdb840feb4,34956386,0,0x0,8
tick,0x7ffdb840feb4,34972009,0,0x0,8
tick,0x7ffdb840feb4,34987582,0,0x0,8
tick,0x7ffdb840feb4,35003411,0,0x0,8
tick,0x7ffdb840feb4,35018907,0,0x0,8
tick,0x7ffdb840feb4,35034973,0,0x0,8
tick,0x7ffdb840feb4,35050922,0,0x0,8
tick,0x7ffdb840feb4,35066100,0,0x0,8
tick,0x7ffdb840feb4,35082016,0,0x0,8
tick,0x7ffdb840feb4,35097923,0,0x0,8
tick,0x7ffdb840feb4,35112916,0,0x0,8
tick,0x7ffdb840feb4,35128954,0,0x0,8
tick,0x7ffdb840feb4,35144251,0,0x0,8
tick,0x7ffdb840feb4,35159415,0,0x0,8
tick,0x7ffdb840feb4,35174901,0,0x0,8
tick,0x7ffdb840feb4,35190420,0,0x0,8
tick,0x7ffdb840feb4,35206435,0,0x0,8
tick,0x7ffdb840feb4,35221863,0,0x0,8
tick,0x7ffdb840feb4,35237633,0,0x0,8
tick,0x7ffdb840feb4,35252428,0,0x0,8
tick,0x7ffdb840feb4,35268426,0,0x0,8
tick,0x7ffdb840feb4,35284427,0,0x0,8
tick,0x7ffdb840feb4,35300446,0,0x0,8
tick,0x7ffdb840feb4,35316440,0,0x0,8
tick,0x7ffdb840feb4,35332445,0,0x0,8
tick,0x7ffdb840feb4,35348435,0,0x0,8
tick,0x7ffdb840feb4,35364451,0,0x0,8
tick,0x7ffdb840feb4,35380451,0,0x0,8
tick,0x7ffdb840feb4,35396449,0,0x0,8
tick,0x7ffdb840feb4,35412447,0,0x0,8
tick,0x7ffdb840feb4,35428448,0,0x0,8
tick,0x7ffdb840feb4,35444460,0,0x0,8
tick,0x7ffdb840feb4,35460462,0,0x0,8
tick,0x7ffdb840feb4,35475460,0,0x0,8
tick,0x7ffdb840feb4,35490464,0,0x0,8
tick,0x7ffdb840feb4,35506472,0,0x0,8
tick,0x7ffdb840feb4,35521595,0,0x0,8
tick,0x7ffdb840feb4,35536944,0,0x0,8
tick,0x7ffdb840feb4,35552380,0,0x0,8
tick,0x7ffdb840feb4,35567634,0,0x0,8
tick,0x7ffdb840feb4,35582898,0,0x0,8
tick,0x7ffdb840feb4,35598117,0,0x0,8
tick,0x7ffdb840feb4,35613961,0,0x0,8
tick,0x7ffdb840feb4,35629172,0,0x0,8
tick,0x7ffdb840feb4,35645007,0,0x0,8
tick,0x7ffdb840feb4,35660393,0,0x0,8
tick,0x7ffdb840feb4,35675647,0,0x0,8
tick,0x7ffdb840feb4,35690973,0,0x0,8
tick,0x7ffdb840feb4,35706920,0,0x0,8
tick,0x7ffdb840feb4,35722595,0,0x0,8
tick,0x7ffdb840feb4,35738018,0,0x0,8
tick,0x7ffdb840feb4,35753525,0,0x0,8
tick,0x7ffdb840feb4,35768699,0,0x0,8
tick,0x7ffdb840feb4,35784076,0,0x0,8
tick,0x7ffdb840feb4,35799814,0,0x0,8
tick,0x7ffdb840feb4,35815305,0,0x0,8
tick,0x7ffdb840feb4,35830918,0,0x0,8
tick,0x7ffdb840feb4,35846465,0,0x0,8
tick,0x7ffdb840feb4,35862199,0,0x0,8
tick,0x7ffdb840feb4,35878024,0,0x0,8
tick,0x7ffdb840feb4,35894239,0,0x0,8
tick,0x7ffdb840feb4,35909890,0,0x0,8
tick,0x7ffdb840feb4,35925939,0,0x0,8
tick,0x7ffdb840feb4,35941555,0,0x0,8
tick,0x7ffdb840feb4,35957728,0,0x0,8
tick,0x7ffdb840feb4,35972843,0,0x0,8
tick,0x7ffdb840feb4,35988792,0,0x0,8
tick,0x7ffdb840feb4,36003725,0,0x0,8
tick,0x7ffdb840feb4,36019923,0,0x0,8
tick,0x7ffdb840feb4,36035008,0,0x0,8
tick,0x7ffdb840feb4,36050332,0,0x0,8
tick,0x7ffdb840feb4,36065960,0,0x0,8
tick,0x7ffdb840feb4,36082226,0,0x0,8
tick,0x7ffdb840feb4,36098234,0,0x0,8
tick,0x7ffdb840feb4,36113897,0,0x0,8
tick,0x7ffdb840feb4,36129431,0,0x0,8
tick,0x7ffdb840feb4,36145545,0,0x0,8
tick,0x7ffdb840feb4,36160478,0,0x0,8
tick,0x7ffdb840feb4,36176222,0,0x0,8
tick,0x7ffdb840feb4,36191231,0,0x0,8
tick,0x7ffdb840feb4,36206731,0,0x0,8
tick,0x7ffdb840feb4,36221705,0,0x0,8
tick,0x7ffdb840feb4,36237694,0,0x0,8
tick,0x7ffdb840feb4,36252847,0,0x0,8
tick,0x7ffdb840feb4,36268575,0,0x0,8
tick,0x7ffdb840feb4,36283712,0,0x0,8
tick,0x7ffdb840feb4,36299686,0,0x0,8
tick,0x7ffdb840feb4,36315677,0,0x0,8
tick,0x7ffdb840feb4,36331687,0,0x0,8
tick,0x7ffdb840feb4,36346557,0,0x0,8
tick,0x7ffdb840feb4,36361567,0,0x0,8
tick,0x7ffdb840feb4,36377560,0,0x0,8
tick,0x7ffdb840feb4,36393562,0,0x0,8
tick,0x7ffdb840feb4,36409570,0,0x0,8
tick,0x7ffdb840feb4,36425571,0,0x0,8
tick,0x7ffdb840feb4,36441565,0,0x0,8
tick,0x7ffdb840feb4,36457587,0,0x0,8
tick,0x7ffdb840feb4,36472595,0,0x0,8
tick,0x7ffdb840feb4,36488594,0,0x0,8
tick,0x7ffdb840feb4,36503584,0,0x0,8
tick,0x7ffdb840feb4,36519596,0,0x0,8
tick,0x7ffdb840feb4,36535594,0,0x0,8
tick,0x7ffdb840feb4,36551587,0,0x0,8
tick,0x7ffdb840feb4,36567584,0,0x0,8
tick,0x7ffdb840feb4,36583597,0,0x0,8
tick,0x7ffdb840feb4,36599595,0,0x0,8
tick,0x7ffdb840feb4,36614601,0,0x0,8
tick,0x7ffdb840feb4,36630576,0,0x0,8
tick,0x7ffdb840feb4,36646452,0,0x0,8
tick,0x7ffdb840feb4,36662060,0,0x0,8
tick,0x7ffdb840feb4,36677055,0,0x0,8
tick,0x7ffdb840feb4,36692231,0,0x0,8
tick,0x7ffdb840feb4,36707413,0,0x0,8
tick,0x7ffdb840feb4,36722827,0,0x0,8
tick,0x7ffdb840feb4,36738071,0,0x0,8
tick,0x7ffdb840feb4,36753411,0,0x0,8
tick,0x7ffdb840feb4,36768722,0,0x0,8
tick,0x7ffdb840feb4,36783715,0,0x0,8
tick,0x7ffdb840feb4,36798758,0,0x0,8
tick,0x7ffdb840feb4,36814079,0,0x0,8
tick,0x7ffdb840feb4,36829582,0,0x0,8
tick,0x7ffdb840feb4,36844780,0,0x0,8
tick,0x7ffdb840feb4,36860102,0,0x0,8
tick,0x7ffdb840feb4,36875754,0,0x0,8
tick,0x7ffdb840feb4,36891750,0,0x0,8
tick,0x7ffdb840feb4,36907466,0,0x0,8
tick,0x7ffdb840feb4,36922784,0,0x0,8
tick,0x7ffdb840feb4,36938373,0,0x0,8
tick,0x7ffdb840feb4,36953425,0,0x0,8
tick,0x7ffdb840feb4,36968787,0,0x0,8
tick,0x7ffdb840feb4,36984805,0,0x0,8
tick,0x7ffdb840feb4,37000646,0,0x0,8
tick,0x7ffdb840feb4,37015883,0,0x0,8
tick,0x7ffdb840feb4,37031645,0,0x0,8
tick,0x7ffdb840feb4,37047503,0,0x0,8
tick,0x7ffdb840feb4,37062873,0,0x0,8
tick,0x7ffdb840feb4,37077878,0,0x0,8
tick,0x7ffdb840feb4,37093221,0,0x0,8
tick,0x7ffdb840feb4,37109019,0,0x0,8
tick,0x7ffdb840feb4,37124095,0,0x0,8
tick,0x7ffdb840feb4,37139670,0,0x0,8
tick,0x7ffdb840feb4,37155446,0,0x0,8
tick,0x7ffdb840feb4,37170669,0,0x0,8
tick,0x7ffdb840feb4,37186672,0,0x0,8
tick,0x7ffdb840feb4,37201668,0,0x0,8
tick,0x7ffdb840feb4,37217457,0,0x0,8
tick,0x7ffdb840feb4,37232665,0,0x0,8
tick,0x7ffdb840feb4,37247671,0,0x0,8
tick,0x7ffdb840feb4,37263674,0,0x0,8
tick,0x7ffdb840feb4,37279674,0,0x0,8
tick,0x7ffdb840feb4,37295676,0,0x0,8
tick,0x7ffdb840feb4,37311674,0,0x0,8
tick,0x7ffdb840feb4,37327679,0,0x0,8
tick,0x7ffdb840feb4,37343686,0,0x0,8
tick,0x7ffdb840feb4,37359701,0,0x0,8
tick,0x7ffdb840feb4,37375690,0,0x0,8
tick,0x7ffdb840feb4,37390688,0,0x0,8
tick,0x7ffdb840feb4,37406714,0,0x0,8
tick,0x7ffdb840feb4,37421694,0,0x0,8
tick,0x7ffdb840feb4,37437701,0,0x0,8
tick,0x7ffdb840feb4,37453706,0,0x0,8
tick,0x7ffdb840feb4,37469713,0,0x0,8
tick,0x7ffdb840feb4,37485706,0,0x0,8
tick,0x7ffdb840feb4,37501713,0,0x0,8
tick,0x7ffdb840feb4,37517727,0,0x0,8
tick,0x7ffdb840feb4,37532881,0,0x0,8
tick,0x7ffdb840feb4,37548600,0,0x0,8
tick,0x7ffdb840feb4,37564033,0,0x0,8
tick,0x7ffdb840feb4,37579717,0,0x0,8
tick,0x7ffdb840feb4,37595714,0,0x0,8
tick,0x7ffdb840feb4,37611709,0,0x0,8
tick,0x7ffdb840feb4,37627814,0,0x0,8
tick,0x7ffdb840feb4,37643422,0,0x0,8
tick,0x7ffdb840feb4,37658706,0,0x0,8
tick,0x7ffdb840feb4,37673721,0,0x0,8
tick,0x7ffdb840feb4,37689013,0,0x0,8
tick,0x7ffdb840feb4,37705002,0,0x0,8
tick,0x7ffdb840feb4,37719751,0,0x0,8
tick,0x7ffdb840feb4,37735744,0,0x0,8
tick,0x7ffdb840feb4,37751521,0,0x0,8
tick,0x7ffdb840feb4,37766733,0,0x0,8
tick,0x7ffdb840feb4,37781967,0,0x0,8
tick,0x7ffdb840feb4,37797748,0,0x0,8
tick,0x7ffdb840feb4,37813182,0,0x0,8
tick,0x7ffdb840feb4,37828549,0,0x0,8
tick,0x7ffdb840feb4,37843988,0,0x0,8
tick,0x7ffdb840feb4,37859407,0,0x0,8
tick,0x7ffdb840feb4,37874771,0,0x0,8
tick,0x7ffdb840feb4,37890775,0,0x0,8
tick,0x7ffdb840feb4,37906305,0,0x0,8
tick,0x7ffdb840feb4,37921881,0,0x0,8
tick,0x7ffdb840feb4,37937296,0,0x0,8
tick,0x7ffdb840feb4,37952536,0,0x0,8
tick,0x7ffdb840feb4,37967921,0,0x0,8
tick,0x7ffdb840feb4,37983733,0,0x0,8
tick,0x7ffdb840feb4,37999738,0,0x0,8
tick,0x7ffdb840feb4,38015378,0,0x0,8
tick,0x7ffdb840feb4,38030717,0,0x0,8
tick,0x7ffdb840feb4,38045956,0,0x0,8
tick,0x7ffdb840feb4,38061378,0,0x0,8
tick,0x7ffdb840feb4,38076771,0,0x0,8
tick,0x7ffdb840feb4,38092763,0,0x0,8
tick,0x7ffdb840feb4,38108795,0,0x0,8
tick,0x7ffdb840feb4,38123990,0,0x0,8
tick,0x7ffdb840feb4,38139280,0,0x0,8
tick,0x7ffdb840feb4,38154568,0,0x0,8
tick,0x7ffdb840feb4,38169750,0,0x0,8
tick,0x7ffdb840feb4,38185748,0,0x0,8
tick,0x7ffdb840feb4,38201262,0,0x0,8
tick,0x7ffdb840feb4,38216454,0,0x0,8
tick,0x7ffdb840feb4,38231718,0,0x0,8
tick,0x7ffdb840feb4,38247778,0,0x0,8
tick,0x7ffdb840feb4,38262588,0,0x0,8
tick,0x7ffdb840feb4,38277655,0,0x0,8
tick,0x7ffdb840feb4,38292868,0,0x0,8
tick,0x7ffdb840feb4,38307935,0,0x0,8
tick,0x7ffdb840feb4,38323541,0,0x0,8
tick,0x7ffdb840feb4,38338695,0,0x0,8
tick,0x7ffdb840feb4,38354513,0,0x0,8
tick,0x7ffdb840feb4,38369913,0,0x0,8
tick,0x7ffdb840feb4,38385728,0,0x0,8
tick,0x7ffdb840feb4,38401332,0,0x0,8
tick,0x7ffdb840feb4,38417738,0,0x0,8
tick,0x7ffdb840feb4,38434008,0,0x0,8
tick,0x7ffdb840feb4,38449831,0,0x0,8
tick,0x7ffdb840feb4,38465363,0,0x0,8
tick,0x7ffdb840feb4,38481344,0,0x0,8
tick,0x7ffdb840feb4,38497351,0,0x0,8
tick,0x7ffdb840feb4,38513518,0,0x0,8
tick,0x7ffdb840feb4,38528974,0,0x0,8
tick,0x7ffdb840feb4,38544439,0,0x0,8
tick,0x7ffdb840feb4,38559941,0,0x0,8
tick,0x7ffdb840feb4,38574993,0,0x0,8
tick,0x7ffdb840feb4,38591157,0,0x0,8
tick,0x7ffdb840feb4,38607119,0,0x0,8
tick,0x7ffdb840feb4,38622175,0,0x0,8
tick,0x7ffdb840feb4,38638329,0,0x0,8
tick,0x7ffdb840feb4,38652911,0,0x0,8
tick,0x7ffdb840feb4,38668492,0,0x0,8
tick,0x7ffdb840feb4,38684522,0,0x0,8
tick,0x7ffdb840feb4,38699700,0,0x0,8
tick,0x7ffdb840feb4,38715569,0,0x0,8
tick,0x7ffdb840feb4,38730844,0,0x0,8
tick,0x7ffdb840feb4,38746258,0,0x0,8
tick,0x7ffdb840feb4,38761946,0,0x0,8
tick,0x7ffdb840feb4,38776982,0,0x0,8
tick,0x7ffdb840feb4,38792741,0,0x0,8
tick,0x7ffdb840feb4,38807770,0,0x0,8
tick,0x7ffdb840feb4,38823704,0,0x0,8
tick,0x7ffdb840feb4,38839525,0,0x0,8
tick,0x7ffdb840feb4,38855123,0,0x0,8
tick,0x7ffdb840feb4,38870451,0,0x0,8
tick,0x7ffdb840feb4,38886092,0,0x0,8
tick,0x7ffdb840feb4,38901545,0,0x0,8
tick,0x7ffdb840feb4,38917088,0,0x0,8
tick,0x7ffdb840feb4,38932087,0,0x0,8
tick,0x7ffdb840feb4,38948021,0,0x0,8
tick,0x7ffdb840feb4,38963090,0,0x0,8
tick,0x7ffdb840feb4,38978237,0,0x0,8
tick,0x7ffdb840feb4,38993644,0,0x0,8
tick,0x7ffdb840feb4,39009235,0,0x0,8
tick,0x7ffdb840feb4,39024346,0,0x0,8
tick,0x7ffdb840feb4,39040073,0,0x0,8
tick,0x7ffdb840feb4,39056095,0,0x0,8
tick,0x7ffdb840feb4,39072257,0,0x0,8
tick,0x7ffdb840feb4,39087594,0,0x0,8
tick,0x7ffdb840feb4,39103660,0,0x0,8
tick,0x7ffdb840feb4,39119028,0,0x0,8
tick,0x7ffdb840feb4,39134312,0,0x0,8
tick,0x7ffdb840feb4,39150043,0,0x0,8
tick,0x7ffdb840feb4,39165033,0,0x0,8
tick,0x7ffdb840feb4,39180327,0,0x0,8
tick,0x7ffdb840feb4,39195533,0,0x0,8
tick,0x7ffdb840feb4,39211019,0,0x0,8
tick,0x7ffdb840feb4,39226092,0,0x0,8
tick,0x7ffdb840feb4,39241917,0,0x0,8
tick,0x7ffdb840feb4,39256920,0,0x0,8
tick,0x7ffdb840feb4,39272561,0,0x0,8
tick,0x7ffdb840feb4,39288123,0,0x0,8
tick,0x7ffdb840feb4,39303098,0,0x0,8
tick,0x7ffdb840feb4,39319130,0,0x0,8
tick,0x7ffdb840feb4,39334618,0,0x0,8
tick,0x7ffdb840feb4,39349805,0,0x0,8
tick,0x7ffdb840feb4,39365076,0,0x0,8
tick,0x7ffdb840feb4,39380393,0,0x0,8
tick,0x7ffdb840feb4,39395655,0,0x0,8
tick,0x7ffdb840feb4,39411748,0,0x0,8
tick,0x7ffdb840feb4,39427117,0,0x0,8
tick,0x7ffdb840feb4,39443360,0,0x0,8
tick,0x7ffdb840feb4,39458937,0,0x0,8
tick,0x7ffdb840feb4,39474759,0,0x0,8
tick,0x7ffdb840feb4,39490720,0,0x0,8
tick,0x7ffdb840feb4,39506889,0,0x0,8
tick,0x7ffdb840feb4,39522891,0,0x0,8
tick,0x7ffdb840feb4,39537916,0,0x0,8
tick,0x7ffdb840feb4,39553393,0,0x0,8
tick,0x7ffdb840feb4,39568500,0,0x0,8
tick,0x7ffdb840feb4,39583728,0,0x0,8
tick,0x7ffdb840feb4,39599140,0,0x0,8
tick,0x7ffdb840feb4,39614636,0,0x0,8
tick,0x7ffdb840feb4,39630230,0,0x0,8
tick,0x7ffdb840feb4,39645118,0,0x0,8
tick,0x7ffdb840feb4,39660413,0,0x0,8
tick,0x7ffdb840feb4,39675663,0,0x0,8
tick,0x7ffdb840feb4,39691276,0,0x0,8
tick,0x7ffdb840feb4,39707289,0,0x0,8
tick,0x7ffdb840feb4,39722495,0,0x0,8
tick,0x7ffdb840feb4,39737987,0,0x0,8
tick,0x7ffdb840feb4,39753620,0,0x0,8
tick,0x7ffdb840feb4,39768629,0,0x0,8
tick,0x7ffdb840feb4,39783753,0,0x0,8
tick,0x7ffdb840feb4,39799223,0,0x0,8
tick,0x7ffdb840feb4,39814555,0,0x0,8
tick,0x7ffdb840feb4,39829862,0,0x0,8
tick,0x7ffdb840feb4,39845801,0,0x0,8
tick,0x7ffdb840feb4,39861824,0,0x0,8
tick,0x7ffdb840feb4,39877257,0,0x0,8
tick,0x7ffdb840feb4,39892685,0,0x0,8
tick,0x7ffdb840feb4,39907930,0,0x0,8
tick,0x7ffdb840feb4,39924078,0,0x0,8
tick,0x7ffdb840feb4,39939096,0,0x0,8
tick,0x7ffdb840feb4,39954602,0,0x0,8
tick,0x7ffdb840feb4,39970278,0,0x0,8
tick,0x7ffdb840feb4,39985078,0,0x0,8
tick,0x7ffdb840feb4,40000329,0,0x0,8
tick,0x7ffdb840feb4,40016503,0,0x0,8
tick,0x7ffdb840feb4,40031724,0,0x0,8
tick,0x7ffdb840feb4,40047765,0,0x0,8
tick,0x7ffdb840feb4,40062614,0,0x0,8
tick,0x7ffdb840feb4,40077821,0,0x0,8
tick,0x7ffdb840feb4,40093689,0,0x0,8
tick,0x7ffdb840feb4,40108753,0,0x0,8
tick,0x7ffdb840feb4,40123997,0,0x0,8
tick,0x7ffdb840feb4,40139792,0,0x0,8
tick,0x7ffdb840feb4,40154661,0,0x0,8
tick,0x7ffdb840feb4,40170329,0,0x0,8
tick,0x7ffdb840feb4,40185178,0,0x0,8
tick,0x7ffdb840feb4,40200280,0,0x0,8
tick,0x7ffdb840feb4,40215339,0,0x0,8
tick,0x7ffdb840feb4,40231349,0,0x0,8
tick,0x7ffdb840feb4,40246357,0,0x0,8
tick,0x7ffdb840feb4,40262354,0,0x0,8
tick,0x7ffdb840feb4,40277172,0,0x0,8
tick,0x7ffdb840feb4,40292710,0,0x0,8
tick,0x7ffdb840feb4,40308181,0,0x0,8
tick,0x7ffdb840feb4,40323187,0,0x0,8
tick,0x7ffdb840feb4,40339227,0,0x0,8
tick,0x7ffdb840feb4,40354637,0,0x0,8
tick,0x7ffdb840feb4,40370233,0,0x0,8
tick,0x7ffdb840feb4,40385463,0,0x0,8
tick,0x7ffdb840feb4,40401352,0,0x0,8
tick,0x7ffdb840feb4,40416781,0,0x0,8
tick,0x7ffdb840feb4,40432043,0,0x0,8
tick,0x7ffdb840feb4,40447376,0,0x0,8
tick,0x7ffdb840feb4,40463118,0,0x0,8
tick,0x7ffdb840feb4,40478124,0,0x0,8
tick,0x7ffdb840feb4,40494129,0,0x0,8
tick,0x7ffdb840feb4,40509128,0,0x0,8
tick,0x7ffdb840feb4,40525282,0,0x0,8
tick,0x7ffdb840feb4,40540868,0,0x0,8
tick,0x7ffdb840feb4,40556895,0,0x0,8
tick,0x7ffdb840feb4,40572808,0,0x0,8
tick,0x7ffdb840feb4,40588163,0,0x0,8
tick,0x7ffdb840feb4,40603148,0,0x0,8
tick,0x7ffdb840feb4,40618463,0,0x0,8
tick,0x7ffdb840feb4,40633496,0,0x0,8
tick,0x7ffdb840feb4,40649663,0,0x0,8
tick,0x7ffdb840feb4,40664536,0,0x0,8
tick,0x7ffdb840feb4,40680554,0,0x0,8
tick,0x7ffdb840feb4,40695908,0,0x0,8
tick,0x7ffdb840feb4,40710547,0,0x0,8
tick,0x7ffdb840feb4,40726585,0,0x0,8
tick,0x7ffdb840feb4,40742743,0,0x0,8
tick,0x7ffdb840feb4,40758577,0,0x0,8
tick,0x7ffdb840feb4,40774577,0,0x0,8
tick,0x7ffdb840feb4,40790581,0,0x0,8
tick,0x7ffdb840feb4,40806573,0,0x0,8
tick,0x7ffdb840feb4,40820906,0,0x0,8
tick,0x7ffdb840feb4,40836649,0,0x0,8
tick,0x7ffdb840feb4,40851882,0,0x0,8
tick,0x7ffdb840feb4,40867450,0,0x0,8
tick,0x7ffdb840feb4,40882878,0,0x0,8
tick,0x7ffdb840feb4,40898614,0,0x0,8
tick,0x7ffdb840feb4,40914443,0,0x0,8
tick,0x7ffdb840feb4,40929663,0,0x0,8
tick,0x7ffdb840feb4,40945083,0,0x0,8
tick,0x7ffdb840feb4,40960793,0,0x0,8
tick,0x7ffdb840feb4,40976188,0,0x0,8
tick,0x7ffdb840feb4,40991271,0,0x0,8
tick,0x7ffdb840feb4,41006483,0,0x0,8
tick,0x7ffdb840feb4,41021216,0,0x0,8
tick,0x7ffdb840feb4,41036559,0,0x0,8
tick,0x7ffdb840feb4,41052150,0,0x0,8
tick,0x7ffdb840feb4,41067568,0,0x0,8
tick,0x7ffdb840feb4,41083267,0,0x0,8
tick,0x7ffdb840feb4,41099217,0,0x0,8
tick,0x7ffdb840feb4,41115187,0,0x0,8
tick,0x7ffdb840feb4,41130472,0,0x0,8
tick,0x7ffdb840feb4,41146516,0,0x0,8
tick,0x7ffdb840feb4,41162368,0,0x0,8
tick,0x7ffdb840feb4,41177365,0,0x0,8
tick,0x7ffdb840feb4,41192825,0,0x0,8
tick,0x7ffdb840feb4,41208649,0,0x0,8
tick,0x7ffdb840feb4,41224707,0,0x0,8
tick,0x7ffdb840feb4,41239735,0,0x0,8
tick,0x7ffdb840feb4,41254823,0,0x0,8
tick,0x7ffdb840feb4,41270180,0,0x0,8
tick,0x7ffdb840feb4,41285887,0,0x0,8
tick,0x7ffdb840feb4,41301132,0,0x0,8
tick,0x7ffdb840feb4,41316149,0,0x0,8
tick,0x7ffdb840feb4,41332165,0,0x0,8
tick,0x7ffdb840feb4,41348144,0,0x0,8
tick,0x7ffdb840feb4,41363775,0,0x0,8
tick,0x7ffdb840feb4,41378944,0,0x0,8
tick,0x7ffdb840feb4,41394815,0,0x0,8
tick,0x7ffdb840feb4,41410859,0,0x0,8
tick,0x7ffdb840feb4,41426654,0,0x0,8
tick,0x7ffdb840feb4,41441797,0,0x0,8
tick,0x7ffdb840feb4,41457798,0,0x0,8
tick,0x7ffdb840feb4,41473288,0,0x0,8
tick,0x7ffdb840feb4,41488597,0,0x0,8
tick,0x7ffdb840feb4,41503665,0,0x0,8
tick,0x7ffdb840feb4,41519443,0,0x0,8
tick,0x7ffdb840feb4,41535630,0,0x0,8
tick,0x7ffdb840feb4,41551520,0,0x0,8
tick,0x7ffdb840feb4,41566850,0,0x0,8
tick,0x7ffdb840feb4,41582339,0,0x0,8
tick,0x7ffdb840feb4,41597361,0,0x0,8
tick,0x7ffdb840feb4,41612608,0,0x0,8
tick,0x7ffdb840feb4,41628262,0,0x0,8
tick,0x7ffdb840feb4,41643469,0,0x0,8
tick,0x7ffdb840feb4,41658681,0,0x0,8
tick,0x7ffdb840feb4,41674610,0,0x0,8
tick,0x7ffdb840feb4,41689926,0,0x0,8
tick,0x7ffdb840feb4,41704962,0,0x0,8
tick,0x7ffdb840feb4,41720212,0,0x0,8
tick,0x7ffdb840feb4,41735416,0,0x0,8
tick,0x7ffdb840feb4,41751270,0,0x0,8
tick,0x7ffdb840feb4,41767000,0,0x0,8
tick,0x7ffdb840feb4,41782284,0,0x0,8
tick,0x7ffdb840feb4,41797496,0,0x0,8
tick,0x7ffdb840feb4,41812630,0,0x0,8
tick,0x7ffdb840feb4,41827979,0,0x0,8
tick,0x7ffdb840feb4,41843252,0,0x0,8
tick,0x7ffdb840feb4,41859116,0,0x0,8
tick,0x7ffdb840feb4,41874918,0,0x0,8
tick,0x7ffdb840feb4,41890589,0,0x0,8
tick,0x7ffdb840feb4,41906339,0,0x0,8
tick,0x7ffdb840feb4,41921875,0,0x0,8
tick,0x7ffdb840feb4,41937133,0,0x0,8
tick,0x7ffdb840feb4,41952388,0,0x0,8
tick,0x7ffdb840feb4,41968176,0,0x0,8
tick,0x7ffdb840feb4,41983573,0,0x0,8
tick,0x7ffdb840feb4,41999647,0,0x0,8
tick,0x7ffdb840feb4,42015103,0,0x0,8
tick,0x7ffdb840feb4,42030840,0,0x0,8
tick,0x7ffdb840feb4,42046144,0,0x0,8
tick,0x7ffdb840feb4,42061045,0,0x0,8
tick,0x7ffdb840feb4,42076439,0,0x0,8
tick,0x7ffdb840feb4,42092227,0,0x0,8
tick,0x7ffdb840feb4,42107609,0,0x0,8
tick,0x7ffdb840feb4,42122885,0,0x0,8
tick,0x7ffdb840feb4,42138119,0,0x0,8
tick,0x7ffdb840feb4,42153783,0,0x0,8
tick,0x7ffdb840feb4,42169284,0,0x0,8
tick,0x7ffdb840feb4,42184805,0,0x0,8
tick,0x7ffdb840feb4,42200524,0,0x0,8
tick,0x7ffdb840feb4,42216523,0,0x0,8
tick,0x7ffdb840feb4,42231575,0,0x0,8
tick,0x7ffdb840feb4,42246493,0,0x0,8
tick,0x7ffdb840feb4,42261908,0,0x0,8
tick,0x7ffdb840feb4,42277669,0,0x0,8
tick,0x7ffdb840feb4,42293092,0,0x0,8
tick,0x7ffdb840feb4,42308956,0,0x0,8
tick,0x7ffdb840feb4,42325305,0,0x0,8
tick,0x7ffdb840feb4,42341265,0,0x0,8
tick,0x7ffdb840feb4,42356990,0,0x0,8
tick,0x7ffdb840feb4,42371880,0,0x0,8
tick,0x7ffdb840feb4,42387860,0,0x0,8
tick,0x7ffdb840feb4,42402954,0,0x0,8
tick,0x7ffdb840feb4,42418968,0,0x0,8
tick,0x7ffdb840feb4,42434951,0,0x0,8
tick,0x7ffdb840feb4,42449216,0,0x0,8
tick,0x7ffdb840feb4,42464953,0,0x0,8
tick,0x7ffdb840feb4,42480263,0,0x0,8
tick,0x7ffdb840feb4,42495897,0,0x0,8
tick,0x7ffdb840feb4,42511875,0,0x0,8
tick,0x7ffdb840feb4,42527996,0,0x0,8
tick,0x7ffdb840feb4,42543873,0,0x0,8
tick,0x7ffdb840feb4,42559391,0,0x0,8
tick,0x7ffdb840feb4,42574694,0,0x0,8
tick,0x7ffdb840feb4,42589866,0,0x0,8
tick,0x7ffdb840feb4,42604939,0,0x0,8
tick,0x7ffdb840feb4,42620147,0,0x0,8
tick,0x7ffdb840feb4,42636229,0,0x0,8
tick,0x7ffdb840feb4,42652138,0,0x0,8
tick,0x7ffdb840feb4,42667047,0,0x0,8
tick,0x7ffdb840feb4,42682475,0,0x0,8
tick,0x7ffdb840feb4,42697681,0,0x0,8
tick,0x7ffdb840feb4,42713718,0,0x0,8
tick,0x7ffdb840feb4,42729522,0,0x0,8
tick,0x7ffdb840feb4,42745652,0,0x0,8
tick,0x7ffdb840feb4,42760887,0,0x0,8
tick,0x7ffdb840feb4,42776124,0,0x0,8
tick,0x7ffdb840feb4,42791939,0,0x0,8
tick,0x7ffdb840feb4,42807881,0,0x0,8
tick,0x7ffdb840feb4,42823307,0,0x0,8
tick,0x7ffdb840feb4,42837916,0,0x0,8
tick,0x7ffdb840feb4,42854037,0,0x0,8
tick,0x7ffdb840feb4,42869180,0,0x0,8
tick,0x7ffdb840feb4,42884393,0,0x0,8
tick,0x7ffdb840feb4,42899431,0,0x0,8
tick,0x7ffdb840feb4,42915348,0,0x0,8
tick,0x7ffdb840feb4,42930369,0,0x0,8
tick,0x7ffdb840feb4,42946079,0,0x0,8
tick,0x7ffdb840feb4,42961926,0,0x0,8
tick,0x7ffdb840feb4,42977379,0,0x0,8
tick,0x7ffdb840feb4,42993069,0,0x0,8
tick,0x7ffdb840feb4,43008359,0,0x0,8
tick,0x7ffdb840feb4,43024365,0,0x0,8
tick,0x7ffdb840feb4,43039936,0,0x0,8
tick,0x7ffdb840feb4,43056101,0,0x0,8
tick,0x7ffdb840feb4,43072222,0,0x0,8
tick,0x7ffdb840feb4,43087294,0,0x0,8
tick,0x7ffdb840feb4,43102505,0,0x0,8
tick,0x7ffdb840feb4,43118541,0,0x0,8
tick,0x7ffdb840feb4,43133408,0,0x0,8
tick,0x7ffdb840feb4,43149499,0,0x0,8
tick,0x7ffdb840feb4,43164270,0,0x0,8
tick,0x7ffdb840feb4,43179547,0,0x0,8
tick,0x7ffdb840feb4,43195450,0,0x0,8
tick,0x7ffdb840feb4,43210973,0,0x0,8
tick,0x7ffdb840feb4,43226297,0,0x0,8
tick,0x7ffdb840feb4,43241699,0,0x0,8
tick,0x7ffdb840feb4,43256718,0,0x0,8
tick,0x7ffdb840feb4,43272787,0,0x0,8
tick,0x7ffdb840feb4,43288800,0,0x0,8
tick,0x7ffdb840feb4,43304396,0,0x0,8
tick,0x7ffdb840feb4,43320297,0,0x0,8
tick,0x7ffdb840feb4,43335850,0,0x0,8
tick,0x7ffdb840feb4,43350808,0,0x0,8
tick,0x7ffdb840feb4,43366502,0,0x0,8
tick,0x7ffdb840feb4,43381978,0,0x0,8
tick,0x7ffdb840feb4,43397870,0,0x0,8
tick,0x7ffdb840feb4,43413939,0,0x0,8
tick,0x7ffdb840feb4,43429793,0,0x0,8
tick,0x7ffdb840feb4,43445697,0,0x0,8
tick,0x7ffdb840feb4,43460946,0,0x0,8
tick,0x7ffdb840feb4,43475962,0,0x0,8
tick,0x7ffdb840feb4,43491158,0,0x0,8
tick,0x7ffdb840feb4,43507055,0,0x0,8
tick,0x7ffdb840feb4,43521987,0,0x0,8
tick,0x7ffdb840feb4,43538166,0,0x0,8
tick,0x7ffdb840feb4,43553998,0,0x0,8
tick,0x7ffdb840feb4,43570019,0,0x0,8
tick,0x7ffdb840feb4,43586009,0,0x0,8
tick,0x7ffdb840feb4,43601619,0,0x0,8
tick,0x7ffdb840feb4,43616794,0,0x0,8
tick,0x7ffdb840feb4,43632443,0,0x0,8
tick,0x7ffdb840feb4,43647626,0,0x0,8
tick,0x7ffdb840feb4,43662986,0,0x0,8
tick,0x7ffdb840feb4,43678052,0,0x0,8
tick,0x7ffdb840feb4,43694083,0,0x0,8
tick,0x7ffdb840feb4,43710070,0,0x0,8
tick,0x7ffdb840feb4,43725206,0,0x0,8
tick,0x7ffdb840feb4,43741182,0,0x0,8
tick,0x7ffdb840feb4,43756130,0,0x0,8
tick,0x7ffdb840feb4,43771289,0,0x0,8
tick,0x7ffdb840feb4,43786782,0,0x0,8
tick,0x7ffdb840feb4,43802514,0,0x0,8
tick,0x7ffdb840feb4,43818224,0,0x0,8
tick,0x7ffdb840feb4,43834074,0,0x0,8
tick,0x7ffdb840feb4,43850087,0,0x0,8
tick,0x7ffdb840feb4,43865421,0,0x0,8
tick,0x7ffdb840feb4,43880862,0,0x0,8
tick,0x7ffdb840feb4,43896478,0,0x0,8
tick,0x7ffdb840feb4,43911390,0,0x0,8
tick,0x7ffdb840feb4,43927435,0,0x0,8
tick,0x7ffdb840feb4,43943097,0,0x0,8
tick,0x7ffdb840feb4,43958898,0,0x0,8
tick,0x7ffdb840feb4,43974393,0,0x0,8
tick,0x7ffdb840feb4,43989420,0,0x0,8
tick,0x7ffdb840feb4,44005243,0,0x0,8
tick,0x7ffdb840feb4,44020271,0,0x0,8
tick,0x7ffdb840feb4,44036196,0,0x0,8
tick,0x7ffdb840feb4,44052276,0,0x0,8
tick,0x7ffdb840feb4,44067668,0,0x0,8
tick,0x7ffdb840feb4,44083457,0,0x0,8
tick,0x7ffdb840feb4,44098957,0,0x0,8
tick,0x7ffdb840feb4,44114941,0,0x0,8
tick,0x7ffdb840feb4,44130494,0,0x0,8
tick,0x7ffdb840feb4,44146137,0,0x0,8
tick,0x7ffdb840feb4,44161317,0,0x0,8
tick,0x7ffdb840feb4,44176578,0,0x0,8
tick,0x7ffdb840feb4,44192483,0,0x0,8
tick,0x7ffdb840feb4,44208246,0,0x0,8
tick,0x7ffdb840feb4,44223962,0,0x0,8
tick,0x7ffdb840feb4,44239131,0,0x0,8
tick,0x7ffdb840feb4,44254052,0,0x0,8
tick,0x7ffdb840feb4,44270295,0,0x0,8
tick,0x7ffdb840feb4,44286260,0,0x0,8
tick,0x7ffdb840feb4,44301742,0,0x0,8
tick,0x7ffdb840feb4,44317524,0,0x0,8
tick,0x7ffdb840feb4,44332305,0,0x0,8
tick,0x7ffdb840feb4,44348321,0,0x0,8
tick,0x7ffdb840feb4,44363553,0,0x0,8
tick,0x7ffdb840feb4,44378212,0,0x0,8
tick,0x7ffdb840feb4,44394274,0,0x0,8
tick,0x7ffdb840feb4,44409481,0,0x0,8
tick,0x7ffdb840feb4,44424518,0,0x0,8
tick,0x7ffdb840feb4,44439924,0,0x0,8
tick,0x7ffdb840feb4,44455182,0,0x0,8
tick,0x7ffdb840feb4,44470487,0,0x0,8
tick,0x7ffdb840feb4,44486187,0,0x0,8
tick,0x7ffdb840feb4,44501872,0,0x0,8
tick,0x7ffdb840feb4,44517582,0,0x0,8
tick,0x7ffdb840feb4,44533554,0,0x0,8
tick,0x7ffdb840feb4,44549635,0,0x0,8
tick,0x7ffdb840feb4,44565728,0,0x0,8
tick,0x7ffdb840feb4,44581220,0,0x0,8
tick,0x7ffdb840feb4,44597437,0,0x0,8
tick,0x7ffdb840feb4,44613186,0,0x0,8
tick,0x7ffdb840feb4,44629192,0,0x0,8
tick,0x7ffdb840feb4,44643637,0,0x0,8
tick,0x7ffdb840feb4,44659503,0,0x0,8
tick,0x7ffdb840feb4,44674812,0,0x0,8
tick,0x7ffdb840feb4,44690095,0,0x0,8
tick,0x7ffdb840feb4,44706172,0,0x0,8
tick,0x7ffdb840feb4,44722255,0,0x0,8
tick,0x7ffdb840feb4,44737463,0,0x0,8
tick,0x7ffdb840feb4,44752330,0,0x0,8
tick,0x7ffdb840feb4,44768207,0,0x0,8
tick,0x7ffdb840feb4,44783173,0,0x0,8
tick,0x7ffdb840feb4,44798359,0,0x0,8
tick,0x7ffdb840feb4,44814201,0,0x0,8
tick,0x7ffdb840feb4,44829587,0,0x0,8
tick,0x7ffdb840feb4,44845647,0,0x0,8
tick,0x7ffdb840feb4,44861044,0,0x0,8
tick,0x7ffdb840feb4,44876919,0,0x0,8
tick,0x7ffdb840feb4,44892460,0,0x0,8
tick,0x7ffdb840feb4,44907759,0,0x0,8
tick,0x7ffdb840feb4,44923849,0,0x0,8
tick,0x7ffdb840feb4,44939382,0,0x0,8
tick,0x7ffdb840feb4,44954899,0,0x0,8
tick,0x7ffdb840feb4,44970723,0,0x0,8
tick,0x7ffdb840feb4,44985595,0,0x0,8
tick,0x7ffdb840feb4,45001604,0,0x0,8
tick,0x7ffdb840feb4,45016603,0,0x0,8
tick,0x7ffdb840feb4,45032611,0,0x0,8
tick,0x7ffdb840feb4,45048603,0,0x0,8
tick,0x7ffdb840feb4,45064611,0,0x0,8
tick,0x7ffdb840feb4,45080469,0,0x0,8
tick,0x7ffdb840feb4,45096482,0,0x0,8
tick,0x7ffdb840feb4,45111617,0,0x0,8
tick,0x7ffdb840feb4,45126620,0,0x0,8
tick,0x7ffdb840feb4,45142606,0,0x0,8
tick,0x7ffdb840feb4,45157861,0,0x0,8
tick,0x7ffdb840feb4,45172519,0,0x0,8
tick,0x7ffdb840feb4,45188637,0,0x0,8
tick,0x7ffdb840feb4,45204629,0,0x0,8
tick,0x7ffdb840feb4,45219543,0,0x0,8
tick,0x7ffdb840feb4,45234925,0,0x0,8
tick,0x7ffdb840feb4,45250625,0,0x0,8
tick,0x7ffdb840feb4,45266627,0,0x0,8
tick,0x7ffdb840feb4,45282630,0,0x0,8
tick,0x7ffdb840feb4,45298631,0,0x0,8
tick,0x7ffdb840feb4,45314631,0,0x0,8
tick,0x7ffdb840feb4,45329891,0,0x0,8
tick,0x7ffdb840feb4,45345622,0,0x0,8
tick,0x7ffdb840feb4,45360637,0,0x0,8
tick,0x7ffdb840feb4,45376654,0,0x0,8
tick,0x7ffdb840feb4,45391938,0,0x0,8
tick,0x7ffdb840feb4,45407618,0,0x0,8
tick,0x7ffdb840feb4,45423645,0,0x0,8
tick,0x7ffdb840feb4,45439656,0,0x0,8
tick,0x7ffdb840feb4,45455656,0,0x0,8
tick,0x7ffdb840feb4,45470904,0,0x0,8
tick,0x7ffdb840feb4,45486648,0,0x0,8
tick,0x7ffdb840feb4,45501560,0,0x0,8
tick,0x7ffdb840feb4,45516670,0,0x0,8
tick,0x7ffdb840feb4,45531991,0,0x0,8
tick,0x7ffdb840feb4,45548001,0,0x0,8
tick,0x7ffdb840feb4,45564022,0,0x0,8
tick,0x7ffdb840feb4,45580011,0,0x0,8
tick,0x7ffdb840feb4,45595683,0,0x0,8
tick,0x7ffdb840feb4,45611646,0,0x0,8
tick,0x7ffdb840feb4,45627640,0,0x0,8
tick,0x7ffdb840feb4,45643641,0,0x0,8
tick,0x7ffdb840feb4,45658939,0,0x0,8
tick,0x7ffdb840feb4,45674683,0,0x0,8
tick,0x7ffdb840feb4,45689672,0,0x0,8
tick,0x7ffdb840feb4,45705652,0,0x0,8
tick,0x7ffdb840feb4,45720632,0,0x0,8
tick,0x7ffdb840feb4,45735402,0,0x0,8
tick,0x7ffdb840feb4,45751302,0,0x0,8
tick,0x7ffdb840feb4,45767413,0,0x0,8
tick,0x7ffdb840feb4,45782749,0,0x0,8
tick,0x7ffdb840feb4,45798337,0,0x0,8
tick,0x7ffdb840feb4,45813720,0,0x0,8
tick,0x7ffdb840feb4,45829731,0,0x0,8
tick,0x7ffdb840feb4,45845844,0,0x0,8
tick,0x7ffdb840feb4,45860822,0,0x0,8
tick,0x7ffdb840feb4,45877089,0,0x0,8
tick,0x7ffdb840feb4,45891881,0,0x0,8
tick,0x7ffdb840feb4,45906667,0,0x0,8
tick,0x7ffdb840feb4,45922602,0,0x0,8
tick,0x7ffdb840feb4,45937353,0,0x0,8
tick,0x7ffdb840feb4,45952744,0,0x0,8
tick,0x7ffdb840feb4,45967625,0,0x0,8
tick,0x7ffdb840feb4,45983225,0,0x0,8
tick,0x7ffdb840feb4,45999232,0,0x0,8
tick,0x7ffdb840feb4,46014871,0,0x0,8
tick,0x7ffdb840feb4,46030021,0,0x0,8
tick,0x7ffdb840feb4,46045175,0,0x0,8
tick,0x7ffdb840feb4,46061275,0,0x0,8
tick,0x7ffdb840feb4,46076742,0,0x0,8
tick,0x7ffdb840feb4,46092759,0,0x0,8
tick,0x7ffdb840feb4,46107678,0,0x0,8
tick,0x7ffdb840feb4,46123694,0,0x0,8
tick,0x7ffdb840feb4,46138881,0,0x0,8
tick,0x7ffdb840feb4,46154270,0,0x0,8
tick,0x7ffdb840feb4,46169558,0,0x0,8
tick,0x7ffdb840feb4,46184901,0,0x0,8
tick,0x7ffdb840feb4,46200566,0,0x0,8
tick,0x7ffdb840feb4,46215757,0,0x0,8
tick,0x7ffdb840feb4,46231000,0,0x0,8
tick,0x7ffdb840feb4,46246754,0,0x0,8
tick,0x7ffdb840feb4,46262756,0,0x0,8
tick,0x7ffdb840feb4,46278741,0,0x0,8
tick,0x7ffdb840feb4,46294763,0,0x0,8
tick,0x7ffdb840feb4,46310771,0,0x0,8
tick,0x7ffdb840feb4,46325957,0,0x0,8
tick,0x7ffdb840feb4,46340953,0,0x0,8
tick,0x7ffdb840feb4,46356292,0,0x0,8
tick,0x7ffdb840feb4,46371465,0,0x0,8
tick,0x7ffdb840feb4,46386631,0,0x0,8
tick,0x7ffdb840feb4,46402394,0,0x0,8
tick,0x7ffdb840feb4,46417696,0,0x0,8
tick,0x7ffdb840feb4,46433329,0,0x0,8
tick,0x7ffdb840feb4,46448331,0,0x0,8
tick,0x7ffdb840feb4,46464314,0,0x0,8
tick,0x7ffdb840feb4,46480188,0,0x0,8
tick,0x7ffdb840feb4,46495791,0,0x0,8
tick,0x7ffdb840feb4,46511774,0,0x0,8
tick,0x7ffdb840feb4,46527783,0,0x0,8
tick,0x7ffdb840feb4,46543795,0,0x0,8
tick,0x7ffdb840feb4,46559802,0,0x0,8
tick,0x7ffdb840feb4,46575796,0,0x0,8
tick,0x7ffdb840feb4,46591794,0,0x0,8
tick,0x7ffdb840feb4,46607801,0,0x0,8
tick,0x7ffdb840feb4,46623794,0,0x0,8
tick,0x7ffdb840feb4,46639817,0,0x0,8
tick,0x7ffdb840feb4,46655815,0,0x0,8
tick,0x7ffdb840feb4,46671811,0,0x0,8
tick,0x7ffdb840feb4,46687804,0,0x0,8
tick,0x7ffdb840feb4,46703807,0,0x0,8
tick,0x7ffdb840feb4,46719813,0,0x0,8
tick,0x7ffdb840feb4,46735806,0,0x0,8
tick,0x7ffdb840feb4,46751812,0,0x0,8
tick,0x7ffdb840feb4,46767817,0,0x0,8
tick,0x7ffdb840feb4,46783053,0,0x0,8
tick,0x7ffdb840feb4,46798812,0,0x0,8
tick,0x7ffdb840feb4,46813822,0,0x0,8
tick,0x7ffdb840feb4,46829221,0,0x0,8
tick,0x7ffdb840feb4,46844804,0,0x0,8
tick,0x7ffdb840feb4,46859834,0,0x0,8
tick,0x7ffdb840feb4,46875826,0,0x0,8
tick,0x7ffdb840feb4,46891833,0,0x0,8
tick,0x7ffdb840feb4,46907818,0,0x0,8
tick,0x7ffdb840feb4,46923836,0,0x0,8
tick,0x7ffdb840feb4,46939837,0,0x0,8
tick,0x7ffdb840feb4,46955835,0,0x0,8
tick,0x7ffdb840feb4,46971840,0,0x0,8
tick,0x7ffdb840feb4,46987862,0,0x0,8
tick,0x7ffdb840feb4,47003837,0,0x0,8
tick,0x7ffdb840feb4,47019874,0,0x0,8
tick,0x7ffdb840feb4,47035855,0,0x0,8
tick,0x7ffdb840feb4,47051848,0,0x0,8
tick,0x7ffdb840feb4,47066866,0,0x0,8
tick,0x7ffdb840feb4,47082738,0,0x0,8
tick,0x7ffdb840feb4,47097858,0,0x0,8
tick,0x7ffdb840feb4,47113110,0,0x0,8
tick,0x7ffdb840feb4,47128855,0,0x0,8
tick,0x7ffdb840feb4,47143827,0,0x0,8
tick,0x7ffdb840feb4,47158857,0,0x0,8
tick,0x7ffdb840feb4,47174863,0,0x0,8
tick,0x7ffdb840feb4,47189883,0,0x0,8
tick,0x7ffdb840feb4,47205871,0,0x0,8
tick,0x7ffdb840feb4,47221867,0,0x0,8
tick,0x7ffdb840feb4,47237870,0,0x0,8
tick,0x7ffdb840feb4,47253882,0,0x0,8
tick,0x7ffdb840feb4,47269879,0,0x0,8
tick,0x7ffdb840feb4,47284873,0,0x0,8
tick,0x7ffdb840feb4,47299886,0,0x0,8
tick,0x7ffdb840feb4,47315900,0,0x0,8
tick,0x7ffdb840feb4,47331898,0,0x0,8
tick,0x7ffdb840feb4,47347892,0,0x0,8
tick,0x7ffdb840feb4,47363860,0,0x0,8
tick,0x7ffdb840feb4,47379892,0,0x0,8
tick,0x7ffdb840feb4,47395887,0,0x0,8
tick,0x7ffdb840feb4,47411883,0,0x0,8
tick,0x7ffdb840feb4,47427904,0,0x0,8
tick,0x7ffdb840feb4,47443868,0,0x0,8
tick,0x7ffdb840feb4,47458903,0,0x0,8
tick,0x7ffdb840feb4,47473896,0,0x0,8
tick,0x7ffdb840feb4,47489902,0,0x0,8
tick,0x7ffdb840feb4,47505909,0,0x0,8
tick,0x7ffdb840feb4,47521078,0,0x0,8
tick,0x7ffdb840feb4,47536906,0,0x0,8
tick,0x7ffdb840feb4,47551912,0,0x0,8
tick,0x7ffdb840feb4,47567918,0,0x0,8
tick,0x7ffdb840feb4,47583921,0,0x0,8
tick,0x7ffdb840feb4,47599929,0,0x0,8
tick,0x7ffdb840feb4,47615922,0,0x0,8
tick,0x7ffdb840feb4,47631234,0,0x0,8
tick,0x7ffdb840feb4,47646894,0,0x0,8
tick,0x7ffdb840feb4,47662284,0,0x0,8
tick,0x7ffdb840feb4,47677451,0,0x0,8
tick,0x7ffdb840feb4,47692802,0,0x0,8
tick,0x7ffdb840feb4,47708901,0,0x0,8
tick,0x7ffdb840feb4,47724135,0,0x0,8
tick,0x7ffdb840feb4,47739723,0,0x0,8
tick,0x7ffdb840feb4,47755444,0,0x0,8
tick,0x7ffdb840feb4,47770429,0,0x0,8
tick,0x7ffdb840feb4,47786424,0,0x0,8
tick,0x7ffdb840feb4,47801452,0,0x0,8
tick,0x7ffdb840feb4,47817303,0,0x0,8
tick,0x7ffdb840feb4,47832740,0,0x0,8
tick,0x7ffdb840feb4,47848585,0,0x0,8
tick,0x7ffdb840feb4,47863537,0,0x0,8
tick,0x7ffdb840feb4,47879081,0,0x0,8
tick,0x7ffdb840feb4,47894711,0,0x0,8
tick,0x7ffdb840feb4,47909929,0,0x0,8
tick,0x7ffdb840feb4,47925389,0,0x0,8
tick,0x7ffdb840feb4,47940978,0,0x0,8
tick,0x7ffdb840feb4,47955843,0,0x0,8
tick,0x7ffdb840feb4,47971220,0,0x0,8
tick,0x7ffdb840feb4,47987631,0,0x0,8
tick,0x7ffdb840feb4,48003792,0,0x0,8
tick,0x7ffdb840feb4,48019787,0,0x0,8
tick,0x7ffdb840feb4,48036223,0,0x0,8
tick,0x7ffdb840feb4,48051771,0,0x0,8
tick,0x7ffdb840feb4,48067265,0,0x0,8
tick,0x7ffdb840feb4,48082610,0,0x0,8
tick,0x7ffdb840feb4,48098146,0,0x0,8
tick,0x7ffdb840feb4,48113127,0,0x0,8
tick,0x7ffdb840feb4,48129124,0,0x0,8
tick,0x7ffdb840feb4,48144420,0,0x0,8
tick,0x7ffdb840feb4,48159875,0,0x0,8
tick,0x7ffdb840feb4,48175825,0,0x0,8
tick,0x7ffdb840feb4,48190155,0,0x0,8
tick,0x7ffdb840feb4,48205562,0,0x0,8
tick,0x7ffdb840feb4,48221485,0,0x0,8
tick,0x7ffdb840feb4,48237271,0,0x0,8
tick,0x7ffdb840feb4,48253042,0,0x0,8
tick,0x7ffdb840feb4,48268007,0,0x0,8
tick,0x7ffdb840feb4,48283148,0,0x0,8
tick,0x7ffdb840feb4,48298566,0,0x0,8
tick,0x7ffdb840feb4,48314034,0,0x0,8
tick,0x7ffdb840feb4,48329885,0,0x0,8
tick,0x7ffdb840feb4,48345278,0,0x0,8
tick,0x7ffdb840feb4,48361293,0,0x0,8
tick,0x7ffdb840feb4,48376527,0,0x0,8
tick,0x7ffdb840feb4,48392005,0,0x0,8
tick,0x7ffdb840feb4,48406849,0,0x0,8
tick,0x7ffdb840feb4,48422012,0,0x0,8
tick,0x7ffdb840feb4,48438038,0,0x0,8
tick,0x7ffdb840feb4,48452832,0,0x0,8
tick,0x7ffdb840feb4,48468802,0,0x0,8
tick,0x7ffdb840feb4,48484114,0,0x0,8
tick,0x7ffdb840feb4,48499618,0,0x0,8
tick,0x7ffdb840feb4,48514456,0,0x0,8
tick,0x7ffdb840feb4,48529759,0,0x0,8
tick,0x7ffdb840feb4,48545031,0,0x0,8
tick,0x7ffdb840feb4,48560469,0,0x0,8
tick,0x7ffdb840feb4,48575649,0,0x0,8
tick,0x7ffdb840feb4,48590655,0,0x0,8
tick,0x7ffdb840feb4,48606666,0,0x0,8
tick,0x7ffdb840feb4,48622042,0,0x0,8
tick,0x7ffdb840feb4,48638046,0,0x0,8
tick,0x7ffdb840feb4,48654054,0,0x0,8
tick,0x7ffdb840feb4,48670058,0,0x0,8
tick,0x7ffdb840feb4,48685050,0,0x0,8
tick,0x7ffdb840feb4,48700064,0,0x0,8
tick,0x7ffdb840feb4,48716049,0,0x0,8
tick,0x7ffdb840feb4,48732068,0,0x0,8
tick,0x7ffdb840feb4,48748060,0,0x0,8
tick,0x7ffdb840feb4,48763556,0,0x0,8
tick,0x7ffdb840feb4,48778989,0,0x0,8
tick,0x7ffdb840feb4,48794318,0,0x0,8
tick,0x7ffdb840feb4,48809847,0,0x0,8
tick,0x7ffdb840feb4,48825068,0,0x0,8
tick,0x7ffdb840feb4,48840234,0,0x0,8
tick,0x7ffdb840feb4,48855896,0,0x0,8
tick,0x7ffdb840feb4,48871076,0,0x0,8
tick,0x7ffdb840feb4,48887074,0,0x0,8
tick,0x7ffdb840feb4,48902075,0,0x0,8
tick,0x7ffdb840feb4,48918077,0,0x0,8
tick,0x7ffdb840feb4,48934085,0,0x0,8
tick,0x7ffdb840feb4,48950086,0,0x0,8
tick,0x7ffdb840feb4,48966089,0,0x0,8
tick,0x7ffdb840feb4,48982085,0,0x0,8
tick,0x7ffdb840feb4,48998075,0,0x0,8
tick,0x7ffdb840feb4,49014086,0,0x0,8
tick,0x7ffdb840feb4,49029285,0,0x0,8
tick,0x7ffdb840feb4,49044633,0,0x0,8
tick,0x7ffdb840feb4,49059865,0,0x0,8
tick,0x7ffdb840feb4,49075856,0,0x0,8
tick,0x7ffdb840feb4,49091097,0,0x0,8
tick,0x7ffdb840feb4,49107087,0,0x0,8
tick,0x7ffdb840feb4,49123105,0,0x0,8
tick,0x7ffdb840feb4,49139099,0,0x0,8
tick,0x7ffdb840feb4,49155106,0,0x0,8
tick,0x7ffdb840feb4,49171115,0,0x0,8
tick,0x7ffdb840feb4,49187109,0,0x0,8
tick,0x7ffdb840feb4,49202694,0,0x0,8
tick,0x7ffdb840feb4,49218478,0,0x0,8
tick,0x7ffdb840feb4,49234112,0,0x0,8
tick,0x7ffdb840feb4,49249409,0,0x0,8
tick,0x7ffdb840feb4,49265077,0,0x0,8
tick,0x7ffdb840feb4,49280754,0,0x0,8
tick,0x7ffdb840feb4,49296067,0,0x0,8
tick,0x7ffdb840feb4,49311401,0,0x0,8
tick,0x7ffdb840feb4,49326929,0,0x0,8
tick,0x7ffdb840feb4,49342128,0,0x0,8
tick,0x7ffdb840feb4,49357829,0,0x0,8
tick,0x7ffdb840feb4,49372493,0,0x0,8
tick,0x7ffdb840feb4,49388142,0,0x0,8
tick,0x7ffdb840feb4,49403843,0,0x0,8
tick,0x7ffdb840feb4,49419129,0,0x0,8
tick,0x7ffdb840feb4,49435139,0,0x0,8
tick,0x7ffdb840feb4,49451132,0,0x0,8
tick,0x7ffdb840feb4,49467150,0,0x0,8
tick,0x7ffdb840feb4,49483176,0,0x0,8
tick,0x7ffdb840feb4,49499035,0,0x0,8
tick,0x7ffdb840feb4,49514904,0,0x0,8
tick,0x7ffdb840feb4,49529935,0,0x0,8
tick,0x7ffdb840feb4,49545769,0,0x0,8
tick,0x7ffdb840feb4,49561614,0,0x0,8
tick,0x7ffdb840feb4,49577611,0,0x0,8
tick,0x7ffdb840feb4,49592621,0,0x0,8
tick,0x7ffdb840feb4,49608623,0,0x0,8
tick,0x7ffdb840feb4,49623617,0,0x0,8
tick,0x7ffdb840feb4,49639172,0,0x0,8
tick,0x7ffdb840feb4,49655016,0,0x0,8
tick,0x7ffdb840feb4,49670602,0,0x0,8
tick,0x7ffdb840feb4,49686174,0,0x0,8
tick,0x7ffdb840feb4,49701176,0,0x0,8
tick,0x7ffdb840feb4,49717181,0,0x0,8
tick,0x7ffdb840feb4,49732417,0,0x0,8
tick,0x7ffdb840feb4,49748064,0,0x0,8
tick,0x7ffdb840feb4,49763897,0,0x0,8
tick,0x7ffdb840feb4,49779233,0,0x0,8
tick,0x7ffdb840feb4,49794693,0,0x0,8
tick,0x7ffdb840feb4,49810182,0,0x0,8
tick,0x7ffdb840feb4,49825942,0,0x0,8
tick,0x7ffdb840feb4,49841596,0,0x0,8
tick,0x7ffdb840feb4,49857265,0,0x0,8
tick,0x7ffdb840feb4,49873270,0,0x0,8
tick,0x7ffdb840feb4,49888198,0,0x0,8
tick,0x7ffdb840feb4,49904297,0,0x0,8
tick,0x7ffdb840feb4,49919616,0,0x0,8
tick,0x7ffdb840feb4,49934748,0,0x0,8
tick,0x7ffdb840feb4,49950631,0,0x0,8
tick,0x7ffdb840feb4,49965803,0,0x0,8
tick,0x7ffdb840feb4,49980739,0,0x0,8
tick,0x7ffdb840feb4,49996405,0,0x0,8
tick,0x7ffdb840feb4,50011759,0,0x0,8
tick,0x7ffdb840feb4,50027675,0,0x0,8
tick,0x7ffdb840feb4,50043779,0,0x0,8
tick,0x7ffdb840feb4,50059485,0,0x0,8
tick,0x7ffdb840feb4,50075239,0,0x0,8
tick,0x7ffdb840feb4,50090251,0,0x0,8
tick,0x7ffdb840feb4,50105655,0,0x0,8
tick,0x7ffdb840feb4,50121133,0,0x0,8
tick,0x7ffdb840feb4,50136223,0,0x0,8
tick,0x7ffdb840feb4,50152243,0,0x0,8
tick,0x7ffdb840feb4,50167512,0,0x0,8
tick,0x7ffdb840feb4,50182755,0,0x0,8
tick,0x7ffdb840feb4,50198410,0,0x0,8
tick,0x7ffdb840feb4,50213769,0,0x0,8
tick,0x7ffdb840feb4,50229802,0,0x0,8
tick,0x7ffdb840feb4,50245776,0,0x0,8
tick,0x7ffdb840feb4,50261753,0,0x0,8
tick,0x7ffdb840feb4,50277496,0,0x0,8
tick,0x7ffdb840feb4,50292684,0,0x0,8
tick,0x7ffdb840feb4,50307675,0,0x0,8
tick,0x7ffdb840feb4,50323682,0,0x0,8
tick,0x7ffdb840feb4,50339777,0,0x0,8
tick,0x7ffdb840feb4,50355083,0,0x0,8
tick,0x7ffdb840feb4,50370265,0,0x0,8
tick,0x7ffdb840feb4,50386022,0,0x0,8
tick,0x7ffdb840feb4,50401913,0,0x0,8
tick,0x7ffdb840feb4,50417482,0,0x0,8
tick,0x7ffdb840feb4,50433498,0,0x0,8
tick,0x7ffdb840feb4,50449263,0,0x0,8
tick,0x7ffdb840feb4,50465081,0,0x0,8
tick,0x7ffdb840feb4,50480159,0,0x0,8
tick,0x7ffdb840feb4,50495178,0,0x0,8
tick,0x7ffdb840feb4,50510842,0,0x0,8
tick,0x7ffdb840feb4,50526346,0,0x0,8
tick,0x7ffdb840feb4,50542027,0,0x0,8
tick,0x7ffdb840feb4,50557042,0,0x0,8
tick,0x7ffdb840feb4,50573047,0,0x0,8
tick,0x7ffdb840feb4,50588054,0,0x0,8
tick,0x7ffdb840feb4,50604056,0,0x0,8
tick,0x7ffdb840feb4,50620068,0,0x0,8
tick,0x7ffdb840feb4,50636062,0,0x0,8
tick,0x7ffdb840feb4,50651285,0,0x0,8
tick,0x7ffdb840feb4,50666407,0,0x0,8
tick,0x7ffdb840feb4,50682248,0,0x0,8
tick,0x7ffdb840feb4,50697589,0,0x0,8
tick,0x7ffdb840feb4,50712935,0,0x0,8
tick,0x7ffdb840feb4,50728937,0,0x0,8
tick,0x7ffdb840feb4,50744326,0,0x0,8
tick,0x7ffdb840feb4,50759297,0,0x0,8
tick,0x7ffdb840feb4,50774610,0,0x0,8
tick,0x7ffdb840feb4,50790622,0,0x0,8
tick,0x7ffdb840feb4,50806302,0,0x0,8
tick,0x7ffdb840feb4,50821286,0,0x0,8
tick,0x7ffdb840feb4,50837413,0,0x0,8
tick,0x7ffdb840feb4,50853138,0,0x0,8
tick,0x7ffdb840feb4,50869131,0,0x0,8
tick,0x7ffdb840feb4,50884754,0,0x0,8
tick,0x7ffdb840feb4,50900143,0,0x0,8
tick,0x7ffdb840feb4,50915937,0,0x0,8
tick,0x7ffdb840feb4,50931313,0,0x0,8
tick,0x7ffdb840feb4,50946949,0,0x0,8
tick,0x7ffdb840feb4,50962158,0,0x0,8
tick,0x7ffdb840feb4,50977154,0,0x0,8
tick,0x7ffdb840feb4,50992322,0,0x0,8
tick,0x7ffdb840feb4,51008328,0,0x0,8
tick,0x7ffdb840feb4,51024329,0,0x0,8
tick,0x7ffdb840feb4,51040354,0,0x0,8
tick,0x7ffdb840feb4,51056343,0,0x0,8
tick,0x7ffdb840feb4,51072340,0,0x0,8
tick,0x7ffdb840feb4,51088342,0,0x0,8
tick,0x7ffdb840feb4,51104347,0,0x0,8
tick,0x7ffdb840feb4,51120330,0,0x0,8
tick,0x7ffdb840feb4,51136350,0,0x0,8
tick,0x7ffdb840feb4,51152080,0,0x0,8
tick,0x7ffdb840feb4,51167088,0,0x0,8
tick,0x7ffdb840feb4,51182748,0,0x0,8
tick,0x7ffdb840feb4,51198407,0,0x0,8
tick,0x7ffdb840feb4,51213942,0,0x0,8
tick,0x7ffdb840feb4,51229101,0,0x0,8
tick,0x7ffdb840feb4,51244459,0,0x0,8
tick,0x7ffdb840feb4,51259779,0,0x0,8
tick,0x7ffdb840feb4,51275122,0,0x0,8
tick,0x7ffdb840feb4,51291128,0,0x0,8
tick,0x7ffdb840feb4,51306361,0,0x0,8
tick,0x7ffdb840feb4,51321353,0,0x0,8
tick,0x7ffdb840feb4,51337356,0,0x0,8
tick,0x7ffdb840feb4,51353173,0,0x0,8
tick,0x7ffdb840feb4,51368378,0,0x0,8
tick,0x7ffdb840feb4,51384384,0,0x0,8
tick,0x7ffdb840feb4,51399366,0,0x0,8
tick,0x7ffdb840feb4,51414945,0,0x0,8
tick,0x7ffdb840feb4,51430182,0,0x0,8
tick,0x7ffdb840feb4,51445381,0,0x0,8
tick,0x7ffdb840feb4,51460744,0,0x0,8
tick,0x7ffdb840feb4,51476390,0,0x0,8
tick,0x7ffdb840feb4,51491377,0,0x0,8
tick,0x7ffdb840feb4,51506630,0,0x0,8
tick,0x7ffdb840feb4,51522414,0,0x0,8
tick,0x7ffdb840feb4,51537894,0,0x0,8
tick,0x7ffdb840feb4,51553186,0,0x0,8
tick,0x7ffdb840feb4,51568583,0,0x0,8
tick,0x7ffdb840feb4,51583750,0,0x0,8
tick,0x7ffdb840feb4,51599765,0,0x0,8
tick,0x7ffdb840feb4,51615770,0,0x0,8
tick,0x7ffdb840feb4,51631767,0,0x0,8
tick,0x7ffdb840feb4,51647395,0,0x0,8
tick,0x7ffdb840feb4,51662944,0,0x0,8
tick,0x7ffdb840feb4,51678255,0,0x0,8
tick,0x7ffdb840feb4,51693624,0,0x0,8
tick,0x7ffdb840feb4,51709623,0,0x0,8
tick,0x7ffdb840feb4,51725631,0,0x0,8
tick,0x7ffdb840feb4,51740821,0,0x0,8
tick,0x7ffdb840feb4,51756203,0,0x0,8
tick,0x7ffdb840feb4,51772091,0,0x0,8
tick,0x7ffdb840feb4,51787764,0,0x0,8
tick,0x7ffdb840feb4,51802764,0,0x0,8
tick,0x7ffdb840feb4,51818759,0,0x0,8
tick,0x7ffdb840feb4,51834231,0,0x0,8
tick,0x7ffdb840feb4,51849401,0,0x0,8
tick,0x7ffdb840feb4,51865085,0,0x0,8
tick,0x7ffdb840feb4,51880252,0,0x0,8
tick,0x7ffdb840feb4,51895800,0,0x0,8
tick,0x7ffdb840feb4,51911359,0,0x0,8
tick,0x7ffdb840feb4,51926513,0,0x0,8
tick,0x7ffdb840feb4,51941433,0,0x0,8
tick,0x7ffdb840feb4,51956806,0,0x0,8
tick,0x7ffdb840feb4,51972454,0,0x0,8
tick,0x7ffdb840feb4,51987737,0,0x0,8
tick,0x7ffdb840feb4,52002736,0,0x0,8
tick,0x7ffdb840feb4,52018776,0,0x0,8
tick,0x7ffdb840feb4,52034079,0,0x0,8
tick,0x7ffdb840feb4,52049406,0,0x0,8
tick,0x7ffdb840feb4,52064630,0,0x0,8
tick,0x7ffdb840feb4,52079886,0,0x0,8
tick,0x7ffdb840feb4,52095135,0,0x0,8
tick,0x7ffdb840feb4,52110447,0,0x0,8
tick,0x7ffdb840feb4,52125784,0,0x0,8
tick,0x7ffdb840feb4,52141117,0,0x0,8
tick,0x7ffdb840feb4,52156233,0,0x0,8
tick,0x7ffdb840feb4,52171826,0,0x0,8
tick,0x7ffdb840feb4,52187753,0,0x0,8
tick,0x7ffdb840feb4,52203768,0,0x0,8
tick,0x7ffdb840feb4,52219798,0,0x0,8
tick,0x7ffdb840feb4,52235285,0,0x0,8
tick,0x7ffdb840feb4,52250425,0,0x0,8
tick,0x7ffdb840feb4,52266085,0,0x0,8
tick,0x7ffdb840feb4,52281752,0,0x0,8
tick,0x7ffdb840feb4,52297412,0,0x0,8
tick,0x7ffdb840feb4,52313171,0,0x0,8
tick,0x7ffdb840feb4,52329185,0,0x0,8
tick,0x7ffdb840feb4,52345180,0,0x0,8
tick,0x7ffdb840feb4,52361253,0,0x0,8
tick,0x7ffdb840feb4,52377208,0,0x0,8
tick,0x7ffdb840feb4,52392921,0,0x0,8
tick,0x7ffdb840feb4,52408127,0,0x0,8
tick,0x7ffdb840feb4,52424175,0,0x0,8
tick,0x7ffdb840feb4,52439693,0,0x0,8
tick,0x7ffdb840feb4,52455138,0,0x0,8
tick,0x7ffdb840feb4,52471088,0,0x0,8
tick,0x7ffdb840feb4,52486855,0,0x0,8
tick,0x7ffdb840feb4,52501662,0,0x0,8
tick,0x7ffdb840feb4,52516952,0,0x0,8
tick,0x7ffdb840feb4,52532538,0,0x0,8
tick,0x7ffdb840feb4,52547879,0,0x0,8
tick,0x7ffdb840feb4,52562701,0,0x0,8
tick,0x7ffdb840feb4,52578711,0,0x0,8
tick,0x7ffdb840feb4,52594524,0,0x0,8
tick,0x7ffdb840feb4,52610771,0,0x0,8
tick,0x7ffdb840feb4,52626545,0,0x0,8
tick,0x7ffdb840feb4,52642535,0,0x0,8
tick,0x7ffdb840feb4,52658320,0,0x0,8
tick,0x7ffdb840feb4,52673728,0,0x0,8
tick,0x7ffdb840feb4,52688892,0,0x0,8
tick,0x7ffdb840feb4,52703873,0,0x0,8
tick,0x7ffdb840feb4,52718987,0,0x0,8
tick,0x7ffdb840feb4,52734850,0,0x0,8
tick,0x7ffdb840feb4,52749688,0,0x0,8
tick,0x7ffdb840feb4,52765022,0,0x0,8
tick,0x7ffdb840feb4,52780449,0,0x0,8
tick,0x7ffdb840feb4,52796551,0,0x0,8
tick,0x7ffdb840feb4,52812370,0,0x0,8
tick,0x7ffdb840feb4,52827524,0,0x0,8
tick,0x7ffdb840feb4,52842396,0,0x0,8
tick,0x7ffdb840feb4,52858404,0,0x0,8
tick,0x7ffdb840feb4,52873445,0,0x0,8
tick,0x7ffdb840feb4,52888596,0,0x0,8
tick,0x7ffdb840feb4,52904590,0,0x0,8
tick,0x7ffdb840feb4,52920525,0,0x0,8
tick,0x7ffdb840feb4,52936543,0,0x0,8
tick,0x7ffdb840feb4,52952156,0,0x0,8
tick,0x7ffdb840feb4,52968163,0,0x0,8
tick,0x7ffdb840feb4,52983567,0,0x0,8
tick,0x7ffdb840feb4,52999697,0,0x0,8
tick,0x7ffdb840feb4,53015567,0,0x0,8
tick,0x7ffdb840feb4,53031584,0,0x0,8
tick,0x7ffdb840feb4,53047576,0,0x0,8
tick,0x7ffdb840feb4,53063582,0,0x0,8
tick,0x7ffdb840feb4,53079576,0,0x0,8
tick,0x7ffdb840feb4,53095609,0,0x0,8
tick,0x7ffdb840feb4,53111591,0,0x0,8
tick,0x7ffdb840feb4,53127711,0,0x0,8
tick,0x7ffdb840feb4,53143624,0,0x0,8
tick,0x7ffdb840feb4,53159374,0,0x0,8
tick,0x7ffdb840feb4,53174734,0,0x0,8
tick,0x7ffdb840feb4,53189504,0,0x0,8
tick,0x7ffdb840feb4,53205513,0,0x0,8
tick,0x7ffdb840feb4,53220519,0,0x0,8
tick,0x7ffdb840feb4,53235921,0,0x0,8
tick,0x7ffdb840feb4,53250671,0,0x0,8
tick,0x7ffdb840feb4,53266091,0,0x0,8
tick,0x7ffdb840feb4,53281554,0,0x0,8
tick,0x7ffdb840feb4,53296554,0,0x0,8
tick,0x7ffdb840feb4,53312561,0,0x0,8
tick,0x7ffdb840feb4,53327577,0,0x0,8
tick,0x7ffdb840feb4,53343110,0,0x0,8
tick,0x7ffdb840feb4,53357871,0,0x0,8
tick,0x7ffdb840feb4,53372590,0,0x0,8
tick,0x7ffdb840feb4,53388578,0,0x0,8
tick,0x7ffdb840feb4,53404253,0,0x0,8
tick,0x7ffdb840feb4,53419588,0,0x0,8
tick,0x7ffdb840feb4,53434903,0,0x0,8
tick,0x7ffdb840feb4,53450566,0,0x0,8
tick,0x7ffdb840feb4,53466103,0,0x0,8
tick,0x7ffdb840feb4,53482160,0,0x0,8
tick,0x7ffdb840feb4,53497617,0,0x0,8
tick,0x7ffdb840feb4,53512754,0,0x0,8
tick,0x7ffdb840feb4,53528077,0,0x0,8
tick,0x7ffdb840feb4,53543637,0,0x0,8
tick,0x7ffdb840feb4,53558981,0,0x0,8
tick,0x7ffdb840feb4,53574207,0,0x0,8
tick,0x7ffdb840feb4,53589766,0,0x0,8
tick,0x7ffdb840feb4,53605000,0,0x0,8
tick,0x7ffdb840feb4,53620993,0,0x0,8
tick,0x7ffdb840feb4,53637000,0,0x0,8
tick,0x7ffdb840feb4,53652996,0,0x0,8
tick,0x7ffdb840feb4,53669090,0,0x0,8
tick,0x7ffdb840feb4,53684413,0,0x0,8
tick,0x7ffdb840feb4,53699559,0,0x0,8
tick,0x7ffdb840feb4,53715333,0,0x0,8
tick,0x7ffdb840feb4,53730510,0,0x0,8
tick,0x7ffdb840feb4,53745703,0,0x0,8
tick,0x7ffdb840feb4,53760843,0,0x0,8
tick,0x7ffdb840feb4,53776857,0,0x0,8
tick,0x7ffdb840feb4,53792850,0,0x0,8
tick,0x7ffdb840feb4,53808325,0,0x0,8
tick,0x7ffdb840feb4,53824004,0,0x0,8
tick,0x7ffdb840feb4,53839677,0,0x0,8
tick,0x7ffdb840feb4,53855699,0,0x0,8
tick,0x7ffdb840feb4,53870690,0,0x0,8
tick,0x7ffdb840feb4,53885880,0,0x0,8
tick,0x7ffdb840feb4,53900871,0,0x0,8
tick,0x7ffdb840feb4,53916112,0,0x0,8
tick,0x7ffdb840feb4,53931768,0,0x0,8
tick,0x7ffdb840feb4,53946797,0,0x0,8
tick,0x7ffdb840feb4,53962778,0,0x0,8
tick,0x7ffdb840feb4,53977814,0,0x0,8
tick,0x7ffdb840feb4,53993139,0,0x0,8
tick,0x7ffdb840feb4,54008480,0,0x0,8
tick,0x7ffdb840feb4,54024147,0,0x0,8
tick,0x7ffdb840feb4,54039149,0,0x0,8
tick,0x7ffdb840feb4,54055167,0,0x0,8
tick,0x7ffdb840feb4,54070202,0,0x0,8
tick,0x7ffdb840feb4,54085519,0,0x0,8
tick,0x7ffdb840feb4,54100838,0,0x0,8
tick,0x7ffdb840feb4,54116191,0,0x0,8
tick,0x7ffdb840feb4,54131777,0,0x0,8
tick,0x7ffdb840feb4,54147711,0,0x0,8
tick,0x7ffdb840feb4,54163724,0,0x0,8
tick,0x7ffdb840feb4,54179736,0,0x0,8
tick,0x7ffdb840feb4,54195725,0,0x0,8
tick,0x7ffdb840feb4,54211711,0,0x0,8
tick,0x7ffdb840feb4,54226722,0,0x0,8
tick,0x7ffdb840feb4,54242722,0,0x0,8
tick,0x7ffdb840feb4,54257722,0,0x0,8
tick,0x7ffdb840feb4,54272719,0,0x0,8
tick,0x7ffdb840feb4,54287723,0,0x0,8
tick,0x7ffdb840feb4,54303723,0,0x0,8
tick,0x7ffdb840feb4,54319724,0,0x0,8
tick,0x7ffdb840feb4,54335732,0,0x0,8
tick,0x7ffdb840feb4,54351279,0,0x0,8
tick,0x7ffdb840feb4,54367275,0,0x0,8
tick,0x7ffdb840feb4,54382726,0,0x0,8
tick,0x7ffdb840feb4,54397983,0,0x0,8
tick,0x7ffdb840feb4,54413726,0,0x0,8
tick,0x7ffdb840feb4,54429724,0,0x0,8
tick,0x7ffdb840feb4,54445731,0,0x0,8
tick,0x7ffdb840feb4,54461727,0,0x0,8
tick,0x7ffdb840feb4,54477732,0,0x0,8
tick,0x7ffdb840feb4,54493734,0,0x0,8
tick,0x7ffdb840feb4,54509744,0,0x0,8
tick,0x7ffdb840feb4,54524971,0,0x0,8
tick,0x7ffdb840feb4,54540746,0,0x0,8
tick,0x7ffdb840feb4,54555749,0,0x0,8
tick,0x7ffdb840feb4,54571010,0,0x0,8
tick,0x7ffdb840feb4,54586758,0,0x0,8
tick,0x7ffdb840feb4,54601764,0,0x0,8
tick,0x7ffdb840feb4,54617752,0,0x0,8
tick,0x7ffdb840feb4,54633761,0,0x0,8
tick,0x7ffdb840feb4,54649757,0,0x0,8
tick,0x7ffdb840feb4,54665769,0,0x0,8
tick,0x7ffdb840feb4,54681424,0,0x0,8
tick,0x7ffdb840feb4,54696778,0,0x0,8
tick,0x7ffdb840feb4,54712401,0,0x0,8
tick,0x7ffdb840feb4,54727800,0,0x0,8
tick,0x7ffdb840feb4,54743713,0,0x0,8
tick,0x7ffdb840feb4,54758929,0,0x0,8
tick,0x7ffdb840feb4,54774827,0,0x0,8
tick,0x7ffdb840feb4,54789861,0,0x0,8
tick,0x7ffdb840feb4,54805862,0,0x0,8
tick,0x7ffdb840feb4,54821872,0,0x0,8
tick,0x7ffdb840feb4,54837879,0,0x0,8
tick,0x7ffdb840feb4,54853871,0,0x0,8
tick,0x7ffdb840feb4,54869880,0,0x0,8
tick,0x7ffdb840feb4,54885605,0,0x0,8
tick,0x7ffdb840feb4,54901569,0,0x0,8
tick,0x7ffdb840feb4,54916799,0,0x0,8
tick,0x7ffdb840feb4,54931766,0,0x0,8
tick,0x7ffdb840feb4,54947181,0,0x0,8
tick,0x7ffdb840feb4,54962830,0,0x0,8
tick,0x7ffdb840feb4,54978548,0,0x0,8
tick,0x7ffdb840feb4,54994179,0,0x0,8
tick,0x7ffdb840feb4,55010183,0,0x0,8
tick,0x7ffdb840feb4,55026174,0,0x0,8
tick,0x7ffdb840feb4,55042188,0,0x0,8
tick,0x7ffdb840feb4,55057404,0,0x0,8
tick,0x7ffdb840feb4,55072819,0,0x0,8
tick,0x7ffdb840feb4,55088804,0,0x0,8
tick,0x7ffdb840feb4,55104818,0,0x0,8
tick,0x7ffdb840feb4,55120814,0,0x0,8
tick,0x7ffdb840feb4,55136814,0,0x0,8
tick,0x7ffdb840feb4,55152816,0,0x0,8
tick,0x7ffdb840feb4,55168823,0,0x0,8
tick,0x7ffdb840feb4,55184829,0,0x0,8
tick,0x7ffdb840feb4,55200432,0,0x0,8
tick,0x7ffdb840feb4,55216097,0,0x0,8
tick,0x7ffdb840feb4,55231953,0,0x0,8
tick,0x7ffdb840feb4,55247431,0,0x0,8
tick,0x7ffdb840feb4,55262828,0,0x0,8
tick,0x7ffdb840feb4,55277835,0,0x0,8
tick,0x7ffdb840feb4,55293836,0,0x0,8
tick,0x7ffdb840feb4,55309070,0,0x0,8
tick,0x7ffdb840feb4,55324723,0,0x0,8
tick,0x7ffdb840feb4,55339963,0,0x0,8
tick,0x7ffdb840feb4,55355820,0,0x0,8
tick,0x7ffdb840feb4,55371490,0,0x0,8
tick,0x7ffdb840feb4,55387503,0,0x0,8
tick,0x7ffdb840feb4,55402758,0,0x0,8
tick,0x7ffdb840feb4,55418774,0,0x0,8
tick,0x7ffdb840feb4,55434238,0,0x0,8
tick,0x7ffdb840feb4,55449434,0,0x0,8
tick,0x7ffdb840feb4,55465096,0,0x0,8
tick,0x7ffdb840feb4,55480122,0,0x0,8
tick,0x7ffdb840feb4,55496126,0,0x0,8
tick,0x7ffdb840feb4,55511359,0,0x0,8
tick,0x7ffdb840feb4,55526030,0,0x0,8
tick,0x7ffdb840feb4,55540914,0,0x0,8
tick,0x7ffdb840feb4,55556826,0,0x0,8
tick,0x7ffdb840feb4,55572723,0,0x0,8
tick,0x7ffdb840feb4,55587767,0,0x0,8
tick,0x7ffdb840feb4,55603128,0,0x0,8
tick,0x7ffdb840feb4,55618748,0,0x0,8
tick,0x7ffdb840feb4,55634756,0,0x0,8
tick,0x7ffdb840feb4,55650788,0,0x0,8
tick,0x7ffdb840feb4,55666752,0,0x0,8
tick,0x7ffdb840feb4,55682749,0,0x0,8
tick,0x7ffdb840feb4,55698758,0,0x0,8
tick,0x7ffdb840feb4,55714762,0,0x0,8
tick,0x7ffdb840feb4,55730761,0,0x0,8
tick,0x7ffdb840feb4,55746768,0,0x0,8
tick,0x7ffdb840feb4,55761754,0,0x0,8
tick,0x7ffdb840feb4,55777103,0,0x0,8
tick,0x7ffdb840feb4,55793091,0,0x0,8
tick,0x7ffdb840feb4,55808651,0,0x0,8
tick,0x7ffdb840feb4,55823776,0,0x0,8
tick,0x7ffdb840feb4,55839488,0,0x0,8
tick,0x7ffdb840feb4,55855033,0,0x0,8
tick,0x7ffdb840feb4,55871029,0,0x0,8
tick,0x7ffdb840feb4,55886410,0,0x0,8
tick,0x7ffdb840feb4,55901998,0,0x0,8
tick,0x7ffdb840feb4,55917101,0,0x0,8
tick,0x7ffdb840feb4,55932778,0,0x0,8
tick,0x7ffdb840feb4,55948451,0,0x0,8
tick,0x7ffdb840feb4,55963857,0,0x0,8
tick,0x7ffdb840feb4,55979098,0,0x0,8
tick,0x7ffdb840feb4,55994885,0,0x0,8
tick,0x7ffdb840feb4,56010212,0,0x0,8
tick,0x7ffdb840feb4,56025777,0,0x0,8
tick,0x7ffdb840feb4,56040796,0,0x0,8
tick,0x7ffdb840feb4,56056036,0,0x0,8
tick,0x7ffdb840feb4,56071917,0,0x0,8
tick,0x7ffdb840feb4,56086800,0,0x0,8
tick,0x7ffdb840feb4,56102270,0,0x0,8
tick,0x7ffdb840feb4,56117803,0,0x0,8
tick,0x7ffdb840feb4,56132773,0,0x0,8
tick,0x7ffdb840feb4,56147807,0,0x0,8
tick,0x7ffdb840feb4,56163039,0,0x0,8
tick,0x7ffdb840feb4,56178271,0,0x0,8
tick,0x7ffdb840feb4,56194205,0,0x0,8
tick,0x7ffdb840feb4,56209951,0,0x0,8
tick,0x7ffdb840feb4,56224782,0,0x0,8
tick,0x7ffdb840feb4,56240630,0,0x0,8
tick,0x7ffdb840feb4,56256058,0,0x0,8
tick,0x7ffdb840feb4,56270649,0,0x0,8
tick,0x7ffdb840feb4,56286729,0,0x0,8
tick,0x7ffdb840feb4,56302150,0,0x0,8
tick,0x7ffdb840feb4,56317102,0,0x0,8
tick,0x7ffdb840feb4,56332764,0,0x0,8
tick,0x7ffdb840feb4,56348605,0,0x0,8
tick,0x7ffdb840feb4,56364035,0,0x0,8
tick,0x7ffdb840feb4,56379290,0,0x0,8
tick,0x7ffdb840feb4,56394700,0,0x0,8
tick,0x7ffdb840feb4,56410080,0,0x0,8
tick,0x7ffdb840feb4,56425954,0,0x0,8
tick,0x7ffdb840feb4,56441552,0,0x0,8
tick,0x7ffdb840feb4,56457054,0,0x0,8
tick,0x7ffdb840feb4,56472716,0,0x0,8
tick,0x7ffdb840feb4,56488066,0,0x0,8
tick,0x7ffdb840feb4,56503579,0,0x0,8
tick,0x7ffdb840feb4,56519108,0,0x0,8
tick,0x7ffdb840feb4,56534960,0,0x0,8
tick,0x7ffdb840feb4,56549463,0,0x0,8
tick,0x7ffdb840feb4,56565045,0,0x0,8
tick,0x7ffdb840feb4,56580044,0,0x0,8
tick,0x7ffdb840feb4,56595109,0,0x0,8
tick,0x7ffdb840feb4,56610756,0,0x0,8
tick,0x7ffdb840feb4,56625948,0,0x0,8
tick,0x7ffdb840feb4,56641951,0,0x0,8
tick,0x7ffdb840feb4,56657979,0,0x0,8
tick,0x7ffdb840feb4,56673980,0,0x0,8
tick,0x7ffdb840feb4,56689979,0,0x0,8
tick,0x7ffdb840feb4,56705430,0,0x0,8
tick,0x7ffdb840feb4,56721430,0,0x0,8
tick,0x7ffdb840feb4,56736773,0,0x0,8
tick,0x7ffdb840feb4,56752773,0,0x0,8
tick,0x7ffdb840feb4,56768906,0,0x0,8
tick,0x7ffdb840feb4,56784065,0,0x0,8
tick,0x7ffdb840feb4,56799804,0,0x0,8
tick,0x7ffdb840feb4,56814823,0,0x0,8
tick,0x7ffdb840feb4,56830809,0,0x0,8
tick,0x7ffdb840feb4,56846801,0,0x0,8
tick,0x7ffdb840feb4,56862817,0,0x0,8
tick,0x7ffdb840feb4,56878821,0,0x0,8
tick,0x7ffdb840feb4,56894822,0,0x0,8
tick,0x7ffdb840feb4,56910842,0,0x0,8
tick,0x7ffdb840feb4,56926805,0,0x0,8
tick,0x7ffdb840feb4,56942819,0,0x0,8
tick,0x7ffdb840feb4,56958818,0,0x0,8
tick,0x7ffdb840feb4,56974827,0,0x0,8
tick,0x7ffdb840feb4,56990823,0,0x0,8
tick,0x7ffdb840feb4,57006829,0,0x0,8
tick,0x7ffdb840feb4,57022847,0,0x0,8
tick,0x7ffdb840feb4,57038828,0,0x0,8
tick,0x7ffdb840feb4,57054848,0,0x0,8
tick,0x7ffdb840feb4,57070857,0,0x0,8
tick,0x7ffdb840feb4,57085958,0,0x0,8
tick,0x7ffdb840feb4,57101312,0,0x0,8
tick,0x7ffdb840feb4,57117313,0,0x0,8
tick,0x7ffdb840feb4,57133312,0,0x0,8
tick,0x7ffdb840feb4,57148475,0,0x0,8
tick,0x7ffdb840feb4,57163474,0,0x0,8
tick,0x7ffdb840feb4,57178635,0,0x0,8
tick,0x7ffdb840feb4,57193817,0,0x0,8
tick,0x7ffdb840feb4,57209670,0,0x0,8
tick,0x7ffdb840feb4,57225793,0,0x0,8
tick,0x7ffdb840feb4,57241375,0,0x0,8
tick,0x7ffdb840feb4,57257369,0,0x0,8
tick,0x7ffdb840feb4,57272839,0,0x0,8
tick,0x7ffdb840feb4,57288081,0,0x0,8
tick,0x7ffdb840feb4,57303779,0,0x0,8
tick,0x7ffdb840feb4,57318804,0,0x0,8
tick,0x7ffdb840feb4,57334818,0,0x0,8
tick,0x7ffdb840feb4,57350391,0,0x0,8
tick,0x7ffdb840feb4,57365956,0,0x0,8
tick,0x7ffdb840feb4,57381788,0,0x0,8
tick,0x7ffdb840feb4,57397160,0,0x0,8
tick,0x7ffdb840feb4,57412317,0,0x0,8
tick,0x7ffdb840feb4,57427728,0,0x0,8
tick,0x7ffdb840feb4,57443570,0,0x0,8
tick,0x7ffdb840feb4,57459581,0,0x0,8
tick,0x7ffdb840feb4,57475025,0,0x0,8
tick,0x7ffdb840feb4,57490782,0,0x0,8
tick,0x7ffdb840feb4,57506110,0,0x0,8
tick,0x7ffdb840feb4,57522106,0,0x0,8
tick,0x7ffdb840feb4,57537782,0,0x0,8
tick,0x7ffdb840feb4,57552766,0,0x0,8
tick,0x7ffdb840feb4,57568105,0,0x0,8
tick,0x7ffdb840feb4,57583795,0,0x0,8
tick,0x7ffdb840feb4,57599454,0,0x0,8
tick,0x7ffdb840feb4,57615132,0,0x0,8
tick,0x7ffdb840feb4,57630127,0,0x0,8
tick,0x7ffdb840feb4,57646139,0,0x0,8
tick,0x7ffdb840feb4,57661161,0,0x0,8
tick,0x7ffdb840feb4,57677169,0,0x0,8
tick,0x7ffdb840feb4,57693161,0,0x0,8
tick,0x7ffdb840feb4,57709466,0,0x0,8
tick,0x7ffdb840feb4,57725224,0,0x0,8
tick,0x7ffdb840feb4,57741173,0,0x0,8
tick,0x7ffdb840feb4,57757178,0,0x0,8
tick,0x7ffdb840feb4,57773190,0,0x0,8
tick,0x7ffdb840feb4,57789191,0,0x0,8
tick,0x7ffdb840feb4,57804741,0,0x0,8
tick,0x7ffdb840feb4,57820241,0,0x0,8
tick,0x7ffdb840feb4,57835413,0,0x0,8
tick,0x7ffdb840feb4,57851505,0,0x0,8
tick,0x7ffdb840feb4,57867172,0,0x0,8
tick,0x7ffdb840feb4,57882970,0,0x0,8
tick,0x7ffdb840feb4,57899019,0,0x0,8
tick,0x7ffdb840feb4,57914493,0,0x0,8
tick,0x7ffdb840feb4,57930492,0,0x0,8
tick,0x7ffdb840feb4,57945641,0,0x0,8
tick,0x7ffdb840feb4,57961675,0,0x0,8
tick,0x7ffdb840feb4,57976688,0,0x0,8
tick,0x7ffdb840feb4,57992561,0,0x0,8
tick,0x7ffdb840feb4,58008218,0,0x0,8
tick,0x7ffdb840feb4,58023723,0,0x0,8
tick,0x7ffdb840feb4,58038981,0,0x0,8
tick,0x7ffdb840feb4,58054957,0,0x0,8
tick,0x7ffdb840feb4,58070198,0,0x0,8
tick,0x7ffdb840feb4,58085727,0,0x0,8
tick,0x7ffdb840feb4,58101728,0,0x0,8
tick,0x7ffdb840feb4,58117741,0,0x0,8
tick,0x7ffdb840feb4,58133726,0,0x0,8
tick,0x7ffdb840feb4,58149618,0,0x0,8
tick,0x7ffdb840feb4,58167157,0,0x0,8
tick,0x7ffdb840feb4,58181641,0,0x0,8
tick,0x7ffdb840feb4,58197635,0,0x0,8
tick,0x7ffdb840feb4,58213217,0,0x0,8
tick,0x7ffdb840feb4,58229213,0,0x0,8
tick,0x7ffdb840feb4,58244574,0,0x0,8
tick,0x7ffdb840feb4,58260581,0,0x0,8
tick,0x7ffdb840feb4,58276593,0,0x0,8
tick,0x7ffdb840feb4,58292588,0,0x0,8
tick,0x7ffdb840feb4,58308214,0,0x0,8
tick,0x7ffdb840feb4,58324226,0,0x0,8
tick,0x7ffdb840feb4,58339477,0,0x0,8
tick,0x7ffdb840feb4,58355211,0,0x0,8
tick,0x7ffdb840feb4,58370752,0,0x0,8
tick,0x7ffdb840feb4,58386219,0,0x0,8
tick,0x7ffdb840feb4,58402173,0,0x0,8
tick,0x7ffdb840feb4,58417572,0,0x0,8
tick,0x7ffdb840feb4,58433191,0,0x0,8
tick,0x7ffdb840feb4,58448873,0,0x0,8
tick,0x7ffdb840feb4,58463869,0,0x0,8
tick,0x7ffdb840feb4,58479943,0,0x0,8
tick,0x7ffdb840feb4,58495241,0,0x0,8
tick,0x7ffdb840feb4,58511238,0,0x0,8
tick,0x7ffdb840feb4,58526778,0,0x0,8
tick,0x7ffdb840feb4,58542023,0,0x0,8
tick,0x7ffdb840feb4,58557254,0,0x0,8
tick,0x7ffdb840feb4,58573251,0,0x0,8
tick,0x7ffdb840feb4,58589244,0,0x0,8
tick,0x7ffdb840feb4,58605240,0,0x0,8
tick,0x7ffdb840feb4,58621255,0,0x0,8
tick,0x7ffdb840feb4,58637151,0,0x0,8
tick,0x7ffdb840feb4,58653160,0,0x0,8
tick,0x7ffdb840feb4,58668600,0,0x0,8
tick,0x7ffdb840feb4,58684966,0,0x0,8
tick,0x7ffdb840feb4,58700596,0,0x0,8
tick,0x7ffdb840feb4,58716591,0,0x0,8
tick,0x7ffdb840feb4,58731885,0,0x0,8
tick,0x7ffdb840feb4,58747704,0,0x0,8
tick,0x7ffdb840feb4,58762854,0,0x0,8
tick,0x7ffdb840feb4,58778278,0,0x0,8
tick,0x7ffdb840feb4,58794253,0,0x0,8
tick,0x7ffdb840feb4,58809942,0,0x0,8
tick,0x7ffdb840feb4,58825682,0,0x0,8
tick,0x7ffdb840feb4,58841265,0,0x0,8
tick,0x7ffdb840feb4,58856537,0,0x0,8
tick,0x7ffdb840feb4,58872118,0,0x0,8
tick,0x7ffdb840feb4,58888122,0,0x0,8
tick,0x7ffdb840feb4,58904189,0,0x0,8
tick,0x7ffdb840feb4,58920211,0,0x0,8
tick,0x7ffdb840feb4,58935209,0,0x0,8
tick,0x7ffdb840feb4,58950807,0,0x0,8
tick,0x7ffdb840feb4,58966579,0,0x0,8
tick,0x7ffdb840feb4,58981785,0,0x0,8
tick,0x7ffdb840feb4,58997462,0,0x0,8
tick,0x7ffdb840feb4,59012484,0,0x0,8
tick,0x7ffdb840feb4,59028488,0,0x0,8
tick,0x7ffdb840feb4,59044363,0,0x0,8
tick,0x7ffdb840feb4,59059498,0,0x0,8
tick,0x7ffdb840feb4,59075338,0,0x0,8
tick,0x7ffdb840feb4,59090700,0,0x0,8
tick,0x7ffdb840feb4,59106137,0,0x0,8
tick,0x7ffdb840feb4,59121711,0,0x0,8
tick,0x7ffdb840feb4,59136703,0,0x0,8
tick,0x7ffdb840feb4,59152498,0,0x0,8
tick,0x7ffdb840feb4,59168566,0,0x0,8
tick,0x7ffdb840feb4,59183791,0,0x0,8
tick,0x7ffdb840feb4,59199459,0,0x0,8
tick,0x7ffdb840feb4,59215183,0,0x0,8
tick,0x7ffdb840feb4,59230705,0,0x0,8
tick,0x7ffdb840feb4,59246593,0,0x0,8
tick,0x7ffdb840feb4,59261847,0,0x0,8
tick,0x7ffdb840feb4,59276991,0,0x0,8
tick,0x7ffdb840feb4,59292755,0,0x0,8
tick,0x7ffdb840feb4,59308839,0,0x0,8
tick,0x7ffdb840feb4,59324267,0,0x0,8
tick,0x7ffdb840feb4,59340205,0,0x0,8
tick,0x7ffdb840feb4,59356147,0,0x0,8
tick,0x7ffdb840feb4,59370934,0,0x0,8
tick,0x7ffdb840feb4,59387026,0,0x0,8
tick,0x7ffdb840feb4,59402168,0,0x0,8
tick,0x7ffdb840feb4,59417826,0,0x0,8
tick,0x7ffdb840feb4,59433487,0,0x0,8
tick,0x7ffdb840feb4,59449456,0,0x0,8
tick,0x7ffdb840feb4,59464121,0,0x0,8
tick,0x7ffdb840feb4,59479785,0,0x0,8
tick,0x7ffdb840feb4,59495791,0,0x0,8
tick,0x7ffdb840feb4,59511312,0,0x0,8
tick,0x7ffdb840feb4,59526414,0,0x0,8
tick,0x7ffdb840feb4,59542149,0,0x0,8
tick,0x7ffdb840feb4,59557474,0,0x0,8
tick,0x7ffdb840feb4,59573246,0,0x0,8
tick,0x7ffdb840feb4,59589114,0,0x0,8
tick,0x7ffdb840feb4,59604809,0,0x0,8
tick,0x7ffdb840feb4,59620851,0,0x0,8
tick,0x7ffdb840feb4,59636860,0,0x0,8
tick,0x7ffdb840feb4,59652051,0,0x0,8
tick,0x7ffdb840feb4,59667034,0,0x0,8
tick,0x7ffdb840feb4,59683038,0,0x0,8
tick,0x7ffdb840feb4,59699048,0,0x0,8
tick,0x7ffdb840feb4,59715048,0,0x0,8
tick,0x7ffdb840feb4,59731067,0,0x0,8
tick,0x7ffdb840feb4,59747071,0,0x0,8
tick,0x7ffdb840feb4,59763056,0,0x0,8
tick,0x7ffdb840feb4,59778234,0,0x0,8
tick,0x7ffdb840feb4,59794311,0,0x0,8
tick,0x7ffdb840feb4,59809000,0,0x0,8
tick,0x7ffdb840feb4,59825020,0,0x0,8
tick,0x7ffdb840feb4,59840220,0,0x0,8
tick,0x7ffdb840feb4,59855270,0,0x0,8
tick,0x7ffdb840feb4,59870054,0,0x0,8
tick,0x7ffdb840feb4,59886046,0,0x0,8
tick,0x7ffdb840feb4,59901682,0,0x0,8
tick,0x7ffdb840feb4,59916918,0,0x0,8
tick,0x7ffdb840feb4,59931780,0,0x0,8
tick,0x7ffdb840feb4,59947445,0,0x0,8
tick,0x7ffdb840feb4,59962929,0,0x0,8
tick,0x7ffdb840feb4,59978938,0,0x0,8
tick,0x7ffdb840feb4,59994448,0,0x0,8
tick,0x7ffdb840feb4,60010452,0,0x0,8
tick,0x7ffdb840feb4,60025710,0,0x0,8
tick,0x7ffdb840feb4,60041186,0,0x0,8
tick,0x7ffdb840feb4,60057179,0,0x0,8
tick,0x7ffdb840feb4,60073050,0,0x0,8
tick,0x7ffdb840feb4,60088875,0,0x0,8
tick,0x7ffdb840feb4,60104062,0,0x0,8
tick,0x7ffdb840feb4,60120071,0,0x0,8
tick,0x7ffdb840feb4,60134779,0,0x0,8
tick,0x7ffdb840feb4,60150460,0,0x0,8
tick,0x7ffdb840feb4,60166093,0,0x0,8
tick,0x7ffdb840feb4,60182089,0,0x0,8
tick,0x7ffdb840feb4,60197460,0,0x0,8
tick,0x7ffdb840feb4,60213097,0,0x0,8
tick,0x7ffdb840feb4,60229109,0,0x0,8
tick,0x7ffdb840feb4,60245065,0,0x0,8
tick,0x7ffdb840feb4,60261077,0,0x0,8
tick,0x7ffdb840feb4,60276473,0,0x0,8
tick,0x7ffdb840feb4,60292470,0,0x0,8
tick,0x7ffdb840feb4,60308486,0,0x0,8
tick,0x7ffdb840feb4,60324203,0,0x0,8
tick,0x7ffdb840feb4,60340154,0,0x0,8
tick,0x7ffdb840feb4,60355186,0,0x0,8
tick,0x7ffdb840feb4,60371080,0,0x0,8
tick,0x7ffdb840feb4,60386263,0,0x0,8
tick,0x7ffdb840feb4,60402206,0,0x0,8
tick,0x7ffdb840feb4,60417912,0,0x0,8
tick,0x7ffdb840feb4,60433716,0,0x0,8
tick,0x7ffdb840feb4,60449535,0,0x0,8
tick,0x7ffdb840feb4,60464820,0,0x0,8
tick,0x7ffdb840feb4,60479814,0,0x0,8
tick,0x7ffdb840feb4,60495054,0,0x0,8
tick,0x7ffdb840feb4,60510785,0,0x0,8
tick,0x7ffdb840feb4,60526904,0,0x0,8
tick,0x7ffdb840feb4,60542129,0,0x0,8
tick,0x7ffdb840feb4,60557267,0,0x0,8
tick,0x7ffdb840feb4,60572793,0,0x0,8
tick,0x7ffdb840feb4,60587806,0,0x0,8
tick,0x7ffdb840feb4,60602827,0,0x0,8
tick,0x7ffdb840feb4,60618130,0,0x0,8
tick,0x7ffdb840feb4,60633803,0,0x0,8
tick,0x7ffdb840feb4,60649775,0,0x0,8
tick,0x7ffdb840feb4,60665808,0,0x0,8
tick,0x7ffdb840feb4,60681808,0,0x0,8
tick,0x7ffdb840feb4,60697803,0,0x0,8
tick,0x7ffdb840feb4,60713818,0,0x0,8
tick,0x7ffdb840feb4,60729818,0,0x0,8
tick,0x7ffdb840feb4,60745839,0,0x0,8
tick,0x7ffdb840feb4,60761725,0,0x0,8
tick,0x7ffdb840feb4,60777558,0,0x0,8
tick,0x7ffdb840feb4,60793556,0,0x0,8
tick,0x7ffdb840feb4,60808727,0,0x0,8
tick,0x7ffdb840feb4,60823576,0,0x0,8
tick,0x7ffdb840feb4,60839166,0,0x0,8
tick,0x7ffdb840feb4,60855066,0,0x0,8
tick,0x7ffdb840feb4,60870004,0,0x0,8
tick,0x7ffdb840feb4,60884987,0,0x0,8
tick,0x7ffdb840feb4,60900990,0,0x0,8
tick,0x7ffdb840feb4,60917013,0,0x0,8
tick,0x7ffdb840feb4,60932803,0,0x0,8
tick,0x7ffdb840feb4,60948462,0,0x0,8
tick,0x7ffdb840feb4,60964028,0,0x0,8
tick,0x7ffdb840feb4,60979020,0,0x0,8
tick,0x7ffdb840feb4,60995023,0,0x0,8
tick,0x7ffdb840feb4,61011257,0,0x0,8
tick,0x7ffdb840feb4,61027046,0,0x0,8
tick,0x7ffdb840feb4,61042802,0,0x0,8
tick,0x7ffdb840feb4,61058071,0,0x0,8
tick,0x7ffdb840feb4,61073835,0,0x0,8
tick,0x7ffdb840feb4,61088861,0,0x0,8
tick,0x7ffdb840feb4,61104794,0,0x0,8
tick,0x7ffdb840feb4,61120134,0,0x0,8
tick,0x7ffdb840feb4,61135808,0,0x0,8
tick,0x7ffdb840feb4,61151787,0,0x0,8
tick,0x7ffdb840feb4,61166915,0,0x0,8
tick,0x7ffdb840feb4,61182791,0,0x0,8
tick,0x7ffdb840feb4,61198485,0,0x0,8
tick,0x7ffdb840feb4,61214119,0,0x0,8
tick,0x7ffdb840feb4,61229775,0,0x0,8
tick,0x7ffdb840feb4,61245236,0,0x0,8
tick,0x7ffdb840feb4,61261173,0,0x0,8
tick,0x7ffdb840feb4,61276783,0,0x0,8
tick,0x7ffdb840feb4,61292266,0,0x0,8
tick,0x7ffdb840feb4,61307263,0,0x0,8
tick,0x7ffdb840feb4,61322262,0,0x0,8
tick,0x7ffdb840feb4,61337781,0,0x0,8
tick,0x7ffdb840feb4,61353867,0,0x0,8
tick,0x7ffdb840feb4,61369334,0,0x0,8
tick,0x7ffdb840feb4,61384808,0,0x0,8
tick,0x7ffdb840feb4,61399779,0,0x0,8
tick,0x7ffdb840feb4,61415785,0,0x0,8
tick,0x7ffdb840feb4,61431800,0,0x0,8
tick,0x7ffdb840feb4,61447242,0,0x0,8
tick,0x7ffdb840feb4,61462568,0,0x0,8
tick,0x7ffdb840feb4,61477914,0,0x0,8
tick,0x7ffdb840feb4,61494012,0,0x0,8
tick,0x7ffdb840feb4,61509010,0,0x0,8
tick,0x7ffdb840feb4,61524131,0,0x0,8
tick,0x7ffdb840feb4,61539603,0,0x0,8
tick,0x7ffdb840feb4,61555136,0,0x0,8
tick,0x7ffdb840feb4,61570500,0,0x0,8
tick,0x7ffdb840feb4,61586154,0,0x0,8
tick,0x7ffdb840feb4,61601997,0,0x0,8
tick,0x7ffdb840feb4,61617170,0,0x0,8
tick,0x7ffdb840feb4,61632590,0,0x0,8
tick,0x7ffdb840feb4,61648588,0,0x0,8
tick,0x7ffdb840feb4,61663765,0,0x0,8
tick,0x7ffdb840feb4,61679797,0,0x0,8
tick,0x7ffdb840feb4,61694785,0,0x0,8
tick,0x7ffdb840feb4,61710783,0,0x0,8
tick,0x7ffdb840feb4,61726783,0,0x0,8
tick,0x7ffdb840feb4,61742783,0,0x0,8
tick,0x7ffdb840feb4,61757980,0,0x0,8
tick,0x7ffdb840feb4,61772782,0,0x0,8
tick,0x7ffdb840feb4,61788802,0,0x0,8
tick,0x7ffdb840feb4,61803780,0,0x0,8
tick,0x7ffdb840feb4,61818707,0,0x0,8
tick,0x7ffdb840feb4,61834074,0,0x0,8
tick,0x7ffdb840feb4,61849478,0,0x0,8
tick,0x7ffdb840feb4,61865294,0,0x0,8
tick,0x7ffdb840feb4,61881433,0,0x0,8
tick,0x7ffdb840feb4,61897424,0,0x0,8
tick,0x7ffdb840feb4,61912688,0,0x0,8
tick,0x7ffdb840feb4,61927810,0,0x0,8
tick,0x7ffdb840feb4,61943797,0,0x0,8
tick,0x7ffdb840feb4,61959788,0,0x0,8
tick,0x7ffdb840feb4,61975791,0,0x0,8
tick,0x7ffdb840feb4,61991781,0,0x0,8
tick,0x7ffdb840feb4,62007784,0,0x0,8
tick,0x7ffdb840feb4,62023798,0,0x0,8
tick,0x7ffdb840feb4,62039783,0,0x0,8
tick,0x7ffdb840feb4,62055163,0,0x0,8
tick,0x7ffdb840feb4,62071164,0,0x0,8
tick,0x7ffdb840feb4,62086765,0,0x0,8
tick,0x7ffdb840feb4,62102458,0,0x0,8
tick,0x7ffdb840feb4,62118145,0,0x0,8
tick,0x7ffdb840feb4,62133810,0,0x0,8
tick,0x7ffdb840feb4,62149465,0,0x0,8
tick,0x7ffdb840feb4,62164795,0,0x0,8
tick,0x7ffdb840feb4,62179759,0,0x0,8
tick,0x7ffdb840feb4,62195747,0,0x0,8
tick,0x7ffdb840feb4,62211193,0,0x0,8
tick,0x7ffdb840feb4,62226941,0,0x0,8
tick,0x7ffdb840feb4,62242791,0,0x0,8
tick,0x7ffdb840feb4,62258786,0,0x0,8
tick,0x7ffdb840feb4,62274871,0,0x0,8
tick,0x7ffdb840feb4,62290208,0,0x0,8
tick,0x7ffdb840feb4,62305222,0,0x0,8
tick,0x7ffdb840feb4,62321140,0,0x0,8
tick,0x7ffdb840feb4,62336757,0,0x0,8
tick,0x7ffdb840feb4,62352255,0,0x0,8
tick,0x7ffdb840feb4,62367249,0,0x0,8
tick,0x7ffdb840feb4,62383253,0,0x0,8
tick,0x7ffdb840feb4,62398771,0,0x0,8
tick,0x7ffdb840feb4,62414788,0,0x0,8
tick,0x7ffdb840feb4,62430768,0,0x0,8
tick,0x7ffdb840feb4,62446774,0,0x0,8
tick,0x7ffdb840feb4,62462784,0,0x0,8
tick,0x7ffdb840feb4,62477869,0,0x0,8
tick,0x7ffdb840feb4,62492874,0,0x0,8
tick,0x7ffdb840feb4,62508107,0,0x0,8
tick,0x7ffdb840feb4,62523802,0,0x0,8
tick,0x7ffdb840feb4,62538798,0,0x0,8
tick,0x7ffdb840feb4,62554804,0,0x0,8
tick,0x7ffdb840feb4,62570662,0,0x0,8
tick,0x7ffdb840feb4,62585800,0,0x0,8
tick,0x7ffdb840feb4,62600771,0,0x0,8
tick,0x7ffdb840feb4,62616148,0,0x0,8
tick,0x7ffdb840feb4,62630796,0,0x0,8
tick,0x7ffdb840feb4,62646262,0,0x0,8
tick,0x7ffdb840feb4,62661685,0,0x0,8
tick,0x7ffdb840feb4,62676871,0,0x0,8
tick,0x7ffdb840feb4,62692028,0,0x0,8
tick,0x7ffdb840feb4,62708032,0,0x0,8
tick,0x7ffdb840feb4,62723010,0,0x0,8
tick,0x7ffdb840feb4,62738023,0,0x0,8
tick,0x7ffdb840feb4,62754015,0,0x0,8
tick,0x7ffdb840feb4,62770020,0,0x0,8
tick,0x7ffdb840feb4,62785878,0,0x0,8
tick,0x7ffdb840feb4,62801488,0,0x0,8
tick,0x7ffdb840feb4,62817154,0,0x0,8
tick,0x7ffdb840feb4,62833186,0,0x0,8
tick,0x7ffdb840feb4,62848489,0,0x0,8
tick,0x7ffdb840feb4,62863783,0,0x0,8
tick,0x7ffdb840feb4,62879676,0,0x0,8
tick,0x7ffdb840feb4,62894383,0,0x0,8
tick,0x7ffdb840feb4,62909787,0,0x0,8
tick,0x7ffdb840feb4,62925134,0,0x0,8
tick,0x7ffdb840feb4,62941129,0,0x0,8
tick,0x7ffdb840feb4,62956250,0,0x0,8
tick,0x7ffdb840feb4,62971803,0,0x0,8
tick,0x7ffdb840feb4,62986803,0,0x0,8
tick,0x7ffdb840feb4,63001811,0,0x0,8
tick,0x7ffdb840feb4,63017799,0,0x0,8
tick,0x7ffdb840feb4,63033818,0,0x0,8
tick,0x7ffdb840feb4,63049032,0,0x0,8
tick,0x7ffdb840feb4,63064264,0,0x0,8
tick,0x7ffdb840feb4,63079402,0,0x0,8
tick,0x7ffdb840feb4,63094998,0,0x0,8
tick,0x7ffdb840feb4,63109751,0,0x0,8
tick,0x7ffdb840feb4,63124742,0,0x0,8
tick,0x7ffdb840feb4,63140043,0,0x0,8
tick,0x7ffdb840feb4,63155272,0,0x0,8
tick,0x7ffdb840feb4,63170885,0,0x0,8
tick,0x7ffdb840feb4,63186802,0,0x0,8
tick,0x7ffdb840feb4,63202478,0,0x0,8
tick,0x7ffdb840feb4,63217957,0,0x0,8
tick,0x7ffdb840feb4,63233016,0,0x0,8
tick,0x7ffdb840feb4,63248969,0,0x0,8
tick,0x7ffdb840feb4,63263941,0,0x0,8
tick,0x7ffdb840feb4,63279324,0,0x0,8
tick,0x7ffdb840feb4,63294795,0,0x0,8
tick,0x7ffdb840feb4,63310012,0,0x0,8
tick,0x7ffdb840feb4,63325386,0,0x0,8
tick,0x7ffdb840feb4,63341463,0,0x0,8
tick,0x7ffdb840feb4,63356490,0,0x0,8
tick,0x7ffdb840feb4,63371395,0,0x0,8
tick,0x7ffdb840feb4,63386749,0,0x0,8
tick,0x7ffdb840feb4,63402391,0,0x0,8
tick,0x7ffdb840feb4,63417946,0,0x0,8
tick,0x7ffdb840feb4,63433970,0,0x0,8
tick,0x7ffdb840feb4,63449297,0,0x0,8
tick,0x7ffdb840feb4,63465475,0,0x0,8
tick,0x7ffdb840feb4,63480807,0,0x0,8
tick,0x7ffdb840feb4,63496498,0,0x0,8
tick,0x7ffdb840feb4,63511799,0,0x0,8
tick,0x7ffdb840feb4,63526808,0,0x0,8
tick,0x7ffdb840feb4,63542006,0,0x0,8
tick,0x7ffdb840feb4,63558026,0,0x0,8
tick,0x7ffdb840feb4,63573194,0,0x0,8
tick,0x7ffdb840feb4,63588472,0,0x0,8
tick,0x7ffdb840feb4,63604246,0,0x0,8
tick,0x7ffdb840feb4,63619067,0,0x0,8
tick,0x7ffdb840feb4,63634374,0,0x0,8
tick,0x7ffdb840feb4,63649904,0,0x0,8
tick,0x7ffdb840feb4,63665357,0,0x0,8
tick,0x7ffdb840feb4,63680331,0,0x0,8
tick,0x7ffdb840feb4,63695678,0,0x0,8
tick,0x7ffdb840feb4,63711674,0,0x0,8
tick,0x7ffdb840feb4,63727701,0,0x0,8
tick,0x7ffdb840feb4,63743678,0,0x0,8
tick,0x7ffdb840feb4,63759692,0,0x0,8
tick,0x7ffdb840feb4,63775020,0,0x0,8
tick,0x7ffdb840feb4,63791200,0,0x0,8
tick,0x7ffdb840feb4,63807068,0,0x0,8
tick,0x7ffdb840feb4,63822207,0,0x0,8
tick,0x7ffdb840feb4,63837548,0,0x0,8
tick,0x7ffdb840feb4,63853011,0,0x0,8
tick,0x7ffdb840feb4,63868403,0,0x0,8
tick,0x7ffdb840feb4,63883999,0,0x0,8
tick,0x7ffdb840feb4,63899845,0,0x0,8
tick,0x7ffdb840feb4,63915238,0,0x0,8
tick,0x7ffdb840feb4,63931126,0,0x0,8
tick,0x7ffdb840feb4,63946282,0,0x0,8
tick,0x7ffdb840feb4,63961638,0,0x0,8
tick,0x7ffdb840feb4,63977510,0,0x0,8
tick,0x7ffdb840feb4,63993007,0,0x0,8
tick,0x7ffdb840feb4,64009302,0,0x0,8
tick,0x7ffdb840feb4,64024853,0,0x0,8
tick,0x7ffdb840feb4,64039867,0,0x0,8
tick,0x7ffdb840feb4,64055394,0,0x0,8
tick,0x7ffdb840feb4,64071010,0,0x0,8
tick,0x7ffdb840feb4,64087022,0,0x0,8
tick,0x7ffdb840feb4,64103257,0,0x0,8
tick,0x7ffdb840feb4,64118218,0,0x0,8
tick,0x7ffdb840feb4,64133820,0,0x0,8
tick,0x7ffdb840feb4,64148979,0,0x0,8
tick,0x7ffdb840feb4,64164162,0,0x0,8
tick,0x7ffdb840feb4,64180014,0,0x0,8
tick,0x7ffdb840feb4,64195738,0,0x0,8
tick,0x7ffdb840feb4,64211165,0,0x0,8
tick,0x7ffdb840feb4,64226127,0,0x0,8
tick,0x7ffdb840feb4,64241464,0,0x0,8
tick,0x7ffdb840feb4,64256417,0,0x0,8
tick,0x7ffdb840feb4,64272155,0,0x0,8
tick,0x7ffdb840feb4,64287451,0,0x0,8
tick,0x7ffdb840feb4,64302633,0,0x0,8
tick,0x7ffdb840feb4,64318303,0,0x0,8
tick,0x7ffdb840feb4,64332898,0,0x0,8
tick,0x7ffdb840feb4,64348991,0,0x0,8
tick,0x7ffdb840feb4,64364834,0,0x0,8
tick,0x7ffdb840feb4,64380094,0,0x0,8
tick,0x7ffdb840feb4,64395738,0,0x0,8
tick,0x7ffdb840feb4,64411316,0,0x0,8
tick,0x7ffdb840feb4,64427031,0,0x0,8
tick,0x7ffdb840feb4,64442658,0,0x0,8
tick,0x7ffdb840feb4,64458598,0,0x0,8
tick,0x7ffdb840feb4,64474043,0,0x0,8
tick,0x7ffdb840feb4,64489787,0,0x0,8
tick,0x7ffdb840feb4,64505827,0,0x0,8
tick,0x7ffdb840feb4,64520884,0,0x0,8
tick,0x7ffdb840feb4,64536812,0,0x0,8
tick,0x7ffdb840feb4,64552055,0,0x0,8
tick,0x7ffdb840feb4,64567091,0,0x0,8
tick,0x7ffdb840feb4,64582412,0,0x0,8
tick,0x7ffdb840feb4,64598479,0,0x0,8
tick,0x7ffdb840feb4,64614014,0,0x0,8
tick,0x7ffdb840feb4,64629725,0,0x0,8
tick,0x7ffdb840feb4,64645133,0,0x0,8
tick,0x7ffdb840feb4,64660584,0,0x0,8
tick,0x7ffdb840feb4,64676110,0,0x0,8
tick,0x7ffdb840feb4,64691607,0,0x0,8
tick,0x7ffdb840feb4,64707003,0,0x0,8
tick,0x7ffdb840feb4,64723000,0,0x0,8
tick,0x7ffdb840feb4,64738998,0,0x0,8
tick,0x7ffdb840feb4,64755001,0,0x0,8
tick,0x7ffdb840feb4,64771014,0,0x0,8
tick,0x7ffdb840feb4,64786338,0,0x0,8
tick,0x7ffdb840feb4,64801490,0,0x0,8
tick,0x7ffdb840feb4,64817308,0,0x0,8
tick,0x7ffdb840feb4,64832829,0,0x0,8
tick,0x7ffdb840feb4,64848338,0,0x0,8
tick,0x7ffdb840feb4,64863491,0,0x0,8
tick,0x7ffdb840feb4,64879193,0,0x0,8
tick,0x7ffdb840feb4,64894696,0,0x0,8
tick,0x7ffdb840feb4,64910415,0,0x0,8
tick,0x7ffdb840feb4,64925099,0,0x0,8
tick,0x7ffdb840feb4,64940454,0,0x0,8
tick,0x7ffdb840feb4,64956222,0,0x0,8
tick,0x7ffdb840feb4,64971548,0,0x0,8
tick,0x7ffdb840feb4,64987084,0,0x0,8
tick,0x7ffdb840feb4,65002643,0,0x0,8
tick,0x7ffdb840feb4,65018162,0,0x0,8
tick,0x7ffdb840feb4,65033148,0,0x0,8
tick,0x7ffdb840feb4,65049013,0,0x0,8
tick,0x7ffdb840feb4,65064078,0,0x0,8
tick,0x7ffdb840feb4,65079211,0,0x0,8
tick,0x7ffdb840feb4,65095161,0,0x0,8
tick,0x7ffdb840feb4,65110789,0,0x0,8
tick,0x7ffdb840feb4,65125631,0,0x0,8
tick,0x7ffdb840feb4,65140771,0,0x0,8
tick,0x7ffdb840feb4,65156490,0,0x0,8
tick,0x7ffdb840feb4,65171616,0,0x0,8
tick,0x7ffdb840feb4,65187134,0,0x0,8
tick,0x7ffdb840feb4,65202491,0,0x0,8
tick,0x7ffdb840feb4,65217858,0,0x0,8
tick,0x7ffdb840feb4,65233329,0,0x0,8
tick,0x7ffdb840feb4,65249009,0,0x0,8
tick,0x7ffdb840feb4,65264373,0,0x0,8
tick,0x7ffdb840feb4,65279421,0,0x0,8
tick,0x7ffdb840feb4,65295348,0,0x0,8
tick,0x7ffdb840feb4,65311048,0,0x0,8
tick,0x7ffdb840feb4,65326879,0,0x0,8
tick,0x7ffdb840feb4,65342021,0,0x0,8
tick,0x7ffdb840feb4,65357540,0,0x0,8
tick,0x7ffdb840feb4,65372800,0,0x0,8
tick,0x7ffdb840feb4,65388859,0,0x0,8
tick,0x7ffdb840feb4,65403892,0,0x0,8
tick,0x7ffdb840feb4,65419384,0,0x0,8
tick,0x7ffdb840feb4,65434704,0,0x0,8
tick,0x7ffdb840feb4,65450201,0,0x0,8
tick,0x7ffdb840feb4,65466241,0,0x0,8
tick,0x7ffdb840feb4,65481971,0,0x0,8
tick,0x7ffdb840feb4,65497585,0,0x0,8
tick,0x7ffdb840feb4,65513264,0,0x0,8
tick,0x7ffdb840feb4,65528889,0,0x0,8
tick,0x7ffdb840feb4,65544121,0,0x0,8
tick,0x7ffdb840feb4,65559581,0,0x0,8
tick,0x7ffdb840feb4,65574841,0,0x0,8
tick,0x7ffdb840feb4,65591267,0,0x0,8
tick,0x7ffdb840feb4,65607682,0,0x0,8
tick,0x7ffdb840feb4,65623069,0,0x0,8
tick,0x7ffdb840feb4,65638938,0,0x0,8
tick,0x7ffdb840feb4,65654994,0,0x0,8
tick,0x7ffdb840feb4,65671332,0,0x0,8
tick,0x7ffdb840feb4,65686864,0,0x0,8
tick,0x7ffdb840feb4,65702392,0,0x0,8
tick,0x7ffdb840feb4,65717658,0,0x0,8
tick,0x7ffdb840feb4,65733533,0,0x0,8
tick,0x7ffdb840feb4,65749690,0,0x0,8
tick,0x7ffdb840feb4,65765705,0,0x0,8
tick,0x7ffdb840feb4,65780860,0,0x0,8
tick,0x7ffdb840feb4,65796172,0,0x0,8
tick,0x7ffdb840feb4,65811377,0,0x0,8
tick,0x7ffdb840feb4,65826774,0,0x0,8
tick,0x7ffdb840feb4,65842708,0,0x0,8
tick,0x7ffdb840feb4,65858731,0,0x0,8
tick,0x7ffdb840feb4,65873960,0,0x0,8
tick,0x7ffdb840feb4,65888935,0,0x0,8
tick,0x7ffdb840feb4,65904815,0,0x0,8
tick,0x7ffdb840feb4,65919867,0,0x0,8
tick,0x7ffdb840feb4,65934948,0,0x0,8
tick,0x7ffdb840feb4,65950443,0,0x0,8
tick,0x7ffdb840feb4,65965661,0,0x0,8
tick,0x7ffdb840feb4,65980893,0,0x0,8
tick,0x7ffdb840feb4,65996454,0,0x0,8
tick,0x7ffdb840feb4,66011634,0,0x0,8
tick,0x7ffdb840feb4,66027508,0,0x0,8
tick,0x7ffdb840feb4,66042846,0,0x0,8
tick,0x7ffdb840feb4,66057782,0,0x0,8
tick,0x7ffdb840feb4,66073152,0,0x0,8
tick,0x7ffdb840feb4,66089287,0,0x0,8
tick,0x7ffdb840feb4,66105229,0,0x0,8
tick,0x7ffdb840feb4,66121240,0,0x0,8
tick,0x7ffdb840feb4,66136828,0,0x0,8
tick,0x7ffdb840feb4,66153299,0,0x0,8
tick,0x7ffdb840feb4,66169103,0,0x0,8
tick,0x7ffdb840feb4,66184750,0,0x0,8
tick,0x7ffdb840feb4,66200307,0,0x0,8
tick,0x7ffdb840feb4,66215262,0,0x0,8
tick,0x7ffdb840feb4,66231186,0,0x0,8
tick,0x7ffdb840feb4,66246984,0,0x0,8
tick,0x7ffdb840feb4,66262305,0,0x0,8
tick,0x7ffdb840feb4,66277715,0,0x0,8
tick,0x7ffdb840feb4,66293286,0,0x0,8
tick,0x7ffdb840feb4,66309174,0,0x0,8
tick,0x7ffdb840feb4,66324866,0,0x0,8
tick,0x7ffdb840feb4,66340425,0,0x0,8
tick,0x7ffdb840feb4,66356611,0,0x0,8
tick,0x7ffdb840feb4,66372254,0,0x0,8
tick,0x7ffdb840feb4,66387923,0,0x0,8
tick,0x7ffdb840feb4,66403853,0,0x0,8
tick,0x7ffdb840feb4,66419105,0,0x0,8
tick,0x7ffdb840feb4,66433987,0,0x0,8
tick,0x7ffdb840feb4,66449468,0,0x0,8
tick,0x7ffdb840feb4,66464953,0,0x0,8
tick,0x7ffdb840feb4,66480371,0,0x0,8
tick,0x7ffdb840feb4,66495290,0,0x0,8
tick,0x7ffdb840feb4,66510485,0,0x0,8
tick,0x7ffdb840feb4,66526667,0,0x0,8
tick,0x7ffdb840feb4,66541868,0,0x0,8
tick,0x7ffdb840feb4,66557129,0,0x0,8
tick,0x7ffdb840feb4,66573327,0,0x0,8
tick,0x7ffdb840feb4,66588948,0,0x0,8
tick,0x7ffdb840feb4,66604836,0,0x0,8
tick,0x7ffdb840feb4,66620694,0,0x0,8
tick,0x7ffdb840feb4,66635842,0,0x0,8
tick,0x7ffdb840feb4,66651470,0,0x0,8
tick,0x7ffdb840feb4,66666920,0,0x0,8
tick,0x7ffdb840feb4,66683133,0,0x0,8
tick,0x7ffdb840feb4,66698671,0,0x0,8
tick,0x7ffdb840feb4,66714332,0,0x0,8
tick,0x7ffdb840feb4,66729344,0,0x0,8
tick,0x7ffdb840feb4,66745327,0,0x0,8
tick,0x7ffdb840feb4,66761452,0,0x0,8
tick,0x7ffdb840feb4,66777503,0,0x0,8
tick,0x7ffdb840feb4,66793335,0,0x0,8
tick,0x7ffdb840feb4,66808688,0,0x0,8
tick,0x7ffdb840feb4,66823726,0,0x0,8
tick,0x7ffdb840feb4,66839633,0,0x0,8
tick,0x7ffdb840feb4,66855602,0,0x0,8
tick,0x7ffdb840feb4,66871559,0,0x0,8
tick,0x7ffdb840feb4,66887340,0,0x0,8
tick,0x7ffdb840feb4,66903043,0,0x0,8
tick,0x7ffdb840feb4,66918309,0,0x0,8
tick,0x7ffdb840feb4,66933796,0,0x0,8
tick,0x7ffdb840feb4,66949584,0,0x0,8
tick,0x7ffdb840feb4,66965161,0,0x0,8
tick,0x7ffdb840feb4,66980772,0,0x0,8
tick,0x7ffdb840feb4,66995966,0,0x0,8
tick,0x7ffdb840feb4,67011307,0,0x0,8
tick,0x7ffdb840feb4,67026777,0,0x0,8
tick,0x7ffdb840feb4,67042769,0,0x0,8
tick,0x7ffdb840feb4,67058574,0,0x0,8
tick,0x7ffdb840feb4,67074798,0,0x0,8
tick,0x7ffdb840feb4,67091050,0,0x0,8
tick,0x7ffdb840feb4,67106525,0,0x0,8
tick,0x7ffdb840feb4,67122231,0,0x0,8
tick,0x7ffdb840feb4,67137541,0,0x0,8
tick,0x7ffdb840feb4,67152593,0,0x0,8
tick,0x7ffdb840feb4,67168194,0,0x0,8
tick,0x7ffdb840feb4,67183965,0,0x0,8
tick,0x7ffdb840feb4,67198654,0,0x0,8
tick,0x7ffdb840feb4,67214326,0,0x0,8
tick,0x7ffdb840feb4,67230187,0,0x0,8
tick,0x7ffdb840feb4,67245321,0,0x0,8
tick,0x7ffdb840feb4,67261206,0,0x0,8
tick,0x7ffdb840feb4,67276237,0,0x0,8
tick,0x7ffdb840feb4,67292217,0,0x0,8
tick,0x7ffdb840feb4,67307382,0,0x0,8
tick,0x7ffdb840feb4,67322654,0,0x0,8
tick,0x7ffdb840feb4,67338094,0,0x0,8
tick,0x7ffdb840feb4,67353361,0,0x0,8
tick,0x7ffdb840feb4,67368592,0,0x0,8
tick,0x7ffdb840feb4,67383758,0,0x0,8
tick,0x7ffdb840feb4,67398771,0,0x0,8
tick,0x7ffdb840feb4,67414169,0,0x0,8
tick,0x7ffdb840feb4,67429800,0,0x0,8
tick,0x7ffdb840feb4,67445206,0,0x0,8
tick,0x7ffdb840feb4,67460628,0,0x0,8
tick,0x7ffdb840feb4,67476732,0,0x0,8
tick,0x7ffdb840feb4,67492663,0,0x0,8
tick,0x7ffdb840feb4,67508635,0,0x0,8
tick,0x7ffdb840feb4,67523829,0,0x0,8
tick,0x7ffdb840feb4,67538840,0,0x0,8
tick,0x7ffdb840feb4,67554171,0,0x0,8
tick,0x7ffdb840feb4,67569515,0,0x0,8
tick,0x7ffdb840feb4,67584632,0,0x0,8
tick,0x7ffdb840feb4,67600073,0,0x0,8
tick,0x7ffdb840feb4,67616073,0,0x0,8
tick,0x7ffdb840feb4,67631568,0,0x0,8
tick,0x7ffdb840feb4,67647375,0,0x0,8
tick,0x7ffdb840feb4,67662646,0,0x0,8
tick,0x7ffdb840feb4,67678513,0,0x0,8
tick,0x7ffdb840feb4,67693591,0,0x0,8
tick,0x7ffdb840feb4,67709754,0,0x0,8
tick,0x7ffdb840feb4,67725182,0,0x0,8
tick,0x7ffdb840feb4,67741337,0,0x0,8
tick,0x7ffdb840feb4,67757440,0,0x0,8
tick,0x7ffdb840feb4,67773461,0,0x0,8
tick,0x7ffdb840feb4,67789472,0,0x0,8
tick,0x7ffdb840feb4,67805385,0,0x0,8
tick,0x7ffdb840feb4,67821022,0,0x0,8
tick,0x7ffdb840feb4,67836328,0,0x0,8
tick,0x7ffdb840feb4,67852312,0,0x0,8
tick,0x7ffdb840feb4,67867667,0,0x0,8
tick,0x7ffdb840feb4,67882867,0,0x0,8
tick,0x7ffdb840feb4,67898865,0,0x0,8
tick,0x7ffdb840feb4,67914896,0,0x0,8
tick,0x7ffdb840feb4,67930149,0,0x0,8
tick,0x7ffdb840feb4,67946319,0,0x0,8
tick,0x7ffdb840feb4,67961917,0,0x0,8
tick,0x7ffdb840feb4,67977024,0,0x0,8
tick,0x7ffdb840feb4,67991938,0,0x0,8
tick,0x7ffdb840feb4,68007814,0,0x0,8
tick,0x7ffdb840feb4,68023988,0,0x0,8
tick,0x7ffdb840feb4,68039139,0,0x0,8
tick,0x7ffdb840feb4,68054034,0,0x0,8
tick,0x7ffdb840feb4,68070273,0,0x0,8
tick,0x7ffdb840feb4,68085251,0,0x0,8
tick,0x7ffdb840feb4,68100436,0,0x0,8
tick,0x7ffdb840feb4,68115950,0,0x0,8
tick,0x7ffdb840feb4,68131487,0,0x0,8
tick,0x7ffdb840feb4,68146899,0,0x0,8
tick,0x7ffdb840feb4,68162204,0,0x0,8
tick,0x7ffdb840feb4,68177420,0,0x0,8
tick,0x7ffdb840feb4,68192927,0,0x0,8
tick,0x7ffdb840feb4,68207944,0,0x0,8
tick,0x7ffdb840feb4,68222626,0,0x0,8
tick,0x7ffdb840feb4,68238457,0,0x0,8
tick,0x7ffdb840feb4,68253776,0,0x0,8
tick,0x7ffdb840feb4,68269289,0,0x0,8
tick,0x7ffdb840feb4,68284134,0,0x0,8
tick,0x7ffdb840feb4,68299404,0,0x0,8
tick,0x7ffdb840feb4,68315533,0,0x0,8
tick,0x7ffdb840feb4,68331410,0,0x0,8
tick,0x7ffdb840feb4,68347579,0,0x0,8
tick,0x7ffdb840feb4,68363448,0,0x0,8
tick,0x7ffdb840feb4,68378413,0,0x0,8
tick,0x7ffdb840feb4,68393410,0,0x0,8
tick,0x7ffdb840feb4,68409414,0,0x0,8
tick,0x7ffdb840feb4,68424545,0,0x0,8
tick,0x7ffdb840feb4,68439419,0,0x0,8
tick,0x7ffdb840feb4,68455545,0,0x0,8
tick,0x7ffdb840feb4,68471553,0,0x0,8
tick,0x7ffdb840feb4,68487553,0,0x0,8
tick,0x7ffdb840feb4,68502550,0,0x0,8
tick,0x7ffdb840feb4,68517426,0,0x0,8
tick,0x7ffdb840feb4,68533423,0,0x0,8
tick,0x7ffdb840feb4,68549100,0,0x0,8
tick,0x7ffdb840feb4,68564296,0,0x0,8
tick,0x7ffdb840feb4,68580401,0,0x0,8
tick,0x7ffdb840feb4,68594895,0,0x0,8
tick,0x7ffdb840feb4,68610438,0,0x0,8
tick,0x7ffdb840feb4,68626164,0,0x0,8
tick,0x7ffdb840feb4,68641110,0,0x0,8
tick,0x7ffdb840feb4,68656441,0,0x0,8
tick,0x7ffdb840feb4,68672182,0,0x0,8
tick,0x7ffdb840feb4,68687453,0,0x0,8
tick,0x7ffdb840feb4,68703233,0,0x0,8
tick,0x7ffdb840feb4,68718449,0,0x0,8
tick,0x7ffdb840feb4,68733679,0,0x0,8
tick,0x7ffdb840feb4,68748836,0,0x0,8
tick,0x7ffdb840feb4,68764846,0,0x0,8
tick,0x7ffdb840feb4,68780850,0,0x0,8
tick,0x7ffdb840feb4,68796284,0,0x0,8
tick,0x7ffdb840feb4,68811461,0,0x0,8
tick,0x7ffdb840feb4,68826856,0,0x0,8
tick,0x7ffdb840feb4,68842639,0,0x0,8
tick,0x7ffdb840feb4,68858465,0,0x0,8
tick,0x7ffdb840feb4,68874556,0,0x0,8
tick,0x7ffdb840feb4,68890480,0,0x0,8
tick,0x7ffdb840feb4,68905894,0,0x0,8
tick,0x7ffdb840feb4,68921318,0,0x0,8
tick,0x7ffdb840feb4,68936729,0,0x0,8
tick,0x7ffdb840feb4,68952005,0,0x0,8
tick,0x7ffdb840feb4,68967897,0,0x0,8
tick,0x7ffdb840feb4,68983870,0,0x0,8
tick,0x7ffdb840feb4,68999648,0,0x0,8
tick,0x7ffdb840feb4,69014894,0,0x0,8
tick,0x7ffdb840feb4,69030028,0,0x0,8
tick,0x7ffdb840feb4,69045862,0,0x0,8
tick,0x7ffdb840feb4,69061497,0,0x0,8
tick,0x7ffdb840feb4,69077491,0,0x0,8
tick,0x7ffdb840feb4,69092968,0,0x0,8
tick,0x7ffdb840feb4,69108129,0,0x0,8
tick,0x7ffdb840feb4,69124203,0,0x0,8
tick,0x7ffdb840feb4,69139500,0,0x0,8
tick,0x7ffdb840feb4,69154977,0,0x0,8
tick,0x7ffdb840feb4,69169989,0,0x0,8
tick,0x7ffdb840feb4,69185045,0,0x0,8
tick,0x7ffdb840feb4,69200502,0,0x0,8
tick,0x7ffdb840feb4,69216211,0,0x0,8
tick,0x7ffdb840feb4,69230951,0,0x0,8
tick,0x7ffdb840feb4,69247275,0,0x0,8
tick,0x7ffdb840feb4,69261644,0,0x0,8
tick,0x7ffdb840feb4,69277671,0,0x0,8
tick,0x7ffdb840feb4,69293510,0,0x0,8
tick,0x7ffdb840feb4,69309220,0,0x0,8
tick,0x7ffdb840feb4,69325042,0,0x0,8
tick,0x7ffdb840feb4,69339923,0,0x0,8
tick,0x7ffdb840feb4,69355089,0,0x0,8
tick,0x7ffdb840feb4,69370528,0,0x0,8
tick,0x7ffdb840feb4,69386260,0,0x0,8
tick,0x7ffdb840feb4,69401590,0,0x0,8
tick,0x7ffdb840feb4,69417695,0,0x0,8
tick,0x7ffdb840feb4,69432880,0,0x0,8
tick,0x7ffdb840feb4,69448050,0,0x0,8
tick,0x7ffdb840feb4,69463540,0,0x0,8
tick,0x7ffdb840feb4,69478935,0,0x0,8
tick,0x7ffdb840feb4,69494921,0,0x0,8
tick,0x7ffdb840feb4,69509771,0,0x0,8
tick,0x7ffdb840feb4,69524931,0,0x0,8
tick,0x7ffdb840feb4,69540926,0,0x0,8
tick,0x7ffdb840feb4,69556552,0,0x0,8
tick,0x7ffdb840feb4,69571909,0,0x0,8
tick,0x7ffdb840feb4,69587211,0,0x0,8
tick,0x7ffdb840feb4,69602946,0,0x0,8
tick,0x7ffdb840feb4,69618962,0,0x0,8
tick,0x7ffdb840feb4,69634975,0,0x0,8
tick,0x7ffdb840feb4,69649984,0,0x0,8
tick,0x7ffdb840feb4,69665564,0,0x0,8
tick,0x7ffdb840feb4,69680570,0,0x0,8
tick,0x7ffdb840feb4,69696565,0,0x0,8
tick,0x7ffdb840feb4,69712567,0,0x0,8
tick,0x7ffdb840feb4,69728559,0,0x0,8
tick,0x7ffdb840feb4,69744573,0,0x0,8
tick,0x7ffdb840feb4,69759698,0,0x0,8
tick,0x7ffdb840feb4,69775711,0,0x0,8
tick,0x7ffdb840feb4,69790705,0,0x0,8
tick,0x7ffdb840feb4,69806695,0,0x0,8
tick,0x7ffdb840feb4,69822584,0,0x0,8
tick,0x7ffdb840feb4,69838577,0,0x0,8
tick,0x7ffdb840feb4,69853829,0,0x0,8
tick,0x7ffdb840feb4,69869589,0,0x0,8
tick,0x7ffdb840feb4,69885598,0,0x0,8
tick,0x7ffdb840feb4,69901580,0,0x0,8
tick,0x7ffdb840feb4,69917387,0,0x0,8
tick,0x7ffdb840feb4,69932583,0,0x0,8
tick,0x7ffdb840feb4,69947596,0,0x0,8
tick,0x7ffdb840feb4,69963598,0,0x0,8
tick,0x7ffdb840feb4,69979555,0,0x0,8
tick,0x7ffdb840feb4,69995601,0,0x0,8
tick,0x7ffdb840feb4,70011594,0,0x0,8
tick,0x7ffdb840feb4,70026810,0,0x0,8
tick,0x7ffdb840feb4,70041618,0,0x0,8
tick,0x7ffdb840feb4,70056840,0,0x0,8
tick,0x7ffdb840feb4,70072611,0,0x0,8
tick,0x7ffdb840feb4,70087595,0,0x0,8
tick,0x7ffdb840feb4,70103612,0,0x0,8
tick,0x7ffdb840feb4,70119618,0,0x0,8
tick,0x7ffdb840feb4,70135618,0,0x0,8
tick,0x7ffdb840feb4,70151629,0,0x0,8
tick,0x7ffdb840feb4,70167612,0,0x0,8
tick,0x7ffdb840feb4,70183627,0,0x0,8
tick,0x7ffdb840feb4,70199630,0,0x0,8
tick,0x7ffdb840feb4,70215632,0,0x0,8
tick,0x7ffdb840feb4,70231643,0,0x0,8
tick,0x7ffdb840feb4,70247629,0,0x0,8
tick,0x7ffdb840feb4,70263629,0,0x0,8
tick,0x7ffdb840feb4,70278871,0,0x0,8
tick,0x7ffdb840feb4,70293631,0,0x0,8
tick,0x7ffdb840feb4,70309636,0,0x0,8
tick,0x7ffdb840feb4,70325641,0,0x0,8
tick,0x7ffdb840feb4,70341633,0,0x0,8
tick,0x7ffdb840feb4,70357078,0,0x0,8
tick,0x7ffdb840feb4,70372646,0,0x0,8
tick,0x7ffdb840feb4,70388605,0,0x0,8
tick,0x7ffdb840feb4,70403882,0,0x0,8
tick,0x7ffdb840feb4,70419673,0,0x0,8
tick,0x7ffdb840feb4,70434668,0,0x0,8
tick,0x7ffdb840feb4,70450665,0,0x0,8
tick,0x7ffdb840feb4,70466659,0,0x0,8
tick,0x7ffdb840feb4,70481903,0,0x0,8
tick,0x7ffdb840feb4,70497655,0,0x0,8
tick,0x7ffdb840feb4,70512664,0,0x0,8
tick,0x7ffdb840feb4,70528667,0,0x0,8
tick,0x7ffdb840feb4,70544667,0,0x0,8
tick,0x7ffdb840feb4,70560486,0,0x0,8
tick,0x7ffdb840feb4,70575681,0,0x0,8
tick,0x7ffdb840feb4,70590663,0,0x0,8
tick,0x7ffdb840feb4,70606676,0,0x0,8
tick,0x7ffdb840feb4,70622710,0,0x0,8
tick,0x7ffdb840feb4,70638706,0,0x0,8
tick,0x7ffdb840feb4,70654722,0,0x0,8
tick,0x7ffdb840feb4,70670714,0,0x0,8
tick,0x7ffdb840feb4,70686724,0,0x0,8
tick,0x7ffdb840feb4,70702725,0,0x0,8
tick,0x7ffdb840feb4,70718698,0,0x0,8
tick,0x7ffdb840feb4,70734683,0,0x0,8
tick,0x7ffdb840feb4,70750694,0,0x0,8
tick,0x7ffdb840feb4,70766697,0,0x0,8
tick,0x7ffdb840feb4,70782697,0,0x0,8
tick,0x7ffdb840feb4,70798696,0,0x0,8
tick,0x7ffdb840feb4,70814708,0,0x0,8
tick,0x7ffdb840feb4,70830694,0,0x0,8
tick,0x7ffdb840feb4,70845932,0,0x0,8
tick,0x7ffdb840feb4,70860706,0,0x0,8
tick,0x7ffdb840feb4,70876706,0,0x0,8
tick,0x7ffdb840feb4,70892700,0,0x0,8
tick,0x7ffdb840feb4,70908700,0,0x0,8
tick,0x7ffdb840feb4,70923917,0,0x0,8
tick,0x7ffdb840feb4,70938983,0,0x0,8
tick,0x7ffdb840feb4,70954733,0,0x0,8
tick,0x7ffdb840feb4,70970712,0,0x0,8
tick,0x7ffdb840feb4,70986729,0,0x0,8
tick,0x7ffdb840feb4,71002117,0,0x0,8
tick,0x7ffdb840feb4,71017718,0,0x0,8
tick,0x7ffdb840feb4,71033729,0,0x0,8
tick,0x7ffdb840feb4,71049728,0,0x0,8
tick,0x7ffdb840feb4,71065727,0,0x0,8
tick,0x7ffdb840feb4,71081034,0,0x0,8
tick,0x7ffdb840feb4,71096738,0,0x0,8
tick,0x7ffdb840feb4,71111730,0,0x0,8
tick,0x7ffdb840feb4,71127733,0,0x0,8
tick,0x7ffdb840feb4,71143736,0,0x0,8
tick,0x7ffdb840feb4,71159017,0,0x0,8
tick,0x7ffdb840feb4,71174741,0,0x0,8
tick,0x7ffdb840feb4,71189738,0,0x0,8
tick,0x7ffdb840feb4,71204988,0,0x0,8
tick,0x7ffdb840feb4,71220749,0,0x0,8
tick,0x7ffdb840feb4,71235748,0,0x0,8
tick,0x7ffdb840feb4,71251705,0,0x0,8
tick,0x7ffdb840feb4,71267753,0,0x0,8
tick,0x7ffdb840feb4,71283750,0,0x0,8
tick,0x7ffdb840feb4,71298753,0,0x0,8
tick,0x7ffdb840feb4,71313762,0,0x0,8
tick,0x7ffdb840feb4,71329761,0,0x0,8
tick,0x7ffdb840feb4,71345757,0,0x0,8
tick,0x7ffdb840feb4,71361584,0,0x0,8
tick,0x7ffdb840feb4,71376768,0,0x0,8
tick,0x7ffdb840feb4,71391743,0,0x0,8
tick,0x7ffdb840feb4,71407653,0,0x0,8
tick,0x7ffdb840feb4,71423772,0,0x0,8
tick,0x7ffdb840feb4,71439765,0,0x0,8
tick,0x7ffdb840feb4,71455772,0,0x0,8
tick,0x7ffdb840feb4,71471022,0,0x0,8
tick,0x7ffdb840feb4,71486185,0,0x0,8
tick,0x7ffdb840feb4,71501780,0,0x0,8
tick,0x7ffdb840feb4,71517785,0,0x0,8
tick,0x7ffdb840feb4,71533786,0,0x0,8
tick,0x7ffdb840feb4,71549030,0,0x0,8
tick,0x7ffdb840feb4,71564798,0,0x0,8
tick,0x7ffdb840feb4,71579785,0,0x0,8
tick,0x7ffdb840feb4,71595025,0,0x0,8
tick,0x7ffdb840feb4,71610797,0,0x0,8
tick,0x7ffdb840feb4,71625789,0,0x0,8
tick,0x7ffdb840feb4,71641124,0,0x0,8
tick,0x7ffdb840feb4,71656804,0,0x0,8
tick,0x7ffdb840feb4,71671809,0,0x0,8
tick,0x7ffdb840feb4,71687698,0,0x0,8
tick,0x7ffdb840feb4,71703802,0,0x0,8
tick,0x7ffdb840feb4,71719051,0,0x0,8
tick,0x7ffdb840feb4,71734795,0,0x0,8
tick,0x7ffdb840feb4,71749812,0,0x0,8
tick,0x7ffdb840feb4,71765018,0,0x0,8
tick,0x7ffdb840feb4,71780808,0,0x0,8
tick,0x7ffdb840feb4,71795813,0,0x0,8
tick,0x7ffdb840feb4,71811815,0,0x0,8
tick,0x7ffdb840feb4,71827827,0,0x0,8
tick,0x7ffdb840feb4,71843816,0,0x0,8
tick,0x7ffdb840feb4,71859820,0,0x0,8
tick,0x7ffdb840feb4,71875049,0,0x0,8
tick,0x7ffdb840feb4,71890827,0,0x0,8
tick,0x7ffdb840feb4,71905832,0,0x0,8
tick,0x7ffdb840feb4,71921823,0,0x0,8
tick,0x7ffdb840feb4,71937827,0,0x0,8
tick,0x7ffdb840feb4,71953717,0,0x0,8
tick,0x7ffdb840feb4,71969836,0,0x0,8
tick,0x7ffdb840feb4,71985831,0,0x0,8
tick,0x7ffdb840feb4,72001831,0,0x0,8
tick,0x7ffdb840feb4,72017052,0,0x0,8
tick,0x7ffdb840feb4,72032851,0,0x0,8
tick,0x7ffdb840feb4,72047837,0,0x0,8
tick,0x7ffdb840feb4,72063860,0,0x0,8
tick,0x7ffdb840feb4,72079858,0,0x0,8
tick,0x7ffdb840feb4,72095084,0,0x0,8
tick,0x7ffdb840feb4,72110862,0,0x0,8
tick,0x7ffdb840feb4,72125848,0,0x0,8
tick,0x7ffdb840feb4,72141056,0,0x0,8
tick,0x7ffdb840feb4,72156852,0,0x0,8
tick,0x7ffdb840feb4,72171857,0,0x0,8
tick,0x7ffdb840feb4,72187152,0,0x0,8
tick,0x7ffdb840feb4,72202855,0,0x0,8
tick,0x7ffdb840feb4,72217865,0,0x0,8
tick,0x7ffdb840feb4,72233097,0,0x0,8
tick,0x7ffdb840feb4,72248864,0,0x0,8
tick,0x7ffdb840feb4,72263874,0,0x0,8
tick,0x7ffdb840feb4,72279602,0,0x0,8
tick,0x7ffdb840feb4,72295275,0,0x0,8
tick,0x7ffdb840feb4,72310614,0,0x0,8
tick,0x7ffdb840feb4,72325645,0,0x0,8
tick,0x7ffdb840feb4,72340876,0,0x0,8
tick,0x7ffdb840feb4,72356886,0,0x0,8
tick,0x7ffdb840feb4,72372879,0,0x0,8
tick,0x7ffdb840feb4,72388877,0,0x0,8
tick,0x7ffdb840feb4,72404884,0,0x0,8
tick,0x7ffdb840feb4,72420891,0,0x0,8
tick,0x7ffdb840feb4,72436894,0,0x0,8
tick,0x7ffdb840feb4,72452739,0,0x0,8
tick,0x7ffdb840feb4,72467890,0,0x0,8
tick,0x7ffdb840feb4,72482890,0,0x0,8
tick,0x7ffdb840feb4,72498897,0,0x0,8
tick,0x7ffdb840feb4,72514905,0,0x0,8
tick,0x7ffdb840feb4,72530901,0,0x0,8
tick,0x7ffdb840feb4,72546900,0,0x0,8
tick,0x7ffdb840feb4,72562900,0,0x0,8
tick,0x7ffdb840feb4,72578145,0,0x0,8
tick,0x7ffdb840feb4,72592909,0,0x0,8
tick,0x7ffdb840feb4,72608911,0,0x0,8
tick,0x7ffdb840feb4,72624925,0,0x0,8
tick,0x7ffdb840feb4,72640912,0,0x0,8
tick,0x7ffdb840feb4,72656165,0,0x0,8
tick,0x7ffdb840feb4,72670914,0,0x0,8
tick,0x7ffdb840feb4,72686693,0,0x0,8
tick,0x7ffdb840feb4,72701929,0,0x0,8
tick,0x7ffdb840feb4,72716923,0,0x0,8
tick,0x7ffdb840feb4,72732929,0,0x0,8
tick,0x7ffdb840feb4,72748933,0,0x0,8
tick,0x7ffdb840feb4,72764726,0,0x0,8
tick,0x7ffdb840feb4,72779934,0,0x0,8
tick,0x7ffdb840feb4,72794897,0,0x0,8
tick,0x7ffdb840feb4,72809901,0,0x0,8
tick,0x7ffdb840feb4,72825904,0,0x0,8
tick,0x7ffdb840feb4,72840916,0,0x0,8
tick,0x7ffdb840feb4,72856152,0,0x0,8
tick,0x7ffdb840feb4,72871943,0,0x0,8
tick,0x7ffdb840feb4,72886949,0,0x0,8
tick,0x7ffdb840feb4,72902947,0,0x0,8
tick,0x7ffdb840feb4,72918413,0,0x0,8
tick,0x7ffdb840feb4,72933971,0,0x0,8
tick,0x7ffdb840feb4,72949206,0,0x0,8
tick,0x7ffdb840feb4,72964958,0,0x0,8
tick,0x7ffdb840feb4,72980201,0,0x0,8
tick,0x7ffdb840feb4,72995957,0,0x0,8
tick,0x7ffdb840feb4,73010961,0,0x0,8
tick,0x7ffdb840feb4,73026950,0,0x0,8
tick,0x7ffdb840feb4,73042196,0,0x0,8
tick,0x7ffdb840feb4,73056973,0,0x0,8
tick,0x7ffdb840feb4,73072209,0,0x0,8
tick,0x7ffdb840feb4,73087963,0,0x0,8
tick,0x7ffdb840feb4,73102975,0,0x0,8
tick,0x7ffdb840feb4,73118495,0,0x0,8
tick,0x7ffdb840feb4,73133973,0,0x0,8
tick,0x7ffdb840feb4,73148973,0,0x0,8
tick,0x7ffdb840feb4,73164979,0,0x0,8
tick,0x7ffdb840feb4,73180975,0,0x0,8
tick,0x7ffdb840feb4,73196986,0,0x0,8
tick,0x7ffdb840feb4,73212980,0,0x0,8
tick,0x7ffdb840feb4,73228984,0,0x0,8
tick,0x7ffdb840feb4,73244991,0,0x0,8
tick,0x7ffdb840feb4,73260988,0,0x0,8
tick,0x7ffdb840feb4,73275993,0,0x0,8
tick,0x7ffdb840feb4,73290906,0,0x0,8
tick,0x7ffdb840feb4,73306220,0,0x0,8
tick,0x7ffdb840feb4,73321991,0,0x0,8
tick,0x7ffdb840feb4,73336997,0,0x0,8
tick,0x7ffdb840feb4,73352921,0,0x0,8
tick,0x7ffdb840feb4,73368996,0,0x0,8
tick,0x7ffdb840feb4,73385004,0,0x0,8
tick,0x7ffdb840feb4,73401003,0,0x0,8
tick,0x7ffdb840feb4,73416999,0,0x0,8
tick,0x7ffdb840feb4,73433005,0,0x0,8
tick,0x7ffdb840feb4,73449012,0,0x0,8
tick,0x7ffdb840feb4,73465010,0,0x0,8
tick,0x7ffdb840feb4,73481012,0,0x0,8
tick,0x7ffdb840feb4,73497018,0,0x0,8
tick,0x7ffdb840feb4,73513016,0,0x0,8
tick,0x7ffdb840feb4,73529018,0,0x0,8
tick,0x7ffdb840feb4,73545021,0,0x0,8
tick,0x7ffdb840feb4,73561021,0,0x0,8
tick,0x7ffdb840feb4,73576030,0,0x0,8
tick,0x7ffdb840feb4,73591916,0,0x0,8
tick,0x7ffdb840feb4,73607041,0,0x0,8
tick,0x7ffdb840feb4,73622270,0,0x0,8
tick,0x7ffdb840feb4,73638031,0,0x0,8
tick,0x7ffdb840feb4,73652932,0,0x0,8
tick,0x7ffdb840feb4,73668325,0,0x0,8
tick,0x7ffdb840feb4,73684039,0,0x0,8
tick,0x7ffdb840feb4,73699046,0,0x0,8
tick,0x7ffdb840feb4,73715048,0,0x0,8
tick,0x7ffdb840feb4,73731042,0,0x0,8
tick,0x7ffdb840feb4,73747046,0,0x0,8
tick,0x7ffdb840feb4,73762869,0,0x0,8
tick,0x7ffdb840feb4,73778048,0,0x0,8
tick,0x7ffdb840feb4,73793287,0,0x0,8
tick,0x7ffdb840feb4,73809065,0,0x0,8
tick,0x7ffdb840feb4,73825067,0,0x0,8
tick,0x7ffdb840feb4,73841074,0,0x0,8
tick,0x7ffdb840feb4,73857066,0,0x0,8
tick,0x7ffdb840feb4,73873072,0,0x0,8
tick,0x7ffdb840feb4,73888866,0,0x0,8
tick,0x7ffdb840feb4,73904200,0,0x0,8
tick,0x7ffdb840feb4,73919547,0,0x0,8
tick,0x7ffdb840feb4,73934907,0,0x0,8
tick,0x7ffdb840feb4,73950079,0,0x0,8
tick,0x7ffdb840feb4,73966072,0,0x0,8
tick,0x7ffdb840feb4,73981284,0,0x0,8
tick,0x7ffdb840feb4,73996572,0,0x0,8
tick,0x7ffdb840feb4,74012077,0,0x0,8
tick,0x7ffdb840feb4,74028076,0,0x0,8
tick,0x7ffdb840feb4,74044089,0,0x0,8
tick,0x7ffdb840feb4,74060085,0,0x0,8
tick,0x7ffdb840feb4,74076086,0,0x0,8
tick,0x7ffdb840feb4,74091925,0,0x0,8
tick,0x7ffdb840feb4,74107090,0,0x0,8
tick,0x7ffdb840feb4,74122089,0,0x0,8
tick,0x7ffdb840feb4,74138094,0,0x0,8
tick,0x7ffdb840feb4,74154100,0,0x0,8
tick,0x7ffdb840feb4,74170097,0,0x0,8
tick,0x7ffdb840feb4,74185095,0,0x0,8
tick,0x7ffdb840feb4,74200097,0,0x0,8
tick,0x7ffdb840feb4,74216104,0,0x0,8
tick,0x7ffdb840feb4,74232104,0,0x0,8
tick,0x7ffdb840feb4,74248107,0,0x0,8
tick,0x7ffdb840feb4,74264115,0,0x0,8
tick,0x7ffdb840feb4,74280108,0,0x0,8
tick,0x7ffdb840feb4,74296111,0,0x0,8
tick,0x7ffdb840feb4,74312115,0,0x0,8
tick,0x7ffdb840feb4,74328111,0,0x0,8
tick,0x7ffdb840feb4,74343354,0,0x0,8
tick,0x7ffdb840feb4,74358905,0,0x0,8
tick,0x7ffdb840feb4,74374137,0,0x0,8
tick,0x7ffdb840feb4,74389943,0,0x0,8
tick,0x7ffdb840feb4,74405668,0,0x0,8
tick,0x7ffdb840feb4,74421681,0,0x0,8
tick,0x7ffdb840feb4,74437136,0,0x0,8
tick,0x7ffdb840feb4,74453091,0,0x0,8
tick,0x7ffdb840feb4,74468417,0,0x0,8
tick,0x7ffdb840feb4,74483878,0,0x0,8
tick,0x7ffdb840feb4,74499291,0,0x0,8
tick,0x7ffdb840feb4,74514950,0,0x0,8
tick,0x7ffdb840feb4,74530101,0,0x0,8
tick,0x7ffdb840feb4,74545641,0,0x0,8
tick,0x7ffdb840feb4,74560911,0,0x0,8
tick,0x7ffdb840feb4,74576143,0,0x0,8
tick,0x7ffdb840feb4,74592147,0,0x0,8
tick,0x7ffdb840feb4,74607151,0,0x0,8
tick,0x7ffdb840feb4,74623153,0,0x0,8
tick,0x7ffdb840feb4,74639155,0,0x0,8
tick,0x7ffdb840feb4,74654435,0,0x0,8
tick,0x7ffdb840feb4,74670159,0,0x0,8
tick,0x7ffdb840feb4,74685169,0,0x0,8
tick,0x7ffdb840feb4,74700424,0,0x0,8
tick,0x7ffdb840feb4,74716168,0,0x0,8
tick,0x7ffdb840feb4,74731166,0,0x0,8
tick,0x7ffdb840feb4,74747175,0,0x0,8
tick,0x7ffdb840feb4,74762931,0,0x0,8
tick,0x7ffdb840feb4,74778194,0,0x0,8
tick,0x7ffdb840feb4,74793955,0,0x0,8
tick,0x7ffdb840feb4,74809205,0,0x0,8
tick,0x7ffdb840feb4,74825202,0,0x0,8
tick,0x7ffdb840feb4,74841211,0,0x0,8
tick,0x7ffdb840feb4,74857208,0,0x0,8
tick,0x7ffdb840feb4,74873179,0,0x0,8
tick,0x7ffdb840feb4,74889182,0,0x0,8
tick,0x7ffdb840feb4,74905191,0,0x0,8
tick,0x7ffdb840feb4,74921191,0,0x0,8
tick,0x7ffdb840feb4,74937183,0,0x0,8
tick,0x7ffdb840feb4,74953193,0,0x0,8
tick,0x7ffdb840feb4,74968429,0,0x0,8
tick,0x7ffdb840feb4,74983204,0,0x0,8
tick,0x7ffdb840feb4,74999203,0,0x0,8
tick,0x7ffdb840feb4,75014946,0,0x0,8
tick,0x7ffdb840feb4,75029626,0,0x0,8
tick,0x7ffdb840feb4,75044967,0,0x0,8
tick,0x7ffdb840feb4,75060958,0,0x0,8
tick,0x7ffdb840feb4,75076967,0,0x0,8
tick,0x7ffdb840feb4,75092193,0,0x0,8
tick,0x7ffdb840feb4,75107376,0,0x0,8
tick,0x7ffdb840feb4,75122455,0,0x0,8
tick,0x7ffdb840feb4,75137725,0,0x0,8
tick,0x7ffdb840feb4,75153152,0,0x0,8
tick,0x7ffdb840feb4,75169200,0,0x0,8
tick,0x7ffdb840feb4,75184427,0,0x0,8
tick,0x7ffdb840feb4,75199653,0,0x0,8
tick,0x7ffdb840feb4,75215380,0,0x0,8
tick,0x7ffdb840feb4,75231296,0,0x0,8
tick,0x7ffdb840feb4,75247383,0,0x0,8
tick,0x7ffdb840feb4,75262815,0,0x0,8
tick,0x7ffdb840feb4,75278399,0,0x0,8
tick,0x7ffdb840feb4,75294244,0,0x0,8
tick,0x7ffdb840feb4,75309581,0,0x0,8
tick,0x7ffdb840feb4,75325592,0,0x0,8
tick,0x7ffdb840feb4,75340628,0,0x0,8
tick,0x7ffdb840feb4,75355559,0,0x0,8
tick,0x7ffdb840feb4,75371086,0,0x0,8
tick,0x7ffdb840feb4,75386675,0,0x0,8
tick,0x7ffdb840feb4,75401685,0,0x0,8
tick,0x7ffdb840feb4,75417864,0,0x0,8
tick,0x7ffdb840feb4,75433879,0,0x0,8
tick,0x7ffdb840feb4,75449176,0,0x0,8
tick,0x7ffdb840feb4,75464263,0,0x0,8
tick,0x7ffdb840feb4,75480263,0,0x0,8
tick,0x7ffdb840feb4,75495264,0,0x0,8
tick,0x7ffdb840feb4,75510395,0,0x0,8
tick,0x7ffdb840feb4,75525708,0,0x0,8
tick,0x7ffdb840feb4,75541268,0,0x0,8
tick,0x7ffdb840feb4,75556435,0,0x0,8
tick,0x7ffdb840feb4,75572424,0,0x0,8
tick,0x7ffdb840feb4,75587580,0,0x0,8
tick,0x7ffdb840feb4,75602751,0,0x0,8
tick,0x7ffdb840feb4,75618946,0,0x0,8
tick,0x7ffdb840feb4,75634616,0,0x0,8
tick,0x7ffdb840feb4,75650634,0,0x0,8
tick,0x7ffdb840feb4,75665857,0,0x0,8
tick,0x7ffdb840feb4,75681478,0,0x0,8
tick,0x7ffdb840feb4,75696673,0,0x0,8
tick,0x7ffdb840feb4,75712061,0,0x0,8
tick,0x7ffdb840feb4,75727502,0,0x0,8
tick,0x7ffdb840feb4,75742856,0,0x0,8
tick,0x7ffdb840feb4,75757835,0,0x0,8
tick,0x7ffdb840feb4,75773027,0,0x0,8
tick,0x7ffdb840feb4,75788059,0,0x0,8
tick,0x7ffdb840feb4,75804063,0,0x0,8
tick,0x7ffdb840feb4,75819740,0,0x0,8
tick,0x7ffdb840feb4,75835746,0,0x0,8
tick,0x7ffdb840feb4,75851737,0,0x0,8
tick,0x7ffdb840feb4,75867909,0,0x0,8
tick,0x7ffdb840feb4,75883633,0,0x0,8
tick,0x7ffdb840feb4,75899310,0,0x0,8
tick,0x7ffdb840feb4,75915315,0,0x0,8
tick,0x7ffdb840feb4,75931327,0,0x0,8
tick,0x7ffdb840feb4,75947318,0,0x0,8
tick,0x7ffdb840feb4,75962929,0,0x0,8
tick,0x7ffdb840feb4,75978337,0,0x0,8
tick,0x7ffdb840feb4,75993454,0,0x0,8
tick,0x7ffdb840feb4,76009333,0,0x0,8
tick,0x7ffdb840feb4,76024461,0,0x0,8
tick,0x7ffdb840feb4,76040333,0,0x0,8
tick,0x7ffdb840feb4,76056330,0,0x0,8
tick,0x7ffdb840feb4,76072447,0,0x0,8
tick,0x7ffdb840feb4,76088335,0,0x0,8
tick,0x7ffdb840feb4,76103455,0,0x0,8
tick,0x7ffdb840feb4,76118470,0,0x0,8
tick,0x7ffdb840feb4,76134639,0,0x0,8
tick,0x7ffdb840feb4,76150485,0,0x0,8
tick,0x7ffdb840feb4,76166475,0,0x0,8
tick,0x7ffdb840feb4,76182653,0,0x0,8
tick,0x7ffdb840feb4,76198349,0,0x0,8
tick,0x7ffdb840feb4,76213485,0,0x0,8
tick,0x7ffdb840feb4,76228648,0,0x0,8
tick,0x7ffdb840feb4,76244352,0,0x0,8
tick,0x7ffdb840feb4,76260529,0,0x0,8
tick,0x7ffdb840feb4,76275801,0,0x0,8
tick,0x7ffdb840feb4,76291504,0,0x0,8
tick,0x7ffdb840feb4,76306674,0,0x0,8
tick,0x7ffdb840feb4,76321704,0,0x0,8
tick,0x7ffdb840feb4,76337046,0,0x0,8
tick,0x7ffdb840feb4,76352687,0,0x0,8
tick,0x7ffdb840feb4,76367819,0,0x0,8
tick,0x7ffdb840feb4,76383847,0,0x0,8
tick,0x7ffdb840feb4,76398879,0,0x0,8
tick,0x7ffdb840feb4,76414909,0,0x0,8
tick,0x7ffdb840feb4,76430307,0,0x0,8
tick,0x7ffdb840feb4,76445333,0,0x0,8
tick,0x7ffdb840feb4,76460799,0,0x0,8
tick,0x7ffdb840feb4,76475825,0,0x0,8
tick,0x7ffdb840feb4,76491532,0,0x0,8
tick,0x7ffdb840feb4,76506944,0,0x0,8
tick,0x7ffdb840feb4,76522054,0,0x0,8
tick,0x7ffdb840feb4,76537507,0,0x0,8
tick,0x7ffdb840feb4,76552716,0,0x0,8
tick,0x7ffdb840feb4,76568701,0,0x0,8
tick,0x7ffdb840feb4,76583525,0,0x0,8
tick,0x7ffdb840feb4,76599537,0,0x0,8
tick,0x7ffdb840feb4,76614398,0,0x0,8
tick,0x7ffdb840feb4,76629530,0,0x0,8
tick,0x7ffdb840feb4,76645696,0,0x0,8
tick,0x7ffdb840feb4,76660408,0,0x0,8
tick,0x7ffdb840feb4,76676403,0,0x0,8
tick,0x7ffdb840feb4,76692405,0,0x0,8
tick,0x7ffdb840feb4,76707541,0,0x0,8
tick,0x7ffdb840feb4,76722872,0,0x0,8
tick,0x7ffdb840feb4,76738728,0,0x0,8
tick,0x7ffdb840feb4,76754566,0,0x0,8
tick,0x7ffdb840feb4,76770111,0,0x0,8
tick,0x7ffdb840feb4,76785578,0,0x0,8
tick,0x7ffdb840feb4,76801562,0,0x0,8
tick,0x7ffdb840feb4,76817519,0,0x0,8
tick,0x7ffdb840feb4,76833545,0,0x0,8
tick,0x7ffdb840feb4,76849560,0,0x0,8
tick,0x7ffdb840feb4,76865552,0,0x0,8
tick,0x7ffdb840feb4,76881555,0,0x0,8
tick,0x7ffdb840feb4,76897425,0,0x0,8
tick,0x7ffdb840feb4,76912421,0,0x0,8
tick,0x7ffdb840feb4,76927647,0,0x0,8
tick,0x7ffdb840feb4,76943440,0,0x0,8
tick,0x7ffdb840feb4,76959435,0,0x0,8
tick,0x7ffdb840feb4,76974671,0,0x0,8
tick,0x7ffdb840feb4,76990023,0,0x0,8
tick,0x7ffdb840feb4,77005729,0,0x0,8
tick,0x7ffdb840feb4,77021028,0,0x0,8
tick,0x7ffdb840feb4,77036380,0,0x0,8
tick,0x7ffdb840feb4,77052035,0,0x0,8
tick,0x7ffdb840feb4,77067645,0,0x0,8
tick,0x7ffdb840feb4,77083064,0,0x0,8
tick,0x7ffdb840feb4,77098457,0,0x0,8
tick,0x7ffdb840feb4,77113934,0,0x0,8
tick,0x7ffdb840feb4,77129173,0,0x0,8
tick,0x7ffdb840feb4,77144240,0,0x0,8
tick,0x7ffdb840feb4,77159557,0,0x0,8
tick,0x7ffdb840feb4,77175368,0,0x0,8
tick,0x7ffdb840feb4,77190795,0,0x0,8
tick,0x7ffdb840feb4,77205477,0,0x0,8
tick,0x7ffdb840feb4,77220796,0,0x0,8
tick,0x7ffdb840feb4,77236784,0,0x0,8
tick,0x7ffdb840feb4,77251622,0,0x0,8
tick,0x7ffdb840feb4,77267774,0,0x0,8
tick,0x7ffdb840feb4,77282911,0,0x0,8
tick,0x7ffdb840feb4,77298476,0,0x0,8
tick,0x7ffdb840feb4,77313889,0,0x0,8
tick,0x7ffdb840feb4,77329390,0,0x0,8
tick,0x7ffdb840feb4,77344691,0,0x0,8
tick,0x7ffdb840feb4,77360631,0,0x0,8
tick,0x7ffdb840feb4,77375826,0,0x0,8
tick,0x7ffdb840feb4,77391497,0,0x0,8
tick,0x7ffdb840feb4,77406904,0,0x0,8
tick,0x7ffdb840feb4,77421694,0,0x0,8
tick,0x7ffdb840feb4,77437499,0,0x0,8
tick,0x7ffdb840feb4,77452619,0,0x0,8
tick,0x7ffdb840feb4,77468498,0,0x0,8
tick,0x7ffdb840feb4,77484633,0,0x0,8
tick,0x7ffdb840feb4,77500637,0,0x0,8
tick,0x7ffdb840feb4,77516505,0,0x0,8
tick,0x7ffdb840feb4,77532632,0,0x0,8
tick,0x7ffdb840feb4,77548632,0,0x0,8
tick,0x7ffdb840feb4,77564511,0,0x0,8
tick,0x7ffdb840feb4,77580514,0,0x0,8
tick,0x7ffdb840feb4,77596518,0,0x0,8
tick,0x7ffdb840feb4,77612524,0,0x0,8
tick,0x7ffdb840feb4,77628520,0,0x0,8
tick,0x7ffdb840feb4,77644518,0,0x0,8
tick,0x7ffdb840feb4,77660512,0,0x0,8
tick,0x7ffdb840feb4,77676524,0,0x0,8
tick,0x7ffdb840feb4,77692515,0,0x0,8
tick,0x7ffdb840feb4,77708529,0,0x0,8
tick,0x7ffdb840feb4,77724533,0,0x0,8
tick,0x7ffdb840feb4,77740531,0,0x0,8
tick,0x7ffdb840feb4,77756538,0,0x0,8
tick,0x7ffdb840feb4,77772536,0,0x0,8
tick,0x7ffdb840feb4,77788541,0,0x0,8
tick,0x7ffdb840feb4,77804539,0,0x0,8
tick,0x7ffdb840feb4,77820535,0,0x0,8
tick,0x7ffdb840feb4,77836547,0,0x0,8
tick,0x7ffdb840feb4,77852551,0,0x0,8
tick,0x7ffdb840feb4,77868554,0,0x0,8
tick,0x7ffdb840feb4,77884546,0,0x0,8
tick,0x7ffdb840feb4,77900550,0,0x0,8
tick,0x7ffdb840feb4,77915848,0,0x0,8
tick,0x7ffdb840feb4,77931384,0,0x0,8
tick,0x7ffdb840feb4,77946543,0,0x0,8
tick,0x7ffdb840feb4,77962550,0,0x0,8
tick,0x7ffdb840feb4,77978555,0,0x0,8
tick,0x7ffdb840feb4,77993898,0,0x0,8
tick,0x7ffdb840feb4,78009555,0,0x0,8
tick,0x7ffdb840feb4,78025570,0,0x0,8
tick,0x7ffdb840feb4,78041560,0,0x0,8
tick,0x7ffdb840feb4,78057571,0,0x0,8
tick,0x7ffdb840feb4,78072572,0,0x0,8
tick,0x7ffdb840feb4,78088576,0,0x0,8
tick,0x7ffdb840feb4,78103574,0,0x0,8
tick,0x7ffdb840feb4,78119577,0,0x0,8
tick,0x7ffdb840feb4,78134715,0,0x0,8
tick,0x7ffdb840feb4,78149579,0,0x0,8
tick,0x7ffdb840feb4,78165556,0,0x0,8
tick,0x7ffdb840feb4,78181120,0,0x0,8
tick,0x7ffdb840feb4,78196810,0,0x0,8
tick,0x7ffdb840feb4,78212483,0,0x0,8
tick,0x7ffdb840feb4,78227645,0,0x0,8
tick,0x7ffdb840feb4,78243065,0,0x0,8
tick,0x7ffdb840feb4,78259036,0,0x0,8
tick,0x7ffdb840feb4,78274721,0,0x0,8
tick,0x7ffdb840feb4,78289931,0,0x0,8
tick,0x7ffdb840feb4,78304989,0,0x0,8
tick,0x7ffdb840feb4,78320947,0,0x0,8
tick,0x7ffdb840feb4,78336876,0,0x0,8
tick,0x7ffdb840feb4,78352999,0,0x0,8
tick,0x7ffdb840feb4,78367969,0,0x0,8
tick,0x7ffdb840feb4,78383096,0,0x0,8
tick,0x7ffdb840feb4,78398639,0,0x0,8
tick,0x7ffdb840feb4,78413795,0,0x0,8
tick,0x7ffdb840feb4,78429799,0,0x0,8
tick,0x7ffdb840feb4,78445967,0,0x0,8
tick,0x7ffdb840feb4,78461793,0,0x0,8
tick,0x7ffdb840feb4,78476842,0,0x0,8
tick,0x7ffdb840feb4,78492649,0,0x0,8
tick,0x7ffdb840feb4,78507952,0,0x0,8
tick,0x7ffdb840feb4,78522951,0,0x0,8
tick,0x7ffdb840feb4,78538010,0,0x0,8
tick,0x7ffdb840feb4,78553675,0,0x0,8
tick,0x7ffdb840feb4,78568949,0,0x0,8
tick,0x7ffdb840feb4,78584804,0,0x0,8
tick,0x7ffdb840feb4,78599654,0,0x0,8
tick,0x7ffdb840feb4,78614871,0,0x0,8
tick,0x7ffdb840feb4,78630824,0,0x0,8
tick,0x7ffdb840feb4,78645672,0,0x0,8
tick,0x7ffdb840feb4,78661655,0,0x0,8
tick,0x7ffdb840feb4,78676932,0,0x0,8
tick,0x7ffdb840feb4,78692045,0,0x0,8
tick,0x7ffdb840feb4,78707669,0,0x0,8
tick,0x7ffdb840feb4,78722978,0,0x0,8
tick,0x7ffdb840feb4,78738183,0,0x0,8
tick,0x7ffdb840feb4,78753654,0,0x0,8
tick,0x7ffdb840feb4,78768788,0,0x0,8
tick,0x7ffdb840feb4,78784780,0,0x0,8
tick,0x7ffdb840feb4,78799787,0,0x0,8
tick,0x7ffdb840feb4,78815249,0,0x0,8
tick,0x7ffdb840feb4,78830786,0,0x0,8
tick,0x7ffdb840feb4,78845972,0,0x0,8
tick,0x7ffdb840feb4,78862252,0,0x0,8
tick,0x7ffdb840feb4,78877981,0,0x0,8
tick,0x7ffdb840feb4,78893994,0,0x0,8
tick,0x7ffdb840feb4,78909979,0,0x0,8
tick,0x7ffdb840feb4,78925494,0,0x0,8
tick,0x7ffdb840feb4,78940675,0,0x0,8
tick,0x7ffdb840feb4,78956675,0,0x0,8
tick,0x7ffdb840feb4,78971808,0,0x0,8
tick,0x7ffdb840feb4,78987818,0,0x0,8
tick,0x7ffdb840feb4,79002968,0,0x0,8
tick,0x7ffdb840feb4,79018808,0,0x0,8
tick,0x7ffdb840feb4,79034813,0,0x0,8
tick,0x7ffdb840feb4,79050694,0,0x0,8
tick,0x7ffdb840feb4,79065699,0,0x0,8
tick,0x7ffdb840feb4,79080696,0,0x0,8
tick,0x7ffdb840feb4,79096687,0,0x0,8
tick,0x7ffdb840feb4,79111697,0,0x0,8
tick,0x7ffdb840feb4,79126703,0,0x0,8
tick,0x7ffdb840feb4,79142692,0,0x0,8
tick,0x7ffdb840feb4,79158694,0,0x0,8
tick,0x7ffdb840feb4,79174060,0,0x0,8
tick,0x7ffdb840feb4,79190096,0,0x0,8
tick,0x7ffdb840feb4,79204709,0,0x0,8
tick,0x7ffdb840feb4,79220701,0,0x0,8
tick,0x7ffdb840feb4,79235951,0,0x0,8
tick,0x7ffdb840feb4,79250701,0,0x0,8
tick,0x7ffdb840feb4,79267129,0,0x0,8
tick,0x7ffdb840feb4,79282160,0,0x0,8
tick,0x7ffdb840feb4,79297718,0,0x0,8
tick,0x7ffdb840feb4,79313721,0,0x0,8
tick,0x7ffdb840feb4,79329718,0,0x0,8
tick,0x7ffdb840feb4,79345729,0,0x0,8
tick,0x7ffdb840feb4,79361716,0,0x0,8
tick,0x7ffdb840feb4,79377719,0,0x0,8
tick,0x7ffdb840feb4,79393736,0,0x0,8
tick,0x7ffdb840feb4,79409722,0,0x0,8
tick,0x7ffdb840feb4,79425737,0,0x0,8
tick,0x7ffdb840feb4,79441736,0,0x0,8
tick,0x7ffdb840feb4,79457730,0,0x0,8
tick,0x7ffdb840feb4,79472744,0,0x0,8
tick,0x7ffdb840feb4,79488362,0,0x0,8
tick,0x7ffdb840feb4,79503750,0,0x0,8
tick,0x7ffdb840feb4,79519135,0,0x0,8
tick,0x7ffdb840feb4,79534750,0,0x0,8
tick,0x7ffdb840feb4,79549736,0,0x0,8
tick,0x7ffdb840feb4,79565736,0,0x0,8
tick,0x7ffdb840feb4,79580754,0,0x0,8
tick,0x7ffdb840feb4,79596757,0,0x0,8
tick,0x7ffdb840feb4,79612759,0,0x0,8
tick,0x7ffdb840feb4,79628761,0,0x0,8
tick,0x7ffdb840feb4,79644140,0,0x0,8
tick,0x7ffdb840feb4,79659756,0,0x0,8
tick,0x7ffdb840feb4,79675169,0,0x0,8
tick,0x7ffdb840feb4,79690323,0,0x0,8
tick,0x7ffdb840feb4,79706163,0,0x0,8
tick,0x7ffdb840feb4,79722331,0,0x0,8
tick,0x7ffdb840feb4,79738049,0,0x0,8
tick,0x7ffdb840feb4,79754064,0,0x0,8
tick,0x7ffdb840feb4,79770105,0,0x0,8
tick,0x7ffdb840feb4,79785796,0,0x0,8
tick,0x7ffdb840feb4,79800742,0,0x0,8
tick,0x7ffdb840feb4,79817021,0,0x0,8
tick,0x7ffdb840feb4,79832219,0,0x0,8
tick,0x7ffdb840feb4,79847360,0,0x0,8
tick,0x7ffdb840feb4,79863372,0,0x0,8
tick,0x7ffdb840feb4,79878382,0,0x0,8
tick,0x7ffdb840feb4,79893392,0,0x0,8
tick,0x7ffdb840feb4,79908919,0,0x0,8
tick,0x7ffdb840feb4,79924278,0,0x0,8
tick,0x7ffdb840feb4,79939727,0,0x0,8
tick,0x7ffdb840feb4,79955107,0,0x0,8
tick,0x7ffdb840feb4,79970346,0,0x0,8
tick,0x7ffdb840feb4,79985958,0,0x0,8
tick,0x7ffdb840feb4,80001290,0,0x0,8
tick,0x7ffdb840feb4,80016769,0,0x0,8
tick,0x7ffdb840feb4,80032069,0,0x0,8
tick,0x7ffdb840feb4,80047201,0,0x0,8
tick,0x7ffdb840feb4,80062960,0,0x0,8
tick,0x7ffdb840feb4,80078544,0,0x0,8
tick,0x7ffdb840feb4,80094419,0,0x0,8
tick,0x7ffdb840feb4,80109865,0,0x0,8
tick,0x7ffdb840feb4,80124938,0,0x0,8
tick,0x7ffdb840feb4,80140279,0,0x0,8
tick,0x7ffdb840feb4,80155314,0,0x0,8
tick,0x7ffdb840feb4,80171171,0,0x0,8
tick,0x7ffdb840feb4,80186338,0,0x0,8
tick,0x7ffdb840feb4,80201379,0,0x0,8
tick,0x7ffdb840feb4,80216935,0,0x0,8
tick,0x7ffdb840feb4,80232687,0,0x0,8
tick,0x7ffdb840feb4,80248008,0,0x0,8
tick,0x7ffdb840feb4,80263151,0,0x0,8
tick,0x7ffdb840feb4,80279145,0,0x0,8
tick,0x7ffdb840feb4,80295228,0,0x0,8
tick,0x7ffdb840feb4,80311078,0,0x0,8
tick,0x7ffdb840feb4,80327012,0,0x0,8
tick,0x7ffdb840feb4,80342048,0,0x0,8
tick,0x7ffdb840feb4,80357030,0,0x0,8
tick,0x7ffdb840feb4,80372287,0,0x0,8
tick,0x7ffdb840feb4,80387590,0,0x0,8
tick,0x7ffdb840feb4,80402807,0,0x0,8
tick,0x7ffdb840feb4,80418478,0,0x0,8
tick,0x7ffdb840feb4,80433892,0,0x0,8
tick,0x7ffdb840feb4,80449563,0,0x0,8
tick,0x7ffdb840feb4,80465388,0,0x0,8
tick,0x7ffdb840feb4,80479980,0,0x0,8
tick,0x7ffdb840feb4,80495710,0,0x0,8
tick,0x7ffdb840feb4,80511056,0,0x0,8
tick,0x7ffdb840feb4,80526391,0,0x0,8
tick,0x7ffdb840feb4,80541809,0,0x0,8
tick,0x7ffdb840feb4,80556882,0,0x0,8
tick,0x7ffdb840feb4,80572438,0,0x0,8
tick,0x7ffdb840feb4,80588216,0,0x0,8
tick,0x7ffdb840feb4,80603984,0,0x0,8
tick,0x7ffdb840feb4,80619357,0,0x0,8
tick,0x7ffdb840feb4,80634222,0,0x0,8
tick,0x7ffdb840feb4,80649652,0,0x0,8
tick,0x7ffdb840feb4,80665192,0,0x0,8
tick,0x7ffdb840feb4,80680291,0,0x0,8
tick,0x7ffdb840feb4,80695769,0,0x0,8
tick,0x7ffdb840feb4,80710699,0,0x0,8
tick,0x7ffdb840feb4,80726860,0,0x0,8
tick,0x7ffdb840feb4,80742786,0,0x0,8
tick,0x7ffdb840feb4,80758580,0,0x0,8
tick,0x7ffdb840feb4,80773583,0,0x0,8
tick,0x7ffdb840feb4,80788867,0,0x0,8
tick,0x7ffdb840feb4,80804857,0,0x0,8
tick,0x7ffdb840feb4,80820387,0,0x0,8
tick,0x7ffdb840feb4,80835237,0,0x0,8
tick,0x7ffdb840feb4,80850737,0,0x0,8
tick,0x7ffdb840feb4,80865831,0,0x0,8
tick,0x7ffdb840feb4,80881688,0,0x0,8
tick,0x7ffdb840feb4,80896702,0,0x0,8
tick,0x7ffdb840feb4,80912223,0,0x0,8
tick,0x7ffdb840feb4,80927369,0,0x0,8
tick,0x7ffdb840feb4,80942709,0,0x0,8
tick,0x7ffdb840feb4,80958391,0,0x0,8
tick,0x7ffdb840feb4,80973799,0,0x0,8
tick,0x7ffdb840feb4,80988926,0,0x0,8
tick,0x7ffdb840feb4,81004017,0,0x0,8
tick,0x7ffdb840feb4,81019071,0,0x0,8
tick,0x7ffdb840feb4,81034534,0,0x0,8
tick,0x7ffdb840feb4,81049352,0,0x0,8
tick,0x7ffdb840feb4,81065217,0,0x0,8
tick,0x7ffdb840feb4,81080516,0,0x0,8
tick,0x7ffdb840feb4,81095974,0,0x0,8
tick,0x7ffdb840feb4,81111209,0,0x0,8
tick,0x7ffdb840feb4,81126310,0,0x0,8
tick,0x7ffdb840feb4,81141428,0,0x0,8
tick,0x7ffdb840feb4,81156572,0,0x0,8
tick,0x7ffdb840feb4,81171741,0,0x0,8
tick,0x7ffdb840feb4,81187716,0,0x0,8
tick,0x7ffdb840feb4,81203351,0,0x0,8
tick,0x7ffdb840feb4,81219548,0,0x0,8
tick,0x7ffdb840feb4,81234868,0,0x0,8
tick,0x7ffdb840feb4,81250036,0,0x0,8
tick,0x7ffdb840feb4,81265695,0,0x0,8
tick,0x7ffdb840feb4,81280807,0,0x0,8
tick,0x7ffdb840feb4,81297088,0,0x0,8
tick,0x7ffdb840feb4,81312921,0,0x0,8
tick,0x7ffdb840feb4,81328320,0,0x0,8
tick,0x7ffdb840feb4,81343854,0,0x0,8
tick,0x7ffdb840feb4,81359680,0,0x0,8
tick,0x7ffdb840feb4,81375968,0,0x0,8
tick,0x7ffdb840feb4,81391794,0,0x0,8
tick,0x7ffdb840feb4,81407310,0,0x0,8
tick,0x7ffdb840feb4,81422979,0,0x0,8
tick,0x7ffdb840feb4,81438544,0,0x0,8
tick,0x7ffdb840feb4,81454384,0,0x0,8
tick,0x7ffdb840feb4,81469747,0,0x0,8
tick,0x7ffdb840feb4,81484518,0,0x0,8
tick,0x7ffdb840feb4,81500676,0,0x0,8
tick,0x7ffdb840feb4,81516996,0,0x0,8
tick,0x7ffdb840feb4,81532706,0,0x0,8
tick,0x7ffdb840feb4,81548024,0,0x0,8
tick,0x7ffdb840feb4,81563535,0,0x0,8
tick,0x7ffdb840feb4,81579818,0,0x0,8
tick,0x7ffdb840feb4,81595392,0,0x0,8
tick,0x7ffdb840feb4,81611740,0,0x0,8
tick,0x7ffdb840feb4,81627774,0,0x0,8
tick,0x7ffdb840feb4,81643205,0,0x0,8
tick,0x7ffdb840feb4,81658814,0,0x0,8
tick,0x7ffdb840feb4,81674432,0,0x0,8
tick,0x7ffdb840feb4,81690175,0,0x0,8
tick,0x7ffdb840feb4,81705790,0,0x0,8
tick,0x7ffdb840feb4,81721625,0,0x0,8
tick,0x7ffdb840feb4,81738015,0,0x0,8
tick,0x7ffdb840feb4,81753670,0,0x0,8
tick,0x7ffdb840feb4,81769257,0,0x0,8
tick,0x7ffdb840feb4,81785073,0,0x0,8
tick,0x7ffdb840feb4,81801346,0,0x0,8
tick,0x7ffdb840feb4,81817011,0,0x0,8
tick,0x7ffdb840feb4,81833159,0,0x0,8
tick,0x7ffdb840feb4,81848786,0,0x0,8
tick,0x7ffdb840feb4,81864551,0,0x0,8
tick,0x7ffdb840feb4,81880113,0,0x0,8
tick,0x7ffdb840feb4,81896246,0,0x0,8
tick,0x7ffdb840feb4,81911089,0,0x0,8
tick,0x7ffdb840feb4,81926255,0,0x0,8
tick,0x7ffdb840feb4,81941683,0,0x0,8
tick,0x7ffdb840feb4,81956828,0,0x0,8
tick,0x7ffdb840feb4,81972849,0,0x0,8
tick,0x7ffdb840feb4,81988189,0,0x0,8
tick,0x7ffdb840feb4,82003322,0,0x0,8
tick,0x7ffdb840feb4,82018994,0,0x0,8
tick,0x7ffdb840feb4,82034224,0,0x0,8
tick,0x7ffdb840feb4,82049581,0,0x0,8
tick,0x7ffdb840feb4,82065316,0,0x0,8
tick,0x7ffdb840feb4,82080808,0,0x0,8
tick,0x7ffdb840feb4,82095663,0,0x0,8
tick,0x7ffdb840feb4,82111297,0,0x0,8
tick,0x7ffdb840feb4,82126645,0,0x0,8
tick,0x7ffdb840feb4,82142821,0,0x0,8
tick,0x7ffdb840feb4,82157964,0,0x0,8
tick,0x7ffdb840feb4,82172825,0,0x0,8
tick,0x7ffdb840feb4,82188008,0,0x0,8
tick,0x7ffdb840feb4,82203726,0,0x0,8
tick,0x7ffdb840feb4,82219558,0,0x0,8
tick,0x7ffdb840feb4,82235126,0,0x0,8
tick,0x7ffdb840feb4,82250611,0,0x0,8
tick,0x7ffdb840feb4,82266055,0,0x0,8
tick,0x7ffdb840feb4,82282264,0,0x0,8
tick,0x7ffdb840feb4,82298684,0,0x0,8
tick,0x7ffdb840feb4,82314403,0,0x0,8
tick,0x7ffdb840feb4,82330148,0,0x0,8
tick,0x7ffdb840feb4,82346590,0,0x0,8
tick,0x7ffdb840feb4,82362140,0,0x0,8
tick,0x7ffdb840feb4,82377716,0,0x0,8
tick,0x7ffdb840feb4,82393289,0,0x0,8
tick,0x7ffdb840feb4,82408387,0,0x0,8
tick,0x7ffdb840feb4,82424414,0,0x0,8
tick,0x7ffdb840feb4,82440329,0,0x0,8
tick,0x7ffdb840feb4,82456612,0,0x0,8
tick,0x7ffdb840feb4,82472711,0,0x0,8
tick,0x7ffdb840feb4,82488011,0,0x0,8
tick,0x7ffdb840feb4,82504416,0,0x0,8
tick,0x7ffdb840feb4,82519726,0,0x0,8
tick,0x7ffdb840feb4,82535618,0,0x0,8
tick,0x7ffdb840feb4,82550512,0,0x0,8
tick,0x7ffdb840feb4,82566395,0,0x0,8
tick,0x7ffdb840feb4,82581981,0,0x0,8
tick,0x7ffdb840feb4,82598261,0,0x0,8
tick,0x7ffdb840feb4,82613522,0,0x0,8
tick,0x7ffdb840feb4,82629333,0,0x0,8
tick,0x7ffdb840feb4,82644883,0,0x0,8
tick,0x7ffdb840feb4,82660601,0,0x0,8
tick,0x7ffdb840feb4,82676312,0,0x0,8
tick,0x7ffdb840feb4,82692198,0,0x0,8
tick,0x7ffdb840feb4,82708057,0,0x0,8
tick,0x7ffdb840feb4,82724122,0,0x0,8
tick,0x7ffdb840feb4,82740265,0,0x0,8
tick,0x7ffdb840feb4,82755879,0,0x0,8
tick,0x7ffdb840feb4,82772189,0,0x0,8
tick,0x7ffdb840feb4,82788002,0,0x0,8
tick,0x7ffdb840feb4,82803640,0,0x0,8
tick,0x7ffdb840feb4,82819536,0,0x0,8
tick,0x7ffdb840feb4,82834751,0,0x0,8
tick,0x7ffdb840feb4,82850156,0,0x0,8
tick,0x7ffdb840feb4,82865645,0,0x0,8
tick,0x7ffdb840feb4,82881199,0,0x0,8
tick,0x7ffdb840feb4,82896311,0,0x0,8
tick,0x7ffdb840feb4,82912340,0,0x0,8
tick,0x7ffdb840feb4,82928335,0,0x0,8
tick,0x7ffdb840feb4,82943642,0,0x0,8
tick,0x7ffdb840feb4,82958838,0,0x0,8
tick,0x7ffdb840feb4,82974313,0,0x0,8
tick,0x7ffdb840feb4,82989502,0,0x0,8
tick,0x7ffdb840feb4,83004531,0,0x0,8
tick,0x7ffdb840feb4,83020324,0,0x0,8
tick,0x7ffdb840feb4,83035355,0,0x0,8
tick,0x7ffdb840feb4,83050692,0,0x0,8
tick,0x7ffdb840feb4,83066233,0,0x0,8
tick,0x7ffdb840feb4,83081176,0,0x0,8
tick,0x7ffdb840feb4,83097361,0,0x0,8
tick,0x7ffdb840feb4,83112348,0,0x0,8
tick,0x7ffdb840feb4,83127394,0,0x0,8
tick,0x7ffdb840feb4,83143584,0,0x0,8
tick,0x7ffdb840feb4,83158606,0,0x0,8
tick,0x7ffdb840feb4,83174184,0,0x0,8
tick,0x7ffdb840feb4,83189823,0,0x0,8
tick,0x7ffdb840feb4,83205668,0,0x0,8
tick,0x7ffdb840feb4,83221448,0,0x0,8
tick,0x7ffdb840feb4,83237060,0,0x0,8
tick,0x7ffdb840feb4,83253058,0,0x0,8
tick,0x7ffdb840feb4,83269119,0,0x0,8
tick,0x7ffdb840feb4,83285049,0,0x0,8
tick,0x7ffdb840feb4,83300929,0,0x0,8
tick,0x7ffdb840feb4,83316857,0,0x0,8
tick,0x7ffdb840feb4,83332543,0,0x0,8
tick,0x7ffdb840feb4,83348077,0,0x0,8
tick,0x7ffdb840feb4,83363089,0,0x0,8
tick,0x7ffdb840feb4,83378752,0,0x0,8
tick,0x7ffdb840feb4,83394465,0,0x0,8
tick,0x7ffdb840feb4,83410406,0,0x0,8
tick,0x7ffdb840feb4,83426293,0,0x0,8
tick,0x7ffdb840feb4,83441947,0,0x0,8
tick,0x7ffdb840feb4,83457291,0,0x0,8
tick,0x7ffdb840feb4,83472771,0,0x0,8
tick,0x7ffdb840feb4,83488152,0,0x0,8
tick,0x7ffdb840feb4,83503616,0,0x0,8
tick,0x7ffdb840feb4,83519286,0,0x0,8
tick,0x7ffdb840feb4,83535115,0,0x0,8
tick,0x7ffdb840feb4,83551096,0,0x0,8
tick,0x7ffdb840feb4,83567009,0,0x0,8
tick,0x7ffdb840feb4,83583199,0,0x0,8
tick,0x7ffdb840feb4,83599181,0,0x0,8
tick,0x7ffdb840feb4,83615056,0,0x0,8
tick,0x7ffdb840feb4,83630347,0,0x0,8
tick,0x7ffdb840feb4,83646042,0,0x0,8
tick,0x7ffdb840feb4,83660793,0,0x0,8
tick,0x7ffdb840feb4,83676856,0,0x0,8
tick,0x7ffdb840feb4,83692341,0,0x0,8
tick,0x7ffdb840feb4,83707306,0,0x0,8
tick,0x7ffdb840feb4,83722981,0,0x0,8
tick,0x7ffdb840feb4,83738451,0,0x0,8
tick,0x7ffdb840feb4,83754726,0,0x0,8
tick,0x7ffdb840feb4,83770686,0,0x0,8
tick,0x7ffdb840feb4,83786697,0,0x0,8
tick,0x7ffdb840feb4,83802220,0,0x0,8
tick,0x7ffdb840feb4,83817799,0,0x0,8
tick,0x7ffdb840feb4,83833611,0,0x0,8
tick,0x7ffdb840feb4,83849205,0,0x0,8
tick,0x7ffdb840feb4,83864879,0,0x0,8
tick,0x7ffdb840feb4,83881021,0,0x0,8
tick,0x7ffdb840feb4,83896429,0,0x0,8
tick,0x7ffdb840feb4,83912573,0,0x0,8
tick,0x7ffdb840feb4,83928390,0,0x0,8
tick,0x7ffdb840feb4,83944577,0,0x0,8
tick,0x7ffdb840feb4,83960305,0,0x0,8
tick,0x7ffdb840feb4,83975575,0,0x0,8
tick,0x7ffdb840feb4,83991655,0,0x0,8
tick,0x7ffdb840feb4,84007727,0,0x0,8
tick,0x7ffdb840feb4,84023418,0,0x0,8
tick,0x7ffdb840feb4,84038677,0,0x0,8
tick,0x7ffdb840feb4,84053786,0,0x0,8
tick,0x7ffdb840feb4,84070046,0,0x0,8
tick,0x7ffdb840feb4,84084267,0,0x0,8
tick,0x7ffdb840feb4,84099957,0,0x0,8
tick,0x7ffdb840feb4,84115574,0,0x0,8
tick,0x7ffdb840feb4,84130749,0,0x0,8
tick,0x7ffdb840feb4,84145824,0,0x0,8
tick,0x7ffdb840feb4,84161123,0,0x0,8
tick,0x7ffdb840feb4,84176579,0,0x0,8
tick,0x7ffdb840feb4,84192241,0,0x0,8
tick,0x7ffdb840feb4,84207369,0,0x0,8
tick,0x7ffdb840feb4,84223077,0,0x0,8
tick,0x7ffdb840feb4,84238788,0,0x0,8
tick,0x7ffdb840feb4,84253663,0,0x0,8
tick,0x7ffdb840feb4,84269528,0,0x0,8
tick,0x7ffdb840feb4,84285580,0,0x0,8
tick,0x7ffdb840feb4,84300890,0,0x0,8
tick,0x7ffdb840feb4,84316452,0,0x0,8
tick,0x7ffdb840feb4,84331964,0,0x0,8
tick,0x7ffdb840feb4,84348238,0,0x0,8
tick,0x7ffdb840feb4,84364641,0,0x0,8
tick,0x7ffdb840feb4,84380435,0,0x0,8
tick,0x7ffdb840feb4,84396079,0,0x0,8
tick,0x7ffdb840feb4,84412122,0,0x0,8
tick,0x7ffdb840feb4,84427705,0,0x0,8
tick,0x7ffdb840feb4,84443512,0,0x0,8
tick,0x7ffdb840feb4,84459165,0,0x0,8
tick,0x7ffdb840feb4,84474831,0,0x0,8
tick,0x7ffdb840feb4,84490814,0,0x0,8
tick,0x7ffdb840feb4,84506211,0,0x0,8
tick,0x7ffdb840feb4,84521793,0,0x0,8
tick,0x7ffdb840feb4,84537612,0,0x0,8
tick,0x7ffdb840feb4,84553490,0,0x0,8
tick,0x7ffdb840feb4,84568910,0,0x0,8
tick,0x7ffdb840feb4,84584117,0,0x0,8
tick,0x7ffdb840feb4,84600239,0,0x0,8
tick,0x7ffdb840feb4,84615544,0,0x0,8
tick,0x7ffdb840feb4,84631183,0,0x0,8
tick,0x7ffdb840feb4,84646551,0,0x0,8
tick,0x7ffdb840feb4,84661415,0,0x0,8
tick,0x7ffdb840feb4,84677390,0,0x0,8
tick,0x7ffdb840feb4,84692990,0,0x0,8
tick,0x7ffdb840feb4,84708733,0,0x0,8
tick,0x7ffdb840feb4,84724334,0,0x0,8
tick,0x7ffdb840feb4,84740172,0,0x0,8
tick,0x7ffdb840feb4,84755569,0,0x0,8
tick,0x7ffdb840feb4,84770811,0,0x0,8
tick,0x7ffdb840feb4,84787072,0,0x0,8
tick,0x7ffdb840feb4,84803035,0,0x0,8
tick,0x7ffdb840feb4,84818653,0,0x0,8
tick,0x7ffdb840feb4,84834835,0,0x0,8
tick,0x7ffdb840feb4,84850722,0,0x0,8
tick,0x7ffdb840feb4,84866269,0,0x0,8
tick,0x7ffdb840feb4,84881815,0,0x0,8
tick,0x7ffdb840feb4,84896865,0,0x0,8
tick,0x7ffdb840feb4,84912857,0,0x0,8
tick,0x7ffdb840feb4,84928977,0,0x0,8
tick,0x7ffdb840feb4,84945010,0,0x0,8
tick,0x7ffdb840feb4,84961065,0,0x0,8
tick,0x7ffdb840feb4,84976191,0,0x0,8
tick,0x7ffdb840feb4,84992263,0,0x0,8
tick,0x7ffdb840feb4,85007389,0,0x0,8
tick,0x7ffdb840feb4,85022771,0,0x0,8
tick,0x7ffdb840feb4,85038778,0,0x0,8
tick,0x7ffdb840feb4,85054780,0,0x0,8
tick,0x7ffdb840feb4,85070796,0,0x0,8
tick,0x7ffdb840feb4,85086130,0,0x0,8
tick,0x7ffdb840feb4,85101589,0,0x0,8
tick,0x7ffdb840feb4,85116873,0,0x0,8
tick,0x7ffdb840feb4,85132879,0,0x0,8
tick,0x7ffdb840feb4,85148870,0,0x0,8
tick,0x7ffdb840feb4,85164874,0,0x0,8
tick,0x7ffdb840feb4,85180899,0,0x0,8
tick,0x7ffdb840feb4,85196038,0,0x0,8
tick,0x7ffdb840feb4,85211037,0,0x0,8
tick,0x7ffdb840feb4,85226170,0,0x0,8
tick,0x7ffdb840feb4,85242185,0,0x0,8
tick,0x7ffdb840feb4,85257175,0,0x0,8
tick,0x7ffdb840feb4,85272540,0,0x0,8
tick,0x7ffdb840feb4,85287776,0,0x0,8
tick,0x7ffdb840feb4,85303745,0,0x0,8
tick,0x7ffdb840feb4,85318889,0,0x0,8
tick,0x7ffdb840feb4,85333971,0,0x0,8
tick,0x7ffdb840feb4,85349255,0,0x0,8
tick,0x7ffdb840feb4,85364550,0,0x0,8
tick,0x7ffdb840feb4,85380493,0,0x0,8
tick,0x7ffdb840feb4,85396513,0,0x0,8
tick,0x7ffdb840feb4,85411680,0,0x0,8
tick,0x7ffdb840feb4,85427474,0,0x0,8
tick,0x7ffdb840feb4,85442624,0,0x0,8
tick,0x7ffdb840feb4,85457659,0,0x0,8
tick,0x7ffdb840feb4,85473285,0,0x0,8
tick,0x7ffdb840feb4,85488918,0,0x0,8
tick,0x7ffdb840feb4,85504733,0,0x0,8
tick,0x7ffdb840feb4,85520051,0,0x0,8
tick,0x7ffdb840feb4,85535518,0,0x0,8
tick,0x7ffdb840feb4,85551052,0,0x0,8
tick,0x7ffdb840feb4,85567176,0,0x0,8
tick,0x7ffdb840feb4,85582569,0,0x0,8
tick,0x7ffdb840feb4,85597589,0,0x0,8
tick,0x7ffdb840feb4,85612955,0,0x0,8
tick,0x7ffdb840feb4,85629027,0,0x0,8
tick,0x7ffdb840feb4,85645242,0,0x0,8
tick,0x7ffdb840feb4,85661662,0,0x0,8
tick,0x7ffdb840feb4,85677314,0,0x0,8
tick,0x7ffdb840feb4,85693421,0,0x0,8
tick,0x7ffdb840feb4,85708952,0,0x0,8
tick,0x7ffdb840feb4,85724780,0,0x0,8
tick,0x7ffdb840feb4,85740400,0,0x0,8
tick,0x7ffdb840feb4,85756555,0,0x0,8
tick,0x7ffdb840feb4,85772609,0,0x0,8
tick,0x7ffdb840feb4,85788564,0,0x0,8
tick,0x7ffdb840feb4,85804531,0,0x0,8
tick,0x7ffdb840feb4,85820183,0,0x0,8
tick,0x7ffdb840feb4,85835747,0,0x0,8
tick,0x7ffdb840feb4,85851344,0,0x0,8
tick,0x7ffdb840feb4,85866756,0,0x0,8
tick,0x7ffdb840feb4,85883055,0,0x0,8
tick,0x7ffdb840feb4,85898680,0,0x0,8
tick,0x7ffdb840feb4,85914653,0,0x0,8
tick,0x7ffdb840feb4,85930808,0,0x0,8
tick,0x7ffdb840feb4,85946653,0,0x0,8
tick,0x7ffdb840feb4,85962814,0,0x0,8
tick,0x7ffdb840feb4,85978717,0,0x0,8
tick,0x7ffdb840feb4,85994640,0,0x0,8
tick,0x7ffdb840feb4,86010559,0,0x0,8
tick,0x7ffdb840feb4,86025717,0,0x0,8
tick,0x7ffdb840feb4,86040736,0,0x0,8
tick,0x7ffdb840feb4,86056903,0,0x0,8
tick,0x7ffdb840feb4,86072828,0,0x0,8
tick,0x7ffdb840feb4,86087120,0,0x0,8
tick,0x7ffdb840feb4,86102293,0,0x0,8
tick,0x7ffdb840feb4,86117913,0,0x0,8
tick,0x7ffdb840feb4,86133104,0,0x0,8
tick,0x7ffdb840feb4,86148961,0,0x0,8
tick,0x7ffdb840feb4,86164984,0,0x0,8
tick,0x7ffdb840feb4,86180861,0,0x0,8
tick,0x7ffdb840feb4,86195908,0,0x0,8
tick,0x7ffdb840feb4,86211400,0,0x0,8
tick,0x7ffdb840feb4,86227346,0,0x0,8
tick,0x7ffdb840feb4,86243379,0,0x0,8
tick,0x7ffdb840feb4,86258579,0,0x0,8
tick,0x7ffdb840feb4,86273544,0,0x0,8
tick,0x7ffdb840feb4,86289136,0,0x0,8
tick,0x7ffdb840feb4,86304546,0,0x0,8
tick,0x7ffdb840feb4,86320521,0,0x0,8
tick,0x7ffdb840feb4,86335943,0,0x0,8
tick,0x7ffdb840feb4,86351929,0,0x0,8
tick,0x7ffdb840feb4,86367947,0,0x0,8
tick,0x7ffdb840feb4,86384134,0,0x0,8
tick,0x7ffdb840feb4,86399463,0,0x0,8
tick,0x7ffdb840feb4,86414959,0,0x0,8
tick,0x7ffdb840feb4,86430154,0,0x0,8
tick,0x7ffdb840feb4,86446140,0,0x0,8
tick,0x7ffdb840feb4,86461214,0,0x0,8
tick,0x7ffdb840feb4,86476597,0,0x0,8
tick,0x7ffdb840feb4,86493079,0,0x0,8
tick,0x7ffdb840feb4,86509127,0,0x0,8
tick,0x7ffdb840feb4,86523820,0,0x0,8
tick,0x7ffdb840feb4,86539438,0,0x0,8
tick,0x7ffdb840feb4,86554581,0,0x0,8
tick,0x7ffdb840feb4,86570040,0,0x0,8
tick,0x7ffdb840feb4,86585298,0,0x0,8
tick,0x7ffdb840feb4,86601101,0,0x0,8
tick,0x7ffdb840feb4,86617281,0,0x0,8
tick,0x7ffdb840feb4,86633122,0,0x0,8
tick,0x7ffdb840feb4,86649229,0,0x0,8
tick,0x7ffdb840feb4,86665008,0,0x0,8
tick,0x7ffdb840feb4,86680314,0,0x0,8
tick,0x7ffdb840feb4,86695811,0,0x0,8
tick,0x7ffdb840feb4,86711647,0,0x0,8
tick,0x7ffdb840feb4,86727393,0,0x0,8
tick,0x7ffdb840feb4,86743289,0,0x0,8
tick,0x7ffdb840feb4,86758869,0,0x0,8
tick,0x7ffdb840feb4,86774734,0,0x0,8
tick,0x7ffdb840feb4,86790020,0,0x0,8
tick,0x7ffdb840feb4,86805994,0,0x0,8
tick,0x7ffdb840feb4,86821992,0,0x0,8
tick,0x7ffdb840feb4,86837990,0,0x0,8
tick,0x7ffdb840feb4,86853664,0,0x0,8
tick,0x7ffdb840feb4,86869682,0,0x0,8
tick,0x7ffdb840feb4,86885538,0,0x0,8
tick,0x7ffdb840feb4,86901234,0,0x0,8
tick,0x7ffdb840feb4,86917466,0,0x0,8
tick,0x7ffdb840feb4,86933477,0,0x0,8
tick,0x7ffdb840feb4,86949466,0,0x0,8
tick,0x7ffdb840feb4,86965642,0,0x0,8
tick,0x7ffdb840feb4,86980739,0,0x0,8
tick,0x7ffdb840feb4,86996242,0,0x0,8
tick,0x7ffdb840feb4,87011586,0,0x0,8
tick,0x7ffdb840feb4,87027423,0,0x0,8
tick,0x7ffdb840feb4,87042469,0,0x0,8
tick,0x7ffdb840feb4,87058175,0,0x0,8
tick,0x7ffdb840feb4,87072871,0,0x0,8
tick,0x7ffdb840feb4,87088247,0,0x0,8
tick,0x7ffdb840feb4,87104273,0,0x0,8
tick,0x7ffdb840feb4,87120417,0,0x0,8
tick,0x7ffdb840feb4,87135614,0,0x0,8
tick,0x7ffdb840feb4,87151613,0,0x0,8
tick,0x7ffdb840feb4,87167556,0,0x0,8
tick,0x7ffdb840feb4,87182616,0,0x0,8
tick,0x7ffdb840feb4,87197784,0,0x0,8
tick,0x7ffdb840feb4,87213978,0,0x0,8
tick,0x7ffdb840feb4,87229222,0,0x0,8
tick,0x7ffdb840feb4,87245083,0,0x0,8
tick,0x7ffdb840feb4,87259857,0,0x0,8
tick,0x7ffdb840feb4,87275330,0,0x0,8
tick,0x7ffdb840feb4,87291460,0,0x0,8
tick,0x7ffdb840feb4,87307102,0,0x0,8
tick,0x7ffdb840feb4,87322378,0,0x0,8
tick,0x7ffdb840feb4,87337806,0,0x0,8
tick,0x7ffdb840feb4,87353434,0,0x0,8
tick,0x7ffdb840feb4,87369624,0,0x0,8
tick,0x7ffdb840feb4,87385886,0,0x0,8
tick,0x7ffdb840feb4,87401528,0,0x0,8
tick,0x7ffdb840feb4,87417021,0,0x0,8
tick,0x7ffdb840feb4,87431877,0,0x0,8
tick,0x7ffdb840feb4,87447020,0,0x0,8
tick,0x7ffdb840feb4,87462721,0,0x0,8
tick,0x7ffdb840feb4,87478048,0,0x0,8
tick,0x7ffdb840feb4,87493295,0,0x0,8
tick,0x7ffdb840feb4,87508588,0,0x0,8
tick,0x7ffdb840feb4,87523885,0,0x0,8
tick,0x7ffdb840feb4,87539908,0,0x0,8
tick,0x7ffdb840feb4,87555815,0,0x0,8
tick,0x7ffdb840feb4,87571362,0,0x0,8
tick,0x7ffdb840feb4,87586862,0,0x0,8
tick,0x7ffdb840feb4,87602293,0,0x0,8
tick,0x7ffdb840feb4,87618126,0,0x0,8
tick,0x7ffdb840feb4,87634353,0,0x0,8
tick,0x7ffdb840feb4,87649498,0,0x0,8
tick,0x7ffdb840feb4,87665412,0,0x0,8
tick,0x7ffdb840feb4,87681814,0,0x0,8
tick,0x7ffdb840feb4,87697923,0,0x0,8
tick,0x7ffdb840feb4,87713734,0,0x0,8
tick,0x7ffdb840feb4,87728730,0,0x0,8
tick,0x7ffdb840feb4,87744861,0,0x0,8
tick,0x7ffdb840feb4,87759731,0,0x0,8
tick,0x7ffdb840feb4,87775739,0,0x0,8
tick,0x7ffdb840feb4,87791744,0,0x0,8
tick,0x7ffdb840feb4,87807744,0,0x0,8
tick,0x7ffdb840feb4,87823747,0,0x0,8
tick,0x7ffdb840feb4,87838738,0,0x0,8
tick,0x7ffdb840feb4,87854749,0,0x0,8
tick,0x7ffdb840feb4,87869774,0,0x0,8
tick,0x7ffdb840feb4,87885747,0,0x0,8
tick,0x7ffdb840feb4,87901749,0,0x0,8
tick,0x7ffdb840feb4,87917759,0,0x0,8
tick,0x7ffdb840feb4,87933761,0,0x0,8
tick,0x7ffdb840feb4,87949756,0,0x0,8
tick,0x7ffdb840feb4,87965768,0,0x0,8
tick,0x7ffdb840feb4,87981765,0,0x0,8
tick,0x7ffdb840feb4,87997765,0,0x0,8
tick,0x7ffdb840feb4,88013752,0,0x0,8
tick,0x7ffdb840feb4,88029764,0,0x0,8
tick,0x7ffdb840feb4,88045767,0,0x0,8
tick,0x7ffdb840feb4,88061774,0,0x0,8
tick,0x7ffdb840feb4,88077765,0,0x0,8
tick,0x7ffdb840feb4,88093767,0,0x0,8
tick,0x7ffdb840feb4,88109775,0,0x0,8
tick,0x7ffdb840feb4,88125770,0,0x0,8
tick,0x7ffdb840feb4,88141779,0,0x0,8
tick,0x7ffdb840feb4,88157788,0,0x0,8
tick,0x7ffdb840feb4,88172776,0,0x0,8
tick,0x7ffdb840feb4,88188784,0,0x0,8
tick,0x7ffdb840feb4,88203783,0,0x0,8
tick,0x7ffdb840feb4,88219794,0,0x0,8
tick,0x7ffdb840feb4,88235213,0,0x0,8
tick,0x7ffdb840feb4,88250880,0,0x0,8
tick,0x7ffdb840feb4,88266297,0,0x0,8
tick,0x7ffdb840feb4,88281866,0,0x0,8
tick,0x7ffdb840feb4,88297232,0,0x0,8
tick,0x7ffdb840feb4,88312551,0,0x0,8
tick,0x7ffdb840feb4,88327787,0,0x0,8
tick,0x7ffdb840feb4,88343790,0,0x0,8
tick,0x7ffdb840feb4,88359804,0,0x0,8
tick,0x7ffdb840feb4,88375189,0,0x0,8
tick,0x7ffdb840feb4,88390202,0,0x0,8
tick,0x7ffdb840feb4,88405361,0,0x0,8
tick,0x7ffdb840feb4,88420810,0,0x0,8
tick,0x7ffdb840feb4,88436824,0,0x0,8
tick,0x7ffdb840feb4,88452397,0,0x0,8
tick,0x7ffdb840feb4,88467827,0,0x0,8
tick,0x7ffdb840feb4,88482820,0,0x0,8
tick,0x7ffdb840feb4,88498823,0,0x0,8
tick,0x7ffdb840feb4,88514422,0,0x0,8
tick,0x7ffdb840feb4,88529247,0,0x0,8
tick,0x7ffdb840feb4,88544827,0,0x0,8
tick,0x7ffdb840feb4,88560518,0,0x0,8
tick,0x7ffdb840feb4,88575233,0,0x0,8
tick,0x7ffdb840feb4,88590372,0,0x0,8
tick,0x7ffdb840feb4,88605818,0,0x0,8
tick,0x7ffdb840feb4,88621230,0,0x0,8
tick,0x7ffdb840feb4,88637055,0,0x0,8
tick,0x7ffdb840feb4,88652396,0,0x0,8
tick,0x7ffdb840feb4,88667253,0,0x0,8
tick,0x7ffdb840feb4,88682229,0,0x0,8
tick,0x7ffdb840feb4,88697585,0,0x0,8
tick,0x7ffdb840feb4,88713595,0,0x0,8
tick,0x7ffdb840feb4,88729074,0,0x0,8
tick,0x7ffdb840feb4,88744417,0,0x0,8
tick,0x7ffdb840feb4,88759728,0,0x0,8
tick,0x7ffdb840feb4,88774907,0,0x0,8
tick,0x7ffdb840feb4,88790954,0,0x0,8
tick,0x7ffdb840feb4,88806116,0,0x0,8
tick,0x7ffdb840feb4,88821292,0,0x0,8
tick,0x7ffdb840feb4,88837155,0,0x0,8
tick,0x7ffdb840feb4,88853013,0,0x0,8
tick,0x7ffdb840feb4,88868597,0,0x0,8
tick,0x7ffdb840feb4,88884377,0,0x0,8
tick,0x7ffdb840feb4,88900783,0,0x0,8
tick,0x7ffdb840feb4,88916582,0,0x0,8
tick,0x7ffdb840feb4,88932716,0,0x0,8
tick,0x7ffdb840feb4,88948551,0,0x0,8
tick,0x7ffdb840feb4,88964622,0,0x0,8
tick,0x7ffdb840feb4,88980053,0,0x0,8
tick,0x7ffdb840feb4,88995190,0,0x0,8
tick,0x7ffdb840feb4,89011218,0,0x0,8
tick,0x7ffdb840feb4,89026570,0,0x0,8
tick,0x7ffdb840feb4,89042599,0,0x0,8
tick,0x7ffdb840feb4,89058245,0,0x0,8
tick,0x7ffdb840feb4,89073893,0,0x0,8
tick,0x7ffdb840feb4,89089323,0,0x0,8
tick,0x7ffdb840feb4,89105212,0,0x0,8
tick,0x7ffdb840feb4,89120098,0,0x0,8
tick,0x7ffdb840feb4,89135734,0,0x0,8
tick,0x7ffdb840feb4,89150880,0,0x0,8
tick,0x7ffdb840feb4,89165927,0,0x0,8
tick,0x7ffdb840feb4,89181059,0,0x0,8
tick,0x7ffdb840feb4,89196923,0,0x0,8
tick,0x7ffdb840feb4,89212271,0,0x0,8
tick,0x7ffdb840feb4,89227616,0,0x0,8
tick,0x7ffdb840feb4,89243640,0,0x0,8
tick,0x7ffdb840feb4,89259780,0,0x0,8
tick,0x7ffdb840feb4,89274590,0,0x0,8
tick,0x7ffdb840feb4,89289769,0,0x0,8
tick,0x7ffdb840feb4,89305717,0,0x0,8
tick,0x7ffdb840feb4,89321144,0,0x0,8
tick,0x7ffdb840feb4,89337389,0,0x0,8
tick,0x7ffdb840feb4,89352932,0,0x0,8
tick,0x7ffdb840feb4,89368461,0,0x0,8
tick,0x7ffdb840feb4,89383728,0,0x0,8
tick,0x7ffdb840feb4,89399410,0,0x0,8
tick,0x7ffdb840feb4,89415156,0,0x0,8
tick,0x7ffdb840feb4,89430760,0,0x0,8
tick,0x7ffdb840feb4,89446376,0,0x0,8
tick,0x7ffdb840feb4,89462552,0,0x0,8
tick,0x7ffdb840feb4,89478555,0,0x0,8
tick,0x7ffdb840feb4,89493948,0,0x0,8
tick,0x7ffdb840feb4,89509946,0,0x0,8
tick,0x7ffdb840feb4,89526060,0,0x0,8
tick,0x7ffdb840feb4,89542069,0,0x0,8
tick,0x7ffdb840feb4,89557956,0,0x0,8
tick,0x7ffdb840feb4,89573963,0,0x0,8
tick,0x7ffdb840feb4,89589948,0,0x0,8
tick,0x7ffdb840feb4,89605949,0,0x0,8
tick,0x7ffdb840feb4,89621963,0,0x0,8
tick,0x7ffdb840feb4,89637965,0,0x0,8
tick,0x7ffdb840feb4,89653968,0,0x0,8
tick,0x7ffdb840feb4,89669967,0,0x0,8
tick,0x7ffdb840feb4,89685966,0,0x0,8
tick,0x7ffdb840feb4,89701360,0,0x0,8
tick,0x7ffdb840feb4,89717354,0,0x0,8
tick,0x7ffdb840feb4,89733125,0,0x0,8
tick,0x7ffdb840feb4,89748585,0,0x0,8
tick,0x7ffdb840feb4,89763364,0,0x0,8
tick,0x7ffdb840feb4,89779369,0,0x0,8
tick,0x7ffdb840feb4,89795394,0,0x0,8
tick,0x7ffdb840feb4,89811236,0,0x0,8
tick,0x7ffdb840feb4,89826396,0,0x0,8
tick,0x7ffdb840feb4,89841569,0,0x0,8
tick,0x7ffdb840feb4,89857011,0,0x0,8
tick,0x7ffdb840feb4,89871984,0,0x0,8
tick,0x7ffdb840feb4,89887990,0,0x0,8
tick,0x7ffdb840feb4,89904176,0,0x0,8
tick,0x7ffdb840feb4,89919399,0,0x0,8
tick,0x7ffdb840feb4,89935567,0,0x0,8
tick,0x7ffdb840feb4,89951419,0,0x0,8
tick,0x7ffdb840feb4,89967572,0,0x0,8
tick,0x7ffdb840feb4,89983582,0,0x0,8
tick,0x7ffdb840feb4,89999429,0,0x0,8
tick,0x7ffdb840feb4,90014578,0,0x0,8
tick,0x7ffdb840feb4,90029412,0,0x0,8
tick,0x7ffdb840feb4,90044733,0,0x0,8
tick,0x7ffdb840feb4,90060650,0,0x0,8
tick,0x7ffdb840feb4,90076013,0,0x0,8
tick,0x7ffdb840feb4,90091282,0,0x0,8
tick,0x7ffdb840feb4,90106435,0,0x0,8
tick,0x7ffdb840feb4,90121599,0,0x0,8
tick,0x7ffdb840feb4,90137008,0,0x0,8
tick,0x7ffdb840feb4,90153013,0,0x0,8
tick,0x7ffdb840feb4,90169023,0,0x0,8
tick,0x7ffdb840feb4,90185029,0,0x0,8
tick,0x7ffdb840feb4,90201036,0,0x0,8
tick,0x7ffdb840feb4,90217040,0,0x0,8
tick,0x7ffdb840feb4,90232429,0,0x0,8
tick,0x7ffdb840feb4,90248143,0,0x0,8
tick,0x7ffdb840feb4,90263327,0,0x0,8
tick,0x7ffdb840feb4,90279118,0,0x0,8
tick,0x7ffdb840feb4,90294465,0,0x0,8
tick,0x7ffdb840feb4,90309261,0,0x0,8
tick,0x7ffdb840feb4,90325040,0,0x0,8
tick,0x7ffdb840feb4,90341039,0,0x0,8
tick,0x7ffdb840feb4,90357051,0,0x0,8
tick,0x7ffdb840feb4,90373050,0,0x0,8
tick,0x7ffdb840feb4,90389052,0,0x0,8
tick,0x7ffdb840feb4,90405055,0,0x0,8
tick,0x7ffdb840feb4,90421055,0,0x0,8
tick,0x7ffdb840feb4,90437051,0,0x0,8
tick,0x7ffdb840feb4,90453061,0,0x0,8
tick,0x7ffdb840feb4,90469056,0,0x0,8
tick,0x7ffdb840feb4,90485062,0,0x0,8
tick,0x7ffdb840feb4,90501065,0,0x0,8
tick,0x7ffdb840feb4,90517064,0,0x0,8
tick,0x7ffdb840feb4,90533068,0,0x0,8
tick,0x7ffdb840feb4,90549077,0,0x0,8
tick,0x7ffdb840feb4,90565071,0,0x0,8
tick,0x7ffdb840feb4,90580069,0,0x0,8
tick,0x7ffdb840feb4,90596065,0,0x0,8
tick,0x7ffdb840feb4,90611071,0,0x0,8
tick,0x7ffdb840feb4,90626545,0,0x0,8
tick,0x7ffdb840feb4,90642083,0,0x0,8
tick,0x7ffdb840feb4,90657080,0,0x0,8
tick,0x7ffdb840feb4,90673121,0,0x0,8
tick,0x7ffdb840feb4,90689085,0,0x0,8
tick,0x7ffdb840feb4,90704696,0,0x0,8
tick,0x7ffdb840feb4,90720679,0,0x0,8
tick,0x7ffdb840feb4,90735745,0,0x0,8
tick,0x7ffdb840feb4,90751091,0,0x0,8
tick,0x7ffdb840feb4,90766807,0,0x0,8
tick,0x7ffdb840feb4,90781833,0,0x0,8
tick,0x7ffdb840feb4,90797769,0,0x0,8
tick,0x7ffdb840feb4,90813113,0,0x0,8
tick,0x7ffdb840feb4,90828485,0,0x0,8
tick,0x7ffdb840feb4,90844486,0,0x0,8
tick,0x7ffdb840feb4,90860106,0,0x0,8
tick,0x7ffdb840feb4,90876017,0,0x0,8
tick,0x7ffdb840feb4,90891068,0,0x0,8
tick,0x7ffdb840feb4,90906708,0,0x0,8
tick,0x7ffdb840feb4,90922393,0,0x0,8
tick,0x7ffdb840feb4,90938405,0,0x0,8
tick,0x7ffdb840feb4,90954408,0,0x0,8
tick,0x7ffdb840feb4,90970416,0,0x0,8
tick,0x7ffdb840feb4,90986509,0,0x0,8
tick,0x7ffdb840feb4,91001673,0,0x0,8
tick,0x7ffdb840feb4,91016500,0,0x0,8
tick,0x7ffdb840feb4,91031682,0,0x0,8
tick,0x7ffdb840feb4,91047832,0,0x0,8
tick,0x7ffdb840feb4,91063153,0,0x0,8
tick,0x7ffdb840feb4,91079046,0,0x0,8
tick,0x7ffdb840feb4,91094874,0,0x0,8
tick,0x7ffdb840feb4,91110424,0,0x0,8
tick,0x7ffdb840feb4,91125598,0,0x0,8
tick,0x7ffdb840feb4,91141029,0,0x0,8
tick,0x7ffdb840feb4,91156878,0,0x0,8
tick,0x7ffdb840feb4,91172067,0,0x0,8
tick,0x7ffdb840feb4,91187051,0,0x0,8
tick,0x7ffdb840feb4,91202882,0,0x0,8
tick,0x7ffdb840feb4,91218047,0,0x0,8
tick,0x7ffdb840feb4,91233989,0,0x0,8
tick,0x7ffdb840feb4,91249506,0,0x0,8
tick,0x7ffdb840feb4,91264510,0,0x0,8
tick,0x7ffdb840feb4,91280548,0,0x0,8
tick,0x7ffdb840feb4,91296161,0,0x0,8
tick,0x7ffdb840feb4,91311331,0,0x0,8
tick,0x7ffdb840feb4,91326699,0,0x0,8
tick,0x7ffdb840feb4,91342041,0,0x0,8
tick,0x7ffdb840feb4,91357773,0,0x0,8
tick,0x7ffdb840feb4,91373405,0,0x0,8
tick,0x7ffdb840feb4,91389373,0,0x0,8
tick,0x7ffdb840feb4,91404012,0,0x0,8
tick,0x7ffdb840feb4,91419064,0,0x0,8
tick,0x7ffdb840feb4,91434964,0,0x0,8
tick,0x7ffdb840feb4,91451057,0,0x0,8
tick,0x7ffdb840feb4,91466096,0,0x0,8
tick,0x7ffdb840feb4,91482215,0,0x0,8
tick,0x7ffdb840feb4,91496716,0,0x0,8
tick,0x7ffdb840feb4,91512017,0,0x0,8
tick,0x7ffdb840feb4,91528177,0,0x0,8
tick,0x7ffdb840feb4,91543214,0,0x0,8
tick,0x7ffdb840feb4,91558384,0,0x0,8
tick,0x7ffdb840feb4,91573419,0,0x0,8
tick,0x7ffdb840feb4,91589299,0,0x0,8
tick,0x7ffdb840feb4,91604878,0,0x0,8
tick,0x7ffdb840feb4,91620689,0,0x0,8
tick,0x7ffdb840feb4,91636066,0,0x0,8
tick,0x7ffdb840feb4,91651762,0,0x0,8
tick,0x7ffdb840feb4,91667259,0,0x0,8
tick,0x7ffdb840feb4,91682669,0,0x0,8
tick,0x7ffdb840feb4,91698365,0,0x0,8
tick,0x7ffdb840feb4,91713644,0,0x0,8
tick,0x7ffdb840feb4,91729507,0,0x0,8
tick,0x7ffdb840feb4,91745235,0,0x0,8
tick,0x7ffdb840feb4,91760550,0,0x0,8
tick,0x7ffdb840feb4,91775354,0,0x0,8
tick,0x7ffdb840feb4,91791384,0,0x0,8
tick,0x7ffdb840feb4,91806664,0,0x0,8
tick,0x7ffdb840feb4,91822277,0,0x0,8
tick,0x7ffdb840feb4,91837231,0,0x0,8
tick,0x7ffdb840feb4,91853230,0,0x0,8
tick,0x7ffdb840feb4,91868421,0,0x0,8
tick,0x7ffdb840feb4,91883248,0,0x0,8
tick,0x7ffdb840feb4,91899360,0,0x0,8
tick,0x7ffdb840feb4,91914690,0,0x0,8
tick,0x7ffdb840feb4,91930529,0,0x0,8
tick,0x7ffdb840feb4,91945538,0,0x0,8
tick,0x7ffdb840feb4,91961556,0,0x0,8
tick,0x7ffdb840feb4,91977390,0,0x0,8
tick,0x7ffdb840feb4,91992644,0,0x0,8
tick,0x7ffdb840feb4,92007659,0,0x0,8
tick,0x7ffdb840feb4,92022927,0,0x0,8
tick,0x7ffdb840feb4,92038567,0,0x0,8
tick,0x7ffdb840feb4,92054146,0,0x0,8
tick,0x7ffdb840feb4,92069792,0,0x0,8
tick,0x7ffdb840feb4,92085292,0,0x0,8
tick,0x7ffdb840feb4,92100816,0,0x0,8
tick,0x7ffdb840feb4,92116021,0,0x0,8
tick,0x7ffdb840feb4,92131584,0,0x0,8
tick,0x7ffdb840feb4,92147399,0,0x0,8
tick,0x7ffdb840feb4,92163403,0,0x0,8
tick,0x7ffdb840feb4,92179410,0,0x0,8
tick,0x7ffdb840feb4,92194596,0,0x0,8
tick,0x7ffdb840feb4,92209395,0,0x0,8
tick,0x7ffdb840feb4,92224700,0,0x0,8
tick,0x7ffdb840feb4,92240275,0,0x0,8
tick,0x7ffdb840feb4,92255568,0,0x0,8
tick,0x7ffdb840feb4,92271420,0,0x0,8
tick,0x7ffdb840feb4,92287416,0,0x0,8
tick,0x7ffdb840feb4,92303401,0,0x0,8
tick,0x7ffdb840feb4,92319283,0,0x0,8
tick,0x7ffdb840feb4,92335336,0,0x0,8
tick,0x7ffdb840feb4,92351403,0,0x0,8
tick,0x7ffdb840feb4,92367828,0,0x0,8
tick,0x7ffdb840feb4,92382922,0,0x0,8
tick,0x7ffdb840feb4,92398073,0,0x0,8
tick,0x7ffdb840feb4,92413861,0,0x0,8
tick,0x7ffdb840feb4,92428870,0,0x0,8
tick,0x7ffdb840feb4,92444292,0,0x0,8
tick,0x7ffdb840feb4,92460291,0,0x0,8
tick,0x7ffdb840feb4,92476296,0,0x0,8
tick,0x7ffdb840feb4,92492302,0,0x0,8
tick,0x7ffdb840feb4,92507728,0,0x0,8
tick,0x7ffdb840feb4,92522978,0,0x0,8
tick,0x7ffdb840feb4,92538700,0,0x0,8
tick,0x7ffdb840feb4,92554459,0,0x0,8
tick,0x7ffdb840feb4,92569561,0,0x0,8
tick,0x7ffdb840feb4,92584722,0,0x0,8
tick,0x7ffdb840feb4,92600984,0,0x0,8
tick,0x7ffdb840feb4,92616170,0,0x0,8
tick,0x7ffdb840feb4,92631985,0,0x0,8
tick,0x7ffdb840feb4,92647669,0,0x0,8
tick,0x7ffdb840feb4,92662841,0,0x0,8
tick,0x7ffdb840feb4,92677921,0,0x0,8
tick,0x7ffdb840feb4,92693320,0,0x0,8
tick,0x7ffdb840feb4,92709315,0,0x0,8
tick,0x7ffdb840feb4,92725329,0,0x0,8
tick,0x7ffdb840feb4,92741322,0,0x0,8
tick,0x7ffdb840feb4,92756338,0,0x0,8
tick,0x7ffdb840feb4,92771326,0,0x0,8
tick,0x7ffdb840feb4,92787340,0,0x0,8
tick,0x7ffdb840feb4,92803338,0,0x0,8
tick,0x7ffdb840feb4,92818734,0,0x0,8
tick,0x7ffdb840feb4,92834659,0,0x0,8
tick,0x7ffdb840feb4,92850155,0,0x0,8
tick,0x7ffdb840feb4,92866103,0,0x0,8
tick,0x7ffdb840feb4,92881414,0,0x0,8
tick,0x7ffdb840feb4,92897348,0,0x0,8
tick,0x7ffdb840feb4,92912345,0,0x0,8
tick,0x7ffdb840feb4,92928006,0,0x0,8
tick,0x7ffdb840feb4,92943370,0,0x0,8
tick,0x7ffdb840feb4,92958374,0,0x0,8
tick,0x7ffdb840feb4,92974384,0,0x0,8
tick,0x7ffdb840feb4,92990370,0,0x0,8
tick,0x7ffdb840feb4,93005635,0,0x0,8
tick,0x7ffdb840feb4,93021082,0,0x0,8
tick,0x7ffdb840feb4,93036445,0,0x0,8
tick,0x7ffdb840feb4,93051660,0,0x0,8
tick,0x7ffdb840feb4,93067019,0,0x0,8
tick,0x7ffdb840feb4,93082418,0,0x0,8
tick,0x7ffdb840feb4,93097719,0,0x0,8
tick,0x7ffdb840feb4,93113578,0,0x0,8
tick,0x7ffdb840feb4,93128599,0,0x0,8
tick,0x7ffdb840feb4,93144615,0,0x0,8
tick,0x7ffdb840feb4,93159889,0,0x0,8
tick,0x7ffdb840feb4,93175272,0,0x0,8
tick,0x7ffdb840feb4,93190550,0,0x0,8
tick,0x7ffdb840feb4,93206537,0,0x0,8
tick,0x7ffdb840feb4,93222400,0,0x0,8
tick,0x7ffdb840feb4,93237495,0,0x0,8
tick,0x7ffdb840feb4,93252571,0,0x0,8
tick,0x7ffdb840feb4,93268075,0,0x0,8
tick,0x7ffdb840feb4,93283406,0,0x0,8
tick,0x7ffdb840feb4,93299289,0,0x0,8
tick,0x7ffdb840feb4,93315411,0,0x0,8
tick,0x7ffdb840feb4,93330913,0,0x0,8
tick,0x7ffdb840feb4,93347332,0,0x0,8
tick,0x7ffdb840feb4,93362942,0,0x0,8
tick,0x7ffdb840feb4,93378794,0,0x0,8
tick,0x7ffdb840feb4,93394852,0,0x0,8
tick,0x7ffdb840feb4,93410790,0,0x0,8
tick,0x7ffdb840feb4,93425534,0,0x0,8
tick,0x7ffdb840feb4,93441408,0,0x0,8
tick,0x7ffdb840feb4,93457409,0,0x0,8
tick,0x7ffdb840feb4,93473414,0,0x0,8
tick,0x7ffdb840feb4,93489428,0,0x0,8
tick,0x7ffdb840feb4,93505425,0,0x0,8
tick,0x7ffdb840feb4,93521428,0,0x0,8
tick,0x7ffdb840feb4,93537426,0,0x0,8
tick,0x7ffdb840feb4,93553427,0,0x0,8
tick,0x7ffdb840feb4,93568656,0,0x0,8
tick,0x7ffdb840feb4,93583431,0,0x0,8
tick,0x7ffdb840feb4,93599441,0,0x0,8
tick,0x7ffdb840feb4,93615443,0,0x0,8
tick,0x7ffdb840feb4,93631441,0,0x0,8
tick,0x7ffdb840feb4,93647444,0,0x0,8
tick,0x7ffdb840feb4,93663608,0,0x0,8
tick,0x7ffdb840feb4,93678826,0,0x0,8
tick,0x7ffdb840feb4,93695009,0,0x0,8
tick,0x7ffdb840feb4,93710019,0,0x0,8
tick,0x7ffdb840feb4,93724839,0,0x0,8
tick,0x7ffdb840feb4,93740290,0,0x0,8
tick,0x7ffdb840feb4,93755777,0,0x0,8
tick,0x7ffdb840feb4,93771039,0,0x0,8
tick,0x7ffdb840feb4,93787124,0,0x0,8
tick,0x7ffdb840feb4,93802882,0,0x0,8
tick,0x7ffdb840feb4,93817875,0,0x0,8
tick,0x7ffdb840feb4,93833623,0,0x0,8
tick,0x7ffdb840feb4,93849054,0,0x0,8
tick,0x7ffdb840feb4,93865026,0,0x0,8
tick,0x7ffdb840feb4,93880677,0,0x0,8
tick,0x7ffdb840feb4,93896382,0,0x0,8
tick,0x7ffdb840feb4,93911841,0,0x0,8
tick,0x7ffdb840feb4,93927753,0,0x0,8
tick,0x7ffdb840feb4,93942809,0,0x0,8
tick,0x7ffdb840feb4,93958478,0,0x0,8
tick,0x7ffdb840feb4,93973484,0,0x0,8
tick,0x7ffdb840feb4,93989792,0,0x0,8
tick,0x7ffdb840feb4,94004490,0,0x0,8
tick,0x7ffdb840feb4,94019970,0,0x0,8
tick,0x7ffdb840feb4,94035496,0,0x0,8
tick,0x7ffdb840feb4,94051172,0,0x0,8
tick,0x7ffdb840feb4,94066490,0,0x0,8
tick,0x7ffdb840feb4,94082482,0,0x0,8
tick,0x7ffdb840feb4,94098489,0,0x0,8
tick,0x7ffdb840feb4,94114497,0,0x0,8
tick,0x7ffdb840feb4,94130498,0,0x0,8
tick,0x7ffdb840feb4,94146504,0,0x0,8
tick,0x7ffdb840feb4,94161502,0,0x0,8
tick,0x7ffdb840feb4,94177506,0,0x0,8
tick,0x7ffdb840feb4,94192506,0,0x0,8
tick,0x7ffdb840feb4,94208508,0,0x0,8
tick,0x7ffdb840feb4,94223733,0,0x0,8
tick,0x7ffdb840feb4,94238890,0,0x0,8
tick,0x7ffdb840feb4,94254870,0,0x0,8
tick,0x7ffdb840feb4,94270501,0,0x0,8
tick,0x7ffdb840feb4,94286283,0,0x0,8
tick,0x7ffdb840feb4,94301618,0,0x0,8
tick,0x7ffdb840feb4,94317145,0,0x0,8
tick,0x7ffdb840feb4,94333410,0,0x0,8
tick,0x7ffdb840feb4,94348879,0,0x0,8
tick,0x7ffdb840feb4,94364063,0,0x0,8
tick,0x7ffdb840feb4,94379643,0,0x0,8
tick,0x7ffdb840feb4,94394985,0,0x0,8
tick,0x7ffdb840feb4,94409831,0,0x0,8
tick,0x7ffdb840feb4,94425324,0,0x0,8
tick,0x7ffdb840feb4,94440836,0,0x0,8
tick,0x7ffdb840feb4,94456691,0,0x0,8
tick,0x7ffdb840feb4,94472565,0,0x0,8
tick,0x7ffdb840feb4,94487942,0,0x0,8
tick,0x7ffdb840feb4,94503545,0,0x0,8
tick,0x7ffdb840feb4,94518548,0,0x0,8
tick,0x7ffdb840feb4,94533775,0,0x0,8
tick,0x7ffdb840feb4,94549548,0,0x0,8
tick,0x7ffdb840feb4,94564559,0,0x0,8
tick,0x7ffdb840feb4,94580558,0,0x0,8
tick,0x7ffdb840feb4,94595987,0,0x0,8
tick,0x7ffdb840feb4,94611742,0,0x0,8
tick,0x7ffdb840feb4,94627247,0,0x0,8
tick,0x7ffdb840feb4,94642567,0,0x0,8
tick,0x7ffdb840feb4,94658557,0,0x0,8
tick,0x7ffdb840feb4,94674564,0,0x0,8
tick,0x7ffdb840feb4,94690126,0,0x0,8
tick,0x7ffdb840feb4,94705567,0,0x0,8
tick,0x7ffdb840feb4,94720791,0,0x0,8
tick,0x7ffdb840feb4,94735960,0,0x0,8
tick,0x7ffdb840feb4,94751322,0,0x0,8
tick,0x7ffdb840feb4,94766555,0,0x0,8
tick,0x7ffdb840feb4,94781800,0,0x0,8
tick,0x7ffdb840feb4,94797146,0,0x0,8
tick,0x7ffdb840feb4,94812743,0,0x0,8
tick,0x7ffdb840feb4,94827949,0,0x0,8
tick,0x7ffdb840feb4,94842971,0,0x0,8
tick,0x7ffdb840feb4,94858965,0,0x0,8
tick,0x7ffdb840feb4,94873987,0,0x0,8
tick,0x7ffdb840feb4,94890216,0,0x0,8
tick,0x7ffdb840feb4,94905636,0,0x0,8
tick,0x7ffdb840feb4,94920977,0,0x0,8
tick,0x7ffdb840feb4,94936147,0,0x0,8
tick,0x7ffdb840feb4,94951591,0,0x0,8
tick,0x7ffdb840feb4,94967604,0,0x0,8
tick,0x7ffdb840feb4,94983601,0,0x0,8
tick,0x7ffdb840feb4,94999607,0,0x0,8
tick,0x7ffdb840feb4,95015616,0,0x0,8
tick,0x7ffdb840feb4,95031606,0,0x0,8
tick,0x7ffdb840feb4,95047613,0,0x0,8
tick,0x7ffdb840feb4,95062991,0,0x0,8
tick,0x7ffdb840feb4,95078629,0,0x0,8
tick,0x7ffdb840feb4,95093608,0,0x0,8
tick,0x7ffdb840feb4,95109614,0,0x0,8
tick,0x7ffdb840feb4,95125621,0,0x0,8
tick,0x7ffdb840feb4,95141613,0,0x0,8
tick,0x7ffdb840feb4,95157612,0,0x0,8
tick,0x7ffdb840feb4,95172617,0,0x0,8
tick,0x7ffdb840feb4,95188634,0,0x0,8
tick,0x7ffdb840feb4,95203622,0,0x0,8
tick,0x7ffdb840feb4,95219627,0,0x0,8
tick,0x7ffdb840feb4,95235635,0,0x0,8
tick,0x7ffdb840feb4,95250632,0,0x0,8
tick,0x7ffdb840feb4,95265891,0,0x0,8
tick,0x7ffdb840feb4,95281808,0,0x0,8
tick,0x7ffdb840feb4,95296780,0,0x0,8
tick,0x7ffdb840feb4,95312637,0,0x0,8
tick,0x7ffdb840feb4,95327869,0,0x0,8
tick,0x7ffdb840feb4,95343297,0,0x0,8
tick,0x7ffdb840feb4,95358590,0,0x0,8
tick,0x7ffdb840feb4,95374531,0,0x0,8
tick,0x7ffdb840feb4,95389860,0,0x0,8
tick,0x7ffdb840feb4,95405002,0,0x0,8
tick,0x7ffdb840feb4,95420454,0,0x0,8
tick,0x7ffdb840feb4,95435964,0,0x0,8
tick,0x7ffdb840feb4,95451658,0,0x0,8
tick,0x7ffdb840feb4,95466658,0,0x0,8
tick,0x7ffdb840feb4,95482657,0,0x0,8
tick,0x7ffdb840feb4,95498661,0,0x0,8
tick,0x7ffdb840feb4,95514662,0,0x0,8
tick,0x7ffdb840feb4,95530661,0,0x0,8
tick,0x7ffdb840feb4,95546668,0,0x0,8
tick,0x7ffdb840feb4,95562672,0,0x0,8
tick,0x7ffdb840feb4,95578126,0,0x0,8
tick,0x7ffdb840feb4,95593067,0,0x0,8
tick,0x7ffdb840feb4,95608484,0,0x0,8
tick,0x7ffdb840feb4,95624071,0,0x0,8
tick,0x7ffdb840feb4,95639694,0,0x0,8
tick,0x7ffdb840feb4,95654681,0,0x0,8
tick,0x7ffdb840feb4,95670042,0,0x0,8
tick,0x7ffdb840feb4,95685074,0,0x0,8
tick,0x7ffdb840feb4,95700407,0,0x0,8
tick,0x7ffdb840feb4,95715763,0,0x0,8
tick,0x7ffdb840feb4,95731688,0,0x0,8
tick,0x7ffdb840feb4,95747256,0,0x0,8
tick,0x7ffdb840feb4,95762257,0,0x0,8
tick,0x7ffdb840feb4,95777691,0,0x0,8
tick,0x7ffdb840feb4,95793147,0,0x0,8
tick,0x7ffdb840feb4,95808695,0,0x0,8
tick,0x7ffdb840feb4,95823701,0,0x0,8
tick,0x7ffdb840feb4,95839703,0,0x0,8
tick,0x7ffdb840feb4,95855368,0,0x0,8
tick,0x7ffdb840feb4,95870291,0,0x0,8
tick,0x7ffdb840feb4,95885713,0,0x0,8
tick,0x7ffdb840feb4,95901101,0,0x0,8
tick,0x7ffdb840feb4,95916711,0,0x0,8
tick,0x7ffdb840feb4,95932076,0,0x0,8
tick,0x7ffdb840feb4,95947707,0,0x0,8
tick,0x7ffdb840feb4,95963716,0,0x0,8
tick,0x7ffdb840feb4,95979716,0,0x0,8
tick,0x7ffdb840feb4,95995723,0,0x0,8
tick,0x7ffdb840feb4,96011717,0,0x0,8
tick,0x7ffdb840feb4,96027892,0,0x0,8
tick,0x7ffdb840feb4,96043136,0,0x0,8
tick,0x7ffdb840feb4,96058115,0,0x0,8
tick,0x7ffdb840feb4,96073734,0,0x0,8
tick,0x7ffdb840feb4,96089725,0,0x0,8
tick,0x7ffdb840feb4,96105119,0,0x0,8
tick,0x7ffdb840feb4,96120735,0,0x0,8
tick,0x7ffdb840feb4,96135732,0,0x0,8
tick,0x7ffdb840feb4,96151134,0,0x0,8
tick,0x7ffdb840feb4,96166135,0,0x0,8
tick,0x7ffdb840feb4,96181744,0,0x0,8
tick,0x7ffdb840feb4,96197106,0,0x0,8
tick,0x7ffdb840feb4,96212077,0,0x0,8
tick,0x7ffdb840feb4,96227744,0,0x0,8
tick,0x7ffdb840feb4,96243308,0,0x0,8
tick,0x7ffdb840feb4,96258338,0,0x0,8
tick,0x7ffdb840feb4,96274188,0,0x0,8
tick,0x7ffdb840feb4,96290352,0,0x0,8
tick,0x7ffdb840feb4,96306614,0,0x0,8
tick,0x7ffdb840feb4,96321967,0,0x0,8
tick,0x7ffdb840feb4,96337159,0,0x0,8
tick,0x7ffdb840feb4,96352707,0,0x0,8
tick,0x7ffdb840feb4,96367897,0,0x0,8
tick,0x7ffdb840feb4,96383898,0,0x0,8
tick,0x7ffdb840feb4,96400122,0,0x0,8
tick,0x7ffdb840feb4,96416223,0,0x0,8
tick,0x7ffdb840feb4,96431942,0,0x0,8
tick,0x7ffdb840feb4,96447885,0,0x0,8
tick,0x7ffdb840feb4,96463528,0,0x0,8
tick,0x7ffdb840feb4,96479113,0,0x0,8
tick,0x7ffdb840feb4,96494560,0,0x0,8
tick,0x7ffdb840feb4,96510525,0,0x0,8
tick,0x7ffdb840feb4,96525794,0,0x0,8
tick,0x7ffdb840feb4,96541030,0,0x0,8
tick,0x7ffdb840feb4,96556618,0,0x0,8
tick,0x7ffdb840feb4,96572196,0,0x0,8
tick,0x7ffdb840feb4,96588013,0,0x0,8
tick,0x7ffdb840feb4,96603411,0,0x0,8
tick,0x7ffdb840feb4,96618777,0,0x0,8
tick,0x7ffdb840feb4,96634346,0,0x0,8
tick,0x7ffdb840feb4,96650203,0,0x0,8
tick,0x7ffdb840feb4,96666032,0,0x0,8
tick,0x7ffdb840feb4,96681674,0,0x0,8
tick,0x7ffdb840feb4,96697170,0,0x0,8
tick,0x7ffdb840feb4,96712000,0,0x0,8
tick,0x7ffdb840feb4,96727250,0,0x0,8
tick,0x7ffdb840feb4,96742787,0,0x0,8
tick,0x7ffdb840feb4,96758626,0,0x0,8
tick,0x7ffdb840feb4,96774645,0,0x0,8
tick,0x7ffdb840feb4,96790659,0,0x0,8
tick,0x7ffdb840feb4,96806005,0,0x0,8
tick,0x7ffdb840feb4,96822153,0,0x0,8
tick,0x7ffdb840feb4,96838207,0,0x0,8
tick,0x7ffdb840feb4,96853283,0,0x0,8
tick,0x7ffdb840feb4,96868864,0,0x0,8
tick,0x7ffdb840feb4,96884974,0,0x0,8
tick,0x7ffdb840feb4,96901381,0,0x0,8
tick,0x7ffdb840feb4,96916295,0,0x0,8
tick,0x7ffdb840feb4,96931840,0,0x0,8
tick,0x7ffdb840feb4,96946991,0,0x0,8
tick,0x7ffdb840feb4,96962480,0,0x0,8
tick,0x7ffdb840feb4,96978555,0,0x0,8
tick,0x7ffdb840feb4,96993992,0,0x0,8
tick,0x7ffdb840feb4,97010000,0,0x0,8
tick,0x7ffdb840feb4,97026004,0,0x0,8
tick,0x7ffdb840feb4,97042186,0,0x0,8
tick,0x7ffdb840feb4,97058170,0,0x0,8
tick,0x7ffdb840feb4,97074102,0,0x0,8
tick,0x7ffdb840feb4,97090213,0,0x0,8
tick,0x7ffdb840feb4,97105997,0,0x0,8
tick,0x7ffdb840feb4,97121850,0,0x0,8
tick,0x7ffdb840feb4,97137178,0,0x0,8
tick,0x7ffdb840feb4,97152069,0,0x0,8
tick,0x7ffdb840feb4,97168264,0,0x0,8
tick,0x7ffdb840feb4,97183528,0,0x0,8
tick,0x7ffdb840feb4,97198545,0,0x0,8
tick,0x7ffdb840feb4,97214205,0,0x0,8
tick,0x7ffdb840feb4,97229908,0,0x0,8
tick,0x7ffdb840feb4,97245183,0,0x0,8
tick,0x7ffdb840feb4,97260770,0,0x0,8
tick,0x7ffdb840feb4,97276088,0,0x0,8
tick,0x7ffdb840feb4,97291841,0,0x0,8
tick,0x7ffdb840feb4,97307826,0,0x0,8
tick,0x7ffdb840feb4,97323120,0,0x0,8
tick,0x7ffdb840feb4,97339436,0,0x0,8
tick,0x7ffdb840feb4,97355286,0,0x0,8
tick,0x7ffdb840feb4,97371102,0,0x0,8
tick,0x7ffdb840feb4,97386952,0,0x0,8
tick,0x7ffdb840feb4,97402513,0,0x0,8
tick,0x7ffdb840feb4,97418191,0,0x0,8
tick,0x7ffdb840feb4,97433727,0,0x0,8
tick,0x7ffdb840feb4,97449026,0,0x0,8
tick,0x7ffdb840feb4,97464489,0,0x0,8
tick,0x7ffdb840feb4,97480309,0,0x0,8
tick,0x7ffdb840feb4,97496297,0,0x0,8
tick,0x7ffdb840feb4,97511855,0,0x0,8
tick,0x7ffdb840feb4,97528321,0,0x0,8
tick,0x7ffdb840feb4,97544689,0,0x0,8
tick,0x7ffdb840feb4,97560223,0,0x0,8
tick,0x7ffdb840feb4,97576093,0,0x0,8
tick,0x7ffdb840feb4,97592501,0,0x0,8
tick,0x7ffdb840feb4,97608768,0,0x0,8
tick,0x7ffdb840feb4,97624090,0,0x0,8
tick,0x7ffdb840feb4,97639989,0,0x0,8
tick,0x7ffdb840feb4,97656063,0,0x0,8
tick,0x7ffdb840feb4,97671926,0,0x0,8
tick,0x7ffdb840feb4,97687052,0,0x0,8
tick,0x7ffdb840feb4,97702331,0,0x0,8
tick,0x7ffdb840feb4,97717930,0,0x0,8
tick,0x7ffdb840feb4,97733321,0,0x0,8
tick,0x7ffdb840feb4,97749220,0,0x0,8
tick,0x7ffdb840feb4,97764339,0,0x0,8
tick,0x7ffdb840feb4,97780073,0,0x0,8
tick,0x7ffdb840feb4,97795490,0,0x0,8
tick,0x7ffdb840feb4,97811277,0,0x0,8
tick,0x7ffdb840feb4,97826284,0,0x0,8
tick,0x7ffdb840feb4,97841438,0,0x0,8
tick,0x7ffdb840feb4,97856615,0,0x0,8
tick,0x7ffdb840feb4,97872231,0,0x0,8
tick,0x7ffdb840feb4,97887954,0,0x0,8
tick,0x7ffdb840feb4,97903948,0,0x0,8
tick,0x7ffdb840feb4,97920066,0,0x0,8
tick,0x7ffdb840feb4,97936069,0,0x0,8
tick,0x7ffdb840feb4,97952075,0,0x0,8
tick,0x7ffdb840feb4,97968079,0,0x0,8
tick,0x7ffdb840feb4,97984084,0,0x0,8
tick,0x7ffdb840feb4,98000089,0,0x0,8
tick,0x7ffdb840feb4,98016080,0,0x0,8
tick,0x7ffdb840feb4,98032084,0,0x0,8
tick,0x7ffdb840feb4,98048084,0,0x0,8
tick,0x7ffdb840feb4,98063962,0,0x0,8
tick,0x7ffdb840feb4,98079976,0,0x0,8
tick,0x7ffdb840feb4,98095970,0,0x0,8
tick,0x7ffdb840feb4,98111966,0,0x0,8
tick,0x7ffdb840feb4,98127967,0,0x0,8
tick,0x7ffdb840feb4,98143980,0,0x0,8
tick,0x7ffdb840feb4,98159216,0,0x0,8
tick,0x7ffdb840feb4,98174979,0,0x0,8
tick,0x7ffdb840feb4,98189996,0,0x0,8
tick,0x7ffdb840feb4,98205987,0,0x0,8
tick,0x7ffdb840feb4,98221189,0,0x0,8
tick,0x7ffdb840feb4,98235993,0,0x0,8
tick,0x7ffdb840feb4,98251256,0,0x0,8
tick,0x7ffdb840feb4,98266931,0,0x0,8
tick,0x7ffdb840feb4,98282152,0,0x0,8
tick,0x7ffdb840feb4,98297165,0,0x0,8
tick,0x7ffdb840feb4,98312975,0,0x0,8
tick,0x7ffdb840feb4,98328322,0,0x0,8
tick,0x7ffdb840feb4,98344145,0,0x0,8
tick,0x7ffdb840feb4,98360168,0,0x0,8
tick,0x7ffdb840feb4,98376184,0,0x0,8
tick,0x7ffdb840feb4,98391435,0,0x0,8
tick,0x7ffdb840feb4,98406294,0,0x0,8
tick,0x7ffdb840feb4,98421754,0,0x0,8
tick,0x7ffdb840feb4,98437619,0,0x0,8
tick,0x7ffdb840feb4,98453829,0,0x0,8
tick,0x7ffdb840feb4,98469767,0,0x0,8
tick,0x7ffdb840feb4,98485063,0,0x0,8
tick,0x7ffdb840feb4,98500153,0,0x0,8
tick,0x7ffdb840feb4,98515413,0,0x0,8
tick,0x7ffdb840feb4,98531032,0,0x0,8
tick,0x7ffdb840feb4,98547029,0,0x0,8
tick,0x7ffdb840feb4,98563030,0,0x0,8
tick,0x7ffdb840feb4,98579033,0,0x0,8
tick,0x7ffdb840feb4,98595035,0,0x0,8
tick,0x7ffdb840feb4,98611037,0,0x0,8
tick,0x7ffdb840feb4,98627033,0,0x0,8
tick,0x7ffdb840feb4,98643036,0,0x0,8
tick,0x7ffdb840feb4,98659033,0,0x0,8
tick,0x7ffdb840feb4,98675034,0,0x0,8
tick,0x7ffdb840feb4,98690986,0,0x0,8
tick,0x7ffdb840feb4,98707039,0,0x0,8
tick,0x7ffdb840feb4,98723044,0,0x0,8
tick,0x7ffdb840feb4,98738458,0,0x0,8
tick,0x7ffdb840feb4,98753049,0,0x0,8
tick,0x7ffdb840feb4,98769053,0,0x0,8
tick,0x7ffdb840feb4,98785057,0,0x0,8
tick,0x7ffdb840feb4,98801058,0,0x0,8
tick,0x7ffdb840feb4,98817062,0,0x0,8
tick,0x7ffdb840feb4,98833066,0,0x0,8
tick,0x7ffdb840feb4,98849064,0,0x0,8
tick,0x7ffdb840feb4,98864445,0,0x0,8
tick,0x7ffdb840feb4,98880440,0,0x0,8
tick,0x7ffdb840feb4,98895072,0,0x0,8
tick,0x7ffdb840feb4,98911053,0,0x0,8
tick,0x7ffdb840feb4,98927070,0,0x0,8
tick,0x7ffdb840feb4,98943227,0,0x0,8
tick,0x7ffdb840feb4,98959079,0,0x0,8
tick,0x7ffdb840feb4,98974899,0,0x0,8
tick,0x7ffdb840feb4,98990081,0,0x0,8
tick,0x7ffdb840feb4,99005094,0,0x0,8
tick,0x7ffdb840feb4,99021313,0,0x0,8
tick,0x7ffdb840feb4,99037087,0,0x0,8
tick,0x7ffdb840feb4,99053086,0,0x0,8
tick,0x7ffdb840feb4,99069089,0,0x0,8
tick,0x7ffdb840feb4,99085095,0,0x0,8
tick,0x7ffdb840feb4,99101092,0,0x0,8
tick,0x7ffdb840feb4,99117086,0,0x0,8
tick,0x7ffdb840feb4,99133098,0,0x0,8
tick,0x7ffdb840feb4,99149092,0,0x0,8
tick,0x7ffdb840feb4,99165108,0,0x0,8
tick,0x7ffdb840feb4,99180266,0,0x0,8
tick,0x7ffdb840feb4,99195611,0,0x0,8
tick,0x7ffdb840feb4,99211099,0,0x0,8
tick,0x7ffdb840feb4,99226559,0,0x0,8
tick,0x7ffdb840feb4,99242569,0,0x0,8
tick,0x7ffdb840feb4,99258111,0,0x0,8
tick,0x7ffdb840feb4,99274106,0,0x0,8
tick,0x7ffdb840feb4,99290122,0,0x0,8
tick,0x7ffdb840feb4,99306124,0,0x0,8
tick,0x7ffdb840feb4,99322114,0,0x0,8
tick,0x7ffdb840feb4,99338113,0,0x0,8
tick,0x7ffdb840feb4,99354111,0,0x0,8
tick,0x7ffdb840feb4,99370127,0,0x0,8
tick,0x7ffdb840feb4,99386118,0,0x0,8
tick,0x7ffdb840feb4,99402134,0,0x0,8
tick,0x7ffdb840feb4,99418121,0,0x0,8
tick,0x7ffdb840feb4,99434127,0,0x0,8
tick,0x7ffdb840feb4,99450138,0,0x0,8
tick,0x7ffdb840feb4,99466135,0,0x0,8
tick,0x7ffdb840feb4,99482131,0,0x0,8
tick,0x7ffdb840feb4,99498132,0,0x0,8
tick,0x7ffdb840feb4,99514146,0,0x0,8
tick,0x7ffdb840feb4,99530133,0,0x0,8
tick,0x7ffdb840feb4,99546153,0,0x0,8
tick,0x7ffdb840feb4,99562136,0,0x0,8
tick,0x7ffdb840feb4,99578141,0,0x0,8
tick,0x7ffdb840feb4,99594154,0,0x0,8
tick,0x7ffdb840feb4,99610170,0,0x0,8
tick,0x7ffdb840feb4,99626185,0,0x0,8
tick,0x7ffdb840feb4,99642174,0,0x0,8
tick,0x7ffdb840feb4,99658189,0,0x0,8
tick,0x7ffdb840feb4,99674161,0,0x0,8
tick,0x7ffdb840feb4,99690169,0,0x0,8
tick,0x7ffdb840feb4,99705437,0,0x0,8
tick,0x7ffdb840feb4,99721172,0,0x0,8
tick,0x7ffdb840feb4,99736186,0,0x0,8
tick,0x7ffdb840feb4,99751422,0,0x0,8
tick,0x7ffdb840feb4,99767175,0,0x0,8
tick,0x7ffdb840feb4,99782171,0,0x0,8
tick,0x7ffdb840feb4,99798167,0,0x0,8
tick,0x7ffdb840feb4,99814168,0,0x0,8
tick,0x7ffdb840feb4,99829489,0,0x0,8
tick,0x7ffdb840feb4,99845163,0,0x0,8
tick,0x7ffdb840feb4,99860164,0,0x0,8
tick,0x7ffdb840feb4,99875854,0,0x0,8
tick,0x7ffdb840feb4,99891189,0,0x0,8
tick,0x7ffdb840feb4,99906528,0,0x0,8
tick,0x7ffdb840feb4,99922537,0,0x0,8
tick,0x7ffdb840feb4,99938541,0,0x0,8
tick,0x7ffdb840feb4,99954170,0,0x0,8
tick,0x7ffdb840feb4,99969846,0,0x0,8
tick,0x7ffdb840feb4,99985177,0,0x0,8
tick,0x7ffdb840feb4,100000886,0,0x0,8
tick,0x7ffdb840feb4,100016647,0,0x0,8
tick,0x7ffdb840feb4,100032783,0,0x0,8
tick,0x7ffdb840feb4,100048606,0,0x0,8
tick,0x7ffdb840feb4,100064695,0,0x0,8
tick,0x7ffdb840feb4,100079771,0,0x0,8
tick,0x7ffdb840feb4,100095248,0,0x0,8
tick,0x7ffdb840feb4,100110316,0,0x0,8
tick,0x7ffdb840feb4,100125754,0,0x0,8
tick,0x7ffdb840feb4,100141022,0,0x0,8
tick,0x7ffdb840feb4,100156700,0,0x0,8
tick,0x7ffdb840feb4,100171980,0,0x0,8
tick,0x7ffdb840feb4,100186897,0,0x0,8
tick,0x7ffdb840feb4,100202805,0,0x0,8
tick,0x7ffdb840feb4,100218926,0,0x0,8
tick,0x7ffdb840feb4,100234768,0,0x0,8
tick,0x7ffdb840feb4,100250792,0,0x0,8
tick,0x7ffdb840feb4,100266715,0,0x0,8
tick,0x7ffdb840feb4,100282310,0,0x0,8
tick,0x7ffdb840feb4,100298244,0,0x0,8
tick,0x7ffdb840feb4,100313909,0,0x0,8
tick,0x7ffdb840feb4,100329255,0,0x0,8
tick,0x7ffdb840feb4,100345247,0,0x0,8
tick,0x7ffdb840feb4,100360460,0,0x0,8
tick,0x7ffdb840feb4,100376243,0,0x0,8
tick,0x7ffdb840feb4,100391264,0,0x0,8
tick,0x7ffdb840feb4,100407276,0,0x0,8
tick,0x7ffdb840feb4,100423253,0,0x0,8
tick,0x7ffdb840feb4,100438903,0,0x0,8
tick,0x7ffdb840feb4,100454173,0,0x0,8
tick,0x7ffdb840feb4,100469261,0,0x0,8
tick,0x7ffdb840feb4,100484468,0,0x0,8
tick,0x7ffdb840feb4,100500267,0,0x0,8
tick,0x7ffdb840feb4,100515271,0,0x0,8
tick,0x7ffdb840feb4,100530476,0,0x0,8
tick,0x7ffdb840feb4,100545902,0,0x0,8
tick,0x7ffdb840feb4,100561268,0,0x0,8
tick,0x7ffdb840feb4,100576516,0,0x0,8
tick,0x7ffdb840feb4,100592266,0,0x0,8
tick,0x7ffdb840feb4,100607293,0,0x0,8
tick,0x7ffdb840feb4,100623337,0,0x0,8
tick,0x7ffdb840feb4,100638470,0,0x0,8
tick,0x7ffdb840feb4,100653285,0,0x0,8
tick,0x7ffdb840feb4,100668498,0,0x0,8
tick,0x7ffdb840feb4,100684274,0,0x0,8
tick,0x7ffdb840feb4,100699297,0,0x0,8
tick,0x7ffdb840feb4,100715282,0,0x0,8
tick,0x7ffdb840feb4,100730546,0,0x0,8
tick,0x7ffdb840feb4,100745913,0,0x0,8
tick,0x7ffdb840feb4,100761287,0,0x0,8
tick,0x7ffdb840feb4,100776530,0,0x0,8
tick,0x7ffdb840feb4,100792537,0,0x0,8
tick,0x7ffdb840feb4,100808542,0,0x0,8
tick,0x7ffdb840feb4,100824305,0,0x0,8
tick,0x7ffdb840feb4,100840081,0,0x0,8
tick,0x7ffdb840feb4,100855298,0,0x0,8
tick,0x7ffdb840feb4,100871310,0,0x0,8
tick,0x7ffdb840feb4,100886317,0,0x0,8
tick,0x7ffdb840feb4,100902004,0,0x0,8
tick,0x7ffdb840feb4,100918021,0,0x0,8
tick,0x7ffdb840feb4,100933322,0,0x0,8
tick,0x7ffdb840feb4,100949303,0,0x0,8
tick,0x7ffdb840feb4,100964531,0,0x0,8
tick,0x7ffdb840feb4,100980319,0,0x0,8
tick,0x7ffdb840feb4,100995313,0,0x0,8
tick,0x7ffdb840feb4,101011317,0,0x0,8
tick,0x7ffdb840feb4,101026620,0,0x0,8
tick,0x7ffdb840feb4,101042622,0,0x0,8
tick,0x7ffdb840feb4,101058618,0,0x0,8
tick,0x7ffdb840feb4,101074622,0,0x0,8
tick,0x7ffdb840feb4,101090626,0,0x0,8
tick,0x7ffdb840feb4,101106331,0,0x0,8
tick,0x7ffdb840feb4,101121654,0,0x0,8
tick,0x7ffdb840feb4,101136624,0,0x0,8
tick,0x7ffdb840feb4,101152337,0,0x0,8
tick,0x7ffdb840feb4,101168336,0,0x0,8
tick,0x7ffdb840feb4,101184342,0,0x0,8
tick,0x7ffdb840feb4,101200340,0,0x0,8
tick,0x7ffdb840feb4,101215788,0,0x0,8
tick,0x7ffdb840feb4,101231748,0,0x0,8
tick,0x7ffdb840feb4,101247626,0,0x0,8
tick,0x7ffdb840feb4,101263045,0,0x0,8
tick,0x7ffdb840feb4,101278912,0,0x0,8
tick,0x7ffdb840feb4,101293928,0,0x0,8
tick,0x7ffdb840feb4,101308931,0,0x0,8
tick,0x7ffdb840feb4,101324874,0,0x0,8
tick,0x7ffdb840feb4,101340254,0,0x0,8
tick,0x7ffdb840feb4,101355528,0,0x0,8
tick,0x7ffdb840feb4,101370760,0,0x0,8
tick,0x7ffdb840feb4,101386180,0,0x0,8
tick,0x7ffdb840feb4,101401422,0,0x0,8
tick,0x7ffdb840feb4,101417457,0,0x0,8
tick,0x7ffdb840feb4,101433396,0,0x0,8
tick,0x7ffdb840feb4,101449399,0,0x0,8
tick,0x7ffdb840feb4,101465410,0,0x0,8
tick,0x7ffdb840feb4,101481405,0,0x0,8
tick,0x7ffdb840feb4,101497405,0,0x0,8
tick,0x7ffdb840feb4,101513394,0,0x0,8
tick,0x7ffdb840feb4,101528581,0,0x0,8
tick,0x7ffdb840feb4,101543633,0,0x0,8
tick,0x7ffdb840feb4,101558904,0,0x0,8
tick,0x7ffdb840feb4,101574113,0,0x0,8
tick,0x7ffdb840feb4,101590176,0,0x0,8
tick,0x7ffdb840feb4,101605675,0,0x0,8
tick,0x7ffdb840feb4,101621173,0,0x0,8
tick,0x7ffdb840feb4,101636292,0,0x0,8
tick,0x7ffdb840feb4,101651290,0,0x0,8
tick,0x7ffdb840feb4,101667331,0,0x0,8
tick,0x7ffdb840feb4,101682939,0,0x0,8
tick,0x7ffdb840feb4,101698951,0,0x0,8
tick,0x7ffdb840feb4,101714948,0,0x0,8
tick,0x7ffdb840feb4,101730948,0,0x0,8
tick,0x7ffdb840feb4,101746957,0,0x0,8
tick,0x7ffdb840feb4,101762310,0,0x0,8
tick,0x7ffdb840feb4,101778126,0,0x0,8
tick,0x7ffdb840feb4,101793646,0,0x0,8
tick,0x7ffdb840feb4,101809346,0,0x0,8
tick,0x7ffdb840feb4,101825147,0,0x0,8
tick,0x7ffdb840feb4,101840601,0,0x0,8
tick,0x7ffdb840feb4,101856419,0,0x0,8
tick,0x7ffdb840feb4,101872133,0,0x0,8
tick,0x7ffdb840feb4,101887916,0,0x0,8
tick,0x7ffdb840feb4,101903442,0,0x0,8
tick,0x7ffdb840feb4,101919885,0,0x0,8
tick,0x7ffdb840feb4,101935416,0,0x0,8
tick,0x7ffdb840feb4,101951556,0,0x0,8
tick,0x7ffdb840feb4,101967575,0,0x0,8
tick,0x7ffdb840feb4,101983179,0,0x0,8
tick,0x7ffdb840feb4,101998246,0,0x0,8
tick,0x7ffdb840feb4,102013747,0,0x0,8
tick,0x7ffdb840feb4,102029362,0,0x0,8
tick,0x7ffdb840feb4,102045356,0,0x0,8
tick,0x7ffdb840feb4,102061502,0,0x0,8
tick,0x7ffdb840feb4,102077523,0,0x0,8
tick,0x7ffdb840feb4,102092805,0,0x0,8
tick,0x7ffdb840feb4,102108018,0,0x0,8
tick,0x7ffdb840feb4,102123519,0,0x0,8
tick,0x7ffdb840feb4,102139403,0,0x0,8
tick,0x7ffdb840feb4,102155382,0,0x0,8
tick,0x7ffdb840feb4,102170709,0,0x0,8
tick,0x7ffdb840feb4,102185588,0,0x0,8
tick,0x7ffdb840feb4,102201076,0,0x0,8
tick,0x7ffdb840feb4,102216405,0,0x0,8
tick,0x7ffdb840feb4,102231866,0,0x0,8
tick,0x7ffdb840feb4,102247149,0,0x0,8
tick,0x7ffdb840feb4,102262395,0,0x0,8
tick,0x7ffdb840feb4,102278570,0,0x0,8
tick,0x7ffdb840feb4,102294654,0,0x0,8
tick,0x7ffdb840feb4,102310457,0,0x0,8
tick,0x7ffdb840feb4,102326544,0,0x0,8
tick,0x7ffdb840feb4,102342865,0,0x0,8
tick,0x7ffdb840feb4,102358947,0,0x0,8
tick,0x7ffdb840feb4,102374736,0,0x0,8
tick,0x7ffdb840feb4,102390331,0,0x0,8
tick,0x7ffdb840feb4,102405652,0,0x0,8
tick,0x7ffdb840feb4,102420821,0,0x0,8
tick,0x7ffdb840feb4,102436361,0,0x0,8
tick,0x7ffdb840feb4,102451670,0,0x0,8
tick,0x7ffdb840feb4,102467060,0,0x0,8
tick,0x7ffdb840feb4,102482315,0,0x0,8
tick,0x7ffdb840feb4,102497574,0,0x0,8
tick,0x7ffdb840feb4,102513511,0,0x0,8
tick,0x7ffdb840feb4,102528598,0,0x0,8
tick,0x7ffdb840feb4,102543663,0,0x0,8
tick,0x7ffdb840feb4,102558939,0,0x0,8
tick,0x7ffdb840feb4,102574221,0,0x0,8
tick,0x7ffdb840feb4,102589207,0,0x0,8
tick,0x7ffdb840feb4,102605239,0,0x0,8
tick,0x7ffdb840feb4,102620848,0,0x0,8
tick,0x7ffdb840feb4,102636015,0,0x0,8
tick,0x7ffdb840feb4,102652146,0,0x0,8
tick,0x7ffdb840feb4,102667691,0,0x0,8
tick,0x7ffdb840feb4,102683137,0,0x0,8
tick,0x7ffdb840feb4,102698073,0,0x0,8
tick,0x7ffdb840feb4,102714223,0,0x0,8
tick,0x7ffdb840feb4,102729954,0,0x0,8
tick,0x7ffdb840feb4,102745068,0,0x0,8
tick,0x7ffdb840feb4,102761061,0,0x0,8
tick,0x7ffdb840feb4,102776765,0,0x0,8
tick,0x7ffdb840feb4,102792922,0,0x0,8
tick,0x7ffdb840feb4,102808586,0,0x0,8
tick,0x7ffdb840feb4,102825001,0,0x0,8
tick,0x7ffdb840feb4,102840606,0,0x0,8
tick,0x7ffdb840feb4,102856918,0,0x0,8
tick,0x7ffdb840feb4,102873097,0,0x0,8
tick,0x7ffdb840feb4,102888709,0,0x0,8
tick,0x7ffdb840feb4,102904248,0,0x0,8
tick,0x7ffdb840feb4,102920146,0,0x0,8
tick,0x7ffdb840feb4,102936241,0,0x0,8
tick,0x7ffdb840feb4,102951624,0,0x0,8
tick,0x7ffdb840feb4,102967579,0,0x0,8
tick,0x7ffdb840feb4,102983593,0,0x0,8
tick,0x7ffdb840feb4,102999201,0,0x0,8
tick,0x7ffdb840feb4,103014569,0,0x0,8
tick,0x7ffdb840feb4,103030454,0,0x0,8
tick,0x7ffdb840feb4,103046639,0,0x0,8
tick,0x7ffdb840feb4,103062430,0,0x0,8
tick,0x7ffdb840feb4,103078420,0,0x0,8
tick,0x7ffdb840feb4,103093893,0,0x0,8
tick,0x7ffdb840feb4,103109974,0,0x0,8
tick,0x7ffdb840feb4,103125467,0,0x0,8
tick,0x7ffdb840feb4,103141213,0,0x0,8
tick,0x7ffdb840feb4,103156391,0,0x0,8
tick,0x7ffdb840feb4,103171538,0,0x0,8
tick,0x7ffdb840feb4,103187046,0,0x0,8
tick,0x7ffdb840feb4,103202735,0,0x0,8
tick,0x7ffdb840feb4,103218465,0,0x0,8
tick,0x7ffdb840feb4,103233983,0,0x0,8
tick,0x7ffdb840feb4,103249168,0,0x0,8
tick,0x7ffdb840feb4,103264406,0,0x0,8
tick,0x7ffdb840feb4,103280364,0,0x0,8
tick,0x7ffdb840feb4,103296224,0,0x0,8
tick,0x7ffdb840feb4,103311778,0,0x0,8
tick,0x7ffdb840feb4,103327652,0,0x0,8
tick,0x7ffdb840feb4,103343661,0,0x0,8
tick,0x7ffdb840feb4,103359250,0,0x0,8
tick,0x7ffdb840feb4,103374659,0,0x0,8
tick,0x7ffdb840feb4,103389833,0,0x0,8
tick,0x7ffdb840feb4,103405692,0,0x0,8
tick,0x7ffdb840feb4,103420782,0,0x0,8
tick,0x7ffdb840feb4,103436967,0,0x0,8
tick,0x7ffdb840feb4,103452845,0,0x0,8
tick,0x7ffdb840feb4,103468589,0,0x0,8
tick,0x7ffdb840feb4,103483570,0,0x0,8
tick,0x7ffdb840feb4,103498695,0,0x0,8
tick,0x7ffdb840feb4,103514786,0,0x0,8
tick,0x7ffdb840feb4,103530460,0,0x0,8
tick,0x7ffdb840feb4,103545853,0,0x0,8
tick,0x7ffdb840feb4,103561467,0,0x0,8
tick,0x7ffdb840feb4,103576729,0,0x0,8
tick,0x7ffdb840feb4,103592136,0,0x0,8
tick,0x7ffdb840feb4,103608013,0,0x0,8
tick,0x7ffdb840feb4,103623286,0,0x0,8
tick,0x7ffdb840feb4,103638419,0,0x0,8
tick,0x7ffdb840feb4,103653602,0,0x0,8
tick,0x7ffdb840feb4,103669105,0,0x0,8
tick,0x7ffdb840feb4,103684462,0,0x0,8
tick,0x7ffdb840feb4,103699997,0,0x0,8
tick,0x7ffdb840feb4,103715561,0,0x0,8
tick,0x7ffdb840feb4,103731292,0,0x0,8
tick,0x7ffdb840feb4,103747102,0,0x0,8
tick,0x7ffdb840feb4,103762934,0,0x0,8
tick,0x7ffdb840feb4,103778575,0,0x0,8
tick,0x7ffdb840feb4,103794622,0,0x0,8
tick,0x7ffdb840feb4,103809727,0,0x0,8
tick,0x7ffdb840feb4,103824961,0,0x0,8
tick,0x7ffdb840feb4,103840838,0,0x0,8
tick,0x7ffdb840feb4,103856862,0,0x0,8
tick,0x7ffdb840feb4,103871866,0,0x0,8
tick,0x7ffdb840feb4,103887319,0,0x0,8
tick,0x7ffdb840feb4,103902730,0,0x0,8
tick,0x7ffdb840feb4,103918210,0,0x0,8
tick,0x7ffdb840feb4,103934069,0,0x0,8
tick,0x7ffdb840feb4,103949702,0,0x0,8
tick,0x7ffdb840feb4,103965515,0,0x0,8
tick,0x7ffdb840feb4,103980928,0,0x0,8
tick,0x7ffdb840feb4,103996254,0,0x0,8
tick,0x7ffdb840feb4,104011942,0,0x0,8
tick,0x7ffdb840feb4,104027496,0,0x0,8
tick,0x7ffdb840feb4,104042927,0,0x0,8
tick,0x7ffdb840feb4,104058402,0,0x0,8
tick,0x7ffdb840feb4,104074404,0,0x0,8
tick,0x7ffdb840feb4,104090297,0,0x0,8
tick,0x7ffdb840feb4,104106279,0,0x0,8
tick,0x7ffdb840feb4,104122108,0,0x0,8
tick,0x7ffdb840feb4,104137321,0,0x0,8
tick,0x7ffdb840feb4,104152662,0,0x0,8
tick,0x7ffdb840feb4,104168712,0,0x0,8
tick,0x7ffdb840feb4,104184849,0,0x0,8
tick,0x7ffdb840feb4,104199720,0,0x0,8
tick,0x7ffdb840feb4,104214970,0,0x0,8
tick,0x7ffdb840feb4,104230635,0,0x0,8
tick,0x7ffdb840feb4,104246222,0,0x0,8
tick,0x7ffdb840feb4,104260747,0,0x0,8
tick,0x7ffdb840feb4,104276519,0,0x0,8
tick,0x7ffdb840feb4,104291861,0,0x0,8
tick,0x7ffdb840feb4,104306884,0,0x0,8
tick,0x7ffdb840feb4,104323052,0,0x0,8
tick,0x7ffdb840feb4,104338649,0,0x0,8
tick,0x7ffdb840feb4,104354541,0,0x0,8
tick,0x7ffdb840feb4,104369617,0,0x0,8
tick,0x7ffdb840feb4,104384638,0,0x0,8
tick,0x7ffdb840feb4,104399764,0,0x0,8
tick,0x7ffdb840feb4,104415917,0,0x0,8
tick,0x7ffdb840feb4,104430825,0,0x0,8
tick,0x7ffdb840feb4,104446999,0,0x0,8
tick,0x7ffdb840feb4,104462476,0,0x0,8
tick,0x7ffdb840feb4,104477741,0,0x0,8
tick,0x7ffdb840feb4,104493520,0,0x0,8
tick,0x7ffdb840feb4,104509644,0,0x0,8
tick,0x7ffdb840feb4,104524835,0,0x0,8
tick,0x7ffdb840feb4,104540550,0,0x0,8
tick,0x7ffdb840feb4,104556289,0,0x0,8
tick,0x7ffdb840feb4,104571711,0,0x0,8
tick,0x7ffdb840feb4,104587287,0,0x0,8
tick,0x7ffdb840feb4,104603184,0,0x0,8
tick,0x7ffdb840feb4,104619229,0,0x0,8
tick,0x7ffdb840feb4,104634644,0,0x0,8
tick,0x7ffdb840feb4,104650008,0,0x0,8
tick,0x7ffdb840feb4,104665685,0,0x0,8
tick,0x7ffdb840feb4,104680987,0,0x0,8
tick,0x7ffdb840feb4,104696139,0,0x0,8
tick,0x7ffdb840feb4,104711265,0,0x0,8
tick,0x7ffdb840feb4,104726774,0,0x0,8
tick,0x7ffdb840feb4,104742783,0,0x0,8
tick,0x7ffdb840feb4,104758632,0,0x0,8
tick,0x7ffdb840feb4,104774716,0,0x0,8
tick,0x7ffdb840feb4,104789854,0,0x0,8
tick,0x7ffdb840feb4,104804873,0,0x0,8
tick,0x7ffdb840feb4,104820780,0,0x0,8
tick,0x7ffdb840feb4,104837035,0,0x0,8
tick,0x7ffdb840feb4,104853094,0,0x0,8
tick,0x7ffdb840feb4,104868574,0,0x0,8
tick,0x7ffdb840feb4,104883542,0,0x0,8
tick,0x7ffdb840feb4,104898772,0,0x0,8
tick,0x7ffdb840feb4,104914779,0,0x0,8
tick,0x7ffdb840feb4,104930781,0,0x0,8
tick,0x7ffdb840feb4,104946810,0,0x0,8
tick,0x7ffdb840feb4,104962817,0,0x0,8
tick,0x7ffdb840feb4,104978359,0,0x0,8
tick,0x7ffdb840feb4,104993776,0,0x0,8
tick,0x7ffdb840feb4,105008903,0,0x0,8
tick,0x7ffdb840feb4,105024999,0,0x0,8
tick,0x7ffdb840feb4,105040881,0,0x0,8
tick,0x7ffdb840feb4,105057048,0,0x0,8
tick,0x7ffdb840feb4,105072956,0,0x0,8
tick,0x7ffdb840feb4,105088909,0,0x0,8
tick,0x7ffdb840feb4,105104915,0,0x0,8
tick,0x7ffdb840feb4,105120248,0,0x0,8
tick,0x7ffdb840feb4,105136329,0,0x0,8
tick,0x7ffdb840feb4,105151512,0,0x0,8
tick,0x7ffdb840feb4,105167641,0,0x0,8
tick,0x7ffdb840feb4,105183526,0,0x0,8
tick,0x7ffdb840feb4,105199023,0,0x0,8
tick,0x7ffdb840feb4,105214264,0,0x0,8
tick,0x7ffdb840feb4,105229783,0,0x0,8
tick,0x7ffdb840feb4,105245724,0,0x0,8
tick,0x7ffdb840feb4,105261092,0,0x0,8
tick,0x7ffdb840feb4,105276874,0,0x0,8
tick,0x7ffdb840feb4,105292839,0,0x0,8
tick,0x7ffdb840feb4,105308792,0,0x0,8
tick,0x7ffdb840feb4,105323931,0,0x0,8
tick,0x7ffdb840feb4,105338979,0,0x0,8
tick,0x7ffdb840feb4,105354655,0,0x0,8
tick,0x7ffdb840feb4,105369540,0,0x0,8
tick,0x7ffdb840feb4,105385550,0,0x0,8
tick,0x7ffdb840feb4,105401564,0,0x0,8
tick,0x7ffdb840feb4,105416974,0,0x0,8
tick,0x7ffdb840feb4,105432080,0,0x0,8
tick,0x7ffdb840feb4,105448023,0,0x0,8
tick,0x7ffdb840feb4,105463131,0,0x0,8
tick,0x7ffdb840feb4,105478196,0,0x0,8
tick,0x7ffdb840feb4,105493224,0,0x0,8
tick,0x7ffdb840feb4,105509347,0,0x0,8
tick,0x7ffdb840feb4,105524780,0,0x0,8
tick,0x7ffdb840feb4,105540436,0,0x0,8
tick,0x7ffdb840feb4,105555839,0,0x0,8
tick,0x7ffdb840feb4,105571807,0,0x0,8
tick,0x7ffdb840feb4,105587538,0,0x0,8
tick,0x7ffdb840feb4,105603351,0,0x0,8
tick,0x7ffdb840feb4,105619325,0,0x0,8
tick,0x7ffdb840feb4,105635038,0,0x0,8
tick,0x7ffdb840feb4,105651171,0,0x0,8
tick,0x7ffdb840feb4,105666800,0,0x0,8
tick,0x7ffdb840feb4,105682116,0,0x0,8
tick,0x7ffdb840feb4,105697004,0,0x0,8
tick,0x7ffdb840feb4,105712590,0,0x0,8
tick,0x7ffdb840feb4,105727874,0,0x0,8
tick,0x7ffdb840feb4,105743451,0,0x0,8
tick,0x7ffdb840feb4,105759103,0,0x0,8
tick,0x7ffdb840feb4,105774650,0,0x0,8
tick,0x7ffdb840feb4,105790194,0,0x0,8
tick,0x7ffdb840feb4,105805844,0,0x0,8
tick,0x7ffdb840feb4,105821226,0,0x0,8
tick,0x7ffdb840feb4,105837046,0,0x0,8
tick,0x7ffdb840feb4,105853300,0,0x0,8
tick,0x7ffdb840feb4,105868829,0,0x0,8
tick,0x7ffdb840feb4,105884370,0,0x0,8
tick,0x7ffdb840feb4,105899901,0,0x0,8
tick,0x7ffdb840feb4,105915775,0,0x0,8
tick,0x7ffdb840feb4,105931725,0,0x0,8
tick,0x7ffdb840feb4,105947585,0,0x0,8
tick,0x7ffdb840feb4,105963122,0,0x0,8
tick,0x7ffdb840feb4,105978656,0,0x0,8
tick,0x7ffdb840feb4,105993942,0,0x0,8
tick,0x7ffdb840feb4,106009619,0,0x0,8
tick,0x7ffdb840feb4,106024640,0,0x0,8
tick,0x7ffdb840feb4,106040462,0,0x0,8
tick,0x7ffdb840feb4,106056264,0,0x0,8
tick,0x7ffdb840feb4,106072527,0,0x0,8
tick,0x7ffdb840feb4,106088670,0,0x0,8
tick,0x7ffdb840feb4,106104665,0,0x0,8
tick,0x7ffdb840feb4,106120639,0,0x0,8
tick,0x7ffdb840feb4,106136504,0,0x0,8
tick,0x7ffdb840feb4,106151734,0,0x0,8
tick,0x7ffdb840feb4,106167741,0,0x0,8
tick,0x7ffdb840feb4,106182774,0,0x0,8
tick,0x7ffdb840feb4,106198219,0,0x0,8
tick,0x7ffdb840feb4,106213693,0,0x0,8
tick,0x7ffdb840feb4,106228641,0,0x0,8
tick,0x7ffdb840feb4,106244893,0,0x0,8
tick,0x7ffdb840feb4,106260735,0,0x0,8
tick,0x7ffdb840feb4,106276905,0,0x0,8
tick,0x7ffdb840feb4,106292650,0,0x0,8
tick,0x7ffdb840feb4,106307749,0,0x0,8
tick,0x7ffdb840feb4,106322978,0,0x0,8
tick,0x7ffdb840feb4,106338472,0,0x0,8
tick,0x7ffdb840feb4,106353767,0,0x0,8
tick,0x7ffdb840feb4,106369681,0,0x0,8
tick,0x7ffdb840feb4,106384740,0,0x0,8
tick,0x7ffdb840feb4,106400480,0,0x0,8
tick,0x7ffdb840feb4,106415816,0,0x0,8
tick,0x7ffdb840feb4,106430534,0,0x0,8
tick,0x7ffdb840feb4,106446030,0,0x0,8
tick,0x7ffdb840feb4,106461747,0,0x0,8
tick,0x7ffdb840feb4,106476749,0,0x0,8
tick,0x7ffdb840feb4,106492917,0,0x0,8
tick,0x7ffdb840feb4,106508896,0,0x0,8
tick,0x7ffdb840feb4,106524331,0,0x0,8
tick,0x7ffdb840feb4,106539927,0,0x0,8
tick,0x7ffdb840feb4,106555059,0,0x0,8
tick,0x7ffdb840feb4,106570639,0,0x0,8
tick,0x7ffdb840feb4,106586701,0,0x0,8
tick,0x7ffdb840feb4,106602800,0,0x0,8
tick,0x7ffdb840feb4,106618631,0,0x0,8
tick,0x7ffdb840feb4,106634716,0,0x0,8
tick,0x7ffdb840feb4,106649720,0,0x0,8
tick,0x7ffdb840feb4,106665277,0,0x0,8
tick,0x7ffdb840feb4,106681214,0,0x0,8
tick,0x7ffdb840feb4,106697242,0,0x0,8
tick,0x7ffdb840feb4,106713287,0,0x0,8
tick,0x7ffdb840feb4,106728608,0,0x0,8
tick,0x7ffdb840feb4,106744201,0,0x0,8
tick,0x7ffdb840feb4,106759543,0,0x0,8
tick,0x7ffdb840feb4,106774879,0,0x0,8
tick,0x7ffdb840feb4,106790173,0,0x0,8
tick,0x7ffdb840feb4,106805113,0,0x0,8
tick,0x7ffdb840feb4,106821137,0,0x0,8
tick,0x7ffdb840feb4,106837248,0,0x0,8
tick,0x7ffdb840feb4,106852756,0,0x0,8
tick,0x7ffdb840feb4,106868965,0,0x0,8
tick,0x7ffdb840feb4,106884266,0,0x0,8
tick,0x7ffdb840feb4,106899376,0,0x0,8
tick,0x7ffdb840feb4,106914933,0,0x0,8
tick,0x7ffdb840feb4,106931154,0,0x0,8
tick,0x7ffdb840feb4,106945897,0,0x0,8
tick,0x7ffdb840feb4,106961193,0,0x0,8
tick,0x7ffdb840feb4,106976621,0,0x0,8
tick,0x7ffdb840feb4,106992196,0,0x0,8
tick,0x7ffdb840feb4,107007697,0,0x0,8
tick,0x7ffdb840feb4,107022543,0,0x0,8
tick,0x7ffdb840feb4,107038058,0,0x0,8
tick,0x7ffdb840feb4,107053691,0,0x0,8
tick,0x7ffdb840feb4,107068724,0,0x0,8
tick,0x7ffdb840feb4,107083778,0,0x0,8
tick,0x7ffdb840feb4,107099916,0,0x0,8
tick,0x7ffdb840feb4,107114762,0,0x0,8
tick,0x7ffdb840feb4,107130757,0,0x0,8
tick,0x7ffdb840feb4,107146688,0,0x0,8
tick,0x7ffdb840feb4,107161725,0,0x0,8
tick,0x7ffdb840feb4,107177716,0,0x0,8
tick,0x7ffdb840feb4,107192608,0,0x0,8
tick,0x7ffdb840feb4,107207790,0,0x0,8
tick,0x7ffdb840feb4,107223016,0,0x0,8
tick,0x7ffdb840feb4,107238137,0,0x0,8
tick,0x7ffdb840feb4,107253725,0,0x0,8
tick,0x7ffdb840feb4,107269594,0,0x0,8
tick,0x7ffdb840feb4,107285698,0,0x0,8
tick,0x7ffdb840feb4,107299969,0,0x0,8
tick,0x7ffdb840feb4,107315290,0,0x0,8
tick,0x7ffdb840feb4,107331103,0,0x0,8
tick,0x7ffdb840feb4,107346628,0,0x0,8
tick,0x7ffdb840feb4,107361524,0,0x0,8
tick,0x7ffdb840feb4,107377532,0,0x0,8
tick,0x7ffdb840feb4,107392921,0,0x0,8
tick,0x7ffdb840feb4,107407964,0,0x0,8
tick,0x7ffdb840feb4,107423960,0,0x0,8
tick,0x7ffdb840feb4,107439360,0,0x0,8
tick,0x7ffdb840feb4,107455015,0,0x0,8
tick,0x7ffdb840feb4,107470757,0,0x0,8
tick,0x7ffdb840feb4,107485658,0,0x0,8
tick,0x7ffdb840feb4,107501043,0,0x0,8
tick,0x7ffdb840feb4,107516534,0,0x0,8
tick,0x7ffdb840feb4,107532894,0,0x0,8
tick,0x7ffdb840feb4,107548703,0,0x0,8
tick,0x7ffdb840feb4,107565043,0,0x0,8
tick,0x7ffdb840feb4,107580546,0,0x0,8
tick,0x7ffdb840feb4,107596587,0,0x0,8
tick,0x7ffdb840feb4,107612152,0,0x0,8
tick,0x7ffdb840feb4,107627730,0,0x0,8
tick,0x7ffdb840feb4,107643179,0,0x0,8
tick,0x7ffdb840feb4,107659193,0,0x0,8
tick,0x7ffdb840feb4,107674858,0,0x0,8
tick,0x7ffdb840feb4,107690949,0,0x0,8
tick,0x7ffdb840feb4,107706931,0,0x0,8
tick,0x7ffdb840feb4,107722485,0,0x0,8
tick,0x7ffdb840feb4,107738344,0,0x0,8
tick,0x7ffdb840feb4,107754426,0,0x0,8
tick,0x7ffdb840feb4,107770135,0,0x0,8
tick,0x7ffdb840feb4,107785708,0,0x0,8
tick,0x7ffdb840feb4,107801729,0,0x0,8
tick,0x7ffdb840feb4,107817178,0,0x0,8
tick,0x7ffdb840feb4,107832901,0,0x0,8
tick,0x7ffdb840feb4,107849046,0,0x0,8
tick,0x7ffdb840feb4,107864687,0,0x0,8
tick,0x7ffdb840feb4,107881112,0,0x0,8
tick,0x7ffdb840feb4,107896862,0,0x0,8
tick,0x7ffdb840feb4,107912462,0,0x0,8
tick,0x7ffdb840feb4,107927905,0,0x0,8
tick,0x7ffdb840feb4,107942873,0,0x0,8
tick,0x7ffdb840feb4,107959035,0,0x0,8
tick,0x7ffdb840feb4,107974656,0,0x0,8
tick,0x7ffdb840feb4,107990191,0,0x0,8
tick,0x7ffdb840feb4,108005310,0,0x0,8
tick,0x7ffdb840feb4,108021598,0,0x0,8
tick,0x7ffdb840feb4,108037423,0,0x0,8
tick,0x7ffdb840feb4,108053234,0,0x0,8
tick,0x7ffdb840feb4,108068409,0,0x0,8
tick,0x7ffdb840feb4,108083676,0,0x0,8
tick,0x7ffdb840feb4,108098938,0,0x0,8
tick,0x7ffdb840feb4,108114954,0,0x0,8
tick,0x7ffdb840feb4,108129784,0,0x0,8
tick,0x7ffdb840feb4,108144943,0,0x0,8
tick,0x7ffdb840feb4,108160762,0,0x0,8
tick,0x7ffdb840feb4,108176582,0,0x0,8
tick,0x7ffdb840feb4,108192332,0,0x0,8
tick,0x7ffdb840feb4,108207529,0,0x0,8
tick,0x7ffdb840feb4,108222522,0,0x0,8
tick,0x7ffdb840feb4,108237744,0,0x0,8
tick,0x7ffdb840feb4,108253123,0,0x0,8
tick,0x7ffdb840feb4,108268430,0,0x0,8
tick,0x7ffdb840feb4,108283764,0,0x0,8
tick,0x7ffdb840feb4,108298898,0,0x0,8
tick,0x7ffdb840feb4,108314508,0,0x0,8
tick,0x7ffdb840feb4,108329843,0,0x0,8
tick,0x7ffdb840feb4,108345685,0,0x0,8
tick,0x7ffdb840feb4,108360028,0,0x0,8
tick,0x7ffdb840feb4,108375755,0,0x0,8
tick,0x7ffdb840feb4,108391294,0,0x0,8
tick,0x7ffdb840feb4,108407090,0,0x0,8
tick,0x7ffdb840feb4,108422911,0,0x0,8
tick,0x7ffdb840feb4,108437937,0,0x0,8
tick,0x7ffdb840feb4,108453385,0,0x0,8
tick,0x7ffdb840feb4,108469412,0,0x0,8
tick,0x7ffdb840feb4,108484732,0,0x0,8
tick,0x7ffdb840feb4,108500058,0,0x0,8
tick,0x7ffdb840feb4,108515739,0,0x0,8
tick,0x7ffdb840feb4,108531834,0,0x0,8
tick,0x7ffdb840feb4,108547245,0,0x0,8
tick,0x7ffdb840feb4,108563268,0,0x0,8
tick,0x7ffdb840feb4,108579105,0,0x0,8
tick,0x7ffdb840feb4,108594563,0,0x0,8
tick,0x7ffdb840feb4,108610301,0,0x0,8
tick,0x7ffdb840feb4,108625003,0,0x0,8
tick,0x7ffdb840feb4,108641233,0,0x0,8
tick,0x7ffdb840feb4,108656609,0,0x0,8
tick,0x7ffdb840feb4,108672195,0,0x0,8
tick,0x7ffdb840feb4,108687442,0,0x0,8
tick,0x7ffdb840feb4,108702374,0,0x0,8
tick,0x7ffdb840feb4,108718312,0,0x0,8
tick,0x7ffdb840feb4,108733007,0,0x0,8
tick,0x7ffdb840feb4,108748348,0,0x0,8
tick,0x7ffdb840feb4,108763546,0,0x0,8
tick,0x7ffdb840feb4,108779554,0,0x0,8
tick,0x7ffdb840feb4,108794375,0,0x0,8
tick,0x7ffdb840feb4,108809672,0,0x0,8
tick,0x7ffdb840feb4,108825030,0,0x0,8
tick,0x7ffdb840feb4,108840351,0,0x0,8
tick,0x7ffdb840feb4,108855878,0,0x0,8
tick,0x7ffdb840feb4,108871136,0,0x0,8
tick,0x7ffdb840feb4,108886362,0,0x0,8
tick,0x7ffdb840feb4,108902142,0,0x0,8
tick,0x7ffdb840feb4,108917446,0,0x0,8
tick,0x7ffdb840feb4,108933258,0,0x0,8
tick,0x7ffdb840feb4,108948758,0,0x0,8
tick,0x7ffdb840feb4,108963902,0,0x0,8
tick,0x7ffdb840feb4,108979516,0,0x0,8
tick,0x7ffdb840feb4,108994412,0,0x0,8
tick,0x7ffdb840feb4,109010453,0,0x0,8
tick,0x7ffdb840feb4,109025609,0,0x0,8
tick,0x7ffdb840feb4,109041399,0,0x0,8
tick,0x7ffdb840feb4,109057411,0,0x0,8
tick,0x7ffdb840feb4,109073484,0,0x0,8
tick,0x7ffdb840feb4,109088620,0,0x0,8
tick,0x7ffdb840feb4,109103656,0,0x0,8
tick,0x7ffdb840feb4,109118998,0,0x0,8
tick,0x7ffdb840feb4,109134819,0,0x0,8
tick,0x7ffdb840feb4,109149965,0,0x0,8
tick,0x7ffdb840feb4,109165834,0,0x0,8
tick,0x7ffdb840feb4,109181511,0,0x0,8
tick,0x7ffdb840feb4,109197282,0,0x0,8
tick,0x7ffdb840feb4,109213520,0,0x0,8
tick,0x7ffdb840feb4,109228689,0,0x0,8
tick,0x7ffdb840feb4,109244920,0,0x0,8
tick,0x7ffdb840feb4,109260638,0,0x0,8
tick,0x7ffdb840feb4,109275707,0,0x0,8
tick,0x7ffdb840feb4,109291146,0,0x0,8
tick,0x7ffdb840feb4,109306439,0,0x0,8
tick,0x7ffdb840feb4,109322322,0,0x0,8
tick,0x7ffdb840feb4,109337517,0,0x0,8
tick,0x7ffdb840feb4,109353685,0,0x0,8
tick,0x7ffdb840feb4,109369394,0,0x0,8
tick,0x7ffdb840feb4,109384519,0,0x0,8
tick,0x7ffdb840feb4,109399796,0,0x0,8
tick,0x7ffdb840feb4,109415195,0,0x0,8
tick,0x7ffdb840feb4,109430712,0,0x0,8
tick,0x7ffdb840feb4,109446336,0,0x0,8
tick,0x7ffdb840feb4,109461746,0,0x0,8
tick,0x7ffdb840feb4,109476938,0,0x0,8
tick,0x7ffdb840feb4,109492672,0,0x0,8
tick,0x7ffdb840feb4,109508143,0,0x0,8
tick,0x7ffdb840feb4,109523856,0,0x0,8
tick,0x7ffdb840feb4,109538491,0,0x0,8
tick,0x7ffdb840feb4,109553806,0,0x0,8
tick,0x7ffdb840feb4,109569686,0,0x0,8
tick,0x7ffdb840feb4,109585637,0,0x0,8
tick,0x7ffdb840feb4,109601075,0,0x0,8
tick,0x7ffdb840feb4,109616535,0,0x0,8
tick,0x7ffdb840feb4,109631792,0,0x0,8
tick,0x7ffdb840feb4,109647135,0,0x0,8
tick,0x7ffdb840feb4,109662497,0,0x0,8
tick,0x7ffdb840feb4,109678484,0,0x0,8
tick,0x7ffdb840feb4,109694344,0,0x0,8
tick,0x7ffdb840feb4,109710173,0,0x0,8
tick,0x7ffdb840feb4,109725513,0,0x0,8
tick,0x7ffdb840feb4,109740798,0,0x0,8
tick,0x7ffdb840feb4,109756733,0,0x0,8
tick,0x7ffdb840feb4,109772835,0,0x0,8
tick,0x7ffdb840feb4,109788336,0,0x0,8
tick,0x7ffdb840feb4,109804221,0,0x0,8
tick,0x7ffdb840feb4,109819360,0,0x0,8
tick,0x7ffdb840feb4,109834800,0,0x0,8
tick,0x7ffdb840feb4,109849744,0,0x0,8
tick,0x7ffdb840feb4,109865757,0,0x0,8
tick,0x7ffdb840feb4,109880686,0,0x0,8
tick,0x7ffdb840feb4,109896011,0,0x0,8
tick,0x7ffdb840feb4,109911252,0,0x0,8
tick,0x7ffdb840feb4,109926774,0,0x0,8
tick,0x7ffdb840feb4,109942062,0,0x0,8
tick,0x7ffdb840feb4,109957609,0,0x0,8
tick,0x7ffdb840feb4,109972841,0,0x0,8
tick,0x7ffdb840feb4,109988389,0,0x0,8
tick,0x7ffdb840feb4,110003708,0,0x0,8
tick,0x7ffdb840feb4,110018756,0,0x0,8
tick,0x7ffdb840feb4,110034084,0,0x0,8
tick,0x7ffdb840feb4,110049915,0,0x0,8
tick,0x7ffdb840feb4,110065348,0,0x0,8
tick,0x7ffdb840feb4,110080781,0,0x0,8
tick,0x7ffdb840feb4,110096802,0,0x0,8
tick,0x7ffdb840feb4,110112726,0,0x0,8
tick,0x7ffdb840feb4,110128836,0,0x0,8
tick,0x7ffdb840feb4,110144842,0,0x0,8
tick,0x7ffdb840feb4,110161069,0,0x0,8
tick,0x7ffdb840feb4,110176321,0,0x0,8
tick,0x7ffdb840feb4,110191768,0,0x0,8
tick,0x7ffdb840feb4,110206916,0,0x0,8
tick,0x7ffdb840feb4,110222918,0,0x0,8
tick,0x7ffdb840feb4,110238766,0,0x0,8
tick,0x7ffdb840feb4,110254284,0,0x0,8
tick,0x7ffdb840feb4,110269549,0,0x0,8
tick,0x7ffdb840feb4,110284598,0,0x0,8
tick,0x7ffdb840feb4,110299615,0,0x0,8
tick,0x7ffdb840feb4,110315698,0,0x0,8
tick,0x7ffdb840feb4,110330798,0,0x0,8
tick,0x7ffdb840feb4,110346584,0,0x0,8
tick,0x7ffdb840feb4,110361921,0,0x0,8
tick,0x7ffdb840feb4,110377124,0,0x0,8
tick,0x7ffdb840feb4,110392940,0,0x0,8
tick,0x7ffdb840feb4,110408220,0,0x0,8
tick,0x7ffdb840feb4,110424047,0,0x0,8
tick,0x7ffdb840feb4,110438952,0,0x0,8
tick,0x7ffdb840feb4,110454956,0,0x0,8
tick,0x7ffdb840feb4,110470315,0,0x0,8
tick,0x7ffdb840feb4,110485980,0,0x0,8
tick,0x7ffdb840feb4,110500853,0,0x0,8
tick,0x7ffdb840feb4,110516648,0,0x0,8
tick,0x7ffdb840feb4,110532318,0,0x0,8
tick,0x7ffdb840feb4,110547158,0,0x0,8
tick,0x7ffdb840feb4,110562358,0,0x0,8
tick,0x7ffdb840feb4,110578558,0,0x0,8
tick,0x7ffdb840feb4,110594026,0,0x0,8
tick,0x7ffdb840feb4,110610056,0,0x0,8
tick,0x7ffdb840feb4,110625803,0,0x0,8
tick,0x7ffdb840feb4,110641823,0,0x0,8
tick,0x7ffdb840feb4,110657561,0,0x0,8
tick,0x7ffdb840feb4,110673008,0,0x0,8
tick,0x7ffdb840feb4,110688604,0,0x0,8
tick,0x7ffdb840feb4,110703366,0,0x0,8
tick,0x7ffdb840feb4,110719009,0,0x0,8
tick,0x7ffdb840feb4,110733841,0,0x0,8
tick,0x7ffdb840feb4,110748998,0,0x0,8
tick,0x7ffdb840feb4,110764258,0,0x0,8
tick,0x7ffdb840feb4,110780181,0,0x0,8
tick,0x7ffdb840feb4,110795719,0,0x0,8
tick,0x7ffdb840feb4,110811801,0,0x0,8
tick,0x7ffdb840feb4,110827441,0,0x0,8
tick,0x7ffdb840feb4,110842045,0,0x0,8
tick,0x7ffdb840feb4,110857872,0,0x0,8
tick,0x7ffdb840feb4,110873021,0,0x0,8
tick,0x7ffdb840feb4,110888701,0,0x0,8
tick,0x7ffdb840feb4,110903345,0,0x0,8
tick,0x7ffdb840feb4,110918990,0,0x0,8
tick,0x7ffdb840feb4,110934001,0,0x0,8
tick,0x7ffdb840feb4,110949577,0,0x0,8
tick,0x7ffdb840feb4,110965119,0,0x0,8
tick,0x7ffdb840feb4,110980618,0,0x0,8
tick,0x7ffdb840feb4,110996622,0,0x0,8
tick,0x7ffdb840feb4,111012028,0,0x0,8
tick,0x7ffdb840feb4,111028186,0,0x0,8
tick,0x7ffdb840feb4,111043732,0,0x0,8
tick,0x7ffdb840feb4,111059114,0,0x0,8
tick,0x7ffdb840feb4,111074283,0,0x0,8
tick,0x7ffdb840feb4,111089741,0,0x0,8
tick,0x7ffdb840feb4,111105494,0,0x0,8
tick,0x7ffdb840feb4,111121230,0,0x0,8
tick,0x7ffdb840feb4,111136068,0,0x0,8
tick,0x7ffdb840feb4,111152071,0,0x0,8
tick,0x7ffdb840feb4,111168211,0,0x0,8
tick,0x7ffdb840feb4,111183881,0,0x0,8
tick,0x7ffdb840feb4,111199234,0,0x0,8
tick,0x7ffdb840feb4,111214809,0,0x0,8
tick,0x7ffdb840feb4,111229785,0,0x0,8
tick,0x7ffdb840feb4,111245864,0,0x0,8
tick,0x7ffdb840feb4,111261260,0,0x0,8
tick,0x7ffdb840feb4,111277313,0,0x0,8
tick,0x7ffdb840feb4,111292594,0,0x0,8
tick,0x7ffdb840feb4,111307873,0,0x0,8
tick,0x7ffdb840feb4,111323026,0,0x0,8
tick,0x7ffdb840feb4,111338329,0,0x0,8
tick,0x7ffdb840feb4,111354203,0,0x0,8
tick,0x7ffdb840feb4,111370144,0,0x0,8
tick,0x7ffdb840feb4,111386168,0,0x0,8
tick,0x7ffdb840feb4,111401070,0,0x0,8
tick,0x7ffdb840feb4,111416488,0,0x0,8
tick,0x7ffdb840feb4,111431501,0,0x0,8
tick,0x7ffdb840feb4,111447330,0,0x0,8
tick,0x7ffdb840feb4,111462502,0,0x0,8
tick,0x7ffdb840feb4,111478036,0,0x0,8
tick,0x7ffdb840feb4,111493806,0,0x0,8
tick,0x7ffdb840feb4,111508538,0,0x0,8
tick,0x7ffdb840feb4,111523925,0,0x0,8
tick,0x7ffdb840feb4,111539946,0,0x0,8
tick,0x7ffdb840feb4,111555235,0,0x0,8
tick,0x7ffdb840feb4,111571030,0,0x0,8
tick,0x7ffdb840feb4,111585894,0,0x0,8
tick,0x7ffdb840feb4,111601933,0,0x0,8
tick,0x7ffdb840feb4,111617126,0,0x0,8
tick,0x7ffdb840feb4,111633220,0,0x0,8
tick,0x7ffdb840feb4,111649272,0,0x0,8
tick,0x7ffdb840feb4,111665114,0,0x0,8
tick,0x7ffdb840feb4,111680397,0,0x0,8
tick,0x7ffdb840feb4,111695372,0,0x0,8
tick,0x7ffdb840feb4,111711386,0,0x0,8
tick,0x7ffdb840feb4,111727133,0,0x0,8
tick,0x7ffdb840feb4,111742735,0,0x0,8
tick,0x7ffdb840feb4,111758773,0,0x0,8
tick,0x7ffdb840feb4,111774934,0,0x0,8
tick,0x7ffdb840feb4,111790868,0,0x0,8
tick,0x7ffdb840feb4,111806156,0,0x0,8
tick,0x7ffdb840feb4,111821877,0,0x0,8
tick,0x7ffdb840feb4,111837105,0,0x0,8
tick,0x7ffdb840feb4,111852920,0,0x0,8
tick,0x7ffdb840feb4,111868902,0,0x0,8
tick,0x7ffdb840feb4,111884960,0,0x0,8
tick,0x7ffdb840feb4,111900904,0,0x0,8
tick,0x7ffdb840feb4,111916047,0,0x0,8
tick,0x7ffdb840feb4,111931782,0,0x0,8
tick,0x7ffdb840feb4,111947220,0,0x0,8
tick,0x7ffdb840feb4,111962600,0,0x0,8
tick,0x7ffdb840feb4,111977833,0,0x0,8
tick,0x7ffdb840feb4,111993763,0,0x0,8
tick,0x7ffdb840feb4,112009089,0,0x0,8
tick,0x7ffdb840feb4,112025107,0,0x0,8
tick,0x7ffdb840feb4,112040947,0,0x0,8
tick,0x7ffdb840feb4,112056756,0,0x0,8
tick,0x7ffdb840feb4,112071851,0,0x0,8
tick,0x7ffdb840feb4,112087847,0,0x0,8
tick,0x7ffdb840feb4,112103305,0,0x0,8
tick,0x7ffdb840feb4,112118580,0,0x0,8
tick,0x7ffdb840feb4,112134544,0,0x0,8
tick,0x7ffdb840feb4,112149783,0,0x0,8
tick,0x7ffdb840feb4,112165572,0,0x0,8
tick,0x7ffdb840feb4,112180715,0,0x0,8
tick,0x7ffdb840feb4,112196653,0,0x0,8
tick,0x7ffdb840feb4,112211779,0,0x0,8
tick,0x7ffdb840feb4,112226938,0,0x0,8
tick,0x7ffdb840feb4,112242786,0,0x0,8
tick,0x7ffdb840feb4,112258803,0,0x0,8
tick,0x7ffdb840feb4,112274752,0,0x0,8
tick,0x7ffdb840feb4,112290752,0,0x0,8
tick,0x7ffdb840feb4,112306813,0,0x0,8
tick,0x7ffdb840feb4,112322490,0,0x0,8
tick,0x7ffdb840feb4,112337637,0,0x0,8
tick,0x7ffdb840feb4,112353064,0,0x0,8
tick,0x7ffdb840feb4,112369102,0,0x0,8
tick,0x7ffdb840feb4,112384778,0,0x0,8
tick,0x7ffdb840feb4,112400076,0,0x0,8
tick,0x7ffdb840feb4,112415110,0,0x0,8
tick,0x7ffdb840feb4,112430542,0,0x0,8
tick,0x7ffdb840feb4,112445658,0,0x0,8
tick,0x7ffdb840feb4,112460874,0,0x0,8
tick,0x7ffdb840feb4,112476006,0,0x0,8
tick,0x7ffdb840feb4,112491809,0,0x0,8
tick,0x7ffdb840feb4,112507012,0,0x0,8
tick,0x7ffdb840feb4,112522033,0,0x0,8
tick,0x7ffdb840feb4,112537613,0,0x0,8
tick,0x7ffdb840feb4,112553218,0,0x0,8
tick,0x7ffdb840feb4,112568580,0,0x0,8
tick,0x7ffdb840feb4,112584054,0,0x0,8
tick,0x7ffdb840feb4,112598934,0,0x0,8
tick,0x7ffdb840feb4,112614620,0,0x0,8
tick,0x7ffdb840feb4,112630637,0,0x0,8
tick,0x7ffdb840feb4,112645875,0,0x0,8
tick,0x7ffdb840feb4,112661279,0,0x0,8
tick,0x7ffdb840feb4,112676455,0,0x0,8
tick,0x7ffdb840feb4,112691929,0,0x0,8
tick,0x7ffdb840feb4,112707432,0,0x0,8
tick,0x7ffdb840feb4,112722747,0,0x0,8
tick,0x7ffdb840feb4,112738776,0,0x0,8
tick,0x7ffdb840feb4,112754948,0,0x0,8
tick,0x7ffdb840feb4,112771060,0,0x0,8
tick,0x7ffdb840feb4,112786508,0,0x0,8
tick,0x7ffdb840feb4,112801860,0,0x0,8
tick,0x7ffdb840feb4,112817333,0,0x0,8
tick,0x7ffdb840feb4,112832776,0,0x0,8
tick,0x7ffdb840feb4,112848948,0,0x0,8
tick,0x7ffdb840feb4,112864049,0,0x0,8
tick,0x7ffdb840feb4,112879867,0,0x0,8
tick,0x7ffdb840feb4,112894892,0,0x0,8
tick,0x7ffdb840feb4,112910749,0,0x0,8
tick,0x7ffdb840feb4,112926288,0,0x0,8
tick,0x7ffdb840feb4,112941945,0,0x0,8
tick,0x7ffdb840feb4,112957168,0,0x0,8
tick,0x7ffdb840feb4,112973088,0,0x0,8
tick,0x7ffdb840feb4,112988584,0,0x0,8
tick,0x7ffdb840feb4,113003502,0,0x0,8
tick,0x7ffdb840feb4,113019624,0,0x0,8
tick,0x7ffdb840feb4,113034757,0,0x0,8
tick,0x7ffdb840feb4,113050523,0,0x0,8
tick,0x7ffdb840feb4,113065766,0,0x0,8
tick,0x7ffdb840feb4,113080797,0,0x0,8
tick,0x7ffdb840feb4,113096532,0,0x0,8
tick,0x7ffdb840feb4,113112253,0,0x0,8
tick,0x7ffdb840feb4,113127763,0,0x0,8
tick,0x7ffdb840feb4,113143632,0,0x0,8
tick,0x7ffdb840feb4,113158480,0,0x0,8
tick,0x7ffdb840feb4,113174480,0,0x0,8
tick,0x7ffdb840feb4,113189622,0,0x0,8
tick,0x7ffdb840feb4,113204822,0,0x0,8
tick,0x7ffdb840feb4,113220020,0,0x0,8
tick,0x7ffdb840feb4,113235804,0,0x0,8
tick,0x7ffdb840feb4,113251221,0,0x0,8
tick,0x7ffdb840feb4,113267207,0,0x0,8
tick,0x7ffdb840feb4,113282725,0,0x0,8
tick,0x7ffdb840feb4,113298010,0,0x0,8
tick,0x7ffdb840feb4,113313743,0,0x0,8
tick,0x7ffdb840feb4,113329508,0,0x0,8
tick,0x7ffdb840feb4,113344732,0,0x0,8
tick,0x7ffdb840feb4,113360420,0,0x0,8
tick,0x7ffdb840feb4,113375893,0,0x0,8
tick,0x7ffdb840feb4,113391113,0,0x0,8
tick,0x7ffdb840feb4,113406139,0,0x0,8
tick,0x7ffdb840feb4,113421976,0,0x0,8
tick,0x7ffdb840feb4,113437568,0,0x0,8
tick,0x7ffdb840feb4,113453002,0,0x0,8
tick,0x7ffdb840feb4,113469024,0,0x0,8
tick,0x7ffdb840feb4,113485027,0,0x0,8
tick,0x7ffdb840feb4,113500844,0,0x0,8
tick,0x7ffdb840feb4,113516598,0,0x0,8
tick,0x7ffdb840feb4,113531194,0,0x0,8
tick,0x7ffdb840feb4,113546783,0,0x0,8
tick,0x7ffdb840feb4,113561943,0,0x0,8
tick,0x7ffdb840feb4,113577438,0,0x0,8
tick,0x7ffdb840feb4,113592624,0,0x0,8
tick,0x7ffdb840feb4,113608664,0,0x0,8
tick,0x7ffdb840feb4,113623817,0,0x0,8
tick,0x7ffdb840feb4,113638685,0,0x0,8
tick,0x7ffdb840feb4,113654569,0,0x0,8
tick,0x7ffdb840feb4,113670464,0,0x0,8
tick,0x7ffdb840feb4,113686485,0,0x0,8
tick,0x7ffdb840feb4,113701738,0,0x0,8
tick,0x7ffdb840feb4,113717341,0,0x0,8
tick,0x7ffdb840feb4,113732210,0,0x0,8
tick,0x7ffdb840feb4,113747683,0,0x0,8
tick,0x7ffdb840feb4,113763146,0,0x0,8
tick,0x7ffdb840feb4,113778619,0,0x0,8
tick,0x7ffdb840feb4,113793763,0,0x0,8
tick,0x7ffdb840feb4,113809760,0,0x0,8
tick,0x7ffdb840feb4,113825387,0,0x0,8
tick,0x7ffdb840feb4,113840746,0,0x0,8
tick,0x7ffdb840feb4,113856187,0,0x0,8
tick,0x7ffdb840feb4,113871584,0,0x0,8
tick,0x7ffdb840feb4,113886686,0,0x0,8
tick,0x7ffdb840feb4,113902601,0,0x0,8
tick,0x7ffdb840feb4,113918293,0,0x0,8
tick,0x7ffdb840feb4,113933588,0,0x0,8
tick,0x7ffdb840feb4,113948920,0,0x0,8
tick,0x7ffdb840feb4,113964796,0,0x0,8
tick,0x7ffdb840feb4,113979746,0,0x0,8
tick,0x7ffdb840feb4,113995098,0,0x0,8
tick,0x7ffdb840feb4,114010858,0,0x0,8
tick,0x7ffdb840feb4,114026754,0,0x0,8
tick,0x7ffdb840feb4,114042796,0,0x0,8
tick,0x7ffdb840feb4,114058322,0,0x0,8
tick,0x7ffdb840feb4,114073607,0,0x0,8
tick,0x7ffdb840feb4,114089171,0,0x0,8
tick,0x7ffdb840feb4,114104485,0,0x0,8
tick,0x7ffdb840feb4,114120187,0,0x0,8
tick,0x7ffdb840feb4,114135197,0,0x0,8
tick,0x7ffdb840feb4,114151228,0,0x0,8
tick,0x7ffdb840feb4,114167215,0,0x0,8
tick,0x7ffdb840feb4,114183378,0,0x0,8
tick,0x7ffdb840feb4,114198216,0,0x0,8
tick,0x7ffdb840feb4,114213702,0,0x0,8
tick,0x7ffdb840feb4,114228935,0,0x0,8
tick,0x7ffdb840feb4,114244938,0,0x0,8
tick,0x7ffdb840feb4,114260962,0,0x0,8
tick,0x7ffdb840feb4,114277108,0,0x0,8
tick,0x7ffdb840feb4,114292547,0,0x0,8
tick,0x7ffdb840feb4,114308055,0,0x0,8
tick,0x7ffdb840feb4,114324066,0,0x0,8
tick,0x7ffdb840feb4,114339328,0,0x0,8
tick,0x7ffdb840feb4,114354918,0,0x0,8
tick,0x7ffdb840feb4,114370330,0,0x0,8
tick,0x7ffdb840feb4,114385476,0,0x0,8
tick,0x7ffdb840feb4,114401349,0,0x0,8
tick,0x7ffdb840feb4,114417214,0,0x0,8
tick,0x7ffdb840feb4,114432969,0,0x0,8
tick,0x7ffdb840feb4,114448179,0,0x0,8
tick,0x7ffdb840feb4,114463382,0,0x0,8
tick,0x7ffdb840feb4,114478960,0,0x0,8
tick,0x7ffdb840feb4,114494668,0,0x0,8
tick,0x7ffdb840feb4,114510039,0,0x0,8
tick,0x7ffdb840feb4,114526141,0,0x0,8
tick,0x7ffdb840feb4,114541123,0,0x0,8
tick,0x7ffdb840feb4,114556988,0,0x0,8
tick,0x7ffdb840feb4,114572526,0,0x0,8
tick,0x7ffdb840feb4,114588171,0,0x0,8
tick,0x7ffdb840feb4,114603833,0,0x0,8
tick,0x7ffdb840feb4,114618865,0,0x0,8
tick,0x7ffdb840feb4,114634611,0,0x0,8
tick,0x7ffdb840feb4,114650433,0,0x0,8
tick,0x7ffdb840feb4,114665712,0,0x0,8
tick,0x7ffdb840feb4,114681077,0,0x0,8
tick,0x7ffdb840feb4,114696975,0,0x0,8
tick,0x7ffdb840feb4,114712334,0,0x0,8
tick,0x7ffdb840feb4,114728343,0,0x0,8
tick,0x7ffdb840feb4,114743924,0,0x0,8
tick,0x7ffdb840feb4,114759219,0,0x0,8
tick,0x7ffdb840feb4,114774222,0,0x0,8
tick,0x7ffdb840feb4,114790220,0,0x0,8
tick,0x7ffdb840feb4,114806229,0,0x0,8
tick,0x7ffdb840feb4,114821783,0,0x0,8
tick,0x7ffdb840feb4,114837325,0,0x0,8
tick,0x7ffdb840feb4,114852716,0,0x0,8
tick,0x7ffdb840feb4,114868060,0,0x0,8
tick,0x7ffdb840feb4,114883801,0,0x0,8
tick,0x7ffdb840feb4,114898762,0,0x0,8
tick,0x7ffdb840feb4,114913639,0,0x0,8
tick,0x7ffdb840feb4,114928789,0,0x0,8
tick,0x7ffdb840feb4,114943918,0,0x0,8
tick,0x7ffdb840feb4,114959802,0,0x0,8
tick,0x7ffdb840feb4,114975546,0,0x0,8
tick,0x7ffdb840feb4,114991121,0,0x0,8
tick,0x7ffdb840feb4,115006711,0,0x0,8
tick,0x7ffdb840feb4,115022897,0,0x0,8
tick,0x7ffdb840feb4,115038489,0,0x0,8
tick,0x7ffdb840feb4,115053925,0,0x0,8
tick,0x7ffdb840feb4,115068875,0,0x0,8
tick,0x7ffdb840feb4,115084179,0,0x0,8
tick,0x7ffdb840feb4,115100072,0,0x0,8
tick,0x7ffdb840feb4,115116138,0,0x0,8
tick,0x7ffdb840feb4,115132238,0,0x0,8
tick,0x7ffdb840feb4,115148235,0,0x0,8
tick,0x7ffdb840feb4,115164025,0,0x0,8
tick,0x7ffdb840feb4,115180185,0,0x0,8
tick,0x7ffdb840feb4,115196192,0,0x0,8
tick,0x7ffdb840feb4,115212040,0,0x0,8
tick,0x7ffdb840feb4,115228036,0,0x0,8
tick,0x7ffdb840feb4,115243781,0,0x0,8
tick,0x7ffdb840feb4,115259071,0,0x0,8
tick,0x7ffdb840feb4,115274248,0,0x0,8
tick,0x7ffdb840feb4,115290192,0,0x0,8
tick,0x7ffdb840feb4,115306184,0,0x0,8
tick,0x7ffdb840feb4,115321363,0,0x0,8
tick,0x7ffdb840feb4,115336730,0,0x0,8
tick,0x7ffdb840feb4,115352207,0,0x0,8
tick,0x7ffdb840feb4,115367186,0,0x0,8
tick,0x7ffdb840feb4,115382959,0,0x0,8
tick,0x7ffdb840feb4,115398103,0,0x0,8
tick,0x7ffdb840feb4,115413981,0,0x0,8
tick,0x7ffdb840feb4,115429268,0,0x0,8
tick,0x7ffdb840feb4,115444453,0,0x0,8
tick,0x7ffdb840feb4,115460592,0,0x0,8
tick,0x7ffdb840feb4,115475895,0,0x0,8
tick,0x7ffdb840feb4,115491673,0,0x0,8
tick,0x7ffdb840feb4,115507288,0,0x0,8
tick,0x7ffdb840feb4,115522632,0,0x0,8
tick,0x7ffdb840feb4,115538067,0,0x0,8
tick,0x7ffdb840feb4,115554089,0,0x0,8
tick,0x7ffdb840feb4,115569568,0,0x0,8
tick,0x7ffdb840feb4,115584618,0,0x0,8
tick,0x7ffdb840feb4,115600711,0,0x0,8
tick,0x7ffdb840feb4,115616249,0,0x0,8
tick,0x7ffdb840feb4,115631381,0,0x0,8
tick,0x7ffdb840feb4,115647085,0,0x0,8
tick,0x7ffdb840feb4,115662087,0,0x0,8
tick,0x7ffdb840feb4,115678082,0,0x0,8
tick,0x7ffdb840feb4,115693298,0,0x0,8
tick,0x7ffdb840feb4,115709078,0,0x0,8
tick,0x7ffdb840feb4,115725088,0,0x0,8
tick,0x7ffdb840feb4,115741098,0,0x0,8
tick,0x7ffdb840feb4,115757092,0,0x0,8
tick,0x7ffdb840feb4,115773083,0,0x0,8
tick,0x7ffdb840feb4,115788292,0,0x0,8
tick,0x7ffdb840feb4,115803102,0,0x0,8
tick,0x7ffdb840feb4,115818295,0,0x0,8
tick,0x7ffdb840feb4,115834110,0,0x0,8
tick,0x7ffdb840feb4,115849100,0,0x0,8
tick,0x7ffdb840feb4,115864133,0,0x0,8
tick,0x7ffdb840feb4,115880118,0,0x0,8
tick,0x7ffdb840feb4,115895124,0,0x0,8
tick,0x7ffdb840feb4,115911099,0,0x0,8
tick,0x7ffdb840feb4,115927105,0,0x0,8
tick,0x7ffdb840feb4,115943112,0,0x0,8
tick,0x7ffdb840feb4,115959112,0,0x0,8
tick,0x7ffdb840feb4,115975125,0,0x0,8
tick,0x7ffdb840feb4,115991131,0,0x0,8
tick,0x7ffdb840feb4,116006134,0,0x0,8
tick,0x7ffdb840feb4,116021376,0,0x0,8
tick,0x7ffdb840feb4,116037137,0,0x0,8
tick,0x7ffdb840feb4,116052129,0,0x0,8
tick,0x7ffdb840feb4,116068138,0,0x0,8
tick,0x7ffdb840feb4,116083131,0,0x0,8
tick,0x7ffdb840feb4,116098123,0,0x0,8
tick,0x7ffdb840feb4,116114140,0,0x0,8
tick,0x7ffdb840feb4,116129125,0,0x0,8
tick,0x7ffdb840feb4,116145131,0,0x0,8
tick,0x7ffdb840feb4,116161137,0,0x0,8
tick,0x7ffdb840feb4,116177137,0,0x0,8
tick,0x7ffdb840feb4,116193161,0,0x0,8
tick,0x7ffdb840feb4,116209155,0,0x0,8
tick,0x7ffdb840feb4,116225152,0,0x0,8
tick,0x7ffdb840feb4,116241149,0,0x0,8
tick,0x7ffdb840feb4,116257144,0,0x0,8
tick,0x7ffdb840feb4,116272428,0,0x0,8
tick,0x7ffdb840feb4,116288150,0,0x0,8
tick,0x7ffdb840feb4,116303946,0,0x0,8
tick,0x7ffdb840feb4,116319176,0,0x0,8
tick,0x7ffdb840feb4,116334982,0,0x0,8
tick,0x7ffdb840feb4,116350123,0,0x0,8
tick,0x7ffdb840feb4,116365597,0,0x0,8
tick,0x7ffdb840feb4,116381332,0,0x0,8
tick,0x7ffdb840feb4,116396108,0,0x0,8
tick,0x7ffdb840feb4,116412167,0,0x0,8
tick,0x7ffdb840feb4,116428178,0,0x0,8
tick,0x7ffdb840feb4,116444015,0,0x0,8
tick,0x7ffdb840feb4,116459361,0,0x0,8
tick,0x7ffdb840feb4,116474170,0,0x0,8
tick,0x7ffdb840feb4,116490157,0,0x0,8
tick,0x7ffdb840feb4,116506109,0,0x0,8
tick,0x7ffdb840feb4,116521444,0,0x0,8
tick,0x7ffdb840feb4,116536876,0,0x0,8
tick,0x7ffdb840feb4,116552157,0,0x0,8
tick,0x7ffdb840feb4,116568360,0,0x0,8
tick,0x7ffdb840feb4,116583707,0,0x0,8
tick,0x7ffdb840feb4,116599344,0,0x0,8
tick,0x7ffdb840feb4,116614597,0,0x0,8
tick,0x7ffdb840feb4,116629791,0,0x0,8
tick,0x7ffdb840feb4,116645125,0,0x0,8
tick,0x7ffdb840feb4,116660458,0,0x0,8
tick,0x7ffdb840feb4,116676493,0,0x0,8
tick,0x7ffdb840feb4,116691900,0,0x0,8
tick,0x7ffdb840feb4,116707406,0,0x0,8
tick,0x7ffdb840feb4,116722982,0,0x0,8
tick,0x7ffdb840feb4,116738696,0,0x0,8
tick,0x7ffdb840feb4,116754311,0,0x0,8
tick,0x7ffdb840feb4,116769891,0,0x0,8
tick,0x7ffdb840feb4,116785892,0,0x0,8
tick,0x7ffdb840feb4,116801681,0,0x0,8
tick,0x7ffdb840feb4,116816750,0,0x0,8
tick,0x7ffdb840feb4,116832132,0,0x0,8
tick,0x7ffdb840feb4,116847748,0,0x0,8
tick,0x7ffdb840feb4,116863577,0,0x0,8
tick,0x7ffdb840feb4,116878583,0,0x0,8
tick,0x7ffdb840feb4,116894546,0,0x0,8
tick,0x7ffdb840feb4,116909865,0,0x0,8
tick,0x7ffdb840feb4,116925200,0,0x0,8
tick,0x7ffdb840feb4,116940763,0,0x0,8
tick,0x7ffdb840feb4,116955760,0,0x0,8
tick,0x7ffdb840feb4,116971594,0,0x0,8
tick,0x7ffdb840feb4,116986692,0,0x0,8
tick,0x7ffdb840feb4,117002017,0,0x0,8
tick,0x7ffdb840feb4,117017162,0,0x0,8
tick,0x7ffdb840feb4,117032945,0,0x0,8
tick,0x7ffdb840feb4,117047930,0,0x0,8
tick,0x7ffdb840feb4,117063437,0,0x0,8
tick,0x7ffdb840feb4,117079223,0,0x0,8
tick,0x7ffdb840feb4,117094401,0,0x0,8
tick,0x7ffdb840feb4,117109940,0,0x0,8
tick,0x7ffdb840feb4,117124749,0,0x0,8
tick,0x7ffdb840feb4,117140264,0,0x0,8
tick,0x7ffdb840feb4,117155667,0,0x0,8
tick,0x7ffdb840feb4,117171574,0,0x0,8
tick,0x7ffdb840feb4,117186407,0,0x0,8
tick,0x7ffdb840feb4,117202419,0,0x0,8
tick,0x7ffdb840feb4,117217591,0,0x0,8
tick,0x7ffdb840feb4,117232425,0,0x0,8
tick,0x7ffdb840feb4,117247575,0,0x0,8
tick,0x7ffdb840feb4,117263600,0,0x0,8
tick,0x7ffdb840feb4,117279275,0,0x0,8
tick,0x7ffdb840feb4,117294502,0,0x0,8
tick,0x7ffdb840feb4,117310282,0,0x0,8
tick,0x7ffdb840feb4,117325275,0,0x0,8
tick,0x7ffdb840feb4,117341284,0,0x0,8
tick,0x7ffdb840feb4,117357285,0,0x0,8
tick,0x7ffdb840feb4,117373286,0,0x0,8
tick,0x7ffdb840feb4,117389292,0,0x0,8
tick,0x7ffdb840feb4,117405138,0,0x0,8
tick,0x7ffdb840feb4,117420270,0,0x0,8
tick,0x7ffdb840feb4,117435356,0,0x0,8
tick,0x7ffdb840feb4,117451311,0,0x0,8
tick,0x7ffdb840feb4,117466351,0,0x0,8
tick,0x7ffdb840feb4,117481298,0,0x0,8
tick,0x7ffdb840feb4,117497305,0,0x0,8
tick,0x7ffdb840feb4,117513299,0,0x0,8
tick,0x7ffdb840feb4,117529303,0,0x0,8
tick,0x7ffdb840feb4,117545296,0,0x0,8
tick,0x7ffdb840feb4,117561308,0,0x0,8
tick,0x7ffdb840feb4,117577312,0,0x0,8
tick,0x7ffdb840feb4,117592289,0,0x0,8
tick,0x7ffdb840feb4,117608320,0,0x0,8
tick,0x7ffdb840feb4,117623314,0,0x0,8
tick,0x7ffdb840feb4,117639327,0,0x0,8
tick,0x7ffdb840feb4,117655304,0,0x0,8
tick,0x7ffdb840feb4,117671349,0,0x0,8
tick,0x7ffdb840feb4,117687315,0,0x0,8
tick,0x7ffdb840feb4,117703321,0,0x0,8
tick,0x7ffdb840feb4,117719338,0,0x0,8
tick,0x7ffdb840feb4,117735329,0,0x0,8
tick,0x7ffdb840feb4,117751300,0,0x0,8
tick,0x7ffdb840feb4,117766880,0,0x0,8
tick,0x7ffdb840feb4,117782340,0,0x0,8
tick,0x7ffdb840feb4,117797355,0,0x0,8
tick,0x7ffdb840feb4,117813354,0,0x0,8
tick,0x7ffdb840feb4,117829378,0,0x0,8
tick,0x7ffdb840feb4,117845363,0,0x0,8
tick,0x7ffdb840feb4,117861366,0,0x0,8
tick,0x7ffdb840feb4,117877360,0,0x0,8
tick,0x7ffdb840feb4,117893413,0,0x0,8
tick,0x7ffdb840feb4,117909378,0,0x0,8
tick,0x7ffdb840feb4,117925385,0,0x0,8
tick,0x7ffdb840feb4,117941429,0,0x0,8
tick,0x7ffdb840feb4,117957356,0,0x0,8
tick,0x7ffdb840feb4,117973363,0,0x0,8
tick,0x7ffdb840feb4,117989363,0,0x0,8
tick,0x7ffdb840feb4,118005360,0,0x0,8
tick,0x7ffdb840feb4,118021377,0,0x0,8
tick,0x7ffdb840feb4,118037371,0,0x0,8
tick,0x7ffdb840feb4,118052387,0,0x0,8
tick,0x7ffdb840feb4,118067382,0,0x0,8
tick,0x7ffdb840feb4,118083088,0,0x0,8
tick,0x7ffdb840feb4,118098373,0,0x0,8
tick,0x7ffdb840feb4,118113155,0,0x0,8
tick,0x7ffdb840feb4,118128380,0,0x0,8
tick,0x7ffdb840feb4,118144377,0,0x0,8
tick,0x7ffdb840feb4,118159716,0,0x0,8
tick,0x7ffdb840feb4,118175711,0,0x0,8
tick,0x7ffdb840feb4,118191384,0,0x0,8
tick,0x7ffdb840feb4,118206402,0,0x0,8
tick,0x7ffdb840feb4,118221396,0,0x0,8
tick,0x7ffdb840feb4,118237394,0,0x0,8
tick,0x7ffdb840feb4,118253398,0,0x0,8
tick,0x7ffdb840feb4,118269427,0,0x0,8
tick,0x7ffdb840feb4,118284686,0,0x0,8
tick,0x7ffdb840feb4,118300412,0,0x0,8
tick,0x7ffdb840feb4,118315431,0,0x0,8
tick,0x7ffdb840feb4,118330823,0,0x0,8
tick,0x7ffdb840feb4,118346401,0,0x0,8
tick,0x7ffdb840feb4,118361737,0,0x0,8
tick,0x7ffdb840feb4,118377078,0,0x0,8
tick,0x7ffdb840feb4,118392395,0,0x0,8
tick,0x7ffdb840feb4,118407732,0,0x0,8
tick,0x7ffdb840feb4,118423291,0,0x0,8
tick,0x7ffdb840feb4,118438299,0,0x0,8
tick,0x7ffdb840feb4,118454313,0,0x0,8
tick,0x7ffdb840feb4,118468963,0,0x0,8
tick,0x7ffdb840feb4,118484458,0,0x0,8
tick,0x7ffdb840feb4,118499972,0,0x0,8
tick,0x7ffdb840feb4,118515620,0,0x0,8
tick,0x7ffdb840feb4,118531086,0,0x0,8
tick,0x7ffdb840feb4,118546423,0,0x0,8
tick,0x7ffdb840feb4,118562430,0,0x0,8
tick,0x7ffdb840feb4,118577785,0,0x0,8
tick,0x7ffdb840feb4,118593809,0,0x0,8
tick,0x7ffdb840feb4,118609802,0,0x0,8
tick,0x7ffdb840feb4,118625447,0,0x0,8
tick,0x7ffdb840feb4,118641463,0,0x0,8
tick,0x7ffdb840feb4,118657441,0,0x0,8
tick,0x7ffdb840feb4,118673452,0,0x0,8
tick,0x7ffdb840feb4,118689442,0,0x0,8
tick,0x7ffdb840feb4,118705457,0,0x0,8
tick,0x7ffdb840feb4,118721460,0,0x0,8
tick,0x7ffdb840feb4,118737454,0,0x0,8
tick,0x7ffdb840feb4,118753456,0,0x0,8
tick,0x7ffdb840feb4,118769450,0,0x0,8
tick,0x7ffdb840feb4,118785460,0,0x0,8
tick,0x7ffdb840feb4,118801462,0,0x0,8
tick,0x7ffdb840feb4,118817472,0,0x0,8
tick,0x7ffdb840feb4,118833465,0,0x0,8
tick,0x7ffdb840feb4,118848793,0,0x0,8
tick,0x7ffdb840feb4,118864421,0,0x0,8
tick,0x7ffdb840feb4,118879483,0,0x0,8
tick,0x7ffdb840feb4,118895502,0,0x0,8
tick,0x7ffdb840feb4,118911305,0,0x0,8
tick,0x7ffdb840feb4,118926678,0,0x0,8
tick,0x7ffdb840feb4,118941916,0,0x0,8
tick,0x7ffdb840feb4,118957431,0,0x0,8
tick,0x7ffdb840feb4,118972597,0,0x0,8
tick,0x7ffdb840feb4,118988594,0,0x0,8
tick,0x7ffdb840feb4,119003606,0,0x0,8
tick,0x7ffdb840feb4,119018953,0,0x0,8
tick,0x7ffdb840feb4,119034301,0,0x0,8
tick,0x7ffdb840feb4,119049631,0,0x0,8
tick,0x7ffdb840feb4,119064935,0,0x0,8
tick,0x7ffdb840feb4,119080633,0,0x0,8
tick,0x7ffdb840feb4,119095827,0,0x0,8
tick,0x7ffdb840feb4,119111299,0,0x0,8
tick,0x7ffdb840feb4,119126638,0,0x0,8
tick,0x7ffdb840feb4,119142073,0,0x0,8
tick,0x7ffdb840feb4,119157654,0,0x0,8
tick,0x7ffdb840feb4,119172652,0,0x0,8
tick,0x7ffdb840feb4,119188657,0,0x0,8
tick,0x7ffdb840feb4,119204504,0,0x0,8
tick,0x7ffdb840feb4,119219526,0,0x0,8
tick,0x7ffdb840feb4,119235538,0,0x0,8
tick,0x7ffdb840feb4,119251540,0,0x0,8
tick,0x7ffdb840feb4,119266518,0,0x0,8
tick,0x7ffdb840feb4,119281525,0,0x0,8
tick,0x7ffdb840feb4,119297647,0,0x0,8
tick,0x7ffdb840feb4,119313651,0,0x0,8
tick,0x7ffdb840feb4,119329653,0,0x0,8
tick,0x7ffdb840feb4,119345663,0,0x0,8
tick,0x7ffdb840feb4,119361668,0,0x0,8
tick,0x7ffdb840feb4,119377652,0,0x0,8
tick,0x7ffdb840feb4,119393640,0,0x0,8
tick,0x7ffdb840feb4,119409657,0,0x0,8
tick,0x7ffdb840feb4,119425659,0,0x0,8
tick,0x7ffdb840feb4,119441198,0,0x0,8
tick,0x7ffdb840feb4,119456726,0,0x0,8
tick,0x7ffdb840feb4,119472285,0,0x0,8
tick,0x7ffdb840feb4,119488054,0,0x0,8
tick,0x7ffdb840feb4,119503867,0,0x0,8
tick,0x7ffdb840feb4,119518686,0,0x0,8
tick,0x7ffdb840feb4,119534127,0,0x0,8
tick,0x7ffdb840feb4,119549268,0,0x0,8
tick,0x7ffdb840feb4,119564432,0,0x0,8
tick,0x7ffdb840feb4,119579706,0,0x0,8
tick,0x7ffdb840feb4,119594681,0,0x0,8
tick,0x7ffdb840feb4,119610721,0,0x0,8
tick,0x7ffdb840feb4,119625691,0,0x0,8
tick,0x7ffdb840feb4,119640820,0,0x0,8
tick,0x7ffdb840feb4,119655556,0,0x0,8
tick,0x7ffdb840feb4,119671434,0,0x0,8
tick,0x7ffdb840feb4,119686700,0,0x0,8
tick,0x7ffdb840feb4,119702332,0,0x0,8
tick,0x7ffdb840feb4,119717906,0,0x0,8
tick,0x7ffdb840feb4,119733610,0,0x0,8
tick,0x7ffdb840feb4,119749641,0,0x0,8
tick,0x7ffdb840feb4,119765434,0,0x0,8
tick,0x7ffdb840feb4,119780708,0,0x0,8
tick,0x7ffdb840feb4,119796210,0,0x0,8
tick,0x7ffdb840feb4,119811577,0,0x0,8
tick,0x7ffdb840feb4,119826707,0,0x0,8
tick,0x7ffdb840feb4,119842101,0,0x0,8
tick,0x7ffdb840feb4,119857639,0,0x0,8
tick,0x7ffdb840feb4,119872637,0,0x0,8
tick,0x7ffdb840feb4,119887750,0,0x0,8
tick,0x7ffdb840feb4,119903741,0,0x0,8
tick,0x7ffdb840feb4,119919736,0,0x0,8
tick,0x7ffdb840feb4,119935727,0,0x0,8
tick,0x7ffdb840feb4,119951730,0,0x0,8
tick,0x7ffdb840feb4,119967741,0,0x0,8
tick,0x7ffdb840feb4,119983750,0,0x0,8
tick,0x7ffdb840feb4,119999770,0,0x0,8
tick,0x7ffdb840feb4,120015776,0,0x0,8
tick,0x7ffdb840feb4,120031100,0,0x0,8
tick,0x7ffdb840feb4,120046363,0,0x0,8
tick,0x7ffdb840feb4,120061251,0,0x0,8
tick,0x7ffdb840feb4,120077360,0,0x0,8
tick,0x7ffdb840feb4,120092574,0,0x0,8
tick,0x7ffdb840feb4,120107709,0,0x0,8
tick,0x7ffdb840feb4,120123459,0,0x0,8
tick,0x7ffdb840feb4,120138714,0,0x0,8
tick,0x7ffdb840feb4,120154055,0,0x0,8
tick,0x7ffdb840feb4,120169402,0,0x0,8
tick,0x7ffdb840feb4,120184675,0,0x0,8
tick,0x7ffdb840feb4,120200106,0,0x0,8
tick,0x7ffdb840feb4,120215671,0,0x0,8
tick,0x7ffdb840feb4,120231129,0,0x0,8
tick,0x7ffdb840feb4,120247135,0,0x0,8
tick,0x7ffdb840feb4,120263146,0,0x0,8
tick,0x7ffdb840feb4,120278732,0,0x0,8
tick,0x7ffdb840feb4,120294763,0,0x0,8
tick,0x7ffdb840feb4,120310307,0,0x0,8
tick,0x7ffdb840feb4,120326100,0,0x0,8
tick,0x7ffdb840feb4,120341261,0,0x0,8
tick,0x7ffdb840feb4,120356696,0,0x0,8
tick,0x7ffdb840feb4,120372124,0,0x0,8
tick,0x7ffdb840feb4,120387716,0,0x0,8
tick,0x7ffdb840feb4,120403652,0,0x0,8
tick,0x7ffdb840feb4,120419779,0,0x0,8
tick,0x7ffdb840feb4,120435777,0,0x0,8
tick,0x7ffdb840feb4,120451790,0,0x0,8
tick,0x7ffdb840feb4,120467786,0,0x0,8
tick,0x7ffdb840feb4,120483785,0,0x0,8
tick,0x7ffdb840feb4,120499777,0,0x0,8
tick,0x7ffdb840feb4,120515795,0,0x0,8
tick,0x7ffdb840feb4,120531786,0,0x0,8
tick,0x7ffdb840feb4,120547727,0,0x0,8
tick,0x7ffdb840feb4,120563746,0,0x0,8
tick,0x7ffdb840feb4,120579803,0,0x0,8
tick,0x7ffdb840feb4,120594808,0,0x0,8
tick,0x7ffdb840feb4,120609837,0,0x0,8
tick,0x7ffdb840feb4,120625817,0,0x0,8
tick,0x7ffdb840feb4,120641831,0,0x0,8
tick,0x7ffdb840feb4,120657732,0,0x0,8
tick,0x7ffdb840feb4,120672989,0,0x0,8
tick,0x7ffdb840feb4,120687732,0,0x0,8
tick,0x7ffdb840feb4,120702735,0,0x0,8
tick,0x7ffdb840feb4,120718751,0,0x0,8
tick,0x7ffdb840feb4,120733760,0,0x0,8
tick,0x7ffdb840feb4,120749768,0,0x0,8
tick,0x7ffdb840feb4,120765436,0,0x0,8
tick,0x7ffdb840feb4,120780839,0,0x0,8
tick,0x7ffdb840feb4,120796753,0,0x0,8
tick,0x7ffdb840feb4,120812816,0,0x0,8
tick,0x7ffdb840feb4,120828744,0,0x0,8
tick,0x7ffdb840feb4,120844837,0,0x0,8
tick,0x7ffdb840feb4,120860846,0,0x0,8
tick,0x7ffdb840feb4,120876834,0,0x0,8
tick,0x7ffdb840feb4,120892842,0,0x0,8
tick,0x7ffdb840feb4,120908847,0,0x0,8
tick,0x7ffdb840feb4,120924833,0,0x0,8
tick,0x7ffdb840feb4,120940843,0,0x0,8
tick,0x7ffdb840feb4,120956102,0,0x0,8
tick,0x7ffdb840feb4,120971848,0,0x0,8
tick,0x7ffdb840feb4,120987761,0,0x0,8
tick,0x7ffdb840feb4,121003873,0,0x0,8
tick,0x7ffdb840feb4,121019885,0,0x0,8
tick,0x7ffdb840feb4,121034877,0,0x0,8
tick,0x7ffdb840feb4,121050557,0,0x0,8
tick,0x7ffdb840feb4,121065776,0,0x0,8
tick,0x7ffdb840feb4,121081800,0,0x0,8
tick,0x7ffdb840feb4,121097867,0,0x0,8
tick,0x7ffdb840feb4,121113871,0,0x0,8
tick,0x7ffdb840feb4,121128860,0,0x0,8
tick,0x7ffdb840feb4,121143868,0,0x0,8
tick,0x7ffdb840feb4,121159860,0,0x0,8
tick,0x7ffdb840feb4,121175880,0,0x0,8
tick,0x7ffdb840feb4,121191133,0,0x0,8
tick,0x7ffdb840feb4,121206779,0,0x0,8
tick,0x7ffdb840feb4,121221905,0,0x0,8
tick,0x7ffdb840feb4,121237888,0,0x0,8
tick,0x7ffdb840feb4,121253879,0,0x0,8
tick,0x7ffdb840feb4,121269892,0,0x0,8
tick,0x7ffdb840feb4,121285897,0,0x0,8
tick,0x7ffdb840feb4,121300883,0,0x0,8
tick,0x7ffdb840feb4,121316456,0,0x0,8
tick,0x7ffdb840feb4,121332109,0,0x0,8
tick,0x7ffdb840feb4,121347784,0,0x0,8
tick,0x7ffdb840feb4,121363032,0,0x0,8
tick,0x7ffdb840feb4,121378785,0,0x0,8
tick,0x7ffdb840feb4,121394246,0,0x0,8
tick,0x7ffdb840feb4,121409888,0,0x0,8
tick,0x7ffdb840feb4,121424781,0,0x0,8
tick,0x7ffdb840feb4,121440911,0,0x0,8
tick,0x7ffdb840feb4,121456886,0,0x0,8
tick,0x7ffdb840feb4,121471902,0,0x0,8
tick,0x7ffdb840feb4,121487785,0,0x0,8
tick,0x7ffdb840feb4,121502911,0,0x0,8
tick,0x7ffdb840feb4,121518904,0,0x0,8
tick,0x7ffdb840feb4,121534135,0,0x0,8
tick,0x7ffdb840feb4,121548815,0,0x0,8
tick,0x7ffdb840feb4,121564913,0,0x0,8
tick,0x7ffdb840feb4,121579919,0,0x0,8
tick,0x7ffdb840feb4,121594933,0,0x0,8
tick,0x7ffdb840feb4,121610432,0,0x0,8
tick,0x7ffdb840feb4,121625884,0,0x0,8
tick,0x7ffdb840feb4,121640814,0,0x0,8
tick,0x7ffdb840feb4,121655812,0,0x0,8
tick,0x7ffdb840feb4,121671397,0,0x0,8
tick,0x7ffdb840feb4,121686937,0,0x0,8
tick,0x7ffdb840feb4,121701970,0,0x0,8
tick,0x7ffdb840feb4,121717816,0,0x0,8
tick,0x7ffdb840feb4,121733112,0,0x0,8
tick,0x7ffdb840feb4,121747828,0,0x0,8
tick,0x7ffdb840feb4,121763843,0,0x0,8
tick,0x7ffdb840feb4,121779937,0,0x0,8
tick,0x7ffdb840feb4,121795261,0,0x0,8
tick,0x7ffdb840feb4,121810945,0,0x0,8
tick,0x7ffdb840feb4,121826009,0,0x0,8
tick,0x7ffdb840feb4,121840947,0,0x0,8
tick,0x7ffdb840feb4,121856372,0,0x0,8
tick,0x7ffdb840feb4,121871539,0,0x0,8
tick,0x7ffdb840feb4,121886777,0,0x0,8
tick,0x7ffdb840feb4,121901913,0,0x0,8
tick,0x7ffdb840feb4,121916787,0,0x0,8
tick,0x7ffdb840feb4,121932111,0,0x0,8
tick,0x7ffdb840feb4,121947781,0,0x0,8
tick,0x7ffdb840feb4,121963366,0,0x0,8
tick,0x7ffdb840feb4,121979360,0,0x0,8
tick,0x7ffdb840feb4,121995364,0,0x0,8
tick,0x7ffdb840feb4,122011354,0,0x0,8
tick,0x7ffdb840feb4,122027364,0,0x0,8
tick,0x7ffdb840feb4,122042766,0,0x0,8
tick,0x7ffdb840feb4,122058774,0,0x0,8
tick,0x7ffdb840feb4,122074233,0,0x0,8
tick,0x7ffdb840feb4,122089975,0,0x0,8
tick,0x7ffdb840feb4,122105359,0,0x0,8
tick,0x7ffdb840feb4,122120975,0,0x0,8
tick,0x7ffdb840feb4,122136272,0,0x0,8
tick,0x7ffdb840feb4,122151763,0,0x0,8
tick,0x7ffdb840feb4,122167800,0,0x0,8
tick,0x7ffdb840feb4,122182988,0,0x0,8
tick,0x7ffdb840feb4,122197821,0,0x0,8
tick,0x7ffdb840feb4,122212990,0,0x0,8
tick,0x7ffdb840feb4,122228373,0,0x0,8
tick,0x7ffdb840feb4,122244392,0,0x0,8
tick,0x7ffdb840feb4,122260383,0,0x0,8
tick,0x7ffdb840feb4,122276373,0,0x0,8
tick,0x7ffdb840feb4,122292001,0,0x0,8
tick,0x7ffdb840feb4,122307835,0,0x0,8
tick,0x7ffdb840feb4,122322827,0,0x0,8
tick,0x7ffdb840feb4,122338851,0,0x0,8
tick,0x7ffdb840feb4,122354020,0,0x0,8
tick,0x7ffdb840feb4,122369025,0,0x0,8
tick,0x7ffdb840feb4,122385023,0,0x0,8
tick,0x7ffdb840feb4,122400031,0,0x0,8
tick,0x7ffdb840feb4,122416044,0,0x0,8
tick,0x7ffdb840feb4,122432030,0,0x0,8
tick,0x7ffdb840feb4,122448028,0,0x0,8
tick,0x7ffdb840feb4,122463043,0,0x0,8
tick,0x7ffdb840feb4,122478043,0,0x0,8
tick,0x7ffdb840feb4,122493183,0,0x0,8
tick,0x7ffdb840feb4,122509195,0,0x0,8
tick,0x7ffdb840feb4,122524208,0,0x0,8
tick,0x7ffdb840feb4,122540202,0,0x0,8
tick,0x7ffdb840feb4,122556209,0,0x0,8
tick,0x7ffdb840feb4,122571595,0,0x0,8
tick,0x7ffdb840feb4,122586869,0,0x0,8
tick,0x7ffdb840feb4,122602889,0,0x0,8
tick,0x7ffdb840feb4,122618876,0,0x0,8
tick,0x7ffdb840feb4,122633865,0,0x0,8
tick,0x7ffdb840feb4,122648868,0,0x0,8
tick,0x7ffdb840feb4,122664875,0,0x0,8
tick,0x7ffdb840feb4,122680881,0,0x0,8
tick,0x7ffdb840feb4,122695884,0,0x0,8
tick,0x7ffdb840feb4,122711888,0,0x0,8
tick,0x7ffdb840feb4,122726865,0,0x0,8
tick,0x7ffdb840feb4,122741868,0,0x0,8
tick,0x7ffdb840feb4,122757895,0,0x0,8
tick,0x7ffdb840feb4,122772562,0,0x0,8
tick,0x7ffdb840feb4,122787883,0,0x0,8
tick,0x7ffdb840feb4,122803902,0,0x0,8
tick,0x7ffdb840feb4,122819069,0,0x0,8
tick,0x7ffdb840feb4,122834319,0,0x0,8
tick,0x7ffdb840feb4,122850072,0,0x0,8
tick,0x7ffdb840feb4,122865455,0,0x0,8
tick,0x7ffdb840feb4,122881076,0,0x0,8
tick,0x7ffdb840feb4,122896082,0,0x0,8
tick,0x7ffdb840feb4,122911505,0,0x0,8
tick,0x7ffdb840feb4,122927092,0,0x0,8
tick,0x7ffdb840feb4,122942083,0,0x0,8
tick,0x7ffdb840feb4,122957104,0,0x0,8
tick,0x7ffdb840feb4,122973163,0,0x0,8
tick,0x7ffdb840feb4,122988797,0,0x0,8
tick,0x7ffdb840feb4,123004791,0,0x0,8
tick,0x7ffdb840feb4,123020083,0,0x0,8
tick,0x7ffdb840feb4,123035329,0,0x0,8
tick,0x7ffdb840feb4,123050585,0,0x0,8
tick,0x7ffdb840feb4,123066461,0,0x0,8
tick,0x7ffdb840feb4,123082466,0,0x0,8
tick,0x7ffdb840feb4,123098462,0,0x0,8
tick,0x7ffdb840feb4,123114107,0,0x0,8
tick,0x7ffdb840feb4,123130108,0,0x0,8
tick,0x7ffdb840feb4,123146111,0,0x0,8
tick,0x7ffdb840feb4,123162118,0,0x0,8
tick,0x7ffdb840feb4,123178120,0,0x0,8
tick,0x7ffdb840feb4,123194116,0,0x0,8
tick,0x7ffdb840feb4,123210114,0,0x0,8
tick,0x7ffdb840feb4,123226130,0,0x0,8
tick,0x7ffdb840feb4,123242145,0,0x0,8
tick,0x7ffdb840feb4,123258133,0,0x0,8
tick,0x7ffdb840feb4,123274131,0,0x0,8
tick,0x7ffdb840feb4,123290135,0,0x0,8
tick,0x7ffdb840feb4,123306122,0,0x0,8
tick,0x7ffdb840feb4,123322128,0,0x0,8
tick,0x7ffdb840feb4,123337949,0,0x0,8
tick,0x7ffdb840feb4,123352916,0,0x0,8
tick,0x7ffdb840feb4,123368132,0,0x0,8
tick,0x7ffdb840feb4,123384122,0,0x0,8
tick,0x7ffdb840feb4,123400036,0,0x0,8
tick,0x7ffdb840feb4,123416132,0,0x0,8
tick,0x7ffdb840feb4,123432114,0,0x0,8
tick,0x7ffdb840feb4,123448029,0,0x0,8
tick,0x7ffdb840feb4,123464150,0,0x0,8
tick,0x7ffdb840feb4,123480142,0,0x0,8
tick,0x7ffdb840feb4,123496156,0,0x0,8
tick,0x7ffdb840feb4,123511982,0,0x0,8
tick,0x7ffdb840feb4,123527971,0,0x0,8
tick,0x7ffdb840feb4,123542784,0,0x0,8
tick,0x7ffdb840feb4,123557988,0,0x0,8
tick,0x7ffdb840feb4,123573153,0,0x0,8
tick,0x7ffdb840feb4,123589169,0,0x0,8
tick,0x7ffdb840feb4,123604914,0,0x0,8
tick,0x7ffdb840feb4,123619915,0,0x0,8
tick,0x7ffdb840feb4,123635359,0,0x0,8
tick,0x7ffdb840feb4,123650877,0,0x0,8
tick,0x7ffdb840feb4,123666174,0,0x0,8
tick,0x7ffdb840feb4,123681186,0,0x0,8
tick,0x7ffdb840feb4,123697199,0,0x0,8
tick,0x7ffdb840feb4,123713198,0,0x0,8
tick,0x7ffdb840feb4,123729179,0,0x0,8
tick,0x7ffdb840feb4,123745205,0,0x0,8
tick,0x7ffdb840feb4,123760992,0,0x0,8
tick,0x7ffdb840feb4,123777008,0,0x0,8
tick,0x7ffdb840feb4,123792670,0,0x0,8
tick,0x7ffdb840feb4,123808014,0,0x0,8
tick,0x7ffdb840feb4,123824027,0,0x0,8
tick,0x7ffdb840feb4,123839061,0,0x0,8
tick,0x7ffdb840feb4,123854496,0,0x0,8
tick,0x7ffdb840feb4,123870506,0,0x0,8
tick,0x7ffdb840feb4,123886510,0,0x0,8
tick,0x7ffdb840feb4,123901677,0,0x0,8
tick,0x7ffdb840feb4,123916464,0,0x0,8
tick,0x7ffdb840feb4,123932112,0,0x0,8
tick,0x7ffdb840feb4,123947532,0,0x0,8
tick,0x7ffdb840feb4,123962519,0,0x0,8
tick,0x7ffdb840feb4,123978513,0,0x0,8
tick,0x7ffdb840feb4,123994024,0,0x0,8
tick,0x7ffdb840feb4,124009513,0,0x0,8
tick,0x7ffdb840feb4,124025521,0,0x0,8
tick,0x7ffdb840feb4,124040872,0,0x0,8
tick,0x7ffdb840feb4,124056197,0,0x0,8
tick,0x7ffdb840feb4,124071483,0,0x0,8
tick,0x7ffdb840feb4,124087050,0,0x0,8
tick,0x7ffdb840feb4,124102387,0,0x0,8
tick,0x7ffdb840feb4,124118053,0,0x0,8
tick,0x7ffdb840feb4,124134124,0,0x0,8
tick,0x7ffdb840feb4,124150058,0,0x0,8
tick,0x7ffdb840feb4,124165254,0,0x0,8
tick,0x7ffdb840feb4,124180385,0,0x0,8
tick,0x7ffdb840feb4,124196396,0,0x0,8
tick,0x7ffdb840feb4,124212405,0,0x0,8
tick,0x7ffdb840feb4,124227405,0,0x0,8
tick,0x7ffdb840feb4,124242548,0,0x0,8
tick,0x7ffdb840feb4,124258548,0,0x0,8
tick,0x7ffdb840feb4,124274548,0,0x0,8
tick,0x7ffdb840feb4,124290543,0,0x0,8
tick,0x7ffdb840feb4,124306541,0,0x0,8
tick,0x7ffdb840feb4,124322558,0,0x0,8
tick,0x7ffdb840feb4,124338554,0,0x0,8
tick,0x7ffdb840feb4,124354377,0,0x0,8
tick,0x7ffdb840feb4,124370070,0,0x0,8
tick,0x7ffdb840feb4,124385550,0,0x0,8
tick,0x7ffdb840feb4,124400771,0,0x0,8
tick,0x7ffdb840feb4,124416035,0,0x0,8
tick,0x7ffdb840feb4,124432038,0,0x0,8
tick,0x7ffdb840feb4,124448084,0,0x0,8
tick,0x7ffdb840feb4,124463545,0,0x0,8
tick,0x7ffdb840feb4,124479087,0,0x0,8
tick,0x7ffdb840feb4,124494561,0,0x0,8
tick,0x7ffdb840feb4,124510085,0,0x0,8
tick,0x7ffdb840feb4,124526092,0,0x0,8
tick,0x7ffdb840feb4,124541266,0,0x0,8
tick,0x7ffdb840feb4,124556391,0,0x0,8
tick,0x7ffdb840feb4,124572075,0,0x0,8
tick,0x7ffdb840feb4,124588097,0,0x0,8
tick,0x7ffdb840feb4,124603286,0,0x0,8
tick,0x7ffdb840feb4,124618101,0,0x0,8
tick,0x7ffdb840feb4,124633293,0,0x0,8
tick,0x7ffdb840feb4,124648106,0,0x0,8
tick,0x7ffdb840feb4,124663552,0,0x0,8
tick,0x7ffdb840feb4,124679115,0,0x0,8
tick,0x7ffdb840feb4,124694818,0,0x0,8
tick,0x7ffdb840feb4,124710131,0,0x0,8
tick,0x7ffdb840feb4,124725276,0,0x0,8
tick,0x7ffdb840feb4,124740419,0,0x0,8
tick,0x7ffdb840feb4,124755299,0,0x0,8
tick,0x7ffdb840feb4,124770778,0,0x0,8
tick,0x7ffdb840feb4,124786124,0,0x0,8
tick,0x7ffdb840feb4,124801542,0,0x0,8
tick,0x7ffdb840feb4,124817555,0,0x0,8
tick,0x7ffdb840feb4,124833463,0,0x0,8
tick,0x7ffdb840feb4,124848563,0,0x0,8
tick,0x7ffdb840feb4,124864457,0,0x0,8
tick,0x7ffdb840feb4,124880307,0,0x0,8
tick,0x7ffdb840feb4,124895520,0,0x0,8
tick,0x7ffdb840feb4,124910646,0,0x0,8
tick,0x7ffdb840feb4,124925846,0,0x0,8
tick,0x7ffdb840feb4,124941170,0,0x0,8
tick,0x7ffdb840feb4,124956400,0,0x0,8
tick,0x7ffdb840feb4,124972189,0,0x0,8
tick,0x7ffdb840feb4,124988140,0,0x0,8
tick,0x7ffdb840feb4,125004147,0,0x0,8
tick,0x7ffdb840feb4,125019315,0,0x0,8
tick,0x7ffdb840feb4,125035408,0,0x0,8
tick,0x7ffdb840feb4,125050857,0,0x0,8
tick,0x7ffdb840feb4,125066463,0,0x0,8
tick,0x7ffdb840feb4,125081118,0,0x0,8
tick,0x7ffdb840feb4,125096338,0,0x0,8
tick,0x7ffdb840feb4,125111834,0,0x0,8
tick,0x7ffdb840feb4,125127156,0,0x0,8
tick,0x7ffdb840feb4,125142344,0,0x0,8
tick,0x7ffdb840feb4,125158179,0,0x0,8
tick,0x7ffdb840feb4,125173354,0,0x0,8
tick,0x7ffdb840feb4,125189184,0,0x0,8
tick,0x7ffdb840feb4,125204354,0,0x0,8
tick,0x7ffdb840feb4,125219342,0,0x0,8
tick,0x7ffdb840feb4,125235409,0,0x0,8
tick,0x7ffdb840feb4,125250370,0,0x0,8
tick,0x7ffdb840feb4,125265351,0,0x0,8
tick,0x7ffdb840feb4,125281360,0,0x0,8
tick,0x7ffdb840feb4,125297359,0,0x0,8
tick,0x7ffdb840feb4,125312839,0,0x0,8
tick,0x7ffdb840feb4,125328843,0,0x0,8
tick,0x7ffdb840feb4,125344550,0,0x0,8
tick,0x7ffdb840feb4,125360376,0,0x0,8
tick,0x7ffdb840feb4,125375526,0,0x0,8
tick,0x7ffdb840feb4,125390694,0,0x0,8
tick,0x7ffdb840feb4,125406710,0,0x0,8
tick,0x7ffdb840feb4,125422715,0,0x0,8
tick,0x7ffdb840feb4,125438705,0,0x0,8
tick,0x7ffdb840feb4,125454703,0,0x0,8
tick,0x7ffdb840feb4,125470244,0,0x0,8
tick,0x7ffdb840feb4,125486244,0,0x0,8
tick,0x7ffdb840feb4,125502256,0,0x0,8
tick,0x7ffdb840feb4,125518228,0,0x0,8
tick,0x7ffdb840feb4,125534125,0,0x0,8
tick,0x7ffdb840feb4,125549234,0,0x0,8
tick,0x7ffdb840feb4,125565240,0,0x0,8
tick,0x7ffdb840feb4,125580117,0,0x0,8
tick,0x7ffdb840feb4,125595404,0,0x0,8
tick,0x7ffdb840feb4,125611401,0,0x0,8
tick,0x7ffdb840feb4,125626780,0,0x0,8
tick,0x7ffdb840feb4,125642422,0,0x0,8
tick,0x7ffdb840feb4,125657408,0,0x0,8
tick,0x7ffdb840feb4,125673367,0,0x0,8
tick,0x7ffdb840feb4,125688426,0,0x0,8
tick,0x7ffdb840feb4,125703410,0,0x0,8
tick,0x7ffdb840feb4,125719405,0,0x0,8
tick,0x7ffdb840feb4,125735415,0,0x0,8
tick,0x7ffdb840feb4,125751427,0,0x0,8
tick,0x7ffdb840feb4,125767461,0,0x0,8
tick,0x7ffdb840feb4,125783421,0,0x0,8
tick,0x7ffdb840feb4,125799259,0,0x0,8
tick,0x7ffdb840feb4,125814431,0,0x0,8
tick,0x7ffdb840feb4,125830434,0,0x0,8
tick,0x7ffdb840feb4,125845437,0,0x0,8
tick,0x7ffdb840feb4,125861441,0,0x0,8
tick,0x7ffdb840feb4,125877431,0,0x0,8
tick,0x7ffdb840feb4,125893441,0,0x0,8
tick,0x7ffdb840feb4,125909455,0,0x0,8
tick,0x7ffdb840feb4,125925452,0,0x0,8
tick,0x7ffdb840feb4,125941441,0,0x0,8
tick,0x7ffdb840feb4,125957430,0,0x0,8
tick,0x7ffdb840feb4,125973443,0,0x0,8
tick,0x7ffdb840feb4,125988453,0,0x0,8
tick,0x7ffdb840feb4,126004457,0,0x0,8
tick,0x7ffdb840feb4,126019460,0,0x0,8
tick,0x7ffdb840feb4,126035462,0,0x0,8
tick,0x7ffdb840feb4,126051453,0,0x0,8
tick,0x7ffdb840feb4,126067452,0,0x0,8
tick,0x7ffdb840feb4,126083465,0,0x0,8
tick,0x7ffdb840feb4,126098809,0,0x0,8
tick,0x7ffdb840feb4,126114460,0,0x0,8
tick,0x7ffdb840feb4,126129461,0,0x0,8
tick,0x7ffdb840feb4,126144718,0,0x0,8
tick,0x7ffdb840feb4,126160462,0,0x0,8
tick,0x7ffdb840feb4,126175472,0,0x0,8
tick,0x7ffdb840feb4,126191491,0,0x0,8
tick,0x7ffdb840feb4,126207065,0,0x0,8
tick,0x7ffdb840feb4,126222480,0,0x0,8
tick,0x7ffdb840feb4,126237687,0,0x0,8
tick,0x7ffdb840feb4,126253319,0,0x0,8
tick,0x7ffdb840feb4,126268310,0,0x0,8
tick,0x7ffdb840feb4,126284307,0,0x0,8
tick,0x7ffdb840feb4,126299303,0,0x0,8
tick,0x7ffdb840feb4,126314475,0,0x0,8
tick,0x7ffdb840feb4,126330493,0,0x0,8
tick,0x7ffdb840feb4,126345549,0,0x0,8
tick,0x7ffdb840feb4,126361520,0,0x0,8
tick,0x7ffdb840feb4,126376489,0,0x0,8
tick,0x7ffdb840feb4,126391485,0,0x0,8
tick,0x7ffdb840feb4,126407500,0,0x0,8
tick,0x7ffdb840feb4,126422696,0,0x0,8
tick,0x7ffdb840feb4,126437500,0,0x0,8
tick,0x7ffdb840feb4,126452658,0,0x0,8
tick,0x7ffdb840feb4,126468511,0,0x0,8
tick,0x7ffdb840feb4,126483510,0,0x0,8
tick,0x7ffdb840feb4,126499520,0,0x0,8
tick,0x7ffdb840feb4,126515467,0,0x0,8
tick,0x7ffdb840feb4,126530502,0,0x0,8
tick,0x7ffdb840feb4,126545926,0,0x0,8
tick,0x7ffdb840feb4,126561523,0,0x0,8
tick,0x7ffdb840feb4,126577443,0,0x0,8
tick,0x7ffdb840feb4,126593291,0,0x0,8
tick,0x7ffdb840feb4,126609340,0,0x0,8
tick,0x7ffdb840feb4,126624675,0,0x0,8
tick,0x7ffdb840feb4,126639518,0,0x0,8
tick,0x7ffdb840feb4,126655330,0,0x0,8
tick,0x7ffdb840feb4,126671151,0,0x0,8
tick,0x7ffdb840feb4,126686496,0,0x0,8
tick,0x7ffdb840feb4,126701827,0,0x0,8
tick,0x7ffdb840feb4,126717352,0,0x0,8
tick,0x7ffdb840feb4,126733132,0,0x0,8
tick,0x7ffdb840feb4,126748364,0,0x0,8
tick,0x7ffdb840feb4,126763361,0,0x0,8
tick,0x7ffdb840feb4,126778548,0,0x0,8
tick,0x7ffdb840feb4,126794357,0,0x0,8
tick,0x7ffdb840feb4,126809373,0,0x0,8
tick,0x7ffdb840feb4,126825376,0,0x0,8
tick,0x7ffdb840feb4,126840549,0,0x0,8
tick,0x7ffdb840feb4,126855941,0,0x0,8
tick,0x7ffdb840feb4,126871558,0,0x0,8
tick,0x7ffdb840feb4,126886907,0,0x0,8
tick,0x7ffdb840feb4,126902560,0,0x0,8
tick,0x7ffdb840feb4,126917931,0,0x0,8
tick,0x7ffdb840feb4,126933135,0,0x0,8
tick,0x7ffdb840feb4,126948911,0,0x0,8
tick,0x7ffdb840feb4,126964915,0,0x0,8
tick,0x7ffdb840feb4,126980549,0,0x0,8
tick,0x7ffdb840feb4,126996497,0,0x0,8
tick,0x7ffdb840feb4,127011563,0,0x0,8
tick,0x7ffdb840feb4,127027379,0,0x0,8
tick,0x7ffdb840feb4,127041708,0,0x0,8
tick,0x7ffdb840feb4,127056955,0,0x0,8
tick,0x7ffdb840feb4,127072339,0,0x0,8
tick,0x7ffdb840feb4,127087354,0,0x0,8
tick,0x7ffdb840feb4,127102580,0,0x0,8
tick,0x7ffdb840feb4,127118571,0,0x0,8
tick,0x7ffdb840feb4,127134134,0,0x0,8
tick,0x7ffdb840feb4,127149402,0,0x0,8
tick,0x7ffdb840feb4,127165330,0,0x0,8
tick,0x7ffdb840feb4,127180579,0,0x0,8
tick,0x7ffdb840feb4,127196591,0,0x0,8
tick,0x7ffdb840feb4,127212582,0,0x0,8
tick,0x7ffdb840feb4,127228415,0,0x0,8
tick,0x7ffdb840feb4,127243715,0,0x0,8
tick,0x7ffdb840feb4,127259592,0,0x0,8
tick,0x7ffdb840feb4,127274588,0,0x0,8
tick,0x7ffdb840feb4,127290595,0,0x0,8
tick,0x7ffdb840feb4,127306597,0,0x0,8
tick,0x7ffdb840feb4,127322588,0,0x0,8
tick,0x7ffdb840feb4,127338587,0,0x0,8
tick,0x7ffdb840feb4,127353976,0,0x0,8
tick,0x7ffdb840feb4,127369591,0,0x0,8
tick,0x7ffdb840feb4,127385140,0,0x0,8
tick,0x7ffdb840feb4,127400606,0,0x0,8
tick,0x7ffdb840feb4,127416431,0,0x0,8
tick,0x7ffdb840feb4,127431446,0,0x0,8
tick,0x7ffdb840feb4,127446587,0,0x0,8
tick,0x7ffdb840feb4,127461771,0,0x0,8
tick,0x7ffdb840feb4,127477443,0,0x0,8
tick,0x7ffdb840feb4,127492585,0,0x0,8
tick,0x7ffdb840feb4,127508437,0,0x0,8
tick,0x7ffdb840feb4,127523594,0,0x0,8
tick,0x7ffdb840feb4,127539591,0,0x0,8
tick,0x7ffdb840feb4,127554594,0,0x0,8
tick,0x7ffdb840feb4,127569606,0,0x0,8
tick,0x7ffdb840feb4,127585141,0,0x0,8
tick,0x7ffdb840feb4,127600637,0,0x0,8
tick,0x7ffdb840feb4,127616478,0,0x0,8
tick,0x7ffdb840feb4,127631468,0,0x0,8
tick,0x7ffdb840feb4,127647463,0,0x0,8
tick,0x7ffdb840feb4,127662637,0,0x0,8
tick,0x7ffdb840feb4,127678472,0,0x0,8
tick,0x7ffdb840feb4,127693466,0,0x0,8
tick,0x7ffdb840feb4,127709482,0,0x0,8
tick,0x7ffdb840feb4,127724473,0,0x0,8
tick,0x7ffdb840feb4,127739656,0,0x0,8
tick,0x7ffdb840feb4,127755160,0,0x0,8
tick,0x7ffdb840feb4,127770649,0,0x0,8
tick,0x7ffdb840feb4,127786148,0,0x0,8
tick,0x7ffdb840feb4,127801909,0,0x0,8
tick,0x7ffdb840feb4,127817240,0,0x0,8
tick,0x7ffdb840feb4,127832629,0,0x0,8
tick,0x7ffdb840feb4,127848488,0,0x0,8
tick,0x7ffdb840feb4,127863673,0,0x0,8
tick,0x7ffdb840feb4,127878677,0,0x0,8
tick,0x7ffdb840feb4,127894503,0,0x0,8
tick,0x7ffdb840feb4,127909492,0,0x0,8
tick,0x7ffdb840feb4,127924943,0,0x0,8
tick,0x7ffdb840feb4,127940668,0,0x0,8
tick,0x7ffdb840feb4,127956532,0,0x0,8
tick,0x7ffdb840feb4,127971674,0,0x0,8
tick,0x7ffdb840feb4,127987142,0,0x0,8
tick,0x7ffdb840feb4,128002684,0,0x0,8
tick,0x7ffdb840feb4,128018693,0,0x0,8
tick,0x7ffdb840feb4,128034700,0,0x0,8
tick,0x7ffdb840feb4,128049691,0,0x0,8
tick,0x7ffdb840feb4,128065476,0,0x0,8
tick,0x7ffdb840feb4,128080697,0,0x0,8
tick,0x7ffdb840feb4,128096172,0,0x0,8
tick,0x7ffdb840feb4,128111680,0,0x0,8
tick,0x7ffdb840feb4,128126696,0,0x0,8
tick,0x7ffdb840feb4,128142142,0,0x0,8
tick,0x7ffdb840feb4,128157526,0,0x0,8
tick,0x7ffdb840feb4,128172701,0,0x0,8
tick,0x7ffdb840feb4,128188528,0,0x0,8
tick,0x7ffdb840feb4,128204055,0,0x0,8
tick,0x7ffdb840feb4,128219712,0,0x0,8
tick,0x7ffdb840feb4,128234690,0,0x0,8
tick,0x7ffdb840feb4,128249537,0,0x0,8
tick,0x7ffdb840feb4,128265521,0,0x0,8
tick,0x7ffdb840feb4,128281476,0,0x0,8
tick,0x7ffdb840feb4,128297487,0,0x0,8
tick,0x7ffdb840feb4,128313485,0,0x0,8
tick,0x7ffdb840feb4,128329483,0,0x0,8
tick,0x7ffdb840feb4,128345561,0,0x0,8
tick,0x7ffdb840feb4,128360720,0,0x0,8
tick,0x7ffdb840feb4,128376201,0,0x0,8
tick,0x7ffdb840feb4,128392126,0,0x0,8
tick,0x7ffdb840feb4,128407718,0,0x0,8
tick,0x7ffdb840feb4,128423693,0,0x0,8
tick,0x7ffdb840feb4,128439555,0,0x0,8
tick,0x7ffdb840feb4,128455630,0,0x0,8
tick,0x7ffdb840feb4,128471635,0,0x0,8
tick,0x7ffdb840feb4,128487160,0,0x0,8
tick,0x7ffdb840feb4,128502501,0,0x0,8
tick,0x7ffdb840feb4,128518575,0,0x0,8
tick,0x7ffdb840feb4,128534145,0,0x0,8
tick,0x7ffdb840feb4,128549572,0,0x0,8
tick,0x7ffdb840feb4,128564576,0,0x0,8
tick,0x7ffdb840feb4,128580175,0,0x0,8
tick,0x7ffdb840feb4,128595568,0,0x0,8
tick,0x7ffdb840feb4,128610756,0,0x0,8
tick,0x7ffdb840feb4,128625926,0,0x0,8
tick,0x7ffdb840feb4,128641556,0,0x0,8
tick,0x7ffdb840feb4,128657215,0,0x0,8
tick,0x7ffdb840feb4,128672921,0,0x0,8
tick,0x7ffdb840feb4,128688588,0,0x0,8
tick,0x7ffdb840feb4,128704225,0,0x0,8
tick,0x7ffdb840feb4,128719758,0,0x0,8
tick,0x7ffdb840feb4,128735150,0,0x0,8
tick,0x7ffdb840feb4,128751145,0,0x0,8
tick,0x7ffdb840feb4,128766595,0,0x0,8
tick,0x7ffdb840feb4,128782144,0,0x0,8
tick,0x7ffdb840feb4,128797570,0,0x0,8
tick,0x7ffdb840feb4,128812782,0,0x0,8
tick,0x7ffdb840feb4,128828603,0,0x0,8
tick,0x7ffdb840feb4,128844612,0,0x0,8
tick,0x7ffdb840feb4,128859779,0,0x0,8
tick,0x7ffdb840feb4,128875046,0,0x0,8
tick,0x7ffdb840feb4,128890789,0,0x0,8
tick,0x7ffdb840feb4,128906789,0,0x0,8
tick,0x7ffdb840feb4,128921941,0,0x0,8
tick,0x7ffdb840feb4,128936821,0,0x0,8
tick,0x7ffdb840feb4,128952804,0,0x0,8
tick,0x7ffdb840feb4,128968606,0,0x0,8
tick,0x7ffdb840feb4,128984142,0,0x0,8
tick,0x7ffdb840feb4,128999632,0,0x0,8
tick,0x7ffdb840feb4,129014787,0,0x0,8
tick,0x7ffdb840feb4,129030804,0,0x0,8
tick,0x7ffdb840feb4,129046498,0,0x0,8
tick,0x7ffdb840feb4,129061948,0,0x0,8
tick,0x7ffdb840feb4,129077046,0,0x0,8
tick,0x7ffdb840feb4,129092277,0,0x0,8
tick,0x7ffdb840feb4,129107719,0,0x0,8
tick,0x7ffdb840feb4,129122965,0,0x0,8
tick,0x7ffdb840feb4,129138635,0,0x0,8
tick,0x7ffdb840feb4,129154411,0,0x0,8
tick,0x7ffdb840feb4,129170400,0,0x0,8
tick,0x7ffdb840feb4,129186148,0,0x0,8
tick,0x7ffdb840feb4,129201826,0,0x0,8
tick,0x7ffdb840feb4,129216799,0,0x0,8
tick,0x7ffdb840feb4,129232090,0,0x0,8
tick,0x7ffdb840feb4,129247653,0,0x0,8
tick,0x7ffdb840feb4,129262837,0,0x0,8
tick,0x7ffdb840feb4,129278666,0,0x0,8
tick,0x7ffdb840feb4,129293665,0,0x0,8
tick,0x7ffdb840feb4,129309661,0,0x0,8
tick,0x7ffdb840feb4,129325663,0,0x0,8
tick,0x7ffdb840feb4,129341557,0,0x0,8
tick,0x7ffdb840feb4,129356584,0,0x0,8
tick,0x7ffdb840feb4,129371840,0,0x0,8
tick,0x7ffdb840feb4,129387263,0,0x0,8
tick,0x7ffdb840feb4,129402846,0,0x0,8
tick,0x7ffdb840feb4,129418580,0,0x0,8
tick,0x7ffdb840feb4,129434152,0,0x0,8
tick,0x7ffdb840feb4,129449680,0,0x0,8
tick,0x7ffdb840feb4,129464477,0,0x0,8
tick,0x7ffdb840feb4,129479686,0,0x0,8
tick,0x7ffdb840feb4,129495720,0,0x0,8
tick,0x7ffdb840feb4,129510863,0,0x0,8
tick,0x7ffdb840feb4,129526717,0,0x0,8
tick,0x7ffdb840feb4,129541866,0,0x0,8
tick,0x7ffdb840feb4,129557565,0,0x0,8
tick,0x7ffdb840feb4,129572695,0,0x0,8
tick,0x7ffdb840feb4,129588690,0,0x0,8
tick,0x7ffdb840feb4,129603713,0,0x0,8
tick,0x7ffdb840feb4,129618729,0,0x0,8
tick,0x7ffdb840feb4,129634723,0,0x0,8
tick,0x7ffdb840feb4,129649717,0,0x0,8
tick,0x7ffdb840feb4,129665490,0,0x0,8
tick,0x7ffdb840feb4,129681144,0,0x0,8
tick,0x7ffdb840feb4,129696355,0,0x0,8
tick,0x7ffdb840feb4,129711736,0,0x0,8
tick,0x7ffdb840feb4,129727713,0,0x0,8
tick,0x7ffdb840feb4,129743739,0,0x0,8
tick,0x7ffdb840feb4,129758893,0,0x0,8
tick,0x7ffdb840feb4,129773965,0,0x0,8
tick,0x7ffdb840feb4,129789713,0,0x0,8
tick,0x7ffdb840feb4,129805726,0,0x0,8
tick,0x7ffdb840feb4,129820757,0,0x0,8
tick,0x7ffdb840feb4,129835363,0,0x0,8
tick,0x7ffdb840feb4,129850906,0,0x0,8
tick,0x7ffdb840feb4,129866486,0,0x0,8
tick,0x7ffdb840feb4,129882150,0,0x0,8
tick,0x7ffdb840feb4,129897415,0,0x0,8
tick,0x7ffdb840feb4,129912814,0,0x0,8
tick,0x7ffdb840feb4,129928738,0,0x0,8
tick,0x7ffdb840feb4,129943915,0,0x0,8
tick,0x7ffdb840feb4,129959741,0,0x0,8
tick,0x7ffdb840feb4,129975297,0,0x0,8
tick,0x7ffdb840feb4,129990753,0,0x0,8
tick,0x7ffdb840feb4,130006722,0,0x0,8
tick,0x7ffdb840feb4,130021933,0,0x0,8
tick,0x7ffdb840feb4,130037740,0,0x0,8
tick,0x7ffdb840feb4,130053183,0,0x0,8
tick,0x7ffdb840feb4,130068755,0,0x0,8
tick,0x7ffdb840feb4,130084088,0,0x0,8
tick,0x7ffdb840feb4,130099150,0,0x0,8
tick,0x7ffdb840feb4,130114477,0,0x0,8
tick,0x7ffdb840feb4,130129755,0,0x0,8
tick,0x7ffdb840feb4,130145734,0,0x0,8
tick,0x7ffdb840feb4,130160938,0,0x0,8
tick,0x7ffdb840feb4,130176758,0,0x0,8
tick,0x7ffdb840feb4,130191773,0,0x0,8
tick,0x7ffdb840feb4,130207770,0,0x0,8
tick,0x7ffdb840feb4,130222947,0,0x0,8
tick,0x7ffdb840feb4,130238065,0,0x0,8
tick,0x7ffdb840feb4,130253560,0,0x0,8
tick,0x7ffdb840feb4,130268780,0,0x0,8
tick,0x7ffdb840feb4,130284797,0,0x0,8
tick,0x7ffdb840feb4,130300780,0,0x0,8
tick,0x7ffdb840feb4,130316793,0,0x0,8
tick,0x7ffdb840feb4,130332789,0,0x0,8
tick,0x7ffdb840feb4,130348801,0,0x0,8
tick,0x7ffdb840feb4,130364493,0,0x0,8
tick,0x7ffdb840feb4,130379743,0,0x0,8
tick,0x7ffdb840feb4,130394758,0,0x0,8
tick,0x7ffdb840feb4,130410571,0,0x0,8
tick,0x7ffdb840feb4,130425749,0,0x0,8
tick,0x7ffdb840feb4,130440977,0,0x0,8
tick,0x7ffdb840feb4,130456175,0,0x0,8
tick,0x7ffdb840feb4,130472174,0,0x0,8
tick,0x7ffdb840feb4,130487175,0,0x0,8
tick,0x7ffdb840feb4,130502502,0,0x0,8
tick,0x7ffdb840feb4,130517793,0,0x0,8
tick,0x7ffdb840feb4,130533152,0,0x0,8
tick,0x7ffdb840feb4,130548810,0,0x0,8
tick,0x7ffdb840feb4,130564484,0,0x0,8
tick,0x7ffdb840feb4,130579746,0,0x0,8
tick,0x7ffdb840feb4,130595653,0,0x0,8
tick,0x7ffdb840feb4,130610991,0,0x0,8
tick,0x7ffdb840feb4,130625995,0,0x0,8
tick,0x7ffdb840feb4,130641149,0,0x0,8
tick,0x7ffdb840feb4,130656404,0,0x0,8
tick,0x7ffdb840feb4,130671635,0,0x0,8
tick,0x7ffdb840feb4,130686981,0,0x0,8
tick,0x7ffdb840feb4,130702824,0,0x0,8
tick,0x7ffdb840feb4,130718829,0,0x0,8
tick,0x7ffdb840feb4,130734152,0,0x0,8
tick,0x7ffdb840feb4,130749821,0,0x0,8
tick,0x7ffdb840feb4,130764489,0,0x0,8
tick,0x7ffdb840feb4,130779852,0,0x0,8
tick,0x7ffdb840feb4,130794816,0,0x0,8
tick,0x7ffdb840feb4,130810024,0,0x0,8
tick,0x7ffdb840feb4,130825813,0,0x0,8
tick,0x7ffdb840feb4,130841025,0,0x0,8
tick,0x7ffdb840feb4,130856643,0,0x0,8
tick,0x7ffdb840feb4,130872647,0,0x0,8
tick,0x7ffdb840feb4,130887847,0,0x0,8
tick,0x7ffdb840feb4,130903040,0,0x0,8
tick,0x7ffdb840feb4,130918860,0,0x0,8
tick,0x7ffdb840feb4,130934863,0,0x0,8
tick,0x7ffdb840feb4,130949821,0,0x0,8
tick,0x7ffdb840feb4,130964891,0,0x0,8
tick,0x7ffdb840feb4,130980999,0,0x0,8
tick,0x7ffdb840feb4,130997094,0,0x0,8
tick,0x7ffdb840feb4,131013047,0,0x0,8
tick,0x7ffdb840feb4,131028889,0,0x0,8
tick,0x7ffdb840feb4,131044889,0,0x0,8
tick,0x7ffdb840feb4,131060051,0,0x0,8
tick,0x7ffdb840feb4,131075417,0,0x0,8
tick,0x7ffdb840feb4,131091415,0,0x0,8
tick,0x7ffdb840feb4,131106166,0,0x0,8
tick,0x7ffdb840feb4,131122062,0,0x0,8
tick,0x7ffdb840feb4,131137491,0,0x0,8
tick,0x7ffdb840feb4,131152487,0,0x0,8
tick,0x7ffdb840feb4,131167881,0,0x0,8
tick,0x7ffdb840feb4,131183065,0,0x0,8
tick,0x7ffdb840feb4,131198887,0,0x0,8
tick,0x7ffdb840feb4,131213891,0,0x0,8
tick,0x7ffdb840feb4,131229494,0,0x0,8
tick,0x7ffdb840feb4,131244224,0,0x0,8
tick,0x7ffdb840feb4,131259492,0,0x0,8
tick,0x7ffdb840feb4,131275073,0,0x0,8
tick,0x7ffdb840feb4,131291098,0,0x0,8
tick,0x7ffdb840feb4,131306080,0,0x0,8
tick,0x7ffdb840feb4,131322078,0,0x0,8
tick,0x7ffdb840feb4,131337089,0,0x0,8
tick,0x7ffdb840feb4,131353101,0,0x0,8
tick,0x7ffdb840feb4,131368925,0,0x0,8
tick,0x7ffdb840feb4,131384106,0,0x0,8
tick,0x7ffdb840feb4,131399769,0,0x0,8
tick,0x7ffdb840feb4,131415242,0,0x0,8
tick,0x7ffdb840feb4,131431109,0,0x0,8
tick,0x7ffdb840feb4,131446264,0,0x0,8
tick,0x7ffdb840feb4,131462082,0,0x0,8
tick,0x7ffdb840feb4,131477932,0,0x0,8
tick,0x7ffdb840feb4,131493089,0,0x0,8
tick,0x7ffdb840feb4,131508921,0,0x0,8
tick,0x7ffdb840feb4,131524694,0,0x0,8
tick,0x7ffdb840feb4,131540610,0,0x0,8
tick,0x7ffdb840feb4,131556627,0,0x0,8
tick,0x7ffdb840feb4,131572086,0,0x0,8
tick,0x7ffdb840feb4,131587620,0,0x0,8
tick,0x7ffdb840feb4,131603633,0,0x0,8
tick,0x7ffdb840feb4,131619655,0,0x0,8
tick,0x7ffdb840feb4,131635328,0,0x0,8
tick,0x7ffdb840feb4,131651126,0,0x0,8
tick,0x7ffdb840feb4,131666503,0,0x0,8
tick,0x7ffdb840feb4,131682158,0,0x0,8
tick,0x7ffdb840feb4,131696632,0,0x0,8
tick,0x7ffdb840feb4,131712636,0,0x0,8
tick,0x7ffdb840feb4,131727862,0,0x0,8
tick,0x7ffdb840feb4,131742638,0,0x0,8
tick,0x7ffdb840feb4,131757702,0,0x0,8
tick,0x7ffdb840feb4,131772965,0,0x0,8
tick,0x7ffdb840feb4,131788958,0,0x0,8
tick,0x7ffdb840feb4,131803641,0,0x0,8
tick,0x7ffdb840feb4,131818645,0,0x0,8
tick,0x7ffdb840feb4,131834115,0,0x0,8
tick,0x7ffdb840feb4,131849975,0,0x0,8
tick,0x7ffdb840feb4,131865497,0,0x0,8
tick,0x7ffdb840feb4,131881148,0,0x0,8
tick,0x7ffdb840feb4,131896154,0,0x0,8
tick,0x7ffdb840feb4,131910938,0,0x0,8
tick,0x7ffdb840feb4,131926165,0,0x0,8
tick,0x7ffdb840feb4,131942158,0,0x0,8
tick,0x7ffdb840feb4,131957479,0,0x0,8
tick,0x7ffdb840feb4,131972342,0,0x0,8
tick,0x7ffdb840feb4,131987457,0,0x0,8
tick,0x7ffdb840feb4,132003165,0,0x0,8
tick,0x7ffdb840feb4,132018477,0,0x0,8
tick,0x7ffdb840feb4,132033469,0,0x0,8
tick,0x7ffdb840feb4,132048994,0,0x0,8
tick,0x7ffdb840feb4,132064168,0,0x0,8
tick,0x7ffdb840feb4,132079994,0,0x0,8
tick,0x7ffdb840feb4,132095185,0,0x0,8
tick,0x7ffdb840feb4,132111170,0,0x0,8
tick,0x7ffdb840feb4,132126173,0,0x0,8
tick,0x7ffdb840feb4,132142192,0,0x0,8
tick,0x7ffdb840feb4,132157195,0,0x0,8
tick,0x7ffdb840feb4,132172205,0,0x0,8
tick,0x7ffdb840feb4,132187222,0,0x0,8
tick,0x7ffdb840feb4,132203223,0,0x0,8
tick,0x7ffdb840feb4,132218214,0,0x0,8
tick,0x7ffdb840feb4,132233212,0,0x0,8
tick,0x7ffdb840feb4,132249014,0,0x0,8
tick,0x7ffdb840feb4,132264477,0,0x0,8
tick,0x7ffdb840feb4,132280487,0,0x0,8
tick,0x7ffdb840feb4,132295477,0,0x0,8
tick,0x7ffdb840feb4,132310488,0,0x0,8
tick,0x7ffdb840feb4,132326486,0,0x0,8
tick,0x7ffdb840feb4,132341491,0,0x0,8
tick,0x7ffdb840feb4,132356502,0,0x0,8
tick,0x7ffdb840feb4,132372482,0,0x0,8
tick,0x7ffdb840feb4,132387502,0,0x0,8
tick,0x7ffdb840feb4,132402507,0,0x0,8
tick,0x7ffdb840feb4,132418517,0,0x0,8
tick,0x7ffdb840feb4,132433513,0,0x0,8
tick,0x7ffdb840feb4,132448502,0,0x0,8
tick,0x7ffdb840feb4,132464503,0,0x0,8
tick,0x7ffdb840feb4,132479510,0,0x0,8
tick,0x7ffdb840feb4,132494510,0,0x0,8
tick,0x7ffdb840feb4,132510224,0,0x0,8
tick,0x7ffdb840feb4,132525667,0,0x0,8
tick,0x7ffdb840feb4,132540458,0,0x0,8
tick,0x7ffdb840feb4,132555448,0,0x0,8
tick,0x7ffdb840feb4,132571053,0,0x0,8
tick,0x7ffdb840feb4,132586491,0,0x0,8
tick,0x7ffdb840feb4,132601733,0,0x0,8
tick,0x7ffdb840feb4,132617505,0,0x0,8
tick,0x7ffdb840feb4,132632524,0,0x0,8
tick,0x7ffdb840feb4,132647832,0,0x0,8
tick,0x7ffdb840feb4,132662553,0,0x0,8
tick,0x7ffdb840feb4,132678577,0,0x0,8
tick,0x7ffdb840feb4,132693563,0,0x0,8
tick,0x7ffdb840feb4,132709065,0,0x0,8
tick,0x7ffdb840feb4,132724598,0,0x0,8
tick,0x7ffdb840feb4,132740081,0,0x0,8
tick,0x7ffdb840feb4,132755652,0,0x0,8
tick,0x7ffdb840feb4,132771085,0,0x0,8
tick,0x7ffdb840feb4,132786090,0,0x0,8
tick,0x7ffdb840feb4,132802105,0,0x0,8
tick,0x7ffdb840feb4,132817114,0,0x0,8
tick,0x7ffdb840feb4,132833117,0,0x0,8
tick,0x7ffdb840feb4,132848124,0,0x0,8
tick,0x7ffdb840feb4,132863109,0,0x0,8
tick,0x7ffdb840feb4,132878105,0,0x0,8
tick,0x7ffdb840feb4,132894105,0,0x0,8
tick,0x7ffdb840feb4,132909111,0,0x0,8
tick,0x7ffdb840feb4,132925113,0,0x0,8
tick,0x7ffdb840feb4,132941118,0,0x0,8
tick,0x7ffdb840feb4,132956133,0,0x0,8
tick,0x7ffdb840feb4,132971156,0,0x0,8
tick,0x7ffdb840feb4,132985811,0,0x0,8
tick,0x7ffdb840feb4,133001037,0,0x0,8
tick,0x7ffdb840feb4,133017051,0,0x0,8
tick,0x7ffdb840feb4,133031849,0,0x0,8
tick,0x7ffdb840feb4,133046864,0,0x0,8
tick,0x7ffdb840feb4,133061870,0,0x0,8
tick,0x7ffdb840feb4,133077095,0,0x0,8
tick,0x7ffdb840feb4,133092924,0,0x0,8
tick,0x7ffdb840feb4,133108118,0,0x0,8
tick,0x7ffdb840feb4,133123125,0,0x0,8
tick,0x7ffdb840feb4,133139136,0,0x0,8
tick,0x7ffdb840feb4,133154382,0,0x0,8
tick,0x7ffdb840feb4,133169780,0,0x0,8
tick,0x7ffdb840feb4,133185774,0,0x0,8
tick,0x7ffdb840feb4,133201788,0,0x0,8
tick,0x7ffdb840feb4,133217765,0,0x0,8
tick,0x7ffdb840feb4,133232775,0,0x0,8
tick,0x7ffdb840feb4,133247783,0,0x0,8
tick,0x7ffdb840feb4,133262787,0,0x0,8
tick,0x7ffdb840feb4,133277802,0,0x0,8
tick,0x7ffdb840feb4,133293799,0,0x0,8
tick,0x7ffdb840feb4,133309784,0,0x0,8
tick,0x7ffdb840feb4,133325790,0,0x0,8
tick,0x7ffdb840feb4,133341791,0,0x0,8
tick,0x7ffdb840feb4,133357794,0,0x0,8
tick,0x7ffdb840feb4,133372798,0,0x0,8
tick,0x7ffdb840feb4,133388804,0,0x0,8
tick,0x7ffdb840feb4,133403801,0,0x0,8
tick,0x7ffdb840feb4,133419812,0,0x0,8
tick,0x7ffdb840feb4,133435807,0,0x0,8
tick,0x7ffdb840feb4,133451813,0,0x0,8
tick,0x7ffdb840feb4,133467498,0,0x0,8
tick,0x7ffdb840feb4,133483177,0,0x0,8
tick,0x7ffdb840feb4,133498783,0,0x0,8
tick,0x7ffdb840feb4,133514499,0,0x0,8
tick,0x7ffdb840feb4,133530175,0,0x0,8
tick,0x7ffdb840feb4,133545837,0,0x0,8
tick,0x7ffdb840feb4,133561349,0,0x0,8
tick,0x7ffdb840feb4,133576175,0,0x0,8
tick,0x7ffdb840feb4,133591350,0,0x0,8
tick,0x7ffdb840feb4,133607372,0,0x0,8
tick,0x7ffdb840feb4,133622810,0,0x0,8
tick,0x7ffdb840feb4,133638363,0,0x0,8
tick,0x7ffdb840feb4,133653525,0,0x0,8
tick,0x7ffdb840feb4,133669183,0,0x0,8
tick,0x7ffdb840feb4,133685204,0,0x0,8
tick,0x7ffdb840feb4,133700372,0,0x0,8
tick,0x7ffdb840feb4,133715108,0,0x0,8
tick,0x7ffdb840feb4,133730370,0,0x0,8
tick,0x7ffdb840feb4,133746027,0,0x0,8
tick,0x7ffdb840feb4,133761372,0,0x0,8
tick,0x7ffdb840feb4,133777402,0,0x0,8
tick,0x7ffdb840feb4,133792975,0,0x0,8
tick,0x7ffdb840feb4,133808215,0,0x0,8
tick,0x7ffdb840feb4,133823842,0,0x0,8
tick,0x7ffdb840feb4,133839213,0,0x0,8
tick,0x7ffdb840feb4,133854413,0,0x0,8
tick,0x7ffdb840feb4,133870214,0,0x0,8
tick,0x7ffdb840feb4,133885612,0,0x0,8
tick,0x7ffdb840feb4,133901380,0,0x0,8
tick,0x7ffdb840feb4,133916529,0,0x0,8
tick,0x7ffdb840feb4,133932178,0,0x0,8
tick,0x7ffdb840feb4,133947390,0,0x0,8
tick,0x7ffdb840feb4,133962538,0,0x0,8
tick,0x7ffdb840feb4,133977796,0,0x0,8
tick,0x7ffdb840feb4,133993584,0,0x0,8
tick,0x7ffdb840feb4,134009590,0,0x0,8
tick,0x7ffdb840feb4,134024848,0,0x0,8
tick,0x7ffdb840feb4,134040230,0,0x0,8
tick,0x7ffdb840feb4,134056234,0,0x0,8
tick,0x7ffdb840feb4,134071562,0,0x0,8
tick,0x7ffdb840feb4,134087567,0,0x0,8
tick,0x7ffdb840feb4,134103242,0,0x0,8
tick,0x7ffdb840feb4,134119253,0,0x0,8
tick,0x7ffdb840feb4,134135250,0,0x0,8
tick,0x7ffdb840feb4,134150250,0,0x0,8
tick,0x7ffdb840feb4,134165507,0,0x0,8
tick,0x7ffdb840feb4,134181421,0,0x0,8
tick,0x7ffdb840feb4,134196826,0,0x0,8
tick,0x7ffdb840feb4,134212255,0,0x0,8
tick,0x7ffdb840feb4,134228252,0,0x0,8
tick,0x7ffdb840feb4,134243436,0,0x0,8
tick,0x7ffdb840feb4,134259268,0,0x0,8
tick,0x7ffdb840feb4,134275109,0,0x0,8
tick,0x7ffdb840feb4,134290262,0,0x0,8
tick,0x7ffdb840feb4,134305662,0,0x0,8
tick,0x7ffdb840feb4,134321441,0,0x0,8
tick,0x7ffdb840feb4,134336445,0,0x0,8
tick,0x7ffdb840feb4,134352456,0,0x0,8
tick,0x7ffdb840feb4,134367453,0,0x0,8
tick,0x7ffdb840feb4,134383157,0,0x0,8
tick,0x7ffdb840feb4,134398815,0,0x0,8
tick,0x7ffdb840feb4,134413938,0,0x0,8
tick,0x7ffdb840feb4,134429273,0,0x0,8
tick,0x7ffdb840feb4,134444292,0,0x0,8
tick,0x7ffdb840feb4,134460278,0,0x0,8
tick,0x7ffdb840feb4,134476115,0,0x0,8
tick,0x7ffdb840feb4,134491881,0,0x0,8
tick,0x7ffdb840feb4,134507722,0,0x0,8
tick,0x7ffdb840feb4,134523813,0,0x0,8
tick,0x7ffdb840feb4,134539285,0,0x0,8
tick,0x7ffdb840feb4,134555292,0,0x0,8
tick,0x7ffdb840feb4,134570467,0,0x0,8
tick,0x7ffdb840feb4,134585196,0,0x0,8
tick,0x7ffdb840feb4,134601303,0,0x0,8
tick,0x7ffdb840feb4,134616512,0,0x0,8
tick,0x7ffdb840feb4,134632175,0,0x0,8
tick,0x7ffdb840feb4,134647175,0,0x0,8
tick,0x7ffdb840feb4,134662305,0,0x0,8
tick,0x7ffdb840feb4,134677829,0,0x0,8
tick,0x7ffdb840feb4,134693287,0,0x0,8
tick,0x7ffdb840feb4,134708312,0,0x0,8
tick,0x7ffdb840feb4,134723821,0,0x0,8
tick,0x7ffdb840feb4,134739312,0,0x0,8
tick,0x7ffdb840feb4,134754320,0,0x0,8
tick,0x7ffdb840feb4,134769497,0,0x0,8
tick,0x7ffdb840feb4,134784892,0,0x0,8
tick,0x7ffdb840feb4,134800331,0,0x0,8
tick,0x7ffdb840feb4,134815508,0,0x0,8
tick,0x7ffdb840feb4,134831496,0,0x0,8
tick,0x7ffdb840feb4,134846514,0,0x0,8
tick,0x7ffdb840feb4,134862424,0,0x0,8
tick,0x7ffdb840feb4,134877849,0,0x0,8
tick,0x7ffdb840feb4,134892897,0,0x0,8
tick,0x7ffdb840feb4,134908345,0,0x0,8
tick,0x7ffdb840feb4,134923839,0,0x0,8
tick,0x7ffdb840feb4,134939332,0,0x0,8
tick,0x7ffdb840feb4,134955348,0,0x0,8
tick,0x7ffdb840feb4,134970520,0,0x0,8
tick,0x7ffdb840feb4,134986243,0,0x0,8
tick,0x7ffdb840feb4,135001249,0,0x0,8
tick,0x7ffdb840feb4,135017248,0,0x0,8
tick,0x7ffdb840feb4,135032598,0,0x0,8
tick,0x7ffdb840feb4,135048593,0,0x0,8
tick,0x7ffdb840feb4,135064410,0,0x0,8
tick,0x7ffdb840feb4,135080354,0,0x0,8
tick,0x7ffdb840feb4,135096327,0,0x0,8
tick,0x7ffdb840feb4,135111532,0,0x0,8
tick,0x7ffdb840feb4,135127629,0,0x0,8
tick,0x7ffdb840feb4,135142894,0,0x0,8
tick,0x7ffdb840feb4,135158366,0,0x0,8
tick,0x7ffdb840feb4,135174367,0,0x0,8
tick,0x7ffdb840feb4,135189552,0,0x0,8
tick,0x7ffdb840feb4,135205374,0,0x0,8
tick,0x7ffdb840feb4,135220989,0,0x0,8
tick,0x7ffdb840feb4,135236373,0,0x0,8
tick,0x7ffdb840feb4,135251552,0,0x0,8
tick,0x7ffdb840feb4,135267514,0,0x0,8
tick,0x7ffdb840feb4,135283180,0,0x0,8
tick,0x7ffdb840feb4,135298387,0,0x0,8
tick,0x7ffdb840feb4,135314357,0,0x0,8
tick,0x7ffdb840feb4,135330383,0,0x0,8
tick,0x7ffdb840feb4,135346392,0,0x0,8
tick,0x7ffdb840feb4,135361391,0,0x0,8
tick,0x7ffdb840feb4,135377395,0,0x0,8
tick,0x7ffdb840feb4,135392728,0,0x0,8
tick,0x7ffdb840feb4,135408729,0,0x0,8
tick,0x7ffdb840feb4,135423865,0,0x0,8
tick,0x7ffdb840feb4,135439395,0,0x0,8
tick,0x7ffdb840feb4,135454854,0,0x0,8
tick,0x7ffdb840feb4,135470413,0,0x0,8
tick,0x7ffdb840feb4,135486100,0,0x0,8
tick,0x7ffdb840feb4,135502177,0,0x0,8
tick,0x7ffdb840feb4,135517507,0,0x0,8
tick,0x7ffdb840feb4,135533181,0,0x0,8
tick,0x7ffdb840feb4,135548412,0,0x0,8
tick,0x7ffdb840feb4,135563515,0,0x0,8
tick,0x7ffdb840feb4,135579425,0,0x0,8
tick,0x7ffdb840feb4,135595489,0,0x0,8
tick,0x7ffdb840feb4,135611603,0,0x0,8
tick,0x7ffdb840feb4,135627416,0,0x0,8
tick,0x7ffdb840feb4,135642082,0,0x0,8
tick,0x7ffdb840feb4,135657801,0,0x0,8
tick,0x7ffdb840feb4,135672604,0,0x0,8
tick,0x7ffdb840feb4,135687843,0,0x0,8
tick,0x7ffdb840feb4,135703040,0,0x0,8
tick,0x7ffdb840feb4,135718434,0,0x0,8
tick,0x7ffdb840feb4,135733585,0,0x0,8
tick,0x7ffdb840feb4,135749439,0,0x0,8
tick,0x7ffdb840feb4,135764517,0,0x0,8
tick,0x7ffdb840feb4,135780440,0,0x0,8
tick,0x7ffdb840feb4,135795586,0,0x0,8
tick,0x7ffdb840feb4,135810438,0,0x0,8
tick,0x7ffdb840feb4,135826421,0,0x0,8
tick,0x7ffdb840feb4,135841893,0,0x0,8
tick,0x7ffdb840feb4,135857235,0,0x0,8
tick,0x7ffdb840feb4,135872436,0,0x0,8
tick,0x7ffdb840feb4,135887251,0,0x0,8
tick,0x7ffdb840feb4,135902802,0,0x0,8
tick,0x7ffdb840feb4,135918451,0,0x0,8
tick,0x7ffdb840feb4,135933185,0,0x0,8
tick,0x7ffdb840feb4,135948455,0,0x0,8
tick,0x7ffdb840feb4,135964470,0,0x0,8
tick,0x7ffdb840feb4,135979646,0,0x0,8
tick,0x7ffdb840feb4,135995655,0,0x0,8
tick,0x7ffdb840feb4,136010645,0,0x0,8
tick,0x7ffdb840feb4,136026437,0,0x0,8
tick,0x7ffdb840feb4,136042483,0,0x0,8
tick,0x7ffdb840feb4,136058431,0,0x0,8
tick,0x7ffdb840feb4,136074487,0,0x0,8
tick,0x7ffdb840feb4,136090478,0,0x0,8
tick,0x7ffdb840feb4,136104789,0,0x0,8
tick,0x7ffdb840feb4,136120484,0,0x0,8
tick,0x7ffdb840feb4,136136485,0,0x0,8
tick,0x7ffdb840feb4,136151652,0,0x0,8
tick,0x7ffdb840feb4,136166503,0,0x0,8
tick,0x7ffdb840feb4,136181811,0,0x0,8
tick,0x7ffdb840feb4,136197026,0,0x0,8
tick,0x7ffdb840feb4,136212674,0,0x0,8
tick,0x7ffdb840feb4,136228452,0,0x0,8
tick,0x7ffdb840feb4,136243678,0,0x0,8
tick,0x7ffdb840feb4,136259502,0,0x0,8
tick,0x7ffdb840feb4,136274769,0,0x0,8
tick,0x7ffdb840feb4,136290029,0,0x0,8
tick,0x7ffdb840feb4,136306033,0,0x0,8
tick,0x7ffdb840feb4,136321695,0,0x0,8
tick,0x7ffdb840feb4,136337689,0,0x0,8
tick,0x7ffdb840feb4,136353689,0,0x0,8
tick,0x7ffdb840feb4,136369697,0,0x0,8
tick,0x7ffdb840feb4,136385696,0,0x0,8
tick,0x7ffdb840feb4,136400860,0,0x0,8
tick,0x7ffdb840feb4,136415826,0,0x0,8
tick,0x7ffdb840feb4,136431706,0,0x0,8
tick,0x7ffdb840feb4,136447705,0,0x0,8
tick,0x7ffdb840feb4,136462992,0,0x0,8
tick,0x7ffdb840feb4,136477698,0,0x0,8
tick,0x7ffdb840feb4,136493664,0,0x0,8
tick,0x7ffdb840feb4,136509523,0,0x0,8
tick,0x7ffdb840feb4,136525527,0,0x0,8
tick,0x7ffdb840feb4,136541487,0,0x0,8
tick,0x7ffdb840feb4,136556767,0,0x0,8
tick,0x7ffdb840feb4,136571716,0,0x0,8
tick,0x7ffdb840feb4,136587088,0,0x0,8
tick,0x7ffdb840feb4,136602717,0,0x0,8
tick,0x7ffdb840feb4,136618174,0,0x0,8
tick,0x7ffdb840feb4,136633720,0,0x0,8
tick,0x7ffdb840feb4,136648552,0,0x0,8
tick,0x7ffdb840feb4,136664001,0,0x0,8
tick,0x7ffdb840feb4,136679555,0,0x0,8
tick,0x7ffdb840feb4,136695261,0,0x0,8
tick,0x7ffdb840feb4,136710551,0,0x0,8
tick,0x7ffdb840feb4,136725727,0,0x0,8
tick,0x7ffdb840feb4,136741724,0,0x0,8
tick,0x7ffdb840feb4,136757732,0,0x0,8
tick,0x7ffdb840feb4,136772731,0,0x0,8
tick,0x7ffdb840feb4,136787735,0,0x0,8
tick,0x7ffdb840feb4,136803222,0,0x0,8
tick,0x7ffdb840feb4,136819249,0,0x0,8
tick,0x7ffdb840feb4,136835263,0,0x0,8
tick,0x7ffdb840feb4,136850569,0,0x0,8
tick,0x7ffdb840feb4,136866538,0,0x0,8
tick,0x7ffdb840feb4,136881192,0,0x0,8
tick,0x7ffdb840feb4,136896748,0,0x0,8
tick,0x7ffdb840feb4,136911773,0,0x0,8
tick,0x7ffdb840feb4,136927295,0,0x0,8
tick,0x7ffdb840feb4,136943196,0,0x0,8
tick,0x7ffdb840feb4,136958580,0,0x0,8
tick,0x7ffdb840feb4,136973445,0,0x0,8
tick,0x7ffdb840feb4,136988584,0,0x0,8
tick,0x7ffdb840feb4,137003758,0,0x0,8
tick,0x7ffdb840feb4,137019588,0,0x0,8
tick,0x7ffdb840feb4,137034575,0,0x0,8
tick,0x7ffdb840feb4,137050601,0,0x0,8
tick,0x7ffdb840feb4,137065520,0,0x0,8
tick,0x7ffdb840feb4,137080765,0,0x0,8
tick,0x7ffdb840feb4,137096371,0,0x0,8
tick,0x7ffdb840feb4,137111772,0,0x0,8
tick,0x7ffdb840feb4,137126706,0,0x0,8
tick,0x7ffdb840feb4,137141860,0,0x0,8
tick,0x7ffdb840feb4,137157088,0,0x0,8
tick,0x7ffdb840feb4,137172251,0,0x0,8
tick,0x7ffdb840feb4,137188260,0,0x0,8
tick,0x7ffdb840feb4,137203808,0,0x0,8
tick,0x7ffdb840feb4,137219610,0,0x0,8
tick,0x7ffdb840feb4,137235267,0,0x0,8
tick,0x7ffdb840feb4,137250620,0,0x0,8
tick,0x7ffdb840feb4,137265792,0,0x0,8
tick,0x7ffdb840feb4,137281794,0,0x0,8
tick,0x7ffdb840feb4,137297797,0,0x0,8
tick,0x7ffdb840feb4,137313262,0,0x0,8
tick,0x7ffdb840feb4,137328634,0,0x0,8
tick,0x7ffdb840feb4,137344692,0,0x0,8
tick,0x7ffdb840feb4,137359686,0,0x0,8
tick,0x7ffdb840feb4,137375694,0,0x0,8
tick,0x7ffdb840feb4,137390698,0,0x0,8
tick,0x7ffdb840feb4,137406657,0,0x0,8
tick,0x7ffdb840feb4,137421640,0,0x0,8
tick,0x7ffdb840feb4,137437282,0,0x0,8
tick,0x7ffdb840feb4,137452812,0,0x0,8
tick,0x7ffdb840feb4,137467969,0,0x0,8
tick,0x7ffdb840feb4,137483197,0,0x0,8
tick,0x7ffdb840feb4,137498647,0,0x0,8
tick,0x7ffdb840feb4,137513832,0,0x0,8
tick,0x7ffdb840feb4,137529644,0,0x0,8
tick,0x7ffdb840feb4,137545312,0,0x0,8
tick,0x7ffdb840feb4,137560661,0,0x0,8
tick,0x7ffdb840feb4,137575826,0,0x0,8
tick,0x7ffdb840feb4,137591828,0,0x0,8
tick,0x7ffdb840feb4,137607853,0,0x0,8
tick,0x7ffdb840feb4,137623848,0,0x0,8
tick,0x7ffdb840feb4,137639661,0,0x0,8
tick,0x7ffdb840feb4,137654852,0,0x0,8
tick,0x7ffdb840feb4,137670661,0,0x0,8
tick,0x7ffdb840feb4,137685848,0,0x0,8
tick,0x7ffdb840feb4,137701837,0,0x0,8
tick,0x7ffdb840feb4,137717520,0,0x0,8
tick,0x7ffdb840feb4,137732857,0,0x0,8
tick,0x7ffdb840feb4,137747851,0,0x0,8
tick,0x7ffdb840feb4,137763078,0,0x0,8
tick,0x7ffdb840feb4,137778675,0,0x0,8
tick,0x7ffdb840feb4,137793863,0,0x0,8
tick,0x7ffdb840feb4,137809684,0,0x0,8
tick,0x7ffdb840feb4,137824849,0,0x0,8
tick,0x7ffdb840feb4,137840695,0,0x0,8
tick,0x7ffdb840feb4,137855700,0,0x0,8
tick,0x7ffdb840feb4,137870869,0,0x0,8
tick,0x7ffdb840feb4,137886704,0,0x0,8
tick,0x7ffdb840feb4,137901699,0,0x0,8
tick,0x7ffdb840feb4,137917491,0,0x0,8
tick,0x7ffdb840feb4,137933236,0,0x0,8
tick,0x7ffdb840feb4,137947857,0,0x0,8
tick,0x7ffdb840feb4,137963338,0,0x0,8
tick,0x7ffdb840feb4,137978494,0,0x0,8
tick,0x7ffdb840feb4,137993695,0,0x0,8
tick,0x7ffdb840feb4,138009682,0,0x0,8
tick,0x7ffdb840feb4,138024860,0,0x0,8
tick,0x7ffdb840feb4,138039684,0,0x0,8
tick,0x7ffdb840feb4,138055697,0,0x0,8
tick,0x7ffdb840feb4,138070887,0,0x0,8
tick,0x7ffdb840feb4,138086717,0,0x0,8
tick,0x7ffdb840feb4,138102220,0,0x0,8
tick,0x7ffdb840feb4,138117478,0,0x0,8
tick,0x7ffdb840feb4,138133196,0,0x0,8
tick,0x7ffdb840feb4,138148859,0,0x0,8
tick,0x7ffdb840feb4,138164731,0,0x0,8
tick,0x7ffdb840feb4,138180731,0,0x0,8
tick,0x7ffdb840feb4,138196735,0,0x0,8
tick,0x7ffdb840feb4,138211920,0,0x0,8
tick,0x7ffdb840feb4,138226869,0,0x0,8
tick,0x7ffdb840feb4,138242375,0,0x0,8
tick,0x7ffdb840feb4,138258274,0,0x0,8
tick,0x7ffdb840feb4,138274278,0,0x0,8
tick,0x7ffdb840feb4,138289740,0,0x0,8
tick,0x7ffdb840feb4,138305771,0,0x0,8
tick,0x7ffdb840feb4,138320745,0,0x0,8
tick,0x7ffdb840feb4,138335752,0,0x0,8
tick,0x7ffdb840feb4,138350925,0,0x0,8
tick,0x7ffdb840feb4,138366927,0,0x0,8
tick,0x7ffdb840feb4,138381934,0,0x0,8
tick,0x7ffdb840feb4,138397942,0,0x0,8
tick,0x7ffdb840feb4,138413098,0,0x0,8
tick,0x7ffdb840feb4,138427880,0,0x0,8
tick,0x7ffdb840feb4,138443080,0,0x0,8
tick,0x7ffdb840feb4,138458434,0,0x0,8
tick,0x7ffdb840feb4,138473878,0,0x0,8
tick,0x7ffdb840feb4,138489964,0,0x0,8
tick,0x7ffdb840feb4,138505939,0,0x0,8
tick,0x7ffdb840feb4,138521938,0,0x0,8
tick,0x7ffdb840feb4,138537776,0,0x0,8
tick,0x7ffdb840feb4,138552944,0,0x0,8
tick,0x7ffdb840feb4,138568886,0,0x0,8
tick,0x7ffdb840feb4,138583913,0,0x0,8
tick,0x7ffdb840feb4,138599785,0,0x0,8
tick,0x7ffdb840feb4,138614522,0,0x0,8
tick,0x7ffdb840feb4,138629780,0,0x0,8
tick,0x7ffdb840feb4,138645786,0,0x0,8
tick,0x7ffdb840feb4,138660785,0,0x0,8
tick,0x7ffdb840feb4,138675781,0,0x0,8
tick,0x7ffdb840feb4,138690959,0,0x0,8
tick,0x7ffdb840feb4,138706971,0,0x0,8
tick,0x7ffdb840feb4,138721969,0,0x0,8
tick,0x7ffdb840feb4,138736972,0,0x0,8
tick,0x7ffdb840feb4,138751974,0,0x0,8
tick,0x7ffdb840feb4,138767974,0,0x0,8
tick,0x7ffdb840feb4,138783980,0,0x0,8
tick,0x7ffdb840feb4,138799804,0,0x0,8
tick,0x7ffdb840feb4,138815811,0,0x0,8
tick,0x7ffdb840feb4,138830805,0,0x0,8
tick,0x7ffdb840feb4,138845984,0,0x0,8
tick,0x7ffdb840feb4,138861984,0,0x0,8
tick,0x7ffdb840feb4,138877992,0,0x0,8
tick,0x7ffdb840feb4,138893583,0,0x0,8
tick,0x7ffdb840feb4,138908813,0,0x0,8
tick,0x7ffdb840feb4,138923997,0,0x0,8
tick,0x7ffdb840feb4,138939818,0,0x0,8
tick,0x7ffdb840feb4,138955820,0,0x0,8
tick,0x7ffdb840feb4,138970994,0,0x0,8
tick,0x7ffdb840feb4,138986832,0,0x0,8
tick,0x7ffdb840feb4,139002010,0,0x0,8
tick,0x7ffdb840feb4,139017831,0,0x0,8
tick,0x7ffdb840feb4,139033010,0,0x0,8
tick,0x7ffdb840feb4,139048081,0,0x0,8
tick,0x7ffdb840feb4,139063541,0,0x0,8
tick,0x7ffdb840feb4,139078841,0,0x0,8
tick,0x7ffdb840feb4,139094043,0,0x0,8
tick,0x7ffdb840feb4,139109838,0,0x0,8
tick,0x7ffdb840feb4,139125002,0,0x0,8
tick,0x7ffdb840feb4,139140019,0,0x0,8
tick,0x7ffdb840feb4,139155842,0,0x0,8
tick,0x7ffdb840feb4,139171134,0,0x0,8
tick,0x7ffdb840feb4,139186857,0,0x0,8
tick,0x7ffdb840feb4,139202031,0,0x0,8
tick,0x7ffdb840feb4,139218141,0,0x0,8
tick,0x7ffdb840feb4,139233276,0,0x0,8
tick,0x7ffdb840feb4,139249154,0,0x0,8
tick,0x7ffdb840feb4,139264524,0,0x0,8
tick,0x7ffdb840feb4,139279862,0,0x0,8
tick,0x7ffdb840feb4,139295804,0,0x0,8
tick,0x7ffdb840feb4,139311032,0,0x0,8
tick,0x7ffdb840feb4,139327019,0,0x0,8
tick,0x7ffdb840feb4,139342044,0,0x0,8
tick,0x7ffdb840feb4,139357904,0,0x0,8
tick,0x7ffdb840feb4,139372912,0,0x0,8
tick,0x7ffdb840feb4,139388909,0,0x0,8
tick,0x7ffdb840feb4,139404912,0,0x0,8
tick,0x7ffdb840feb4,139420051,0,0x0,8
tick,0x7ffdb840feb4,139434879,0,0x0,8
tick,0x7ffdb840feb4,139450865,0,0x0,8
tick,0x7ffdb840feb4,139466539,0,0x0,8
tick,0x7ffdb840feb4,139482054,0,0x0,8
tick,0x7ffdb840feb4,139497716,0,0x0,8
tick,0x7ffdb840feb4,139513085,0,0x0,8
tick,0x7ffdb840feb4,139528593,0,0x0,8
tick,0x7ffdb840feb4,139544190,0,0x0,8
tick,0x7ffdb840feb4,139559889,0,0x0,8
tick,0x7ffdb840feb4,139575082,0,0x0,8
tick,0x7ffdb840feb4,139590895,0,0x0,8
tick,0x7ffdb840feb4,139606070,0,0x0,8
tick,0x7ffdb840feb4,139621008,0,0x0,8
tick,0x7ffdb840feb4,139637068,0,0x0,8
tick,0x7ffdb840feb4,139652082,0,0x0,8
tick,0x7ffdb840feb4,139668076,0,0x0,8
tick,0x7ffdb840feb4,139684080,0,0x0,8
tick,0x7ffdb840feb4,139699911,0,0x0,8
tick,0x7ffdb840feb4,139715073,0,0x0,8
tick,0x7ffdb840feb4,139730341,0,0x0,8
tick,0x7ffdb840feb4,139746117,0,0x0,8
tick,0x7ffdb840feb4,139761082,0,0x0,8
tick,0x7ffdb840feb4,139776759,0,0x0,8
tick,0x7ffdb840feb4,139792524,0,0x0,8
tick,0x7ffdb840feb4,139808513,0,0x0,8
tick,0x7ffdb840feb4,139824288,0,0x0,8
tick,0x7ffdb840feb4,139838937,0,0x0,8
tick,0x7ffdb840feb4,139854106,0,0x0,8
tick,0x7ffdb840feb4,139868931,0,0x0,8
tick,0x7ffdb840feb4,139884111,0,0x0,8
tick,0x7ffdb840feb4,139900104,0,0x0,8
tick,0x7ffdb840feb4,139916073,0,0x0,8
tick,0x7ffdb840feb4,139932109,0,0x0,8
tick,0x7ffdb840feb4,139947262,0,0x0,8
tick,0x7ffdb840feb4,139962578,0,0x0,8
tick,0x7ffdb840feb4,139978510,0,0x0,8
tick,0x7ffdb840feb4,139994500,0,0x0,8
tick,0x7ffdb840feb4,140010082,0,0x0,8
tick,0x7ffdb840feb4,140025299,0,0x0,8
tick,0x7ffdb840feb4,140041069,0,0x0,8
tick,0x7ffdb840feb4,140056082,0,0x0,8
tick,0x7ffdb840feb4,140072122,0,0x0,8
tick,0x7ffdb840feb4,140087471,0,0x0,8
tick,0x7ffdb840feb4,140102963,0,0x0,8
tick,0x7ffdb840feb4,140118966,0,0x0,8
tick,0x7ffdb840feb4,140134974,0,0x0,8
tick,0x7ffdb840feb4,140150140,0,0x0,8
tick,0x7ffdb840feb4,140165536,0,0x0,8
tick,0x7ffdb840feb4,140180964,0,0x0,8
tick,0x7ffdb840feb4,140196220,0,0x0,8
tick,0x7ffdb840feb4,140211513,0,0x0,8
tick,0x7ffdb840feb4,140227313,0,0x0,8
tick,0x7ffdb840feb4,140243148,0,0x0,8
tick,0x7ffdb840feb4,140258305,0,0x0,8
tick,0x7ffdb840feb4,140273199,0,0x0,8
tick,0x7ffdb840feb4,140287983,0,0x0,8
tick,0x7ffdb840feb4,140303419,0,0x0,8
tick,0x7ffdb840feb4,140318982,0,0x0,8
tick,0x7ffdb840feb4,140334169,0,0x0,8
tick,0x7ffdb840feb4,140349983,0,0x0,8
tick,0x7ffdb840feb4,140365538,0,0x0,8
tick,0x7ffdb840feb4,140381539,0,0x0,8
tick,0x7ffdb840feb4,140396765,0,0x0,8
tick,0x7ffdb840feb4,140411766,0,0x0,8
tick,0x7ffdb840feb4,140427314,0,0x0,8
tick,0x7ffdb840feb4,140442629,0,0x0,8
tick,0x7ffdb840feb4,140458182,0,0x0,8
tick,0x7ffdb840feb4,140473551,0,0x0,8
tick,0x7ffdb840feb4,140489623,0,0x0,8
tick,0x7ffdb840feb4,140504949,0,0x0,8
tick,0x7ffdb840feb4,140521062,0,0x0,8
tick,0x7ffdb840feb4,140536338,0,0x0,8
tick,0x7ffdb840feb4,140552185,0,0x0,8
tick,0x7ffdb840feb4,140567346,0,0x0,8
tick,0x7ffdb840feb4,140583187,0,0x0,8
tick,0x7ffdb840feb4,140598871,0,0x0,8
tick,0x7ffdb840feb4,140613563,0,0x0,8
tick,0x7ffdb840feb4,140629040,0,0x0,8
tick,0x7ffdb840feb4,140644205,0,0x0,8
tick,0x7ffdb840feb4,140660031,0,0x0,8
tick,0x7ffdb840feb4,140675203,0,0x0,8
tick,0x7ffdb840feb4,140690300,0,0x0,8
tick,0x7ffdb840feb4,140706212,0,0x0,8
tick,0x7ffdb840feb4,140722206,0,0x0,8
tick,0x7ffdb840feb4,140738035,0,0x0,8
tick,0x7ffdb840feb4,140752716,0,0x0,8
tick,0x7ffdb840feb4,140768054,0,0x0,8
tick,0x7ffdb840feb4,140783200,0,0x0,8
tick,0x7ffdb840feb4,140798871,0,0x0,8
tick,0x7ffdb840feb4,140814222,0,0x0,8
tick,0x7ffdb840feb4,140830043,0,0x0,8
tick,0x7ffdb840feb4,140845222,0,0x0,8
tick,0x7ffdb840feb4,140860043,0,0x0,8
tick,0x7ffdb840feb4,140875229,0,0x0,8
tick,0x7ffdb840feb4,140891284,0,0x0,8
tick,0x7ffdb840feb4,140906693,0,0x0,8
tick,0x7ffdb840feb4,140922236,0,0x0,8
tick,0x7ffdb840feb4,140937854,0,0x0,8
tick,0x7ffdb840feb4,140953247,0,0x0,8
tick,0x7ffdb840feb4,140968541,0,0x0,8
tick,0x7ffdb840feb4,140984221,0,0x0,8
tick,0x7ffdb840feb4,141000073,0,0x0,8
tick,0x7ffdb840feb4,141015542,0,0x0,8
tick,0x7ffdb840feb4,141031066,0,0x0,8
tick,0x7ffdb840feb4,141046263,0,0x0,8
tick,0x7ffdb840feb4,141062258,0,0x0,8
tick,0x7ffdb840feb4,141078265,0,0x0,8
tick,0x7ffdb840feb4,141093282,0,0x0,8
tick,0x7ffdb840feb4,141109087,0,0x0,8
tick,0x7ffdb840feb4,141125093,0,0x0,8
tick,0x7ffdb840feb4,141140081,0,0x0,8
tick,0x7ffdb840feb4,141156096,0,0x0,8
tick,0x7ffdb840feb4,141170869,0,0x0,8
tick,0x7ffdb840feb4,141186229,0,0x0,8
tick,0x7ffdb840feb4,141201273,0,0x0,8
tick,0x7ffdb840feb4,141216541,0,0x0,8
tick,0x7ffdb840feb4,141232262,0,0x0,8
tick,0x7ffdb840feb4,141247878,0,0x0,8
tick,0x7ffdb840feb4,141263263,0,0x0,8
tick,0x7ffdb840feb4,141278641,0,0x0,8
tick,0x7ffdb840feb4,141294283,0,0x0,8
tick,0x7ffdb840feb4,141310108,0,0x0,8
tick,0x7ffdb840feb4,141325128,0,0x0,8
tick,0x7ffdb840feb4,141341102,0,0x0,8
tick,0x7ffdb840feb4,141356114,0,0x0,8
tick,0x7ffdb840feb4,141371288,0,0x0,8
tick,0x7ffdb840feb4,141387286,0,0x0,8
tick,0x7ffdb840feb4,141402784,0,0x0,8
tick,0x7ffdb840feb4,141418799,0,0x0,8
tick,0x7ffdb840feb4,141434313,0,0x0,8
tick,0x7ffdb840feb4,141449291,0,0x0,8
tick,0x7ffdb840feb4,141464542,0,0x0,8
tick,0x7ffdb840feb4,141480120,0,0x0,8
tick,0x7ffdb840feb4,141495995,0,0x0,8
tick,0x7ffdb840feb4,141511128,0,0x0,8
tick,0x7ffdb840feb4,141526319,0,0x0,8
tick,0x7ffdb840feb4,141542301,0,0x0,8
tick,0x7ffdb840feb4,141558017,0,0x0,8
tick,0x7ffdb840feb4,141573316,0,0x0,8
tick,0x7ffdb840feb4,141588375,0,0x0,8
tick,0x7ffdb840feb4,141604325,0,0x0,8
tick,0x7ffdb840feb4,141620137,0,0x0,8
tick,0x7ffdb840feb4,141636156,0,0x0,8
tick,0x7ffdb840feb4,141651321,0,0x0,8
tick,0x7ffdb840feb4,141666543,0,0x0,8
tick,0x7ffdb840feb4,141682316,0,0x0,8
tick,0x7ffdb840feb4,141697880,0,0x0,8
tick,0x7ffdb840feb4,141713074,0,0x0,8
tick,0x7ffdb840feb4,141728880,0,0x0,8
tick,0x7ffdb840feb4,141743892,0,0x0,8
tick,0x7ffdb840feb4,141759029,0,0x0,8
tick,0x7ffdb840feb4,141774335,0,0x0,8
tick,0x7ffdb840feb4,141789161,0,0x0,8
tick,0x7ffdb840feb4,141804334,0,0x0,8
tick,0x7ffdb840feb4,141820162,0,0x0,8
tick,0x7ffdb840feb4,141835125,0,0x0,8
tick,0x7ffdb840feb4,141850165,0,0x0,8
tick,0x7ffdb840feb4,141865541,0,0x0,8
tick,0x7ffdb840feb4,141880169,0,0x0,8
tick,0x7ffdb840feb4,141895627,0,0x0,8
tick,0x7ffdb840feb4,141911176,0,0x0,8
tick,0x7ffdb840feb4,141926184,0,0x0,8
tick,0x7ffdb840feb4,141941353,0,0x0,8
tick,0x7ffdb840feb4,141956354,0,0x0,8
tick,0x7ffdb840feb4,141971170,0,0x0,8
tick,0x7ffdb840feb4,141986315,0,0x0,8
tick,0x7ffdb840feb4,142002363,0,0x0,8
tick,0x7ffdb840feb4,142017543,0,0x0,8
tick,0x7ffdb840feb4,142033190,0,0x0,8
tick,0x7ffdb840feb4,142047882,0,0x0,8
tick,0x7ffdb840feb4,142063542,0,0x0,8
tick,0x7ffdb840feb4,142078975,0,0x0,8
tick,0x7ffdb840feb4,142095097,0,0x0,8
tick,0x7ffdb840feb4,142111200,0,0x0,8
tick,0x7ffdb840feb4,142127219,0,0x0,8
tick,0x7ffdb840feb4,142143215,0,0x0,8
tick,0x7ffdb840feb4,142158918,0,0x0,8
tick,0x7ffdb840feb4,142174393,0,0x0,8
tick,0x7ffdb840feb4,142190208,0,0x0,8
tick,0x7ffdb840feb4,142205391,0,0x0,8
tick,0x7ffdb840feb4,142221218,0,0x0,8
tick,0x7ffdb840feb4,142236274,0,0x0,8
tick,0x7ffdb840feb4,142252386,0,0x0,8
tick,0x7ffdb840feb4,142267550,0,0x0,8
tick,0x7ffdb840feb4,142282877,0,0x0,8
tick,0x7ffdb840feb4,142298879,0,0x0,8
tick,0x7ffdb840feb4,142314393,0,0x0,8
tick,0x7ffdb840feb4,142330222,0,0x0,8
tick,0x7ffdb840feb4,142346063,0,0x0,8
tick,0x7ffdb840feb4,142361186,0,0x0,8
tick,0x7ffdb840feb4,142376403,0,0x0,8
tick,0x7ffdb840feb4,142392413,0,0x0,8
tick,0x7ffdb840feb4,142408428,0,0x0,8
tick,0x7ffdb840feb4,142424415,0,0x0,8
tick,0x7ffdb840feb4,142440240,0,0x0,8
tick,0x7ffdb840feb4,142455418,0,0x0,8
tick,0x7ffdb840feb4,142471239,0,0x0,8
tick,0x7ffdb840feb4,142486248,0,0x0,8
tick,0x7ffdb840feb4,142501253,0,0x0,8
tick,0x7ffdb840feb4,142517247,0,0x0,8
tick,0x7ffdb840feb4,142532424,0,0x0,8
tick,0x7ffdb840feb4,142548257,0,0x0,8
tick,0x7ffdb840feb4,142563426,0,0x0,8
tick,0x7ffdb840feb4,142578356,0,0x0,8
tick,0x7ffdb840feb4,142594025,0,0x0,8
tick,0x7ffdb840feb4,142609264,0,0x0,8
tick,0x7ffdb840feb4,142623967,0,0x0,8
tick,0x7ffdb840feb4,142639190,0,0x0,8
tick,0x7ffdb840feb4,142654439,0,0x0,8
tick,0x7ffdb840feb4,142670262,0,0x0,8
tick,0x7ffdb840feb4,142685419,0,0x0,8
tick,0x7ffdb840feb4,142701273,0,0x0,8
tick,0x7ffdb840feb4,142716323,0,0x0,8
tick,0x7ffdb840feb4,142731443,0,0x0,8
tick,0x7ffdb840feb4,142746884,0,0x0,8
tick,0x7ffdb840feb4,142762461,0,0x0,8
tick,0x7ffdb840feb4,142777802,0,0x0,8
tick,0x7ffdb840feb4,142793640,0,0x0,8
tick,0x7ffdb840feb4,142808659,0,0x0,8
tick,0x7ffdb840feb4,142824457,0,0x0,8
tick,0x7ffdb840feb4,142840283,0,0x0,8
tick,0x7ffdb840feb4,142855148,0,0x0,8
tick,0x7ffdb840feb4,142870285,0,0x0,8
tick,0x7ffdb840feb4,142885422,0,0x0,8
tick,0x7ffdb840feb4,142900423,0,0x0,8
tick,0x7ffdb840feb4,142916188,0,0x0,8
tick,0x7ffdb840feb4,142931469,0,0x0,8
tick,0x7ffdb840feb4,142946889,0,0x0,8
tick,0x7ffdb840feb4,142962475,0,0x0,8
tick,0x7ffdb840feb4,142978161,0,0x0,8
tick,0x7ffdb840feb4,142994257,0,0x0,8
tick,0x7ffdb840feb4,143009917,0,0x0,8
tick,0x7ffdb840feb4,143025359,0,0x0,8
tick,0x7ffdb840feb4,143040314,0,0x0,8
tick,0x7ffdb840feb4,143055430,0,0x0,8
tick,0x7ffdb840feb4,143071307,0,0x0,8
tick,0x7ffdb840feb4,143087429,0,0x0,8
tick,0x7ffdb840feb4,143103318,0,0x0,8
tick,0x7ffdb840feb4,143118322,0,0x0,8
tick,0x7ffdb840feb4,143133333,0,0x0,8
tick,0x7ffdb840feb4,143148890,0,0x0,8
tick,0x7ffdb840feb4,143164497,0,0x0,8
tick,0x7ffdb840feb4,143179326,0,0x0,8
tick,0x7ffdb840feb4,143195328,0,0x0,8
tick,0x7ffdb840feb4,143210326,0,0x0,8
tick,0x7ffdb840feb4,143225413,0,0x0,8
tick,0x7ffdb840feb4,143241340,0,0x0,8
tick,0x7ffdb840feb4,143257348,0,0x0,8
tick,0x7ffdb840feb4,143272516,0,0x0,8
tick,0x7ffdb840feb4,143288333,0,0x0,8
tick,0x7ffdb840feb4,143303514,0,0x0,8
tick,0x7ffdb840feb4,143319341,0,0x0,8
tick,0x7ffdb840feb4,143334518,0,0x0,8
tick,0x7ffdb840feb4,143350341,0,0x0,8
tick,0x7ffdb840feb4,143366370,0,0x0,8
tick,0x7ffdb840feb4,143381211,0,0x0,8
tick,0x7ffdb840feb4,143396222,0,0x0,8
tick,0x7ffdb840feb4,143412224,0,0x0,8
tick,0x7ffdb840feb4,143428228,0,0x0,8
tick,0x7ffdb840feb4,143443535,0,0x0,8
tick,0x7ffdb840feb4,143458669,0,0x0,8
tick,0x7ffdb840feb4,143474574,0,0x0,8
tick,0x7ffdb840feb4,143490363,0,0x0,8
tick,0x7ffdb840feb4,143505965,0,0x0,8
tick,0x7ffdb840feb4,143521400,0,0x0,8
tick,0x7ffdb840feb4,143536524,0,0x0,8
tick,0x7ffdb840feb4,143552546,0,0x0,8
tick,0x7ffdb840feb4,143568434,0,0x0,8
tick,0x7ffdb840feb4,143584431,0,0x0,8
tick,0x7ffdb840feb4,143600382,0,0x0,8
tick,0x7ffdb840feb4,143615551,0,0x0,8
tick,0x7ffdb840feb4,143630380,0,0x0,8
tick,0x7ffdb840feb4,143646391,0,0x0,8
tick,0x7ffdb840feb4,143661548,0,0x0,8
tick,0x7ffdb840feb4,143676561,0,0x0,8
tick,0x7ffdb840feb4,143692577,0,0x0,8
tick,0x7ffdb840feb4,143708236,0,0x0,8
tick,0x7ffdb840feb4,143723566,0,0x0,8
tick,0x7ffdb840feb4,143739393,0,0x0,8
tick,0x7ffdb840feb4,143754571,0,0x0,8
tick,0x7ffdb840feb4,143770396,0,0x0,8
tick,0x7ffdb840feb4,143785662,0,0x0,8
tick,0x7ffdb840feb4,143801213,0,0x0,8
tick,0x7ffdb840feb4,143816405,0,0x0,8
tick,0x7ffdb840feb4,143831577,0,0x0,8
tick,0x7ffdb840feb4,143847409,0,0x0,8
tick,0x7ffdb840feb4,143862584,0,0x0,8
tick,0x7ffdb840feb4,143878589,0,0x0,8
tick,0x7ffdb840feb4,143894184,0,0x0,8
tick,0x7ffdb840feb4,143909423,0,0x0,8
tick,0x7ffdb840feb4,143924605,0,0x0,8
tick,0x7ffdb840feb4,143940416,0,0x0,8
tick,0x7ffdb840feb4,143955593,0,0x0,8
tick,0x7ffdb840feb4,143971422,0,0x0,8
tick,0x7ffdb840feb4,143986590,0,0x0,8
tick,0x7ffdb840feb4,144002596,0,0x0,8
tick,0x7ffdb840feb4,144018609,0,0x0,8
tick,0x7ffdb840feb4,144034609,0,0x0,8
tick,0x7ffdb840feb4,144050434,0,0x0,8
tick,0x7ffdb840feb4,144065785,0,0x0,8
tick,0x7ffdb840feb4,144081216,0,0x0,8
tick,0x7ffdb840feb4,144096400,0,0x0,8
tick,0x7ffdb840feb4,144111610,0,0x0,8
tick,0x7ffdb840feb4,144127452,0,0x0,8
tick,0x7ffdb840feb4,144142616,0,0x0,8
tick,0x7ffdb840feb4,144158692,0,0x0,8
tick,0x7ffdb840feb4,144174627,0,0x0,8
tick,0x7ffdb840feb4,144190443,0,0x0,8
tick,0x7ffdb840feb4,144205631,0,0x0,8
tick,0x7ffdb840feb4,144220618,0,0x0,8
tick,0x7ffdb840feb4,144236025,0,0x0,8
tick,0x7ffdb840feb4,144251456,0,0x0,8
tick,0x7ffdb840feb4,144266829,0,0x0,8
tick,0x7ffdb840feb4,144282630,0,0x0,8
tick,0x7ffdb840feb4,144297888,0,0x0,8
tick,0x7ffdb840feb4,144312794,0,0x0,8
tick,0x7ffdb840feb4,144328473,0,0x0,8
tick,0x7ffdb840feb4,144344478,0,0x0,8
tick,0x7ffdb840feb4,144360455,0,0x0,8
tick,0x7ffdb840feb4,144376468,0,0x0,8
tick,0x7ffdb840feb4,144391471,0,0x0,8
tick,0x7ffdb840feb4,144407475,0,0x0,8
tick,0x7ffdb840feb4,144422474,0,0x0,8
tick,0x7ffdb840feb4,144438483,0,0x0,8
tick,0x7ffdb840feb4,144453662,0,0x0,8
tick,0x7ffdb840feb4,144468482,0,0x0,8
tick,0x7ffdb840feb4,144483662,0,0x0,8
tick,0x7ffdb840feb4,144498890,0,0x0,8
tick,0x7ffdb840feb4,144514121,0,0x0,8
tick,0x7ffdb840feb4,144530115,0,0x0,8
tick,0x7ffdb840feb4,144545952,0,0x0,8
tick,0x7ffdb840feb4,144560497,0,0x0,8
tick,0x7ffdb840feb4,144575673,0,0x0,8
tick,0x7ffdb840feb4,144591494,0,0x0,8
tick,0x7ffdb840feb4,144606677,0,0x0,8
tick,0x7ffdb840feb4,144622677,0,0x0,8
tick,0x7ffdb840feb4,144637680,0,0x0,8
tick,0x7ffdb840feb4,144653688,0,0x0,8
tick,0x7ffdb840feb4,144669719,0,0x0,8
tick,0x7ffdb840feb4,144685289,0,0x0,8
tick,0x7ffdb840feb4,144700537,0,0x0,8
tick,0x7ffdb840feb4,144716548,0,0x0,8
tick,0x7ffdb840feb4,144732534,0,0x0,8
tick,0x7ffdb840feb4,144747909,0,0x0,8
tick,0x7ffdb840feb4,144763193,0,0x0,8
tick,0x7ffdb840feb4,144778363,0,0x0,8
tick,0x7ffdb840feb4,144794315,0,0x0,8
tick,0x7ffdb840feb4,144809529,0,0x0,8
tick,0x7ffdb840feb4,144824804,0,0x0,8
tick,0x7ffdb840feb4,144840529,0,0x0,8
tick,0x7ffdb840feb4,144856538,0,0x0,8
tick,0x7ffdb840feb4,144871703,0,0x0,8
tick,0x7ffdb840feb4,144886547,0,0x0,8
tick,0x7ffdb840feb4,144901711,0,0x0,8
tick,0x7ffdb840feb4,144917731,0,0x0,8
tick,0x7ffdb840feb4,144932557,0,0x0,8
tick,0x7ffdb840feb4,144947761,0,0x0,8
tick,0x7ffdb840feb4,144962871,0,0x0,8
tick,0x7ffdb840feb4,144978548,0,0x0,8
tick,0x7ffdb840feb4,144994570,0,0x0,8
tick,0x7ffdb840feb4,145010546,0,0x0,8
tick,0x7ffdb840feb4,145026203,0,0x0,8
tick,0x7ffdb840feb4,145041543,0,0x0,8
tick,0x7ffdb840feb4,145056550,0,0x0,8
tick,0x7ffdb840feb4,145071732,0,0x0,8
tick,0x7ffdb840feb4,145086882,0,0x0,8
tick,0x7ffdb840feb4,145102890,0,0x0,8
tick,0x7ffdb840feb4,145118054,0,0x0,8
tick,0x7ffdb840feb4,145133737,0,0x0,8
tick,0x7ffdb840feb4,145148548,0,0x0,8
tick,0x7ffdb840feb4,145164555,0,0x0,8
tick,0x7ffdb840feb4,145179584,0,0x0,8
tick,0x7ffdb840feb4,145195184,0,0x0,8
tick,0x7ffdb840feb4,145211214,0,0x0,8
tick,0x7ffdb840feb4,145226758,0,0x0,8
tick,0x7ffdb840feb4,145242553,0,0x0,8
tick,0x7ffdb840feb4,145258570,0,0x0,8
tick,0x7ffdb840feb4,145274565,0,0x0,8
tick,0x7ffdb840feb4,145290578,0,0x0,8
tick,0x7ffdb840feb4,145306162,0,0x0,8
tick,0x7ffdb840feb4,145322170,0,0x0,8
tick,0x7ffdb840feb4,145338166,0,0x0,8
tick,0x7ffdb840feb4,145354064,0,0x0,8
tick,0x7ffdb840feb4,145369309,0,0x0,8
tick,0x7ffdb840feb4,145384589,0,0x0,8
tick,0x7ffdb840feb4,145400316,0,0x0,8
tick,0x7ffdb840feb4,145416325,0,0x0,8
tick,0x7ffdb840feb4,145432317,0,0x0,8
tick,0x7ffdb840feb4,145448318,0,0x0,8
tick,0x7ffdb840feb4,145464319,0,0x0,8
tick,0x7ffdb840feb4,145479601,0,0x0,8
tick,0x7ffdb840feb4,145495610,0,0x0,8
tick,0x7ffdb840feb4,145511605,0,0x0,8
tick,0x7ffdb840feb4,145527293,0,0x0,8
tick,0x7ffdb840feb4,145542791,0,0x0,8
tick,0x7ffdb840feb4,145558797,0,0x0,8
tick,0x7ffdb840feb4,145573930,0,0x0,8
tick,0x7ffdb840feb4,145589329,0,0x0,8
tick,0x7ffdb840feb4,145604812,0,0x0,8
tick,0x7ffdb840feb4,145620622,0,0x0,8
tick,0x7ffdb840feb4,145636543,0,0x0,8
tick,0x7ffdb840feb4,145651801,0,0x0,8
tick,0x7ffdb840feb4,145667211,0,0x0,8
tick,0x7ffdb840feb4,145683326,0,0x0,8
tick,0x7ffdb840feb4,145698903,0,0x0,8
tick,0x7ffdb840feb4,145714555,0,0x0,8
tick,0x7ffdb840feb4,145729574,0,0x0,8
tick,0x7ffdb840feb4,145745094,0,0x0,8
tick,0x7ffdb840feb4,145760634,0,0x0,8
tick,0x7ffdb840feb4,145776358,0,0x0,8
tick,0x7ffdb840feb4,145791642,0,0x0,8
tick,0x7ffdb840feb4,145807641,0,0x0,8
tick,0x7ffdb840feb4,145822811,0,0x0,8
tick,0x7ffdb840feb4,145838817,0,0x0,8
tick,0x7ffdb840feb4,145853826,0,0x0,8
tick,0x7ffdb840feb4,145869661,0,0x0,8
tick,0x7ffdb840feb4,145885332,0,0x0,8
tick,0x7ffdb840feb4,145900650,0,0x0,8
tick,0x7ffdb840feb4,145916641,0,0x0,8
tick,0x7ffdb840feb4,145932682,0,0x0,8
tick,0x7ffdb840feb4,145947908,0,0x0,8
tick,0x7ffdb840feb4,145963716,0,0x0,8
tick,0x7ffdb840feb4,145979652,0,0x0,8
tick,0x7ffdb840feb4,145994837,0,0x0,8
tick,0x7ffdb840feb4,146010329,0,0x0,8
tick,0x7ffdb840feb4,146025735,0,0x0,8
tick,0x7ffdb840feb4,146041723,0,0x0,8
tick,0x7ffdb840feb4,146057681,0,0x0,8
tick,0x7ffdb840feb4,146072695,0,0x0,8
tick,0x7ffdb840feb4,146088351,0,0x0,8
tick,0x7ffdb840feb4,146104350,0,0x0,8
tick,0x7ffdb840feb4,146119529,0,0x0,8
tick,0x7ffdb840feb4,146134703,0,0x0,8
tick,0x7ffdb840feb4,146150693,0,0x0,8
tick,0x7ffdb840feb4,146166615,0,0x0,8
tick,0x7ffdb840feb4,146181235,0,0x0,8
tick,0x7ffdb840feb4,146196747,0,0x0,8
tick,0x7ffdb840feb4,146212858,0,0x0,8
tick,0x7ffdb840feb4,146228379,0,0x0,8
tick,0x7ffdb840feb4,146243692,0,0x0,8
tick,0x7ffdb840feb4,146259386,0,0x0,8
tick,0x7ffdb840feb4,146274349,0,0x0,8
tick,0x7ffdb840feb4,146289778,0,0x0,8
tick,0x7ffdb840feb4,146305799,0,0x0,8
tick,0x7ffdb840feb4,146321796,0,0x0,8
tick,0x7ffdb840feb4,146336890,0,0x0,8
tick,0x7ffdb840feb4,146352385,0,0x0,8
tick,0x7ffdb840feb4,146368392,0,0x0,8
tick,0x7ffdb840feb4,146383712,0,0x0,8
tick,0x7ffdb840feb4,146398930,0,0x0,8
tick,0x7ffdb840feb4,146414729,0,0x0,8
tick,0x7ffdb840feb4,146429718,0,0x0,8
tick,0x7ffdb840feb4,146445724,0,0x0,8
tick,0x7ffdb840feb4,146461723,0,0x0,8
tick,0x7ffdb840feb4,146477723,0,0x0,8
tick,0x7ffdb840feb4,146493592,0,0x0,8
tick,0x7ffdb840feb4,146508733,0,0x0,8
tick,0x7ffdb840feb4,146524751,0,0x0,8
tick,0x7ffdb840feb4,146539732,0,0x0,8
tick,0x7ffdb840feb4,146555200,0,0x0,8
tick,0x7ffdb840feb4,146570369,0,0x0,8
tick,0x7ffdb840feb4,146586365,0,0x0,8
tick,0x7ffdb840feb4,146601748,0,0x0,8
tick,0x7ffdb840feb4,146616534,0,0x0,8
tick,0x7ffdb840feb4,146631926,0,0x0,8
tick,0x7ffdb840feb4,146647745,0,0x0,8
tick,0x7ffdb840feb4,146662920,0,0x0,8
tick,0x7ffdb840feb4,146677924,0,0x0,8
tick,0x7ffdb840feb4,146693738,0,0x0,8
tick,0x7ffdb840feb4,146709234,0,0x0,8
tick,0x7ffdb840feb4,146724369,0,0x0,8
tick,0x7ffdb840feb4,146739756,0,0x0,8
tick,0x7ffdb840feb4,146754929,0,0x0,8
tick,0x7ffdb840feb4,146770762,0,0x0,8
tick,0x7ffdb840feb4,146786270,0,0x0,8
tick,0x7ffdb840feb4,146802268,0,0x0,8
tick,0x7ffdb840feb4,146817576,0,0x0,8
tick,0x7ffdb840feb4,146832933,0,0x0,8
tick,0x7ffdb840feb4,146848908,0,0x0,8
tick,0x7ffdb840feb4,146863676,0,0x0,8
tick,0x7ffdb840feb4,146879001,0,0x0,8
tick,0x7ffdb840feb4,146894360,0,0x0,8
tick,0x7ffdb840feb4,146909780,0,0x0,8
tick,0x7ffdb840feb4,146924962,0,0x0,8
tick,0x7ffdb840feb4,146940777,0,0x0,8
tick,0x7ffdb840feb4,146955957,0,0x0,8
tick,0x7ffdb840feb4,146971780,0,0x0,8
tick,0x7ffdb840feb4,146986783,0,0x0,8
tick,0x7ffdb840feb4,147001954,0,0x0,8
tick,0x7ffdb840feb4,147016797,0,0x0,8
tick,0x7ffdb840feb4,147031961,0,0x0,8
tick,0x7ffdb840feb4,147047963,0,0x0,8
tick,0x7ffdb840feb4,147063438,0,0x0,8
tick,0x7ffdb840feb4,147078779,0,0x0,8
tick,0x7ffdb840feb4,147094780,0,0x0,8
tick,0x7ffdb840feb4,147110795,0,0x0,8
tick,0x7ffdb840feb4,147126358,0,0x0,8
tick,0x7ffdb840feb4,147141801,0,0x0,8
tick,0x7ffdb840feb4,147156976,0,0x0,8
tick,0x7ffdb840feb4,147172989,0,0x0,8
tick,0x7ffdb840feb4,147188892,0,0x0,8
tick,0x7ffdb840feb4,147203984,0,0x0,8
tick,0x7ffdb840feb4,147219569,0,0x0,8
tick,0x7ffdb840feb4,147235285,0,0x0,8
tick,0x7ffdb840feb4,147250820,0,0x0,8
tick,0x7ffdb840feb4,147265614,0,0x0,8
tick,0x7ffdb840feb4,147280825,0,0x0,8
tick,0x7ffdb840feb4,147296638,0,0x0,8
tick,0x7ffdb840feb4,147311821,0,0x0,8
tick,0x7ffdb840feb4,147327002,0,0x0,8
tick,0x7ffdb840feb4,147342994,0,0x0,8
tick,0x7ffdb840feb4,147357828,0,0x0,8
tick,0x7ffdb840feb4,147373185,0,0x0,8
tick,0x7ffdb840feb4,147388971,0,0x0,8
tick,0x7ffdb840feb4,147404376,0,0x0,8
tick,0x7ffdb840feb4,147419838,0,0x0,8
tick,0x7ffdb840feb4,147435839,0,0x0,8
tick,0x7ffdb840feb4,147451840,0,0x0,8
tick,0x7ffdb840feb4,147467847,0,0x0,8
tick,0x7ffdb840feb4,147483017,0,0x0,8
tick,0x7ffdb840feb4,147498910,0,0x0,8
tick,0x7ffdb840feb4,147513578,0,0x0,8
tick,0x7ffdb840feb4,147529634,0,0x0,8
tick,0x7ffdb840feb4,147544843,0,0x0,8
tick,0x7ffdb840feb4,147560851,0,0x0,8
tick,0x7ffdb840feb4,147576256,0,0x0,8
tick,0x7ffdb840feb4,147591851,0,0x0,8
tick,0x7ffdb840feb4,147607884,0,0x0,8
tick,0x7ffdb840feb4,147623038,0,0x0,8
tick,0x7ffdb840feb4,147638944,0,0x0,8
tick,0x7ffdb840feb4,147654044,0,0x0,8
tick,0x7ffdb840feb4,147669862,0,0x0,8
tick,0x7ffdb840feb4,147685392,0,0x0,8
tick,0x7ffdb840feb4,147700875,0,0x0,8
tick,0x7ffdb840feb4,147716890,0,0x0,8
tick,0x7ffdb840feb4,147731872,0,0x0,8
tick,0x7ffdb840feb4,147747100,0,0x0,8
tick,0x7ffdb840feb4,147763045,0,0x0,8
tick,0x7ffdb840feb4,147778381,0,0x0,8
tick,0x7ffdb840feb4,147793878,0,0x0,8
tick,0x7ffdb840feb4,147809686,0,0x0,8
tick,0x7ffdb840feb4,147825687,0,0x0,8
tick,0x7ffdb840feb4,147840882,0,0x0,8
tick,0x7ffdb840feb4,147855758,0,0x0,8
tick,0x7ffdb840feb4,147870890,0,0x0,8
tick,0x7ffdb840feb4,147886894,0,0x0,8
tick,0x7ffdb840feb4,147901902,0,0x0,8
tick,0x7ffdb840feb4,147917044,0,0x0,8
tick,0x7ffdb840feb4,147932897,0,0x0,8
tick,0x7ffdb840feb4,147947857,0,0x0,8
tick,0x7ffdb840feb4,147963420,0,0x0,8
tick,0x7ffdb840feb4,147978910,0,0x0,8
tick,0x7ffdb840feb4,147993877,0,0x0,8
tick,0x7ffdb840feb4,148009643,0,0x0,8
tick,0x7ffdb840feb4,148025647,0,0x0,8
tick,0x7ffdb840feb4,148040906,0,0x0,8
tick,0x7ffdb840feb4,148056654,0,0x0,8
tick,0x7ffdb840feb4,148071915,0,0x0,8
tick,0x7ffdb840feb4,148087924,0,0x0,8
tick,0x7ffdb840feb4,148103082,0,0x0,8
tick,0x7ffdb840feb4,148118097,0,0x0,8
tick,0x7ffdb840feb4,148133459,0,0x0,8
tick,0x7ffdb840feb4,148148873,0,0x0,8
tick,0x7ffdb840feb4,148164874,0,0x0,8
tick,0x7ffdb840feb4,148180923,0,0x0,8
tick,0x7ffdb840feb4,148196884,0,0x0,8
tick,0x7ffdb840feb4,148212100,0,0x0,8
tick,0x7ffdb840feb4,148227886,0,0x0,8
tick,0x7ffdb840feb4,148243409,0,0x0,8
tick,0x7ffdb840feb4,148258521,0,0x0,8
tick,0x7ffdb840feb4,148274124,0,0x0,8
tick,0x7ffdb840feb4,148289446,0,0x0,8
tick,0x7ffdb840feb4,148304868,0,0x0,8
tick,0x7ffdb840feb4,148319880,0,0x0,8
tick,0x7ffdb840feb4,148335902,0,0x0,8
tick,0x7ffdb840feb4,148351232,0,0x0,8
tick,0x7ffdb840feb4,148366904,0,0x0,8
tick,0x7ffdb840feb4,148382116,0,0x0,8
tick,0x7ffdb840feb4,148398226,0,0x0,8
tick,0x7ffdb840feb4,148414233,0,0x0,8
tick,0x7ffdb840feb4,148429891,0,0x0,8
tick,0x7ffdb840feb4,148445902,0,0x0,8
tick,0x7ffdb840feb4,148461921,0,0x0,8
tick,0x7ffdb840feb4,148477919,0,0x0,8
tick,0x7ffdb840feb4,148493987,0,0x0,8
tick,0x7ffdb840feb4,148509163,0,0x0,8
tick,0x7ffdb840feb4,148524898,0,0x0,8
tick,0x7ffdb840feb4,148540970,0,0x0,8
tick,0x7ffdb840feb4,148556906,0,0x0,8
tick,0x7ffdb840feb4,148572620,0,0x0,8
tick,0x7ffdb840feb4,148588586,0,0x0,8
tick,0x7ffdb840feb4,148604458,0,0x0,8
tick,0x7ffdb840feb4,148620005,0,0x0,8
tick,0x7ffdb840feb4,148635169,0,0x0,8
tick,0x7ffdb840feb4,148650911,0,0x0,8
tick,0x7ffdb840feb4,148666916,0,0x0,8
tick,0x7ffdb840feb4,148681917,0,0x0,8
tick,0x7ffdb840feb4,148697001,0,0x0,8
tick,0x7ffdb840feb4,148712177,0,0x0,8
tick,0x7ffdb840feb4,148728013,0,0x0,8
tick,0x7ffdb840feb4,148742914,0,0x0,8
tick,0x7ffdb840feb4,148758913,0,0x0,8
tick,0x7ffdb840feb4,148775007,0,0x0,8
tick,0x7ffdb840feb4,148791002,0,0x0,8
tick,0x7ffdb840feb4,148806887,0,0x0,8
tick,0x7ffdb840feb4,148821874,0,0x0,8
tick,0x7ffdb840feb4,148837049,0,0x0,8
tick,0x7ffdb840feb4,148852930,0,0x0,8
tick,0x7ffdb840feb4,148869006,0,0x0,8
tick,0x7ffdb840feb4,148884475,0,0x0,8
tick,0x7ffdb840feb4,148899926,0,0x0,8
tick,0x7ffdb840feb4,148915595,0,0x0,8
tick,0x7ffdb840feb4,148931019,0,0x0,8
tick,0x7ffdb840feb4,148946915,0,0x0,8
tick,0x7ffdb840feb4,148962030,0,0x0,8
tick,0x7ffdb840feb4,148977701,0,0x0,8
tick,0x7ffdb840feb4,148993719,0,0x0,8
tick,0x7ffdb840feb4,149009044,0,0x0,8
tick,0x7ffdb840feb4,149024214,0,0x0,8
tick,0x7ffdb840feb4,149039592,0,0x0,8
tick,0x7ffdb840feb4,149054796,0,0x0,8
tick,0x7ffdb840feb4,149070038,0,0x0,8
tick,0x7ffdb840feb4,149085453,0,0x0,8
tick,0x7ffdb840feb4,149101042,0,0x0,8
tick,0x7ffdb840feb4,149116502,0,0x0,8
tick,0x7ffdb840feb4,149131839,0,0x0,8
tick,0x7ffdb840feb4,149146928,0,0x0,8
tick,0x7ffdb840feb4,149162211,0,0x0,8
tick,0x7ffdb840feb4,149178192,0,0x0,8
tick,0x7ffdb840feb4,149193397,0,0x0,8
tick,0x7ffdb840feb4,149209004,0,0x0,8
tick,0x7ffdb840feb4,149225003,0,0x0,8
tick,0x7ffdb840feb4,149241055,0,0x0,8
tick,0x7ffdb840feb4,149257023,0,0x0,8
tick,0x7ffdb840feb4,149272232,0,0x0,8
tick,0x7ffdb840feb4,149288006,0,0x0,8
tick,0x7ffdb840feb4,149302715,0,0x0,8
tick,0x7ffdb840feb4,149318725,0,0x0,8
tick,0x7ffdb840feb4,149334087,0,0x0,8
tick,0x7ffdb840feb4,149349931,0,0x0,8
tick,0x7ffdb840feb4,149365585,0,0x0,8
tick,0x7ffdb840feb4,149381067,0,0x0,8
tick,0x7ffdb840feb4,149396395,0,0x0,8
tick,0x7ffdb840feb4,149412406,0,0x0,8
tick,0x7ffdb840feb4,149428249,0,0x0,8
tick,0x7ffdb840feb4,149443714,0,0x0,8
tick,0x7ffdb840feb4,149459726,0,0x0,8
tick,0x7ffdb840feb4,149475733,0,0x0,8
tick,0x7ffdb840feb4,149491722,0,0x0,8
tick,0x7ffdb840feb4,149507715,0,0x0,8
tick,0x7ffdb840feb4,149523263,0,0x0,8
tick,0x7ffdb840feb4,149539251,0,0x0,8
tick,0x7ffdb840feb4,149555277,0,0x0,8
tick,0x7ffdb840feb4,149570263,0,0x0,8
tick,0x7ffdb840feb4,149585258,0,0x0,8
tick,0x7ffdb840feb4,149601111,0,0x0,8
tick,0x7ffdb840feb4,149616598,0,0x0,8
tick,0x7ffdb840feb4,149631794,0,0x0,8
tick,0x7ffdb840feb4,149647717,0,0x0,8
tick,0x7ffdb840feb4,149663284,0,0x0,8
tick,0x7ffdb840feb4,149679286,0,0x0,8
tick,0x7ffdb840feb4,149695288,0,0x0,8
tick,0x7ffdb840feb4,149711106,0,0x0,8
tick,0x7ffdb840feb4,149726475,0,0x0,8
tick,0x7ffdb840feb4,149742118,0,0x0,8
tick,0x7ffdb840feb4,149758127,0,0x0,8
tick,0x7ffdb840feb4,149774123,0,0x0,8
tick,0x7ffdb840feb4,149789939,0,0x0,8
tick,0x7ffdb840feb4,149804934,0,0x0,8
tick,0x7ffdb840feb4,149820129,0,0x0,8
tick,0x7ffdb840feb4,149835300,0,0x0,8
tick,0x7ffdb840feb4,149851130,0,0x0,8
tick,0x7ffdb840feb4,149866127,0,0x0,8
tick,0x7ffdb840feb4,149882230,0,0x0,8
tick,0x7ffdb840feb4,149898143,0,0x0,8
tick,0x7ffdb840feb4,149914239,0,0x0,8
tick,0x7ffdb840feb4,149929709,0,0x0,8
tick,0x7ffdb840feb4,149945314,0,0x0,8
tick,0x7ffdb840feb4,149961136,0,0x0,8
tick,0x7ffdb840feb4,149976320,0,0x0,8
tick,0x7ffdb840feb4,149992148,0,0x0,8
tick,0x7ffdb840feb4,150007956,0,0x0,8
tick,0x7ffdb840feb4,150023321,0,0x0,8
tick,0x7ffdb840feb4,150039326,0,0x0,8
tick,0x7ffdb840feb4,150055170,0,0x0,8
tick,0x7ffdb840feb4,150070324,0,0x0,8
tick,0x7ffdb840feb4,150085323,0,0x0,8
tick,0x7ffdb840feb4,150101191,0,0x0,8
tick,0x7ffdb840feb4,150116712,0,0x0,8
tick,0x7ffdb840feb4,150132709,0,0x0,8
tick,0x7ffdb840feb4,150148163,0,0x0,8
tick,0x7ffdb840feb4,150163336,0,0x0,8
tick,0x7ffdb840feb4,150179228,0,0x0,8
tick,0x7ffdb840feb4,150194239,0,0x0,8
tick,0x7ffdb840feb4,150210174,0,0x0,8
tick,0x7ffdb840feb4,150224810,0,0x0,8
tick,0x7ffdb840feb4,150239932,0,0x0,8
tick,0x7ffdb840feb4,150255259,0,0x0,8
tick,0x7ffdb840feb4,150271176,0,0x0,8
tick,0x7ffdb840feb4,150286277,0,0x0,8
tick,0x7ffdb840feb4,150301897,0,0x0,8
tick,0x7ffdb840feb4,150317359,0,0x0,8
tick,0x7ffdb840feb4,150332380,0,0x0,8
tick,0x7ffdb840feb4,150348184,0,0x0,8
tick,0x7ffdb840feb4,150363377,0,0x0,8
tick,0x7ffdb840feb4,150378301,0,0x0,8
tick,0x7ffdb840feb4,150393543,0,0x0,8
tick,0x7ffdb840feb4,150408745,0,0x0,8
tick,0x7ffdb840feb4,150424371,0,0x0,8
tick,0x7ffdb840feb4,150440386,0,0x0,8
tick,0x7ffdb840feb4,150456387,0,0x0,8
tick,0x7ffdb840feb4,150472386,0,0x0,8
tick,0x7ffdb840feb4,150488387,0,0x0,8
tick,0x7ffdb840feb4,150504384,0,0x0,8
tick,0x7ffdb840feb4,150520388,0,0x0,8
tick,0x7ffdb840feb4,150536387,0,0x0,8
tick,0x7ffdb840feb4,150552215,0,0x0,8
tick,0x7ffdb840feb4,150567587,0,0x0,8
tick,0x7ffdb840feb4,150583393,0,0x0,8
tick,0x7ffdb840feb4,150598196,0,0x0,8
tick,0x7ffdb840feb4,150614210,0,0x0,8
tick,0x7ffdb840feb4,150629248,0,0x0,8
tick,0x7ffdb840feb4,150644409,0,0x0,8
tick,0x7ffdb840feb4,150659750,0,0x0,8
tick,0x7ffdb840feb4,150675400,0,0x0,8
tick,0x7ffdb840feb4,150691230,0,0x0,8
tick,0x7ffdb840feb4,150707236,0,0x0,8
tick,0x7ffdb840feb4,150722406,0,0x0,8
tick,0x7ffdb840feb4,150737400,0,0x0,8
tick,0x7ffdb840feb4,150753398,0,0x0,8
tick,0x7ffdb840feb4,150768754,0,0x0,8
tick,0x7ffdb840feb4,150783914,0,0x0,8
tick,0x7ffdb840feb4,150799757,0,0x0,8
tick,0x7ffdb840feb4,150815588,0,0x0,8
tick,0x7ffdb840feb4,150830252,0,0x0,8
tick,0x7ffdb840feb4,150845527,0,0x0,8
tick,0x7ffdb840feb4,150861245,0,0x0,8
tick,0x7ffdb840feb4,150876434,0,0x0,8
tick,0x7ffdb840feb4,150892229,0,0x0,8
tick,0x7ffdb840feb4,150907137,0,0x0,8
tick,0x7ffdb840feb4,150922437,0,0x0,8
tick,0x7ffdb840feb4,150937912,0,0x0,8
tick,0x7ffdb840feb4,150953431,0,0x0,8
tick,0x7ffdb840feb4,150968591,0,0x0,8
tick,0x7ffdb840feb4,150984299,0,0x0,8
tick,0x7ffdb840feb4,150999367,0,0x0,8
tick,0x7ffdb840feb4,151015404,0,0x0,8
tick,0x7ffdb840feb4,151031287,0,0x0,8
tick,0x7ffdb840feb4,151046546,0,0x0,8
tick,0x7ffdb840feb4,151062280,0,0x0,8
tick,0x7ffdb840feb4,151077450,0,0x0,8
tick,0x7ffdb840feb4,151093564,0,0x0,8
tick,0x7ffdb840feb4,151109578,0,0x0,8
tick,0x7ffdb840feb4,151125452,0,0x0,8
tick,0x7ffdb840feb4,151140288,0,0x0,8
tick,0x7ffdb840feb4,151155485,0,0x0,8
tick,0x7ffdb840feb4,151170282,0,0x0,8
tick,0x7ffdb840feb4,151185264,0,0x0,8
tick,0x7ffdb840feb4,151200476,0,0x0,8
tick,0x7ffdb840feb4,151215636,0,0x0,8
tick,0x7ffdb840feb4,151231265,0,0x0,8
tick,0x7ffdb840feb4,151247275,0,0x0,8
tick,0x7ffdb840feb4,151262469,0,0x0,8
tick,0x7ffdb840feb4,151278253,0,0x0,8
tick,0x7ffdb840feb4,151293270,0,0x0,8
tick,0x7ffdb840feb4,151308491,0,0x0,8
tick,0x7ffdb840feb4,151323486,0,0x0,8
tick,0x7ffdb840feb4,151338665,0,0x0,8
tick,0x7ffdb840feb4,151354480,0,0x0,8
tick,0x7ffdb840feb4,151369888,0,0x0,8
tick,0x7ffdb840feb4,151384738,0,0x0,8
tick,0x7ffdb840feb4,151400726,0,0x0,8
tick,0x7ffdb840feb4,151416740,0,0x0,8
tick,0x7ffdb840feb4,151432327,0,0x0,8
tick,0x7ffdb840feb4,151447560,0,0x0,8
tick,0x7ffdb840feb4,151463497,0,0x0,8
tick,0x7ffdb840feb4,151478506,0,0x0,8
tick,0x7ffdb840feb4,151494502,0,0x0,8
tick,0x7ffdb840feb4,151509507,0,0x0,8
tick,0x7ffdb840feb4,151525566,0,0x0,8
tick,0x7ffdb840feb4,151541327,0,0x0,8
tick,0x7ffdb840feb4,151557336,0,0x0,8
tick,0x7ffdb840feb4,151572341,0,0x0,8
tick,0x7ffdb840feb4,151587295,0,0x0,8
tick,0x7ffdb840feb4,151603345,0,0x0,8
tick,0x7ffdb840feb4,151618943,0,0x0,8
tick,0x7ffdb840feb4,151634529,0,0x0,8
tick,0x7ffdb840feb4,151649525,0,0x0,8
tick,0x7ffdb840feb4,151665604,0,0x0,8
tick,0x7ffdb840feb4,151680762,0,0x0,8
tick,0x7ffdb840feb4,151696127,0,0x0,8
tick,0x7ffdb840feb4,151711350,0,0x0,8
tick,0x7ffdb840feb4,151727352,0,0x0,8
tick,0x7ffdb840feb4,151743357,0,0x0,8
tick,0x7ffdb840feb4,151758480,0,0x0,8
tick,0x7ffdb840feb4,151773758,0,0x0,8
tick,0x7ffdb840feb4,151789543,0,0x0,8
tick,0x7ffdb840feb4,151804352,0,0x0,8
tick,0x7ffdb840feb4,151820355,0,0x0,8
tick,0x7ffdb840feb4,151835357,0,0x0,8
tick,0x7ffdb840feb4,151851379,0,0x0,8
tick,0x7ffdb840feb4,151866738,0,0x0,8
tick,0x7ffdb840feb4,151882370,0,0x0,8
tick,0x7ffdb840feb4,151897550,0,0x0,8
tick,0x7ffdb840feb4,151913547,0,0x0,8
tick,0x7ffdb840feb4,151928382,0,0x0,8
tick,0x7ffdb840feb4,151943544,0,0x0,8
tick,0x7ffdb840feb4,151958893,0,0x0,8
tick,0x7ffdb840feb4,151974223,0,0x0,8
tick,0x7ffdb840feb4,151989790,0,0x0,8
tick,0x7ffdb840feb4,152005357,0,0x0,8
tick,0x7ffdb840feb4,152021388,0,0x0,8
tick,0x7ffdb840feb4,152036559,0,0x0,8
tick,0x7ffdb840feb4,152051391,0,0x0,8
tick,0x7ffdb840feb4,152067376,0,0x0,8
tick,0x7ffdb840feb4,152082575,0,0x0,8
tick,0x7ffdb840feb4,152097929,0,0x0,8
tick,0x7ffdb840feb4,152113570,0,0x0,8
tick,0x7ffdb840feb4,152129590,0,0x0,8
tick,0x7ffdb840feb4,152144735,0,0x0,8
tick,0x7ffdb840feb4,152159961,0,0x0,8
tick,0x7ffdb840feb4,152175505,0,0x0,8
tick,0x7ffdb840feb4,152191403,0,0x0,8
tick,0x7ffdb840feb4,152207506,0,0x0,8
tick,0x7ffdb840feb4,152222593,0,0x0,8
tick,0x7ffdb840feb4,152238606,0,0x0,8
tick,0x7ffdb840feb4,152253409,0,0x0,8
tick,0x7ffdb840feb4,152268859,0,0x0,8
tick,0x7ffdb840feb4,152284595,0,0x0,8
tick,0x7ffdb840feb4,152299533,0,0x0,8
tick,0x7ffdb840feb4,152315604,0,0x0,8
tick,0x7ffdb840feb4,152331422,0,0x0,8
tick,0x7ffdb840feb4,152347360,0,0x0,8
tick,0x7ffdb840feb4,152363035,0,0x0,8
tick,0x7ffdb840feb4,152378039,0,0x0,8
tick,0x7ffdb840feb4,152393624,0,0x0,8
tick,0x7ffdb840feb4,152409634,0,0x0,8
tick,0x7ffdb840feb4,152425463,0,0x0,8
tick,0x7ffdb840feb4,152441062,0,0x0,8
tick,0x7ffdb840feb4,152456433,0,0x0,8
tick,0x7ffdb840feb4,152471615,0,0x0,8
tick,0x7ffdb840feb4,152487448,0,0x0,8
tick,0x7ffdb840feb4,152503455,0,0x0,8
tick,0x7ffdb840feb4,152519451,0,0x0,8
tick,0x7ffdb840feb4,152534614,0,0x0,8
tick,0x7ffdb840feb4,152549911,0,0x0,8
tick,0x7ffdb840feb4,152565610,0,0x0,8
tick,0x7ffdb840feb4,152581452,0,0x0,8
tick,0x7ffdb840feb4,152597370,0,0x0,8
tick,0x7ffdb840feb4,152613471,0,0x0,8
tick,0x7ffdb840feb4,152629051,0,0x0,8
tick,0x7ffdb840feb4,152644610,0,0x0,8
tick,0x7ffdb840feb4,152660384,0,0x0,8
tick,0x7ffdb840feb4,152675642,0,0x0,8
tick,0x7ffdb840feb4,152691467,0,0x0,8
tick,0x7ffdb840feb4,152706454,0,0x0,8
tick,0x7ffdb840feb4,152721842,0,0x0,8
tick,0x7ffdb840feb4,152737177,0,0x0,8
tick,0x7ffdb840feb4,152752472,0,0x0,8
tick,0x7ffdb840feb4,152767637,0,0x0,8
tick,0x7ffdb840feb4,152783653,0,0x0,8
tick,0x7ffdb840feb4,152798930,0,0x0,8
tick,0x7ffdb840feb4,152814466,0,0x0,8
tick,0x7ffdb840feb4,152829993,0,0x0,8
tick,0x7ffdb840feb4,152845619,0,0x0,8
tick,0x7ffdb840feb4,152861486,0,0x0,8
tick,0x7ffdb840feb4,152876667,0,0x0,8
tick,0x7ffdb840feb4,152892489,0,0x0,8
tick,0x7ffdb840feb4,152907751,0,0x0,8
tick,0x7ffdb840feb4,152923621,0,0x0,8
tick,0x7ffdb840feb4,152938935,0,0x0,8
tick,0x7ffdb840feb4,152954490,0,0x0,8
tick,0x7ffdb840feb4,152970516,0,0x0,8
tick,0x7ffdb840feb4,152985146,0,0x0,8
tick,0x7ffdb840feb4,153000538,0,0x0,8
tick,0x7ffdb840feb4,153015693,0,0x0,8
tick,0x7ffdb840feb4,153031508,0,0x0,8
tick,0x7ffdb840feb4,153046529,0,0x0,8
tick,0x7ffdb840feb4,153061691,0,0x0,8
tick,0x7ffdb840feb4,153077475,0,0x0,8
tick,0x7ffdb840feb4,153092691,0,0x0,8
tick,0x7ffdb840feb4,153108466,0,0x0,8
tick,0x7ffdb840feb4,153124131,0,0x0,8
tick,0x7ffdb840feb4,153139524,0,0x0,8
tick,0x7ffdb840feb4,153154540,0,0x0,8
tick,0x7ffdb840feb4,153170523,0,0x0,8
tick,0x7ffdb840feb4,153185699,0,0x0,8
tick,0x7ffdb840feb4,153200706,0,0x0,8
tick,0x7ffdb840feb4,153216604,0,0x0,8
tick,0x7ffdb840feb4,153231524,0,0x0,8
tick,0x7ffdb840feb4,153246678,0,0x0,8
tick,0x7ffdb840feb4,153262549,0,0x0,8
tick,0x7ffdb840feb4,153278541,0,0x0,8
tick,0x7ffdb840feb4,153294546,0,0x0,8
tick,0x7ffdb840feb4,153310145,0,0x0,8
tick,0x7ffdb840feb4,153325680,0,0x0,8
tick,0x7ffdb840feb4,153341546,0,0x0,8
tick,0x7ffdb840feb4,153357528,0,0x0,8
tick,0x7ffdb840feb4,153372552,0,0x0,8
tick,0x7ffdb840feb4,153388050,0,0x0,8
tick,0x7ffdb840feb4,153403684,0,0x0,8
tick,0x7ffdb840feb4,153419064,0,0x0,8
tick,0x7ffdb840feb4,153434740,0,0x0,8
tick,0x7ffdb840feb4,153449937,0,0x0,8
tick,0x7ffdb840feb4,153465611,0,0x0,8
tick,0x7ffdb840feb4,153481458,0,0x0,8
tick,0x7ffdb840feb4,153497464,0,0x0,8
tick,0x7ffdb840feb4,153512959,0,0x0,8
tick,0x7ffdb840feb4,153528969,0,0x0,8
tick,0x7ffdb840feb4,153544193,0,0x0,8
tick,0x7ffdb840feb4,153558971,0,0x0,8
tick,0x7ffdb840feb4,153574989,0,0x0,8
tick,0x7ffdb840feb4,153590289,0,0x0,8
tick,0x7ffdb840feb4,153605689,0,0x0,8
tick,0x7ffdb840feb4,153620585,0,0x0,8
tick,0x7ffdb840feb4,153635756,0,0x0,8
tick,0x7ffdb840feb4,153651585,0,0x0,8
tick,0x7ffdb840feb4,153667586,0,0x0,8
tick,0x7ffdb840feb4,153682762,0,0x0,8
tick,0x7ffdb840feb4,153697948,0,0x0,8
tick,0x7ffdb840feb4,153713606,0,0x0,8
tick,0x7ffdb840feb4,153729551,0,0x0,8
tick,0x7ffdb840feb4,153744764,0,0x0,8
tick,0x7ffdb840feb4,153759602,0,0x0,8
tick,0x7ffdb840feb4,153775560,0,0x0,8
tick,0x7ffdb840feb4,153791597,0,0x0,8
tick,0x7ffdb840feb4,153807612,0,0x0,8
tick,0x7ffdb840feb4,153822782,0,0x0,8
tick,0x7ffdb840feb4,153837775,0,0x0,8
tick,0x7ffdb840feb4,153853593,0,0x0,8
tick,0x7ffdb840feb4,153869542,0,0x0,8
tick,0x7ffdb840feb4,153884713,0,0x0,8
tick,0x7ffdb840feb4,153899949,0,0x0,8
tick,0x7ffdb840feb4,153915800,0,0x0,8
tick,0x7ffdb840feb4,153931608,0,0x0,8
tick,0x7ffdb840feb4,153947617,0,0x0,8
tick,0x7ffdb840feb4,153962789,0,0x0,8
tick,0x7ffdb840feb4,153978618,0,0x0,8
tick,0x7ffdb840feb4,153993810,0,0x0,8
tick,0x7ffdb840feb4,154009635,0,0x0,8
tick,0x7ffdb840feb4,154025206,0,0x0,8
tick,0x7ffdb840feb4,154040323,0,0x0,8
tick,0x7ffdb840feb4,154055631,0,0x0,8
tick,0x7ffdb840feb4,154071628,0,0x0,8
tick,0x7ffdb840feb4,154087641,0,0x0,8
tick,0x7ffdb840feb4,154102808,0,0x0,8
tick,0x7ffdb840feb4,154117639,0,0x0,8
tick,0x7ffdb840feb4,154133643,0,0x0,8
tick,0x7ffdb840feb4,154149459,0,0x0,8
tick,0x7ffdb840feb4,154164606,0,0x0,8
tick,0x7ffdb840feb4,154179712,0,0x0,8
tick,0x7ffdb840feb4,154195336,0,0x0,8
tick,0x7ffdb840feb4,154210650,0,0x0,8
tick,0x7ffdb840feb4,154226650,0,0x0,8
tick,0x7ffdb840feb4,154242656,0,0x0,8
tick,0x7ffdb840feb4,154258661,0,0x0,8
tick,0x7ffdb840feb4,154273836,0,0x0,8
tick,0x7ffdb840feb4,154289664,0,0x0,8
tick,0x7ffdb840feb4,154304851,0,0x0,8
tick,0x7ffdb840feb4,154320662,0,0x0,8
tick,0x7ffdb840feb4,154336648,0,0x0,8
tick,0x7ffdb840feb4,154352340,0,0x0,8
tick,0x7ffdb840feb4,154367652,0,0x0,8
tick,0x7ffdb840feb4,154382665,0,0x0,8
tick,0x7ffdb840feb4,154398619,0,0x0,8
tick,0x7ffdb840feb4,154413798,0,0x0,8
tick,0x7ffdb840feb4,154429474,0,0x0,8
tick,0x7ffdb840feb4,154444730,0,0x0,8
tick,0x7ffdb840feb4,154460360,0,0x0,8
tick,0x7ffdb840feb4,154475340,0,0x0,8
tick,0x7ffdb840feb4,154490681,0,0x0,8
tick,0x7ffdb840feb4,154506193,0,0x0,8
tick,0x7ffdb840feb4,154522189,0,0x0,8
tick,0x7ffdb840feb4,154538195,0,0x0,8
tick,0x7ffdb840feb4,154553340,0,0x0,8
tick,0x7ffdb840feb4,154568210,0,0x0,8
tick,0x7ffdb840feb4,154583866,0,0x0,8
tick,0x7ffdb840feb4,154599873,0,0x0,8
tick,0x7ffdb840feb4,154615953,0,0x0,8
tick,0x7ffdb840feb4,154631700,0,0x0,8
tick,0x7ffdb840feb4,154646947,0,0x0,8
tick,0x7ffdb840feb4,154662704,0,0x0,8
tick,0x7ffdb840feb4,154677886,0,0x0,8
tick,0x7ffdb840feb4,154693884,0,0x0,8
tick,0x7ffdb840feb4,154709212,0,0x0,8
tick,0x7ffdb840feb4,154724736,0,0x0,8
tick,0x7ffdb840feb4,154739907,0,0x0,8
tick,0x7ffdb840feb4,154755890,0,0x0,8
tick,0x7ffdb840feb4,154771715,0,0x0,8
tick,0x7ffdb840feb4,154786904,0,0x0,8
tick,0x7ffdb840feb4,154802719,0,0x0,8
tick,0x7ffdb840feb4,154818289,0,0x0,8
tick,0x7ffdb840feb4,154833902,0,0x0,8
tick,0x7ffdb840feb4,154848943,0,0x0,8
tick,0x7ffdb840feb4,154864355,0,0x0,8
tick,0x7ffdb840feb4,154879642,0,0x0,8
tick,0x7ffdb840feb4,154895735,0,0x0,8
tick,0x7ffdb840feb4,154910738,0,0x0,8
tick,0x7ffdb840feb4,154926752,0,0x0,8
tick,0x7ffdb840feb4,154941733,0,0x0,8
tick,0x7ffdb840feb4,154957641,0,0x0,8
tick,0x7ffdb840feb4,154972749,0,0x0,8
tick,0x7ffdb840feb4,154988340,0,0x0,8
tick,0x7ffdb840feb4,155003750,0,0x0,8
tick,0x7ffdb840feb4,155019033,0,0x0,8
tick,0x7ffdb840feb4,155034533,0,0x0,8
tick,0x7ffdb840feb4,155049943,0,0x0,8
tick,0x7ffdb840feb4,155065615,0,0x0,8
tick,0x7ffdb840feb4,155080624,0,0x0,8
tick,0x7ffdb840feb4,155096629,0,0x0,8
tick,0x7ffdb840feb4,155111758,0,0x0,8
tick,0x7ffdb840feb4,155126755,0,0x0,8
tick,0x7ffdb840feb4,155142756,0,0x0,8
tick,0x7ffdb840feb4,155158050,0,0x0,8
tick,0x7ffdb840feb4,155173955,0,0x0,8
tick,0x7ffdb840feb4,155190013,0,0x0,8
tick,0x7ffdb840feb4,155205960,0,0x0,8
tick,0x7ffdb840feb4,155221772,0,0x0,8
tick,0x7ffdb840feb4,155237432,0,0x0,8
tick,0x7ffdb840feb4,155252646,0,0x0,8
tick,0x7ffdb840feb4,155268439,0,0x0,8
tick,0x7ffdb840feb4,155283948,0,0x0,8
tick,0x7ffdb840feb4,155299950,0,0x0,8
tick,0x7ffdb840feb4,155314608,0,0x0,8
tick,0x7ffdb840feb4,155329818,0,0x0,8
tick,0x7ffdb840feb4,155344968,0,0x0,8
tick,0x7ffdb840feb4,155360214,0,0x0,8
tick,0x7ffdb840feb4,155376157,0,0x0,8
tick,0x7ffdb840feb4,155391788,0,0x0,8
tick,0x7ffdb840feb4,155407649,0,0x0,8
tick,0x7ffdb840feb4,155422793,0,0x0,8
tick,0x7ffdb840feb4,155437814,0,0x0,8
tick,0x7ffdb840feb4,155452969,0,0x0,8
tick,0x7ffdb840feb4,155468968,0,0x0,8
tick,0x7ffdb840feb4,155483984,0,0x0,8
tick,0x7ffdb840feb4,155499953,0,0x0,8
tick,0x7ffdb840feb4,155514956,0,0x0,8
tick,0x7ffdb840feb4,155529953,0,0x0,8
tick,0x7ffdb840feb4,155545966,0,0x0,8
tick,0x7ffdb840feb4,155561808,0,0x0,8
tick,0x7ffdb840feb4,155576973,0,0x0,8
tick,0x7ffdb840feb4,155592810,0,0x0,8
tick,0x7ffdb840feb4,155607823,0,0x0,8
tick,0x7ffdb840feb4,155622812,0,0x0,8
tick,0x7ffdb840feb4,155638826,0,0x0,8
tick,0x7ffdb840feb4,155654002,0,0x0,8
tick,0x7ffdb840feb4,155669161,0,0x0,8
tick,0x7ffdb840feb4,155684412,0,0x0,8
tick,0x7ffdb840feb4,155699949,0,0x0,8
tick,0x7ffdb840feb4,155715615,0,0x0,8
tick,0x7ffdb840feb4,155730826,0,0x0,8
tick,0x7ffdb840feb4,155746024,0,0x0,8
tick,0x7ffdb840feb4,155760848,0,0x0,8
tick,0x7ffdb840feb4,155776304,0,0x0,8
tick,0x7ffdb840feb4,155791839,0,0x0,8
tick,0x7ffdb840feb4,155807842,0,0x0,8
tick,0x7ffdb840feb4,155823027,0,0x0,8
tick,0x7ffdb840feb4,155838614,0,0x0,8
tick,0x7ffdb840feb4,155854623,0,0x0,8
tick,0x7ffdb840feb4,155870199,0,0x0,8
tick,0x7ffdb840feb4,155885635,0,0x0,8
tick,0x7ffdb840feb4,155900849,0,0x0,8
tick,0x7ffdb840feb4,155916613,0,0x0,8
tick,0x7ffdb840feb4,155931854,0,0x0,8
tick,0x7ffdb840feb4,155947005,0,0x0,8
tick,0x7ffdb840feb4,155963058,0,0x0,8
tick,0x7ffdb840feb4,155978648,0,0x0,8
tick,0x7ffdb840feb4,155994038,0,0x0,8
tick,0x7ffdb840feb4,156009872,0,0x0,8
tick,0x7ffdb840feb4,156025047,0,0x0,8
tick,0x7ffdb840feb4,156040404,0,0x0,8
tick,0x7ffdb840feb4,156056512,0,0x0,8
tick,0x7ffdb840feb4,156071876,0,0x0,8
tick,0x7ffdb840feb4,156087882,0,0x0,8
tick,0x7ffdb840feb4,156103046,0,0x0,8
tick,0x7ffdb840feb4,156118897,0,0x0,8
tick,0x7ffdb840feb4,156134440,0,0x0,8
tick,0x7ffdb840feb4,156150239,0,0x0,8
tick,0x7ffdb840feb4,156165620,0,0x0,8
tick,0x7ffdb840feb4,156180638,0,0x0,8
tick,0x7ffdb840feb4,156196632,0,0x0,8
tick,0x7ffdb840feb4,156212628,0,0x0,8
tick,0x7ffdb840feb4,156227628,0,0x0,8
tick,0x7ffdb840feb4,156243060,0,0x0,8
tick,0x7ffdb840feb4,156258635,0,0x0,8
tick,0x7ffdb840feb4,156274641,0,0x0,8
tick,0x7ffdb840feb4,156290219,0,0x0,8
tick,0x7ffdb840feb4,156305649,0,0x0,8
tick,0x7ffdb840feb4,156321647,0,0x0,8
tick,0x7ffdb840feb4,156336993,0,0x0,8
tick,0x7ffdb840feb4,156352653,0,0x0,8
tick,0x7ffdb840feb4,156367917,0,0x0,8
tick,0x7ffdb840feb4,156383908,0,0x0,8
tick,0x7ffdb840feb4,156399424,0,0x0,8
tick,0x7ffdb840feb4,156415427,0,0x0,8
tick,0x7ffdb840feb4,156430664,0,0x0,8
tick,0x7ffdb840feb4,156445507,0,0x0,8
tick,0x7ffdb840feb4,156460688,0,0x0,8
tick,0x7ffdb840feb4,156475578,0,0x0,8
tick,0x7ffdb840feb4,156490819,0,0x0,8
tick,0x7ffdb840feb4,156505961,0,0x0,8
tick,0x7ffdb840feb4,156521972,0,0x0,8
tick,0x7ffdb840feb4,156536969,0,0x0,8
tick,0x7ffdb840feb4,156552969,0,0x0,8
tick,0x7ffdb840feb4,156568836,0,0x0,8
tick,0x7ffdb840feb4,156584110,0,0x0,8
tick,0x7ffdb840feb4,156599959,0,0x0,8
tick,0x7ffdb840feb4,156614956,0,0x0,8
tick,0x7ffdb840feb4,156630561,0,0x0,8
tick,0x7ffdb840feb4,156645828,0,0x0,8
tick,0x7ffdb840feb4,156660950,0,0x0,8
tick,0x7ffdb840feb4,156676943,0,0x0,8
tick,0x7ffdb840feb4,156692943,0,0x0,8
tick,0x7ffdb840feb4,156708952,0,0x0,8
tick,0x7ffdb840feb4,156724125,0,0x0,8
tick,0x7ffdb840feb4,156738975,0,0x0,8
tick,0x7ffdb840feb4,156754127,0,0x0,8
tick,0x7ffdb840feb4,156769290,0,0x0,8
tick,0x7ffdb840feb4,156785136,0,0x0,8
tick,0x7ffdb840feb4,156800517,0,0x0,8
tick,0x7ffdb840feb4,156816521,0,0x0,8
tick,0x7ffdb840feb4,156831966,0,0x0,8
tick,0x7ffdb840feb4,156847840,0,0x0,8
tick,0x7ffdb840feb4,156862967,0,0x0,8
tick,0x7ffdb840feb4,156878974,0,0x0,8
tick,0x7ffdb840feb4,156894151,0,0x0,8
tick,0x7ffdb840feb4,156909482,0,0x0,8
tick,0x7ffdb840feb4,156924834,0,0x0,8
tick,0x7ffdb840feb4,156940138,0,0x0,8
tick,0x7ffdb840feb4,156955656,0,0x0,8
tick,0x7ffdb840feb4,156970983,0,0x0,8
tick,0x7ffdb840feb4,156986158,0,0x0,8
tick,0x7ffdb840feb4,157001975,0,0x0,8
tick,0x7ffdb840feb4,157017765,0,0x0,8
tick,0x7ffdb840feb4,157032992,0,0x0,8
tick,0x7ffdb840feb4,157048955,0,0x0,8
tick,0x7ffdb840feb4,157064173,0,0x0,8
tick,0x7ffdb840feb4,157079986,0,0x0,8
tick,0x7ffdb840feb4,157094987,0,0x0,8
tick,0x7ffdb840feb4,157110434,0,0x0,8
tick,0x7ffdb840feb4,157125600,0,0x0,8
tick,0x7ffdb840feb4,157140813,0,0x0,8
tick,0x7ffdb840feb4,157156179,0,0x0,8
tick,0x7ffdb840feb4,157172009,0,0x0,8
tick,0x7ffdb840feb4,157187162,0,0x0,8
tick,0x7ffdb840feb4,157203003,0,0x0,8
tick,0x7ffdb840feb4,157218179,0,0x0,8
tick,0x7ffdb840feb4,157234184,0,0x0,8
tick,0x7ffdb840feb4,157248959,0,0x0,8
tick,0x7ffdb840feb4,157264199,0,0x0,8
tick,0x7ffdb840feb4,157280209,0,0x0,8
tick,0x7ffdb840feb4,157296216,0,0x0,8
tick,0x7ffdb840feb4,157312014,0,0x0,8
tick,0x7ffdb840feb4,157328027,0,0x0,8
tick,0x7ffdb840feb4,157343027,0,0x0,8
tick,0x7ffdb840feb4,157358206,0,0x0,8
tick,0x7ffdb840feb4,157374205,0,0x0,8
tick,0x7ffdb840feb4,157389465,0,0x0,8
tick,0x7ffdb840feb4,157404641,0,0x0,8
tick,0x7ffdb840feb4,157420028,0,0x0,8
tick,0x7ffdb840feb4,157436039,0,0x0,8
tick,0x7ffdb840feb4,157452033,0,0x0,8
tick,0x7ffdb840feb4,157467624,0,0x0,8
tick,0x7ffdb840feb4,157483660,0,0x0,8
tick,0x7ffdb840feb4,157498973,0,0x0,8
tick,0x7ffdb840feb4,157514969,0,0x0,8
tick,0x7ffdb840feb4,157530981,0,0x0,8
tick,0x7ffdb840feb4,157546975,0,0x0,8
tick,0x7ffdb840feb4,157562980,0,0x0,8
tick,0x7ffdb840feb4,157578984,0,0x0,8
tick,0x7ffdb840feb4,157594233,0,0x0,8
tick,0x7ffdb840feb4,157609661,0,0x0,8
tick,0x7ffdb840feb4,157625659,0,0x0,8
tick,0x7ffdb840feb4,157640995,0,0x0,8
tick,0x7ffdb840feb4,157657002,0,0x0,8
tick,0x7ffdb840feb4,157672064,0,0x0,8
tick,0x7ffdb840feb4,157687868,0,0x0,8
tick,0x7ffdb840feb4,157703063,0,0x0,8
tick,0x7ffdb840feb4,157719020,0,0x0,8
tick,0x7ffdb840feb4,157734247,0,0x0,8
tick,0x7ffdb840feb4,157749253,0,0x0,8
tick,0x7ffdb840feb4,157764624,0,0x0,8
tick,0x7ffdb840feb4,157780079,0,0x0,8
tick,0x7ffdb840feb4,157795251,0,0x0,8
tick,0x7ffdb840feb4,157810834,0,0x0,8
tick,0x7ffdb840feb4,157826739,0,0x0,8
tick,0x7ffdb840feb4,157842729,0,0x0,8
tick,0x7ffdb840feb4,157858761,0,0x0,8
tick,0x7ffdb840feb4,157874269,0,0x0,8
tick,0x7ffdb840feb4,157889899,0,0x0,8
tick,0x7ffdb840feb4,157905272,0,0x0,8
tick,0x7ffdb840feb4,157920984,0,0x0,8
tick,0x7ffdb840feb4,157936774,0,0x0,8
tick,0x7ffdb840feb4,157952104,0,0x0,8
tick,0x7ffdb840feb4,157968006,0,0x0,8
tick,0x7ffdb840feb4,157983105,0,0x0,8
tick,0x7ffdb840feb4,157999021,0,0x0,8
tick,0x7ffdb840feb4,158014983,0,0x0,8
tick,0x7ffdb840feb4,158030938,0,0x0,8
tick,0x7ffdb840feb4,158045432,0,0x0,8
tick,0x7ffdb840feb4,158061008,0,0x0,8
tick,0x7ffdb840feb4,158076991,0,0x0,8
tick,0x7ffdb840feb4,158093114,0,0x0,8
tick,0x7ffdb840feb4,158109122,0,0x0,8
tick,0x7ffdb840feb4,158124293,0,0x0,8
tick,0x7ffdb840feb4,158139127,0,0x0,8
tick,0x7ffdb840feb4,158154302,0,0x0,8
tick,0x7ffdb840feb4,158169643,0,0x0,8
tick,0x7ffdb840feb4,158185303,0,0x0,8
tick,0x7ffdb840feb4,158200961,0,0x0,8
tick,0x7ffdb840feb4,158216986,0,0x0,8
tick,0x7ffdb840feb4,158232131,0,0x0,8
tick,0x7ffdb840feb4,158247900,0,0x0,8
tick,0x7ffdb840feb4,158263145,0,0x0,8
tick,0x7ffdb840feb4,158279138,0,0x0,8
tick,0x7ffdb840feb4,158294321,0,0x0,8
tick,0x7ffdb840feb4,158309315,0,0x0,8
tick,0x7ffdb840feb4,158324709,0,0x0,8
tick,0x7ffdb840feb4,158340607,0,0x0,8
tick,0x7ffdb840feb4,158355804,0,0x0,8
tick,0x7ffdb840feb4,158371159,0,0x0,8
tick,0x7ffdb840feb4,158386325,0,0x0,8
tick,0x7ffdb840feb4,158401969,0,0x0,8
tick,0x7ffdb840feb4,158417157,0,0x0,8
tick,0x7ffdb840feb4,158432326,0,0x0,8
tick,0x7ffdb840feb4,158448048,0,0x0,8
tick,0x7ffdb840feb4,158463159,0,0x0,8
tick,0x7ffdb840feb4,158478354,0,0x0,8
tick,0x7ffdb840feb4,158494334,0,0x0,8
tick,0x7ffdb840feb4,158510183,0,0x0,8
tick,0x7ffdb840feb4,158525167,0,0x0,8
tick,0x7ffdb840feb4,158540170,0,0x0,8
tick,0x7ffdb840feb4,158556180,0,0x0,8
tick,0x7ffdb840feb4,158572180,0,0x0,8
tick,0x7ffdb840feb4,158588049,0,0x0,8
tick,0x7ffdb840feb4,158603015,0,0x0,8
tick,0x7ffdb840feb4,158618026,0,0x0,8
tick,0x7ffdb840feb4,158633181,0,0x0,8
tick,0x7ffdb840feb4,158647921,0,0x0,8
tick,0x7ffdb840feb4,158663183,0,0x0,8
tick,0x7ffdb840feb4,158678361,0,0x0,8
tick,0x7ffdb840feb4,158694365,0,0x0,8
tick,0x7ffdb840feb4,158710012,0,0x0,8
tick,0x7ffdb840feb4,158725363,0,0x0,8
tick,0x7ffdb840feb4,158741196,0,0x0,8
tick,0x7ffdb840feb4,158756375,0,0x0,8
tick,0x7ffdb840feb4,158772196,0,0x0,8
tick,0x7ffdb840feb4,158787198,0,0x0,8
tick,0x7ffdb840feb4,158803218,0,0x0,8
tick,0x7ffdb840feb4,158819213,0,0x0,8
tick,0x7ffdb840feb4,158834387,0,0x0,8
tick,0x7ffdb840feb4,158849986,0,0x0,8
tick,0x7ffdb840feb4,158864628,0,0x0,8
tick,0x7ffdb840feb4,158880419,0,0x0,8
tick,0x7ffdb840feb4,158895461,0,0x0,8
tick,0x7ffdb840feb4,158911220,0,0x0,8
tick,0x7ffdb840feb4,158925925,0,0x0,8
tick,0x7ffdb840feb4,158940960,0,0x0,8
tick,0x7ffdb840feb4,158956405,0,0x0,8
tick,0x7ffdb840feb4,158972224,0,0x0,8
tick,0x7ffdb840feb4,158988167,0,0x0,8
tick,0x7ffdb840feb4,159004270,0,0x0,8
tick,0x7ffdb840feb4,159019504,0,0x0,8
tick,0x7ffdb840feb4,159035406,0,0x0,8
tick,0x7ffdb840feb4,159050968,0,0x0,8
tick,0x7ffdb840feb4,159066634,0,0x0,8
tick,0x7ffdb840feb4,159082022,0,0x0,8
tick,0x7ffdb840feb4,159096965,0,0x0,8
tick,0x7ffdb840feb4,159112237,0,0x0,8
tick,0x7ffdb840feb4,159127942,0,0x0,8
tick,0x7ffdb840feb4,159143241,0,0x0,8
tick,0x7ffdb840feb4,159159251,0,0x0,8
tick,0x7ffdb840feb4,159174418,0,0x0,8
tick,0x7ffdb840feb4,159189417,0,0x0,8
tick,0x7ffdb840feb4,159204573,0,0x0,8
tick,0x7ffdb840feb4,159220249,0,0x0,8
tick,0x7ffdb840feb4,159236204,0,0x0,8
tick,0x7ffdb840feb4,159252253,0,0x0,8
tick,0x7ffdb840feb4,159267632,0,0x0,8
tick,0x7ffdb840feb4,159283253,0,0x0,8
tick,0x7ffdb840feb4,159298976,0,0x0,8
tick,0x7ffdb840feb4,159314241,0,0x0,8
tick,0x7ffdb840feb4,159329956,0,0x0,8
tick,0x7ffdb840feb4,159345454,0,0x0,8
tick,0x7ffdb840feb4,159361269,0,0x0,8
tick,0x7ffdb840feb4,159375641,0,0x0,8
tick,0x7ffdb840feb4,159391277,0,0x0,8
tick,0x7ffdb840feb4,159406712,0,0x0,8
tick,0x7ffdb840feb4,159422293,0,0x0,8
tick,0x7ffdb840feb4,159437729,0,0x0,8
tick,0x7ffdb840feb4,159453299,0,0x0,8
tick,0x7ffdb840feb4,159469283,0,0x0,8
tick,0x7ffdb840feb4,159485293,0,0x0,8
tick,0x7ffdb840feb4,159500963,0,0x0,8
tick,0x7ffdb840feb4,159516665,0,0x0,8
tick,0x7ffdb840feb4,159532292,0,0x0,8
tick,0x7ffdb840feb4,159548293,0,0x0,8
tick,0x7ffdb840feb4,159564300,0,0x0,8
tick,0x7ffdb840feb4,159580303,0,0x0,8
tick,0x7ffdb840feb4,159595465,0,0x0,8
tick,0x7ffdb840feb4,159610638,0,0x0,8
tick,0x7ffdb840feb4,159626481,0,0x0,8
tick,0x7ffdb840feb4,159642240,0,0x0,8
tick,0x7ffdb840feb4,159658256,0,0x0,8
tick,0x7ffdb840feb4,159673489,0,0x0,8
tick,0x7ffdb840feb4,159688972,0,0x0,8
tick,0x7ffdb840feb4,159704488,0,0x0,8
tick,0x7ffdb840feb4,159719647,0,0x0,8
tick,0x7ffdb840feb4,159735120,0,0x0,8
tick,0x7ffdb840feb4,159750321,0,0x0,8
tick,0x7ffdb840feb4,159765635,0,0x0,8
tick,0x7ffdb840feb4,159781313,0,0x0,8
tick,0x7ffdb840feb4,159797126,0,0x0,8
tick,0x7ffdb840feb4,159812319,0,0x0,8
tick,0x7ffdb840feb4,159828129,0,0x0,8
tick,0x7ffdb840feb4,159843495,0,0x0,8
tick,0x7ffdb840feb4,159859152,0,0x0,8
tick,0x7ffdb840feb4,159874500,0,0x0,8
tick,0x7ffdb840feb4,159889857,0,0x0,8
tick,0x7ffdb840feb4,159904984,0,0x0,8
tick,0x7ffdb840feb4,159920159,0,0x0,8
tick,0x7ffdb840feb4,159935339,0,0x0,8
tick,0x7ffdb840feb4,159950530,0,0x0,8
tick,0x7ffdb840feb4,159966640,0,0x0,8
tick,0x7ffdb840feb4,159981304,0,0x0,8
tick,0x7ffdb840feb4,159996451,0,0x0,8
tick,0x7ffdb840feb4,160012340,0,0x0,8
tick,0x7ffdb840feb4,160028354,0,0x0,8
tick,0x7ffdb840feb4,160044349,0,0x0,8
tick,0x7ffdb840feb4,160060363,0,0x0,8
tick,0x7ffdb840feb4,160075568,0,0x0,8
tick,0x7ffdb840feb4,160090560,0,0x0,8
tick,0x7ffdb840feb4,160106387,0,0x0,8
tick,0x7ffdb840feb4,160122364,0,0x0,8
tick,0x7ffdb840feb4,160138375,0,0x0,8
tick,0x7ffdb840feb4,160153545,0,0x0,8
tick,0x7ffdb840feb4,160168992,0,0x0,8
tick,0x7ffdb840feb4,160184540,0,0x0,8
tick,0x7ffdb840feb4,160199973,0,0x0,8
tick,0x7ffdb840feb4,160215294,0,0x0,8
tick,0x7ffdb840feb4,160230636,0,0x0,8
tick,0x7ffdb840feb4,160246382,0,0x0,8
tick,0x7ffdb840feb4,160261382,0,0x0,8
tick,0x7ffdb840feb4,160277376,0,0x0,8
tick,0x7ffdb840feb4,160293381,0,0x0,8
tick,0x7ffdb840feb4,160308683,0,0x0,8
tick,0x7ffdb840feb4,160324561,0,0x0,8
tick,0x7ffdb840feb4,160339338,0,0x0,8
tick,0x7ffdb840feb4,160355332,0,0x0,8
tick,0x7ffdb840feb4,160371351,0,0x0,8
tick,0x7ffdb840feb4,160386566,0,0x0,8
tick,0x7ffdb840feb4,160402403,0,0x0,8
tick,0x7ffdb840feb4,160417675,0,0x0,8
tick,0x7ffdb840feb4,160433411,0,0x0,8
tick,0x7ffdb840feb4,160448976,0,0x0,8
tick,0x7ffdb840feb4,160463577,0,0x0,8
tick,0x7ffdb840feb4,160479581,0,0x0,8
tick,0x7ffdb840feb4,160494738,0,0x0,8
tick,0x7ffdb840feb4,160510735,0,0x0,8
tick,0x7ffdb840feb4,160525968,0,0x0,8
tick,0x7ffdb840feb4,160541081,0,0x0,8
tick,0x7ffdb840feb4,160557080,0,0x0,8
tick,0x7ffdb840feb4,160573075,0,0x0,8
tick,0x7ffdb840feb4,160589101,0,0x0,8
tick,0x7ffdb840feb4,160605012,0,0x0,8
tick,0x7ffdb840feb4,160621040,0,0x0,8
tick,0x7ffdb840feb4,160635767,0,0x0,8
tick,0x7ffdb840feb4,160651027,0,0x0,8
tick,0x7ffdb840feb4,160667085,0,0x0,8
tick,0x7ffdb840feb4,160682428,0,0x0,8
tick,0x7ffdb840feb4,160697090,0,0x0,8
tick,0x7ffdb840feb4,160712429,0,0x0,8
tick,0x7ffdb840feb4,160727998,0,0x0,8
tick,0x7ffdb840feb4,160743435,0,0x0,8
tick,0x7ffdb840feb4,160759161,0,0x0,8
tick,0x7ffdb840feb4,160774614,0,0x0,8
tick,0x7ffdb840feb4,160790499,0,0x0,8
tick,0x7ffdb840feb4,160806094,0,0x0,8
tick,0x7ffdb840feb4,160821442,0,0x0,8
tick,0x7ffdb840feb4,160836623,0,0x0,8
tick,0x7ffdb840feb4,160852442,0,0x0,8
tick,0x7ffdb840feb4,160868096,0,0x0,8
tick,0x7ffdb840feb4,160884203,0,0x0,8
tick,0x7ffdb840feb4,160899539,0,0x0,8
tick,0x7ffdb840feb4,160915643,0,0x0,8
tick,0x7ffdb840feb4,160931017,0,0x0,8
tick,0x7ffdb840feb4,160946485,0,0x0,8
tick,0x7ffdb840feb4,160962464,0,0x0,8
tick,0x7ffdb840feb4,160977761,0,0x0,8
tick,0x7ffdb840feb4,160993463,0,0x0,8
tick,0x7ffdb840feb4,161008550,0,0x0,8
tick,0x7ffdb840feb4,161024464,0,0x0,8
tick,0x7ffdb840feb4,161039670,0,0x0,8
tick,0x7ffdb840feb4,161054479,0,0x0,8
tick,0x7ffdb840feb4,161070476,0,0x0,8
tick,0x7ffdb840feb4,161086200,0,0x0,8
tick,0x7ffdb840feb4,161101480,0,0x0,8
tick,0x7ffdb840feb4,161117201,0,0x0,8
tick,0x7ffdb840feb4,161132493,0,0x0,8
tick,0x7ffdb840feb4,161147480,0,0x0,8
tick,0x7ffdb840feb4,161163033,0,0x0,8
tick,0x7ffdb840feb4,161177972,0,0x0,8
tick,0x7ffdb840feb4,161193493,0,0x0,8
tick,0x7ffdb840feb4,161209037,0,0x0,8
tick,0x7ffdb840feb4,161224666,0,0x0,8
tick,0x7ffdb840feb4,161240492,0,0x0,8
tick,0x7ffdb840feb4,161255672,0,0x0,8
tick,0x7ffdb840feb4,161270673,0,0x0,8
tick,0x7ffdb840feb4,161286507,0,0x0,8
tick,0x7ffdb840feb4,161302506,0,0x0,8
tick,0x7ffdb840feb4,161317641,0,0x0,8
tick,0x7ffdb840feb4,161332499,0,0x0,8
tick,0x7ffdb840feb4,161347972,0,0x0,8
tick,0x7ffdb840feb4,161364036,0,0x0,8
tick,0x7ffdb840feb4,161379390,0,0x0,8
tick,0x7ffdb840feb4,161394693,0,0x0,8
tick,0x7ffdb840feb4,161410049,0,0x0,8
tick,0x7ffdb840feb4,161425543,0,0x0,8
tick,0x7ffdb840feb4,161441411,0,0x0,8
tick,0x7ffdb840feb4,161457410,0,0x0,8
tick,0x7ffdb840feb4,161472934,0,0x0,8
tick,0x7ffdb840feb4,161489046,0,0x0,8
tick,0x7ffdb840feb4,161504713,0,0x0,8
tick,0x7ffdb840feb4,161520663,0,0x0,8
tick,0x7ffdb840feb4,161536116,0,0x0,8
tick,0x7ffdb840feb4,161551326,0,0x0,8
tick,0x7ffdb840feb4,161567334,0,0x0,8
tick,0x7ffdb840feb4,161583337,0,0x0,8
tick,0x7ffdb840feb4,161599329,0,0x0,8
tick,0x7ffdb840feb4,161614647,0,0x0,8
tick,0x7ffdb840feb4,161630355,0,0x0,8
tick,0x7ffdb840feb4,161645346,0,0x0,8
tick,0x7ffdb840feb4,161660492,0,0x0,8
tick,0x7ffdb840feb4,161675725,0,0x0,8
tick,0x7ffdb840feb4,161691027,0,0x0,8
tick,0x7ffdb840feb4,161707021,0,0x0,8
tick,0x7ffdb840feb4,161722568,0,0x0,8
tick,0x7ffdb840feb4,161738563,0,0x0,8
tick,0x7ffdb840feb4,161753722,0,0x0,8
tick,0x7ffdb840feb4,161769023,0,0x0,8
tick,0x7ffdb840feb4,161784730,0,0x0,8
tick,0x7ffdb840feb4,161799977,0,0x0,8
tick,0x7ffdb840feb4,161815646,0,0x0,8
tick,0x7ffdb840feb4,161831115,0,0x0,8
tick,0x7ffdb840feb4,161847153,0,0x0,8
tick,0x7ffdb840feb4,161863135,0,0x0,8
tick,0x7ffdb840feb4,161879147,0,0x0,8
tick,0x7ffdb840feb4,161894717,0,0x0,8
tick,0x7ffdb840feb4,161910139,0,0x0,8
tick,0x7ffdb840feb4,161925818,0,0x0,8
tick,0x7ffdb840feb4,161941161,0,0x0,8
tick,0x7ffdb840feb4,161955839,0,0x0,8
tick,0x7ffdb840feb4,161971137,0,0x0,8
tick,0x7ffdb840feb4,161986577,0,0x0,8
tick,0x7ffdb840feb4,162002588,0,0x0,8
tick,0x7ffdb840feb4,162018578,0,0x0,8
tick,0x7ffdb840feb4,162033572,0,0x0,8
tick,0x7ffdb840feb4,162048720,0,0x0,8
tick,0x7ffdb840feb4,162063681,0,0x0,8
tick,0x7ffdb840feb4,162078799,0,0x0,8
tick,0x7ffdb840feb4,162094770,0,0x0,8
tick,0x7ffdb840feb4,162110394,0,0x0,8
tick,0x7ffdb840feb4,162125632,0,0x0,8
tick,0x7ffdb840feb4,162141413,0,0x0,8
tick,0x7ffdb840feb4,162156776,0,0x0,8
tick,0x7ffdb840feb4,162172614,0,0x0,8
tick,0x7ffdb840feb4,162187286,0,0x0,8
tick,0x7ffdb840feb4,162202605,0,0x0,8
tick,0x7ffdb840feb4,162218609,0,0x0,8
tick,0x7ffdb840feb4,162233794,0,0x0,8
tick,0x7ffdb840feb4,162249043,0,0x0,8
tick,0x7ffdb840feb4,162264787,0,0x0,8
tick,0x7ffdb840feb4,162280274,0,0x0,8
tick,0x7ffdb840feb4,162295293,0,0x0,8
tick,0x7ffdb840feb4,162311295,0,0x0,8
tick,0x7ffdb840feb4,162326490,0,0x0,8
tick,0x7ffdb840feb4,162341633,0,0x0,8
tick,0x7ffdb840feb4,162356801,0,0x0,8
tick,0x7ffdb840feb4,162372635,0,0x0,8
tick,0x7ffdb840feb4,162387817,0,0x0,8
tick,0x7ffdb840feb4,162402635,0,0x0,8
tick,0x7ffdb840feb4,162418643,0,0x0,8
tick,0x7ffdb840feb4,162433810,0,0x0,8
tick,0x7ffdb840feb4,162448988,0,0x0,8
tick,0x7ffdb840feb4,162464819,0,0x0,8
tick,0x7ffdb840feb4,162479829,0,0x0,8
tick,0x7ffdb840feb4,162495227,0,0x0,8
tick,0x7ffdb840feb4,162510219,0,0x0,8
tick,0x7ffdb840feb4,162526289,0,0x0,8
tick,0x7ffdb840feb4,162541526,0,0x0,8
tick,0x7ffdb840feb4,162557525,0,0x0,8
tick,0x7ffdb840feb4,162573535,0,0x0,8
tick,0x7ffdb840feb4,162589530,0,0x0,8
tick,0x7ffdb840feb4,162605540,0,0x0,8
tick,0x7ffdb840feb4,162621547,0,0x0,8
tick,0x7ffdb840feb4,162637541,0,0x0,8
tick,0x7ffdb840feb4,162653573,0,0x0,8
tick,0x7ffdb840feb4,162669536,0,0x0,8
tick,0x7ffdb840feb4,162684852,0,0x0,8
tick,0x7ffdb840feb4,162699990,0,0x0,8
tick,0x7ffdb840feb4,162715662,0,0x0,8
tick,0x7ffdb840feb4,162731068,0,0x0,8
tick,0x7ffdb840feb4,162746851,0,0x0,8
tick,0x7ffdb840feb4,162762278,0,0x0,8
tick,0x7ffdb840feb4,162778306,0,0x0,8
tick,0x7ffdb840feb4,162793695,0,0x0,8
tick,0x7ffdb840feb4,162809078,0,0x0,8
tick,0x7ffdb840feb4,162824866,0,0x0,8
tick,0x7ffdb840feb4,162839882,0,0x0,8
tick,0x7ffdb840feb4,162855342,0,0x0,8
tick,0x7ffdb840feb4,162870871,0,0x0,8
tick,0x7ffdb840feb4,162885786,0,0x0,8
tick,0x7ffdb840feb4,162901701,0,0x0,8
tick,0x7ffdb840feb4,162917773,0,0x0,8
tick,0x7ffdb840feb4,162933706,0,0x0,8
tick,0x7ffdb840feb4,162948876,0,0x0,8
tick,0x7ffdb840feb4,162964635,0,0x0,8
tick,0x7ffdb840feb4,162980403,0,0x0,8
tick,0x7ffdb840feb4,162996368,0,0x0,8
tick,0x7ffdb840feb4,163011704,0,0x0,8
tick,0x7ffdb840feb4,163027214,0,0x0,8
tick,0x7ffdb840feb4,163042715,0,0x0,8
tick,0x7ffdb840feb4,163058726,0,0x0,8
tick,0x7ffdb840feb4,163073892,0,0x0,8
tick,0x7ffdb840feb4,163089079,0,0x0,8
tick,0x7ffdb840feb4,163104923,0,0x0,8
tick,0x7ffdb840feb4,163120578,0,0x0,8
tick,0x7ffdb840feb4,163135894,0,0x0,8
tick,0x7ffdb840feb4,163151910,0,0x0,8
tick,0x7ffdb840feb4,163167754,0,0x0,8
tick,0x7ffdb840feb4,163182726,0,0x0,8
tick,0x7ffdb840feb4,163197983,0,0x0,8
tick,0x7ffdb840feb4,163213735,0,0x0,8
tick,0x7ffdb840feb4,163229397,0,0x0,8
tick,0x7ffdb840feb4,163245402,0,0x0,8
tick,0x7ffdb840feb4,163260577,0,0x0,8
tick,0x7ffdb840feb4,163275391,0,0x0,8
tick,0x7ffdb840feb4,163290848,0,0x0,8
tick,0x7ffdb840feb4,163305921,0,0x0,8
tick,0x7ffdb840feb4,163320927,0,0x0,8
tick,0x7ffdb840feb4,163336464,0,0x0,8
tick,0x7ffdb840feb4,163352502,0,0x0,8
tick,0x7ffdb840feb4,163367795,0,0x0,8
tick,0x7ffdb840feb4,163382752,0,0x0,8
tick,0x7ffdb840feb4,163398700,0,0x0,8
tick,0x7ffdb840feb4,163414796,0,0x0,8
tick,0x7ffdb840feb4,163429823,0,0x0,8
tick,0x7ffdb840feb4,163445155,0,0x0,8
tick,0x7ffdb840feb4,163460487,0,0x0,8
tick,0x7ffdb840feb4,163475945,0,0x0,8
tick,0x7ffdb840feb4,163491108,0,0x0,8
tick,0x7ffdb840feb4,163506703,0,0x0,8
tick,0x7ffdb840feb4,163521936,0,0x0,8
tick,0x7ffdb840feb4,163537961,0,0x0,8
tick,0x7ffdb840feb4,163552953,0,0x0,8
tick,0x7ffdb840feb4,163568088,0,0x0,8
tick,0x7ffdb840feb4,163584086,0,0x0,8
tick,0x7ffdb840feb4,163600076,0,0x0,8
tick,0x7ffdb840feb4,163615456,0,0x0,8
tick,0x7ffdb840feb4,163631470,0,0x0,8
tick,0x7ffdb840feb4,163647043,0,0x0,8
tick,0x7ffdb840feb4,163662779,0,0x0,8
tick,0x7ffdb840feb4,163677962,0,0x0,8
tick,0x7ffdb840feb4,163692972,0,0x0,8
tick,0x7ffdb840feb4,163708268,0,0x0,8
tick,0x7ffdb840feb4,163724289,0,0x0,8
tick,0x7ffdb840feb4,163740056,0,0x0,8
tick,0x7ffdb840feb4,163755976,0,0x0,8
tick,0x7ffdb840feb4,163771160,0,0x0,8
tick,0x7ffdb840feb4,163786424,0,0x0,8
tick,0x7ffdb840feb4,163801810,0,0x0,8
tick,0x7ffdb840feb4,163816955,0,0x0,8
tick,0x7ffdb840feb4,163832815,0,0x0,8
tick,0x7ffdb840feb4,163847990,0,0x0,8
tick,0x7ffdb840feb4,163863811,0,0x0,8
tick,0x7ffdb840feb4,163878996,0,0x0,8
tick,0x7ffdb840feb4,163893987,0,0x0,8
tick,0x7ffdb840feb4,163909332,0,0x0,8
tick,0x7ffdb840feb4,163924810,0,0x0,8
tick,0x7ffdb840feb4,163939944,0,0x0,8
tick,0x7ffdb840feb4,163955151,0,0x0,8
tick,0x7ffdb840feb4,163970090,0,0x0,8
tick,0x7ffdb840feb4,163986017,0,0x0,8
tick,0x7ffdb840feb4,164001824,0,0x0,8
tick,0x7ffdb840feb4,164016717,0,0x0,8
tick,0x7ffdb840feb4,164031820,0,0x0,8
tick,0x7ffdb840feb4,164046990,0,0x0,8
tick,0x7ffdb840feb4,164062834,0,0x0,8
tick,0x7ffdb840feb4,164077836,0,0x0,8
tick,0x7ffdb840feb4,164093138,0,0x0,8
tick,0x7ffdb840feb4,164108156,0,0x0,8
tick,0x7ffdb840feb4,164123837,0,0x0,8
tick,0x7ffdb840feb4,164139849,0,0x0,8
tick,0x7ffdb840feb4,164155022,0,0x0,8
tick,0x7ffdb840feb4,164170093,0,0x0,8
tick,0x7ffdb840feb4,164185022,0,0x0,8
tick,0x7ffdb840feb4,164200992,0,0x0,8
tick,0x7ffdb840feb4,164216656,0,0x0,8
tick,0x7ffdb840feb4,164231665,0,0x0,8
tick,0x7ffdb840feb4,164247410,0,0x0,8
tick,0x7ffdb840feb4,164262857,0,0x0,8
tick,0x7ffdb840feb4,164278868,0,0x0,8
tick,0x7ffdb840feb4,164293859,0,0x0,8
tick,0x7ffdb840feb4,164309028,0,0x0,8
tick,0x7ffdb840feb4,164325034,0,0x0,8
tick,0x7ffdb840feb4,164340469,0,0x0,8
tick,0x7ffdb840feb4,164356041,0,0x0,8
tick,0x7ffdb840feb4,164371180,0,0x0,8
tick,0x7ffdb840feb4,164387039,0,0x0,8
tick,0x7ffdb840feb4,164402878,0,0x0,8
tick,0x7ffdb840feb4,164418895,0,0x0,8
tick,0x7ffdb840feb4,164434053,0,0x0,8
tick,0x7ffdb840feb4,164448998,0,0x0,8
tick,0x7ffdb840feb4,164465065,0,0x0,8
tick,0x7ffdb840feb4,164480324,0,0x0,8
tick,0x7ffdb840feb4,164496061,0,0x0,8
tick,0x7ffdb840feb4,164511886,0,0x0,8
tick,0x7ffdb840feb4,164527064,0,0x0,8
tick,0x7ffdb840feb4,164542887,0,0x0,8
tick,0x7ffdb840feb4,164558078,0,0x0,8
tick,0x7ffdb840feb4,164573902,0,0x0,8
tick,0x7ffdb840feb4,164589903,0,0x0,8
tick,0x7ffdb840feb4,164605907,0,0x0,8
tick,0x7ffdb840feb4,164620913,0,0x0,8
tick,0x7ffdb840feb4,164636079,0,0x0,8
tick,0x7ffdb840feb4,164651153,0,0x0,8
tick,0x7ffdb840feb4,164667090,0,0x0,8
tick,0x7ffdb840feb4,164681999,0,0x0,8
tick,0x7ffdb840feb4,164697555,0,0x0,8
tick,0x7ffdb840feb4,164713271,0,0x0,8
tick,0x7ffdb840feb4,164728348,0,0x0,8
tick,0x7ffdb840feb4,164743288,0,0x0,8
tick,0x7ffdb840feb4,164759284,0,0x0,8
tick,0x7ffdb840feb4,164775097,0,0x0,8
tick,0x7ffdb840feb4,164790097,0,0x0,8
tick,0x7ffdb840feb4,164805353,0,0x0,8
tick,0x7ffdb840feb4,164821371,0,0x0,8
tick,0x7ffdb840feb4,164836946,0,0x0,8
tick,0x7ffdb840feb4,164852279,0,0x0,8
tick,0x7ffdb840feb4,164868275,0,0x0,8
tick,0x7ffdb840feb4,164883942,0,0x0,8
tick,0x7ffdb840feb4,164899940,0,0x0,8
tick,0x7ffdb840feb4,164915659,0,0x0,8
tick,0x7ffdb840feb4,164930936,0,0x0,8
tick,0x7ffdb840feb4,164945934,0,0x0,8
tick,0x7ffdb840feb4,164961933,0,0x0,8
tick,0x7ffdb840feb4,164977123,0,0x0,8
tick,0x7ffdb840feb4,164992125,0,0x0,8
tick,0x7ffdb840feb4,165007425,0,0x0,8
tick,0x7ffdb840feb4,165022946,0,0x0,8
tick,0x7ffdb840feb4,165038129,0,0x0,8
tick,0x7ffdb840feb4,165053942,0,0x0,8
tick,0x7ffdb840feb4,165068666,0,0x0,8
tick,0x7ffdb840feb4,165083953,0,0x0,8
tick,0x7ffdb840feb4,165099149,0,0x0,8
tick,0x7ffdb840feb4,165115145,0,0x0,8
tick,0x7ffdb840feb4,165130196,0,0x0,8
tick,0x7ffdb840feb4,165145988,0,0x0,8
tick,0x7ffdb840feb4,165161968,0,0x0,8
tick,0x7ffdb840feb4,165176685,0,0x0,8
tick,0x7ffdb840feb4,165192691,0,0x0,8
tick,0x7ffdb840feb4,165208175,0,0x0,8
tick,0x7ffdb840feb4,165223966,0,0x0,8
tick,0x7ffdb840feb4,165239813,0,0x0,8
tick,0x7ffdb840feb4,165255167,0,0x0,8
tick,0x7ffdb840feb4,165271002,0,0x0,8
tick,0x7ffdb840feb4,165286578,0,0x0,8
tick,0x7ffdb840feb4,165301994,0,0x0,8
tick,0x7ffdb840feb4,165317589,0,0x0,8
tick,0x7ffdb840feb4,165332985,0,0x0,8
tick,0x7ffdb840feb4,165348965,0,0x0,8
tick,0x7ffdb840feb4,165364166,0,0x0,8
tick,0x7ffdb840feb4,165379558,0,0x0,8
tick,0x7ffdb840feb4,165395171,0,0x0,8
tick,0x7ffdb840feb4,165410190,0,0x0,8
tick,0x7ffdb840feb4,165426007,0,0x0,8
tick,0x7ffdb840feb4,165442003,0,0x0,8
tick,0x7ffdb840feb4,165457192,0,0x0,8
tick,0x7ffdb840feb4,165472017,0,0x0,8
tick,0x7ffdb840feb4,165487702,0,0x0,8
tick,0x7ffdb840feb4,165503003,0,0x0,8
tick,0x7ffdb840feb4,165518031,0,0x0,8
tick,0x7ffdb840feb4,165533198,0,0x0,8
tick,0x7ffdb840feb4,165548997,0,0x0,8
tick,0x7ffdb840feb4,165564020,0,0x0,8
tick,0x7ffdb840feb4,165580051,0,0x0,8
tick,0x7ffdb840feb4,165596047,0,0x0,8
tick,0x7ffdb840feb4,165611061,0,0x0,8
tick,0x7ffdb840feb4,165627056,0,0x0,8
tick,0x7ffdb840feb4,165642035,0,0x0,8
tick,0x7ffdb840feb4,165657667,0,0x0,8
tick,0x7ffdb840feb4,165673028,0,0x0,8
tick,0x7ffdb840feb4,165687782,0,0x0,8
tick,0x7ffdb840feb4,165703028,0,0x0,8
tick,0x7ffdb840feb4,165717753,0,0x0,8
tick,0x7ffdb840feb4,165733038,0,0x0,8
tick,0x7ffdb840feb4,165749008,0,0x0,8
tick,0x7ffdb840feb4,165764236,0,0x0,8
tick,0x7ffdb840feb4,165779749,0,0x0,8
tick,0x7ffdb840feb4,165795218,0,0x0,8
tick,0x7ffdb840feb4,165811242,0,0x0,8
tick,0x7ffdb840feb4,165825745,0,0x0,8
tick,0x7ffdb840feb4,165841298,0,0x0,8
tick,0x7ffdb840feb4,165857061,0,0x0,8
tick,0x7ffdb840feb4,165873029,0,0x0,8
tick,0x7ffdb840feb4,165888234,0,0x0,8
tick,0x7ffdb840feb4,165903137,0,0x0,8
tick,0x7ffdb840feb4,165918249,0,0x0,8
tick,0x7ffdb840feb4,165934058,0,0x0,8
tick,0x7ffdb840feb4,165949033,0,0x0,8
tick,0x7ffdb840feb4,165964064,0,0x0,8
tick,0x7ffdb840feb4,165980070,0,0x0,8
tick,0x7ffdb840feb4,165995442,0,0x0,8
tick,0x7ffdb840feb4,166011256,0,0x0,8
tick,0x7ffdb840feb4,166026231,0,0x0,8
tick,0x7ffdb840feb4,166042076,0,0x0,8
tick,0x7ffdb840feb4,166058087,0,0x0,8
tick,0x7ffdb840feb4,166074042,0,0x0,8
tick,0x7ffdb840feb4,166089226,0,0x0,8
tick,0x7ffdb840feb4,166104744,0,0x0,8
tick,0x7ffdb840feb4,166120669,0,0x0,8
tick,0x7ffdb840feb4,166136257,0,0x0,8
tick,0x7ffdb840feb4,166151492,0,0x0,8
tick,0x7ffdb840feb4,166167090,0,0x0,8
tick,0x7ffdb840feb4,166183097,0,0x0,8
tick,0x7ffdb840feb4,166199009,0,0x0,8
tick,0x7ffdb840feb4,166214272,0,0x0,8
tick,0x7ffdb840feb4,166230165,0,0x0,8
tick,0x7ffdb840feb4,166245161,0,0x0,8
tick,0x7ffdb840feb4,166260612,0,0x0,8
tick,0x7ffdb840feb4,166275878,0,0x0,8
tick,0x7ffdb840feb4,166291139,0,0x0,8
tick,0x7ffdb840feb4,166307217,0,0x0,8
tick,0x7ffdb840feb4,166323215,0,0x0,8
tick,0x7ffdb840feb4,166339223,0,0x0,8
tick,0x7ffdb840feb4,166355273,0,0x0,8
tick,0x7ffdb840feb4,166371096,0,0x0,8
tick,0x7ffdb840feb4,166386287,0,0x0,8
tick,0x7ffdb840feb4,166401777,0,0x0,8
tick,0x7ffdb840feb4,166416935,0,0x0,8
tick,0x7ffdb840feb4,166432930,0,0x0,8
tick,0x7ffdb840feb4,166447692,0,0x0,8
tick,0x7ffdb840feb4,166463129,0,0x0,8
tick,0x7ffdb840feb4,166479118,0,0x0,8
tick,0x7ffdb840feb4,166494317,0,0x0,8
tick,0x7ffdb840feb4,166509808,0,0x0,8
tick,0x7ffdb840feb4,166525109,0,0x0,8
tick,0x7ffdb840feb4,166540310,0,0x0,8
tick,0x7ffdb840feb4,166555455,0,0x0,8
tick,0x7ffdb840feb4,166571106,0,0x0,8
tick,0x7ffdb840feb4,166586316,0,0x0,8
tick,0x7ffdb840feb4,166602319,0,0x0,8
tick,0x7ffdb840feb4,166617325,0,0x0,8
tick,0x7ffdb840feb4,166633319,0,0x0,8
tick,0x7ffdb840feb4,166649023,0,0x0,8
tick,0x7ffdb840feb4,166664155,0,0x0,8
tick,0x7ffdb840feb4,166679372,0,0x0,8
tick,0x7ffdb840feb4,166695335,0,0x0,8
tick,0x7ffdb840feb4,166711323,0,0x0,8
tick,0x7ffdb840feb4,166726710,0,0x0,8
tick,0x7ffdb840feb4,166742715,0,0x0,8
tick,0x7ffdb840feb4,166758716,0,0x0,8
tick,0x7ffdb840feb4,166774158,0,0x0,8
tick,0x7ffdb840feb4,166789677,0,0x0,8
tick,0x7ffdb840feb4,166805323,0,0x0,8
tick,0x7ffdb840feb4,166821206,0,0x0,8
tick,0x7ffdb840feb4,166836343,0,0x0,8
tick,0x7ffdb840feb4,166851251,0,0x0,8
tick,0x7ffdb840feb4,166867210,0,0x0,8
tick,0x7ffdb840feb4,166883175,0,0x0,8
tick,0x7ffdb840feb4,166899172,0,0x0,8
tick,0x7ffdb840feb4,166914344,0,0x0,8
tick,0x7ffdb840feb4,166929113,0,0x0,8
tick,0x7ffdb840feb4,166944183,0,0x0,8
tick,0x7ffdb840feb4,166959353,0,0x0,8
tick,0x7ffdb840feb4,166974360,0,0x0,8
tick,0x7ffdb840feb4,166989504,0,0x0,8
tick,0x7ffdb840feb4,167005512,0,0x0,8
tick,0x7ffdb840feb4,167020521,0,0x0,8
tick,0x7ffdb840feb4,167035772,0,0x0,8
tick,0x7ffdb840feb4,167051273,0,0x0,8
tick,0x7ffdb840feb4,167066225,0,0x0,8
tick,0x7ffdb840feb4,167082334,0,0x0,8
tick,0x7ffdb840feb4,167097529,0,0x0,8
tick,0x7ffdb840feb4,167113147,0,0x0,8
tick,0x7ffdb840feb4,167128720,0,0x0,8
tick,0x7ffdb840feb4,167144203,0,0x0,8
tick,0x7ffdb840feb4,167159398,0,0x0,8
tick,0x7ffdb840feb4,167175382,0,0x0,8
tick,0x7ffdb840feb4,167190249,0,0x0,8
tick,0x7ffdb840feb4,167206217,0,0x0,8
tick,0x7ffdb840feb4,167221559,0,0x0,8
tick,0x7ffdb840feb4,167237223,0,0x0,8
tick,0x7ffdb840feb4,167253221,0,0x0,8
tick,0x7ffdb840feb4,167268581,0,0x0,8
tick,0x7ffdb840feb4,167284218,0,0x0,8
tick,0x7ffdb840feb4,167299220,0,0x0,8
tick,0x7ffdb840feb4,167314393,0,0x0,8
tick,0x7ffdb840feb4,167329726,0,0x0,8
tick,0x7ffdb840feb4,167345294,0,0x0,8
tick,0x7ffdb840feb4,167360712,0,0x0,8
tick,0x7ffdb840feb4,167376411,0,0x0,8
tick,0x7ffdb840feb4,167391261,0,0x0,8
tick,0x7ffdb840feb4,167407295,0,0x0,8
tick,0x7ffdb840feb4,167423232,0,0x0,8
tick,0x7ffdb840feb4,167439071,0,0x0,8
tick,0x7ffdb840feb4,167454236,0,0x0,8
tick,0x7ffdb840feb4,167469254,0,0x0,8
tick,0x7ffdb840feb4,167484424,0,0x0,8
tick,0x7ffdb840feb4,167499721,0,0x0,8
tick,0x7ffdb840feb4,167515718,0,0x0,8
tick,0x7ffdb840feb4,167531300,0,0x0,8
tick,0x7ffdb840feb4,167546430,0,0x0,8
tick,0x7ffdb840feb4,167561563,0,0x0,8
tick,0x7ffdb840feb4,167576945,0,0x0,8
tick,0x7ffdb840feb4,167592949,0,0x0,8
tick,0x7ffdb840feb4,167608963,0,0x0,8
tick,0x7ffdb840feb4,167623959,0,0x0,8
tick,0x7ffdb840feb4,167638959,0,0x0,8
tick,0x7ffdb840feb4,167654273,0,0x0,8
tick,0x7ffdb840feb4,167669603,0,0x0,8
tick,0x7ffdb840feb4,167685441,0,0x0,8
tick,0x7ffdb840feb4,167701451,0,0x0,8
tick,0x7ffdb840feb4,167717451,0,0x0,8
tick,0x7ffdb840feb4,167733272,0,0x0,8
tick,0x7ffdb840feb4,167749005,0,0x0,8
tick,0x7ffdb840feb4,167764280,0,0x0,8
tick,0x7ffdb840feb4,167779762,0,0x0,8
tick,0x7ffdb840feb4,167795453,0,0x0,8
tick,0x7ffdb840feb4,167810290,0,0x0,8
tick,0x7ffdb840feb4,167826119,0,0x0,8
tick,0x7ffdb840feb4,167841458,0,0x0,8
tick,0x7ffdb840feb4,167856710,0,0x0,8
tick,0x7ffdb840feb4,167872707,0,0x0,8
tick,0x7ffdb840feb4,167887407,0,0x0,8
tick,0x7ffdb840feb4,167903314,0,0x0,8
tick,0x7ffdb840feb4,167919310,0,0x0,8
tick,0x7ffdb840feb4,167934301,0,0x0,8
tick,0x7ffdb840feb4,167950305,0,0x0,8
tick,0x7ffdb840feb4,167965482,0,0x0,8
tick,0x7ffdb840feb4,167980834,0,0x0,8
tick,0x7ffdb840feb4,167996316,0,0x0,8
tick,0x7ffdb840feb4,168011899,0,0x0,8
tick,0x7ffdb840feb4,168027340,0,0x0,8
tick,0x7ffdb840feb4,168043316,0,0x0,8
tick,0x7ffdb840feb4,168059320,0,0x0,8
tick,0x7ffdb840feb4,168075212,0,0x0,8
tick,0x7ffdb840feb4,168091263,0,0x0,8
tick,0x7ffdb840feb4,168106112,0,0x0,8
tick,0x7ffdb840feb4,168121136,0,0x0,8
tick,0x7ffdb840feb4,168137134,0,0x0,8
tick,0x7ffdb840feb4,168153125,0,0x0,8
tick,0x7ffdb840feb4,168168585,0,0x0,8
tick,0x7ffdb840feb4,168184333,0,0x0,8
tick,0x7ffdb840feb4,168199012,0,0x0,8
tick,0x7ffdb840feb4,168214333,0,0x0,8
tick,0x7ffdb840feb4,168230434,0,0x0,8
tick,0x7ffdb840feb4,168245513,0,0x0,8
tick,0x7ffdb840feb4,168260943,0,0x0,8
tick,0x7ffdb840feb4,168276222,0,0x0,8
tick,0x7ffdb840feb4,168291278,0,0x0,8
tick,0x7ffdb840feb4,168306690,0,0x0,8
tick,0x7ffdb840feb4,168322312,0,0x0,8
tick,0x7ffdb840feb4,168338316,0,0x0,8
tick,0x7ffdb840feb4,168354291,0,0x0,8
tick,0x7ffdb840feb4,168369789,0,0x0,8
tick,0x7ffdb840feb4,168385523,0,0x0,8
tick,0x7ffdb840feb4,168400940,0,0x0,8
tick,0x7ffdb840feb4,168416532,0,0x0,8
tick,0x7ffdb840feb4,168431679,0,0x0,8
tick,0x7ffdb840feb4,168447712,0,0x0,8
tick,0x7ffdb840feb4,168463376,0,0x0,8
tick,0x7ffdb840feb4,168479235,0,0x0,8
tick,0x7ffdb840feb4,168495338,0,0x0,8
tick,0x7ffdb840feb4,168510547,0,0x0,8
tick,0x7ffdb840feb4,168525713,0,0x0,8
tick,0x7ffdb840feb4,168541716,0,0x0,8
tick,0x7ffdb840feb4,168557751,0,0x0,8
tick,0x7ffdb840feb4,168573380,0,0x0,8
tick,0x7ffdb840feb4,168589383,0,0x0,8
tick,0x7ffdb840feb4,168604556,0,0x0,8
tick,0x7ffdb840feb4,168619559,0,0x0,8
tick,0x7ffdb840feb4,168635557,0,0x0,8
tick,0x7ffdb840feb4,168651562,0,0x0,8
tick,0x7ffdb840feb4,168667050,0,0x0,8
tick,0x7ffdb840feb4,168682357,0,0x0,8
tick,0x7ffdb840feb4,168697017,0,0x0,8
tick,0x7ffdb840feb4,168713063,0,0x0,8
tick,0x7ffdb840feb4,168728876,0,0x0,8
tick,0x7ffdb840feb4,168744403,0,0x0,8
tick,0x7ffdb840feb4,168759570,0,0x0,8
tick,0x7ffdb840feb4,168775572,0,0x0,8
tick,0x7ffdb840feb4,168791416,0,0x0,8
tick,0x7ffdb840feb4,168807405,0,0x0,8
tick,0x7ffdb840feb4,168822404,0,0x0,8
tick,0x7ffdb840feb4,168837583,0,0x0,8
tick,0x7ffdb840feb4,168853420,0,0x0,8
tick,0x7ffdb840feb4,168868584,0,0x0,8
tick,0x7ffdb840feb4,168884417,0,0x0,8
tick,0x7ffdb840feb4,168899422,0,0x0,8
tick,0x7ffdb840feb4,168914591,0,0x0,8
tick,0x7ffdb840feb4,168929884,0,0x0,8
tick,0x7ffdb840feb4,168945592,0,0x0,8
tick,0x7ffdb840feb4,168961418,0,0x0,8
tick,0x7ffdb840feb4,168977424,0,0x0,8
tick,0x7ffdb840feb4,168993421,0,0x0,8
tick,0x7ffdb840feb4,169009224,0,0x0,8
tick,0x7ffdb840feb4,169024428,0,0x0,8
tick,0x7ffdb840feb4,169039568,0,0x0,8
tick,0x7ffdb840feb4,169055606,0,0x0,8
tick,0x7ffdb840feb4,169070868,0,0x0,8
tick,0x7ffdb840feb4,169086912,0,0x0,8
tick,0x7ffdb840feb4,169102939,0,0x0,8
tick,0x7ffdb840feb4,169118952,0,0x0,8
tick,0x7ffdb840feb4,169134181,0,0x0,8
tick,0x7ffdb840feb4,169150021,0,0x0,8
tick,0x7ffdb840feb4,169165287,0,0x0,8
tick,0x7ffdb840feb4,169181290,0,0x0,8
tick,0x7ffdb840feb4,169196636,0,0x0,8
tick,0x7ffdb840feb4,169211931,0,0x0,8
tick,0x7ffdb840feb4,169227632,0,0x0,8
tick,0x7ffdb840feb4,169243455,0,0x0,8
tick,0x7ffdb840feb4,169258666,0,0x0,8
tick,0x7ffdb840feb4,169273860,0,0x0,8
tick,0x7ffdb840feb4,169289032,0,0x0,8
tick,0x7ffdb840feb4,169304504,0,0x0,8
tick,0x7ffdb840feb4,169320500,0,0x0,8
tick,0x7ffdb840feb4,169336513,0,0x0,8
tick,0x7ffdb840feb4,169352019,0,0x0,8
tick,0x7ffdb840feb4,169367353,0,0x0,8
tick,0x7ffdb840feb4,169383469,0,0x0,8
tick,0x7ffdb840feb4,169398943,0,0x0,8
tick,0x7ffdb840feb4,169414476,0,0x0,8
tick,0x7ffdb840feb4,169429946,0,0x0,8
tick,0x7ffdb840feb4,169445490,0,0x0,8
tick,0x7ffdb840feb4,169461381,0,0x0,8
tick,0x7ffdb840feb4,169476657,0,0x0,8
tick,0x7ffdb840feb4,169492673,0,0x0,8
tick,0x7ffdb840feb4,169508675,0,0x0,8
tick,0x7ffdb840feb4,169524474,0,0x0,8
tick,0x7ffdb840feb4,169539477,0,0x0,8
tick,0x7ffdb840feb4,169555432,0,0x0,8
tick,0x7ffdb840feb4,169571347,0,0x0,8
tick,0x7ffdb840feb4,169587131,0,0x0,8
tick,0x7ffdb840feb4,169602453,0,0x0,8
tick,0x7ffdb840feb4,169617545,0,0x0,8
tick,0x7ffdb840feb4,169632549,0,0x0,8
tick,0x7ffdb840feb4,169648551,0,0x0,8
tick,0x7ffdb840feb4,169663546,0,0x0,8
tick,0x7ffdb840feb4,169679633,0,0x0,8
tick,0x7ffdb840feb4,169695686,0,0x0,8
tick,0x7ffdb840feb4,169711296,0,0x0,8
tick,0x7ffdb840feb4,169727304,0,0x0,8
tick,0x7ffdb840feb4,169742515,0,0x0,8
tick,0x7ffdb840feb4,169758304,0,0x0,8
tick,0x7ffdb840feb4,169773313,0,0x0,8
tick,0x7ffdb840feb4,169788485,0,0x0,8
tick,0x7ffdb840feb4,169804026,0,0x0,8
tick,0x7ffdb840feb4,169819323,0,0x0,8
tick,0x7ffdb840feb4,169834698,0,0x0,8
tick,0x7ffdb840feb4,169849997,0,0x0,8
tick,0x7ffdb840feb4,169865686,0,0x0,8
tick,0x7ffdb840feb4,169880646,0,0x0,8
tick,0x7ffdb840feb4,169895705,0,0x0,8
tick,0x7ffdb840feb4,169910898,0,0x0,8
tick,0x7ffdb840feb4,169926224,0,0x0,8
tick,0x7ffdb840feb4,169941570,0,0x0,8
tick,0x7ffdb840feb4,169956723,0,0x0,8
tick,0x7ffdb840feb4,169972007,0,0x0,8
tick,0x7ffdb840feb4,169987176,0,0x0,8
tick,0x7ffdb840feb4,170002545,0,0x0,8
tick,0x7ffdb840feb4,170017719,0,0x0,8
tick,0x7ffdb840feb4,170033540,0,0x0,8
tick,0x7ffdb840feb4,170049022,0,0x0,8
tick,0x7ffdb840feb4,170064554,0,0x0,8
tick,0x7ffdb840feb4,170080649,0,0x0,8
tick,0x7ffdb840feb4,170095905,0,0x0,8
tick,0x7ffdb840feb4,170111157,0,0x0,8
tick,0x7ffdb840feb4,170126965,0,0x0,8
tick,0x7ffdb840feb4,170142571,0,0x0,8
tick,0x7ffdb840feb4,170157741,0,0x0,8
tick,0x7ffdb840feb4,170172568,0,0x0,8
tick,0x7ffdb840feb4,170187751,0,0x0,8
tick,0x7ffdb840feb4,170203581,0,0x0,8
tick,0x7ffdb840feb4,170218761,0,0x0,8
tick,0x7ffdb840feb4,170233962,0,0x0,8
tick,0x7ffdb840feb4,170249350,0,0x0,8
tick,0x7ffdb840feb4,170264595,0,0x0,8
tick,0x7ffdb840feb4,170280575,0,0x0,8
tick,0x7ffdb840feb4,170295773,0,0x0,8
tick,0x7ffdb840feb4,170310625,0,0x0,8
tick,0x7ffdb840feb4,170325773,0,0x0,8
tick,0x7ffdb840feb4,170341771,0,0x0,8
tick,0x7ffdb840feb4,170356586,0,0x0,8
tick,0x7ffdb840feb4,170372600,0,0x0,8
tick,0x7ffdb840feb4,170388601,0,0x0,8
tick,0x7ffdb840feb4,170404593,0,0x0,8
tick,0x7ffdb840feb4,170419750,0,0x0,8
tick,0x7ffdb840feb4,170434593,0,0x0,8
tick,0x7ffdb840feb4,170450021,0,0x0,8
tick,0x7ffdb840feb4,170465776,0,0x0,8
tick,0x7ffdb840feb4,170480579,0,0x0,8
tick,0x7ffdb840feb4,170495791,0,0x0,8
tick,0x7ffdb840feb4,170511134,0,0x0,8
tick,0x7ffdb840feb4,170526787,0,0x0,8
tick,0x7ffdb840feb4,170542427,0,0x0,8
tick,0x7ffdb840feb4,170557796,0,0x0,8
tick,0x7ffdb840feb4,170572610,0,0x0,8
tick,0x7ffdb840feb4,170587792,0,0x0,8
tick,0x7ffdb840feb4,170603622,0,0x0,8
tick,0x7ffdb840feb4,170618631,0,0x0,8
tick,0x7ffdb840feb4,170634633,0,0x0,8
tick,0x7ffdb840feb4,170650633,0,0x0,8
tick,0x7ffdb840feb4,170666640,0,0x0,8
tick,0x7ffdb840feb4,170682380,0,0x0,8
tick,0x7ffdb840feb4,170697713,0,0x0,8
tick,0x7ffdb840feb4,170713210,0,0x0,8
tick,0x7ffdb840feb4,170729198,0,0x0,8
tick,0x7ffdb840feb4,170744808,0,0x0,8
tick,0x7ffdb840feb4,170760204,0,0x0,8
tick,0x7ffdb840feb4,170775813,0,0x0,8
tick,0x7ffdb840feb4,170791690,0,0x0,8
tick,0x7ffdb840feb4,170807662,0,0x0,8
tick,0x7ffdb840feb4,170823639,0,0x0,8
tick,0x7ffdb840feb4,170838954,0,0x0,8
tick,0x7ffdb840feb4,170854653,0,0x0,8
tick,0x7ffdb840feb4,170869791,0,0x0,8
tick,0x7ffdb840feb4,170884825,0,0x0,8
tick,0x7ffdb840feb4,170900835,0,0x0,8
tick,0x7ffdb840feb4,170916657,0,0x0,8
tick,0x7ffdb840feb4,170932643,0,0x0,8
tick,0x7ffdb840feb4,170948017,0,0x0,8
tick,0x7ffdb840feb4,170963684,0,0x0,8
tick,0x7ffdb840feb4,170979316,0,0x0,8
tick,0x7ffdb840feb4,170994435,0,0x0,8
tick,0x7ffdb840feb4,171009551,0,0x0,8
tick,0x7ffdb840feb4,171024842,0,0x0,8
tick,0x7ffdb840feb4,171040254,0,0x0,8
tick,0x7ffdb840feb4,171055844,0,0x0,8
tick,0x7ffdb840feb4,171071682,0,0x0,8
tick,0x7ffdb840feb4,171087672,0,0x0,8
tick,0x7ffdb840feb4,171102679,0,0x0,8
tick,0x7ffdb840feb4,171117853,0,0x0,8
tick,0x7ffdb840feb4,171133692,0,0x0,8
tick,0x7ffdb840feb4,171149697,0,0x0,8
tick,0x7ffdb840feb4,171164685,0,0x0,8
tick,0x7ffdb840feb4,171179688,0,0x0,8
tick,0x7ffdb840feb4,171195676,0,0x0,8
tick,0x7ffdb840feb4,171211723,0,0x0,8
tick,0x7ffdb840feb4,171227684,0,0x0,8
tick,0x7ffdb840feb4,171243693,0,0x0,8
tick,0x7ffdb840feb4,171259066,0,0x0,8
tick,0x7ffdb840feb4,171274692,0,0x0,8
tick,0x7ffdb840feb4,171290107,0,0x0,8
tick,0x7ffdb840feb4,171305883,0,0x0,8
tick,0x7ffdb840feb4,171321721,0,0x0,8
tick,0x7ffdb840feb4,171336349,0,0x0,8
tick,0x7ffdb840feb4,171352028,0,0x0,8
tick,0x7ffdb840feb4,171368099,0,0x0,8
tick,0x7ffdb840feb4,171383374,0,0x0,8
tick,0x7ffdb840feb4,171398968,0,0x0,8
tick,0x7ffdb840feb4,171414712,0,0x0,8
tick,0x7ffdb840feb4,171430724,0,0x0,8
tick,0x7ffdb840feb4,171445900,0,0x0,8
tick,0x7ffdb840feb4,171460901,0,0x0,8
tick,0x7ffdb840feb4,171476315,0,0x0,8
tick,0x7ffdb840feb4,171491606,0,0x0,8
tick,0x7ffdb840feb4,171506760,0,0x0,8
tick,0x7ffdb840feb4,171522492,0,0x0,8
tick,0x7ffdb840feb4,171537904,0,0x0,8
tick,0x7ffdb840feb4,171552734,0,0x0,8
tick,0x7ffdb840feb4,171568602,0,0x0,8
tick,0x7ffdb840feb4,171583367,0,0x0,8
tick,0x7ffdb840feb4,171599030,0,0x0,8
tick,0x7ffdb840feb4,171614713,0,0x0,8
tick,0x7ffdb840feb4,171629351,0,0x0,8
tick,0x7ffdb840feb4,171645351,0,0x0,8
tick,0x7ffdb840feb4,171661354,0,0x0,8
tick,0x7ffdb840feb4,171677359,0,0x0,8
tick,0x7ffdb840feb4,171692636,0,0x0,8
tick,0x7ffdb840feb4,171708367,0,0x0,8
tick,0x7ffdb840feb4,171723763,0,0x0,8
tick,0x7ffdb840feb4,171739370,0,0x0,8
tick,0x7ffdb840feb4,171754543,0,0x0,8
tick,0x7ffdb840feb4,171769819,0,0x0,8
tick,0x7ffdb840feb4,171784936,0,0x0,8
tick,0x7ffdb840feb4,171800029,0,0x0,8
tick,0x7ffdb840feb4,171815944,0,0x0,8
tick,0x7ffdb840feb4,171831368,0,0x0,8
tick,0x7ffdb840feb4,171846281,0,0x0,8
tick,0x7ffdb840feb4,171861374,0,0x0,8
tick,0x7ffdb840feb4,171876942,0,0x0,8
tick,0x7ffdb840feb4,171892108,0,0x0,8
tick,0x7ffdb840feb4,171907951,0,0x0,8
tick,0x7ffdb840feb4,171922775,0,0x0,8
tick,0x7ffdb840feb4,171937959,0,0x0,8
tick,0x7ffdb840feb4,171953398,0,0x0,8
tick,0x7ffdb840feb4,171968894,0,0x0,8
tick,0x7ffdb840feb4,171984727,0,0x0,8
tick,0x7ffdb840feb4,172000034,0,0x0,8
tick,0x7ffdb840feb4,172014691,0,0x0,8
tick,0x7ffdb840feb4,172030806,0,0x0,8
tick,0x7ffdb840feb4,172045965,0,0x0,8
tick,0x7ffdb840feb4,172061792,0,0x0,8
tick,0x7ffdb840feb4,172076968,0,0x0,8
tick,0x7ffdb840feb4,172092145,0,0x0,8
tick,0x7ffdb840feb4,172107828,0,0x0,8
tick,0x7ffdb840feb4,172122576,0,0x0,8
tick,0x7ffdb840feb4,172137983,0,0x0,8
tick,0x7ffdb840feb4,172153815,0,0x0,8
tick,0x7ffdb840feb4,172168507,0,0x0,8
tick,0x7ffdb840feb4,172183816,0,0x0,8
tick,0x7ffdb840feb4,172199031,0,0x0,8
tick,0x7ffdb840feb4,172213814,0,0x0,8
tick,0x7ffdb840feb4,172229412,0,0x0,8
tick,0x7ffdb840feb4,172244818,0,0x0,8
tick,0x7ffdb840feb4,172259773,0,0x0,8
tick,0x7ffdb840feb4,172274988,0,0x0,8
tick,0x7ffdb840feb4,172290149,0,0x0,8
tick,0x7ffdb840feb4,172305815,0,0x0,8
tick,0x7ffdb840feb4,172321125,0,0x0,8
tick,0x7ffdb840feb4,172336456,0,0x0,8
tick,0x7ffdb840feb4,172352463,0,0x0,8
tick,0x7ffdb840feb4,172368471,0,0x0,8
tick,0x7ffdb840feb4,172383823,0,0x0,8
tick,0x7ffdb840feb4,172398962,0,0x0,8
tick,0x7ffdb840feb4,172414834,0,0x0,8
tick,0x7ffdb840feb4,172429838,0,0x0,8
tick,0x7ffdb840feb4,172445018,0,0x0,8
tick,0x7ffdb840feb4,172461021,0,0x0,8
tick,0x7ffdb840feb4,172476021,0,0x0,8
tick,0x7ffdb840feb4,172491419,0,0x0,8
tick,0x7ffdb840feb4,172507021,0,0x0,8
tick,0x7ffdb840feb4,172522846,0,0x0,8
tick,0x7ffdb840feb4,172538029,0,0x0,8
tick,0x7ffdb840feb4,172553850,0,0x0,8
tick,0x7ffdb840feb4,172568860,0,0x0,8
tick,0x7ffdb840feb4,172584037,0,0x0,8
tick,0x7ffdb840feb4,172599869,0,0x0,8
tick,0x7ffdb840feb4,172615044,0,0x0,8
tick,0x7ffdb840feb4,172630224,0,0x0,8
tick,0x7ffdb840feb4,172646219,0,0x0,8
tick,0x7ffdb840feb4,172661224,0,0x0,8
tick,0x7ffdb840feb4,172676227,0,0x0,8
tick,0x7ffdb840feb4,172691707,0,0x0,8
tick,0x7ffdb840feb4,172707047,0,0x0,8
tick,0x7ffdb840feb4,172722195,0,0x0,8
tick,0x7ffdb840feb4,172738049,0,0x0,8
tick,0x7ffdb840feb4,172753881,0,0x0,8
tick,0x7ffdb840feb4,172769158,0,0x0,8
tick,0x7ffdb840feb4,172784885,0,0x0,8
tick,0x7ffdb840feb4,172800041,0,0x0,8
tick,0x7ffdb840feb4,172816069,0,0x0,8
tick,0x7ffdb840feb4,172831365,0,0x0,8
tick,0x7ffdb840feb4,172846946,0,0x0,8
tick,0x7ffdb840feb4,172862265,0,0x0,8
tick,0x7ffdb840feb4,172877331,0,0x0,8
tick,0x7ffdb840feb4,172892728,0,0x0,8
tick,0x7ffdb840feb4,172908624,0,0x0,8
tick,0x7ffdb840feb4,172923903,0,0x0,8
tick,0x7ffdb840feb4,172939029,0,0x0,8
tick,0x7ffdb840feb4,172954898,0,0x0,8
tick,0x7ffdb840feb4,172970180,0,0x0,8
tick,0x7ffdb840feb4,172985423,0,0x0,8
tick,0x7ffdb840feb4,173001060,0,0x0,8
tick,0x7ffdb840feb4,173016264,0,0x0,8
tick,0x7ffdb840feb4,173032366,0,0x0,8
tick,0x7ffdb840feb4,173048363,0,0x0,8
tick,0x7ffdb840feb4,173063912,0,0x0,8
tick,0x7ffdb840feb4,173079722,0,0x0,8
tick,0x7ffdb840feb4,173094938,0,0x0,8
tick,0x7ffdb840feb4,173109932,0,0x0,8
tick,0x7ffdb840feb4,173125097,0,0x0,8
tick,0x7ffdb840feb4,173140931,0,0x0,8
tick,0x7ffdb840feb4,173156297,0,0x0,8
tick,0x7ffdb840feb4,173172190,0,0x0,8
tick,0x7ffdb840feb4,173188112,0,0x0,8
tick,0x7ffdb840feb4,173203929,0,0x0,8
tick,0x7ffdb840feb4,173219949,0,0x0,8
tick,0x7ffdb840feb4,173234430,0,0x0,8
tick,0x7ffdb840feb4,173250436,0,0x0,8
tick,0x7ffdb840feb4,173266113,0,0x0,8
tick,0x7ffdb840feb4,173281118,0,0x0,8
tick,0x7ffdb840feb4,173296941,0,0x0,8
tick,0x7ffdb840feb4,173312126,0,0x0,8
tick,0x7ffdb840feb4,173327947,0,0x0,8
tick,0x7ffdb840feb4,173343957,0,0x0,8
tick,0x7ffdb840feb4,173359641,0,0x0,8
tick,0x7ffdb840feb4,173374955,0,0x0,8
tick,0x7ffdb840feb4,173389945,0,0x0,8
tick,0x7ffdb840feb4,173405118,0,0x0,8
tick,0x7ffdb840feb4,173420952,0,0x0,8
tick,0x7ffdb840feb4,173436197,0,0x0,8
tick,0x7ffdb840feb4,173452211,0,0x0,8
tick,0x7ffdb840feb4,173467543,0,0x0,8
tick,0x7ffdb840feb4,173482963,0,0x0,8
tick,0x7ffdb840feb4,173499040,0,0x0,8
tick,0x7ffdb840feb4,173514970,0,0x0,8
tick,0x7ffdb840feb4,173530207,0,0x0,8
tick,0x7ffdb840feb4,173544975,0,0x0,8
tick,0x7ffdb840feb4,173560151,0,0x0,8
tick,0x7ffdb840feb4,173576146,0,0x0,8
tick,0x7ffdb840feb4,173590954,0,0x0,8
tick,0x7ffdb840feb4,173606151,0,0x0,8
tick,0x7ffdb840feb4,173622174,0,0x0,8
tick,0x7ffdb840feb4,173636977,0,0x0,8
tick,0x7ffdb840feb4,173652979,0,0x0,8
tick,0x7ffdb840feb4,173668992,0,0x0,8
tick,0x7ffdb840feb4,173684991,0,0x0,8
tick,0x7ffdb840feb4,173700378,0,0x0,8
tick,0x7ffdb840feb4,173716362,0,0x0,8
tick,0x7ffdb840feb4,173732374,0,0x0,8
tick,0x7ffdb840feb4,173747977,0,0x0,8
tick,0x7ffdb840feb4,173763997,0,0x0,8
tick,0x7ffdb840feb4,173779307,0,0x0,8
tick,0x7ffdb840feb4,173795332,0,0x0,8
tick,0x7ffdb840feb4,173810673,0,0x0,8
tick,0x7ffdb840feb4,173826339,0,0x0,8
tick,0x7ffdb840feb4,173841354,0,0x0,8
tick,0x7ffdb840feb4,173857215,0,0x0,8
tick,0x7ffdb840feb4,173873014,0,0x0,8
tick,0x7ffdb840feb4,173889010,0,0x0,8
tick,0x7ffdb840feb4,173905022,0,0x0,8
tick,0x7ffdb840feb4,173921022,0,0x0,8
tick,0x7ffdb840feb4,173936197,0,0x0,8
tick,0x7ffdb840feb4,173951040,0,0x0,8
tick,0x7ffdb840feb4,173967026,0,0x0,8
tick,0x7ffdb840feb4,173983038,0,0x0,8
tick,0x7ffdb840feb4,173998051,0,0x0,8
tick,0x7ffdb840feb4,174014033,0,0x0,8
tick,0x7ffdb840feb4,174029211,0,0x0,8
tick,0x7ffdb840feb4,174044036,0,0x0,8
tick,0x7ffdb840feb4,174059694,0,0x0,8
tick,0x7ffdb840feb4,174075441,0,0x0,8
tick,0x7ffdb840feb4,174091115,0,0x0,8
tick,0x7ffdb840feb4,174107135,0,0x0,8
tick,0x7ffdb840feb4,174122575,0,0x0,8
tick,0x7ffdb840feb4,174138375,0,0x0,8
tick,0x7ffdb840feb4,174153043,0,0x0,8
tick,0x7ffdb840feb4,174169053,0,0x0,8
tick,0x7ffdb840feb4,174184227,0,0x0,8
tick,0x7ffdb840feb4,174199046,0,0x0,8
tick,0x7ffdb840feb4,174215055,0,0x0,8
tick,0x7ffdb840feb4,174230377,0,0x0,8
tick,0x7ffdb840feb4,174246232,0,0x0,8
tick,0x7ffdb840feb4,174261833,0,0x0,8
tick,0x7ffdb840feb4,174277063,0,0x0,8
tick,0x7ffdb840feb4,174292242,0,0x0,8
tick,0x7ffdb840feb4,174307678,0,0x0,8
tick,0x7ffdb840feb4,174323071,0,0x0,8
tick,0x7ffdb840feb4,174338442,0,0x0,8
tick,0x7ffdb840feb4,174354068,0,0x0,8
tick,0x7ffdb840feb4,174369627,0,0x0,8
tick,0x7ffdb840feb4,174385076,0,0x0,8
tick,0x7ffdb840feb4,174400088,0,0x0,8
tick,0x7ffdb840feb4,174415250,0,0x0,8
tick,0x7ffdb840feb4,174431087,0,0x0,8
tick,0x7ffdb840feb4,174446080,0,0x0,8
tick,0x7ffdb840feb4,174461250,0,0x0,8
tick,0x7ffdb840feb4,174477086,0,0x0,8
tick,0x7ffdb840feb4,174492223,0,0x0,8
tick,0x7ffdb840feb4,174507118,0,0x0,8
tick,0x7ffdb840feb4,174522249,0,0x0,8
tick,0x7ffdb840feb4,174537719,0,0x0,8
tick,0x7ffdb840feb4,174553042,0,0x0,8
tick,0x7ffdb840feb4,174568275,0,0x0,8
tick,0x7ffdb840feb4,174584098,0,0x0,8
tick,0x7ffdb840feb4,174600048,0,0x0,8
tick,0x7ffdb840feb4,174614716,0,0x0,8
tick,0x7ffdb840feb4,174630296,0,0x0,8
tick,0x7ffdb840feb4,174646285,0,0x0,8
tick,0x7ffdb840feb4,174662278,0,0x0,8
tick,0x7ffdb840feb4,174678280,0,0x0,8
tick,0x7ffdb840feb4,174694285,0,0x0,8
tick,0x7ffdb840feb4,174710386,0,0x0,8
tick,0x7ffdb840feb4,174726278,0,0x0,8
tick,0x7ffdb840feb4,174741724,0,0x0,8
tick,0x7ffdb840feb4,174757732,0,0x0,8
tick,0x7ffdb840feb4,174772735,0,0x0,8
tick,0x7ffdb840feb4,174788296,0,0x0,8
tick,0x7ffdb840feb4,174804123,0,0x0,8
tick,0x7ffdb840feb4,174819320,0,0x0,8
tick,0x7ffdb840feb4,174834727,0,0x0,8
tick,0x7ffdb840feb4,174850048,0,0x0,8
tick,0x7ffdb840feb4,174865307,0,0x0,8
tick,0x7ffdb840feb4,174880660,0,0x0,8
tick,0x7ffdb840feb4,174896313,0,0x0,8
tick,0x7ffdb840feb4,174912133,0,0x0,8
tick,0x7ffdb840feb4,174927147,0,0x0,8
tick,0x7ffdb840feb4,174943152,0,0x0,8
tick,0x7ffdb840feb4,174958933,0,0x0,8
tick,0x7ffdb840feb4,174974155,0,0x0,8
tick,0x7ffdb840feb4,174989176,0,0x0,8
tick,0x7ffdb840feb4,175005141,0,0x0,8
tick,0x7ffdb840feb4,175020331,0,0x0,8
tick,0x7ffdb840feb4,175035325,0,0x0,8
tick,0x7ffdb840feb4,175050476,0,0x0,8
tick,0x7ffdb840feb4,175066334,0,0x0,8
tick,0x7ffdb840feb4,175081350,0,0x0,8
tick,0x7ffdb840feb4,175097341,0,0x0,8
tick,0x7ffdb840feb4,175112940,0,0x0,8
tick,0x7ffdb840feb4,175128340,0,0x0,8
tick,0x7ffdb840feb4,175144159,0,0x0,8
tick,0x7ffdb840feb4,175159349,0,0x0,8
tick,0x7ffdb840feb4,175175175,0,0x0,8
tick,0x7ffdb840feb4,175191193,0,0x0,8
tick,0x7ffdb840feb4,175206345,0,0x0,8
tick,0x7ffdb840feb4,175221535,0,0x0,8
tick,0x7ffdb840feb4,175237432,0,0x0,8
tick,0x7ffdb840feb4,175252573,0,0x0,8
tick,0x7ffdb840feb4,175268350,0,0x0,8
tick,0x7ffdb840feb4,175284172,0,0x0,8
tick,0x7ffdb840feb4,175300069,0,0x0,8
tick,0x7ffdb840feb4,175314580,0,0x0,8
tick,0x7ffdb840feb4,175330277,0,0x0,8
tick,0x7ffdb840feb4,175345914,0,0x0,8
tick,0x7ffdb840feb4,175361923,0,0x0,8
tick,0x7ffdb840feb4,175377363,0,0x0,8
tick,0x7ffdb840feb4,175392931,0,0x0,8
tick,0x7ffdb840feb4,175408090,0,0x0,8
tick,0x7ffdb840feb4,175424190,0,0x0,8
tick,0x7ffdb840feb4,175439360,0,0x0,8
tick,0x7ffdb840feb4,175455196,0,0x0,8
tick,0x7ffdb840feb4,175470378,0,0x0,8
tick,0x7ffdb840feb4,175485373,0,0x0,8
tick,0x7ffdb840feb4,175500987,0,0x0,8
tick,0x7ffdb840feb4,175516979,0,0x0,8
tick,0x7ffdb840feb4,175532391,0,0x0,8
tick,0x7ffdb840feb4,175547995,0,0x0,8
tick,0x7ffdb840feb4,175563224,0,0x0,8
tick,0x7ffdb840feb4,175578405,0,0x0,8
tick,0x7ffdb840feb4,175594212,0,0x0,8
tick,0x7ffdb840feb4,175609226,0,0x0,8
tick,0x7ffdb840feb4,175624399,0,0x0,8
tick,0x7ffdb840feb4,175640392,0,0x0,8
tick,0x7ffdb840feb4,175655230,0,0x0,8
tick,0x7ffdb840feb4,175671225,0,0x0,8
tick,0x7ffdb840feb4,175687227,0,0x0,8
tick,0x7ffdb840feb4,175703236,0,0x0,8
tick,0x7ffdb840feb4,175718542,0,0x0,8
tick,0x7ffdb840feb4,175734237,0,0x0,8
tick,0x7ffdb840feb4,175750046,0,0x0,8
tick,0x7ffdb840feb4,175765417,0,0x0,8
tick,0x7ffdb840feb4,175781249,0,0x0,8
tick,0x7ffdb840feb4,175796387,0,0x0,8
tick,0x7ffdb840feb4,175811582,0,0x0,8
tick,0x7ffdb840feb4,175827271,0,0x0,8
tick,0x7ffdb840feb4,175842407,0,0x0,8
tick,0x7ffdb840feb4,175857581,0,0x0,8
tick,0x7ffdb840feb4,175872584,0,0x0,8
tick,0x7ffdb840feb4,175887782,0,0x0,8
tick,0x7ffdb840feb4,175902912,0,0x0,8
tick,0x7ffdb840feb4,175918608,0,0x0,8
tick,0x7ffdb840feb4,175934254,0,0x0,8
tick,0x7ffdb840feb4,175950064,0,0x0,8
tick,0x7ffdb840feb4,175964716,0,0x0,8
tick,0x7ffdb840feb4,175979440,0,0x0,8
tick,0x7ffdb840feb4,175995255,0,0x0,8
tick,0x7ffdb840feb4,176010639,0,0x0,8
tick,0x7ffdb840feb4,176025439,0,0x0,8
tick,0x7ffdb840feb4,176041451,0,0x0,8
tick,0x7ffdb840feb4,176056613,0,0x0,8
tick,0x7ffdb840feb4,176072275,0,0x0,8
tick,0x7ffdb840feb4,176086611,0,0x0,8
tick,0x7ffdb840feb4,176102267,0,0x0,8
tick,0x7ffdb840feb4,176118274,0,0x0,8
tick,0x7ffdb840feb4,176134279,0,0x0,8
tick,0x7ffdb840feb4,176150049,0,0x0,8
tick,0x7ffdb840feb4,176165243,0,0x0,8
tick,0x7ffdb840feb4,176180400,0,0x0,8
tick,0x7ffdb840feb4,176196281,0,0x0,8
tick,0x7ffdb840feb4,176211273,0,0x0,8
tick,0x7ffdb840feb4,176226282,0,0x0,8
tick,0x7ffdb840feb4,176241457,0,0x0,8
tick,0x7ffdb840feb4,176256927,0,0x0,8
tick,0x7ffdb840feb4,176272095,0,0x0,8
tick,0x7ffdb840feb4,176287477,0,0x0,8
tick,0x7ffdb840feb4,176303297,0,0x0,8
tick,0x7ffdb840feb4,176318924,0,0x0,8
tick,0x7ffdb840feb4,176334306,0,0x0,8
tick,0x7ffdb840feb4,176350049,0,0x0,8
tick,0x7ffdb840feb4,176365488,0,0x0,8
tick,0x7ffdb840feb4,176380723,0,0x0,8
tick,0x7ffdb840feb4,176396266,0,0x0,8
tick,0x7ffdb840feb4,176411621,0,0x0,8
tick,0x7ffdb840feb4,176427348,0,0x0,8
tick,0x7ffdb840feb4,176442464,0,0x0,8
tick,0x7ffdb840feb4,176457501,0,0x0,8
tick,0x7ffdb840feb4,176472681,0,0x0,8
tick,0x7ffdb840feb4,176487957,0,0x0,8
tick,0x7ffdb840feb4,176503328,0,0x0,8
tick,0x7ffdb840feb4,176518536,0,0x0,8
tick,0x7ffdb840feb4,176534324,0,0x0,8
tick,0x7ffdb840feb4,176550059,0,0x0,8
tick,0x7ffdb840feb4,176565334,0,0x0,8
tick,0x7ffdb840feb4,176580523,0,0x0,8
tick,0x7ffdb840feb4,176596342,0,0x0,8
tick,0x7ffdb840feb4,176611750,0,0x0,8
tick,0x7ffdb840feb4,176627349,0,0x0,8
tick,0x7ffdb840feb4,176642477,0,0x0,8
tick,0x7ffdb840feb4,176658528,0,0x0,8
tick,0x7ffdb840feb4,176673535,0,0x0,8
tick,0x7ffdb840feb4,176688534,0,0x0,8
tick,0x7ffdb840feb4,176704547,0,0x0,8
tick,0x7ffdb840feb4,176719822,0,0x0,8
tick,0x7ffdb840feb4,176735356,0,0x0,8
tick,0x7ffdb840feb4,176751054,0,0x0,8
tick,0x7ffdb840feb4,176766528,0,0x0,8
tick,0x7ffdb840feb4,176782548,0,0x0,8
tick,0x7ffdb840feb4,176798054,0,0x0,8
tick,0x7ffdb840feb4,176813371,0,0x0,8
tick,0x7ffdb840feb4,176828550,0,0x0,8
tick,0x7ffdb840feb4,176844361,0,0x0,8
tick,0x7ffdb840feb4,176860374,0,0x0,8
tick,0x7ffdb840feb4,176874709,0,0x0,8
tick,0x7ffdb840feb4,176889710,0,0x0,8
tick,0x7ffdb840feb4,176905724,0,0x0,8
tick,0x7ffdb840feb4,176921660,0,0x0,8
tick,0x7ffdb840feb4,176936551,0,0x0,8
tick,0x7ffdb840feb4,176952057,0,0x0,8
tick,0x7ffdb840feb4,176967554,0,0x0,8
tick,0x7ffdb840feb4,176982555,0,0x0,8
tick,0x7ffdb840feb4,176998056,0,0x0,8
tick,0x7ffdb840feb4,177013396,0,0x0,8
tick,0x7ffdb840feb4,177028570,0,0x0,8
tick,0x7ffdb840feb4,177044391,0,0x0,8
tick,0x7ffdb840feb4,177059407,0,0x0,8
tick,0x7ffdb840feb4,177075393,0,0x0,8
tick,0x7ffdb840feb4,177090935,0,0x0,8
tick,0x7ffdb840feb4,177106402,0,0x0,8
tick,0x7ffdb840feb4,177122091,0,0x0,8
tick,0x7ffdb840feb4,177137402,0,0x0,8
tick,0x7ffdb840feb4,177152597,0,0x0,8
tick,0x7ffdb840feb4,177168327,0,0x0,8
tick,0x7ffdb840feb4,177183427,0,0x0,8
tick,0x7ffdb840feb4,177199057,0,0x0,8
tick,0x7ffdb840feb4,177214414,0,0x0,8
tick,0x7ffdb840feb4,177229311,0,0x0,8
tick,0x7ffdb840feb4,177245429,0,0x0,8
tick,0x7ffdb840feb4,177260597,0,0x0,8
tick,0x7ffdb840feb4,177275422,0,0x0,8
tick,0x7ffdb840feb4,177290986,0,0x0,8
tick,0x7ffdb840feb4,177306426,0,0x0,8
tick,0x7ffdb840feb4,177321595,0,0x0,8
tick,0x7ffdb840feb4,177336763,0,0x0,8
tick,0x7ffdb840feb4,177352064,0,0x0,8
tick,0x7ffdb840feb4,177367601,0,0x0,8
tick,0x7ffdb840feb4,177383609,0,0x0,8
tick,0x7ffdb840feb4,177399622,0,0x0,8
tick,0x7ffdb840feb4,177415433,0,0x0,8
tick,0x7ffdb840feb4,177431389,0,0x0,8
tick,0x7ffdb840feb4,177447080,0,0x0,8
tick,0x7ffdb840feb4,177462455,0,0x0,8
tick,0x7ffdb840feb4,177477614,0,0x0,8
tick,0x7ffdb840feb4,177493148,0,0x0,8
tick,0x7ffdb840feb4,177508450,0,0x0,8
tick,0x7ffdb840feb4,177523460,0,0x0,8
tick,0x7ffdb840feb4,177539449,0,0x0,8
tick,0x7ffdb840feb4,177554626,0,0x0,8
tick,0x7ffdb840feb4,177570467,0,0x0,8
tick,0x7ffdb840feb4,177585460,0,0x0,8
tick,0x7ffdb840feb4,177600635,0,0x0,8
tick,0x7ffdb840feb4,177615465,0,0x0,8
tick,0x7ffdb840feb4,177630474,0,0x0,8
tick,0x7ffdb840feb4,177645639,0,0x0,8
tick,0x7ffdb840feb4,177660941,0,0x0,8
tick,0x7ffdb840feb4,177676948,0,0x0,8
tick,0x7ffdb840feb4,177692946,0,0x0,8
tick,0x7ffdb840feb4,177708150,0,0x0,8
tick,0x7ffdb840feb4,177723163,0,0x0,8
tick,0x7ffdb840feb4,177738793,0,0x0,8
tick,0x7ffdb840feb4,177754474,0,0x0,8
tick,0x7ffdb840feb4,177769953,0,0x0,8
tick,0x7ffdb840feb4,177785495,0,0x0,8
tick,0x7ffdb840feb4,177800964,0,0x0,8
tick,0x7ffdb840feb4,177816653,0,0x0,8
tick,0x7ffdb840feb4,177832394,0,0x0,8
tick,0x7ffdb840feb4,177847655,0,0x0,8
tick,0x7ffdb840feb4,177863664,0,0x0,8
tick,0x7ffdb840feb4,177879341,0,0x0,8
tick,0x7ffdb840feb4,177894512,0,0x0,8
tick,0x7ffdb840feb4,177910455,0,0x0,8
tick,0x7ffdb840feb4,177925667,0,0x0,8
tick,0x7ffdb840feb4,177941471,0,0x0,8
tick,0x7ffdb840feb4,177956470,0,0x0,8
tick,0x7ffdb840feb4,177972263,0,0x0,8
tick,0x7ffdb840feb4,177987555,0,0x0,8
tick,0x7ffdb840feb4,178002547,0,0x0,8
tick,0x7ffdb840feb4,178017676,0,0x0,8
tick,0x7ffdb840feb4,178033414,0,0x0,8
tick,0x7ffdb840feb4,178048915,0,0x0,8
tick,0x7ffdb840feb4,178064585,0,0x0,8
tick,0x7ffdb840feb4,178080398,0,0x0,8
tick,0x7ffdb840feb4,178095512,0,0x0,8
tick,0x7ffdb840feb4,178111359,0,0x0,8
tick,0x7ffdb840feb4,178126610,0,0x0,8
tick,0x7ffdb840feb4,178141952,0,0x0,8
tick,0x7ffdb840feb4,178157688,0,0x0,8
tick,0x7ffdb840feb4,178172761,0,0x0,8
tick,0x7ffdb840feb4,178188714,0,0x0,8
tick,0x7ffdb840feb4,178204522,0,0x0,8
tick,0x7ffdb840feb4,178220547,0,0x0,8
tick,0x7ffdb840feb4,178235701,0,0x0,8
tick,0x7ffdb840feb4,178250543,0,0x0,8
tick,0x7ffdb840feb4,178265715,0,0x0,8
tick,0x7ffdb840feb4,178281396,0,0x0,8
tick,0x7ffdb840feb4,178296713,0,0x0,8
tick,0x7ffdb840feb4,178311694,0,0x0,8
tick,0x7ffdb840feb4,178326725,0,0x0,8
tick,0x7ffdb840feb4,178342102,0,0x0,8
tick,0x7ffdb840feb4,178358031,0,0x0,8
tick,0x7ffdb840feb4,178373418,0,0x0,8
tick,0x7ffdb840feb4,178388729,0,0x0,8
tick,0x7ffdb840feb4,178404549,0,0x0,8
tick,0x7ffdb840feb4,178419623,0,0x0,8
tick,0x7ffdb840feb4,178435565,0,0x0,8
tick,0x7ffdb840feb4,178450727,0,0x0,8
tick,0x7ffdb840feb4,178465739,0,0x0,8
tick,0x7ffdb840feb4,178481397,0,0x0,8
tick,0x7ffdb840feb4,178496742,0,0x0,8
tick,0x7ffdb840feb4,178511570,0,0x0,8
tick,0x7ffdb840feb4,178526743,0,0x0,8
tick,0x7ffdb840feb4,178542200,0,0x0,8
tick,0x7ffdb840feb4,178557258,0,0x0,8
tick,0x7ffdb840feb4,178572551,0,0x0,8
tick,0x7ffdb840feb4,178588557,0,0x0,8
tick,0x7ffdb840feb4,178603474,0,0x0,8
tick,0x7ffdb840feb4,178619559,0,0x0,8
tick,0x7ffdb840feb4,178634576,0,0x0,8
tick,0x7ffdb840feb4,178649755,0,0x0,8
tick,0x7ffdb840feb4,178665749,0,0x0,8
tick,0x7ffdb840feb4,178680752,0,0x0,8
tick,0x7ffdb840feb4,178695754,0,0x0,8
tick,0x7ffdb840feb4,178711754,0,0x0,8
tick,0x7ffdb840feb4,178727593,0,0x0,8
tick,0x7ffdb840feb4,178743595,0,0x0,8
tick,0x7ffdb840feb4,178759671,0,0x0,8
tick,0x7ffdb840feb4,178775592,0,0x0,8
tick,0x7ffdb840feb4,178790881,0,0x0,8
tick,0x7ffdb840feb4,178805559,0,0x0,8
tick,0x7ffdb840feb4,178821175,0,0x0,8
tick,0x7ffdb840feb4,178836600,0,0x0,8
tick,0x7ffdb840feb4,178851604,0,0x0,8
tick,0x7ffdb840feb4,178866789,0,0x0,8
tick,0x7ffdb840feb4,178882407,0,0x0,8
tick,0x7ffdb840feb4,178897784,0,0x0,8
tick,0x7ffdb840feb4,178912979,0,0x0,8
tick,0x7ffdb840feb4,178928243,0,0x0,8
tick,0x7ffdb840feb4,178944247,0,0x0,8
tick,0x7ffdb840feb4,178959713,0,0x0,8
tick,0x7ffdb840feb4,178974626,0,0x0,8
tick,0x7ffdb840feb4,178990624,0,0x0,8
tick,0x7ffdb840feb4,179005600,0,0x0,8
tick,0x7ffdb840feb4,179020806,0,0x0,8
tick,0x7ffdb840feb4,179036805,0,0x0,8
tick,0x7ffdb840feb4,179052810,0,0x0,8
tick,0x7ffdb840feb4,179068026,0,0x0,8
tick,0x7ffdb840feb4,179083413,0,0x0,8
tick,0x7ffdb840feb4,179097972,0,0x0,8
tick,0x7ffdb840feb4,179113357,0,0x0,8
tick,0x7ffdb840feb4,179128831,0,0x0,8
tick,0x7ffdb840feb4,179143815,0,0x0,8
tick,0x7ffdb840feb4,179159813,0,0x0,8
tick,0x7ffdb840feb4,179174650,0,0x0,8
tick,0x7ffdb840feb4,179190332,0,0x0,8
tick,0x7ffdb840feb4,179206226,0,0x0,8
tick,0x7ffdb840feb4,179221069,0,0x0,8
tick,0x7ffdb840feb4,179236261,0,0x0,8
tick,0x7ffdb840feb4,179251697,0,0x0,8
tick,0x7ffdb840feb4,179267232,0,0x0,8
tick,0x7ffdb840feb4,179282412,0,0x0,8
tick,0x7ffdb840feb4,179297836,0,0x0,8
tick,0x7ffdb840feb4,179313022,0,0x0,8
tick,0x7ffdb840feb4,179328390,0,0x0,8
tick,0x7ffdb840feb4,179344065,0,0x0,8
tick,0x7ffdb840feb4,179359400,0,0x0,8
tick,0x7ffdb840feb4,179374670,0,0x0,8
tick,0x7ffdb840feb4,179390402,0,0x0,8
tick,0x7ffdb840feb4,179405830,0,0x0,8
tick,0x7ffdb840feb4,179421632,0,0x0,8
tick,0x7ffdb840feb4,179436563,0,0x0,8
tick,0x7ffdb840feb4,179451838,0,0x0,8
tick,0x7ffdb840feb4,179467006,0,0x0,8
tick,0x7ffdb840feb4,179482405,0,0x0,8
tick,0x7ffdb840feb4,179497861,0,0x0,8
tick,0x7ffdb840feb4,179513470,0,0x0,8
tick,0x7ffdb840feb4,179528318,0,0x0,8
tick,0x7ffdb840feb4,179543468,0,0x0,8
tick,0x7ffdb840feb4,179558966,0,0x0,8
tick,0x7ffdb840feb4,179574698,0,0x0,8
tick,0x7ffdb840feb4,179590695,0,0x0,8
tick,0x7ffdb840feb4,179605926,0,0x0,8
tick,0x7ffdb840feb4,179621475,0,0x0,8
tick,0x7ffdb840feb4,179637469,0,0x0,8
tick,0x7ffdb840feb4,179652890,0,0x0,8
tick,0x7ffdb840feb4,179668077,0,0x0,8
tick,0x7ffdb840feb4,179684104,0,0x0,8
tick,0x7ffdb840feb4,179699088,0,0x0,8
tick,0x7ffdb840feb4,179714381,0,0x0,8
tick,0x7ffdb840feb4,179730398,0,0x0,8
tick,0x7ffdb840feb4,179745892,0,0x0,8
tick,0x7ffdb840feb4,179761560,0,0x0,8
tick,0x7ffdb840feb4,179776559,0,0x0,8
tick,0x7ffdb840feb4,179792410,0,0x0,8
tick,0x7ffdb840feb4,179807559,0,0x0,8
tick,0x7ffdb840feb4,179822666,0,0x0,8
tick,0x7ffdb840feb4,179838097,0,0x0,8
tick,0x7ffdb840feb4,179853726,0,0x0,8
tick,0x7ffdb840feb4,179868599,0,0x0,8
tick,0x7ffdb840feb4,179883736,0,0x0,8
tick,0x7ffdb840feb4,179899095,0,0x0,8
tick,0x7ffdb840feb4,179914731,0,0x0,8
tick,0x7ffdb840feb4,179930101,0,0x0,8
tick,0x7ffdb840feb4,179946106,0,0x0,8
tick,0x7ffdb840feb4,179962110,0,0x0,8
tick,0x7ffdb840feb4,179977572,0,0x0,8
tick,0x7ffdb840feb4,179992784,0,0x0,8
tick,0x7ffdb840feb4,180008703,0,0x0,8
tick,0x7ffdb840feb4,180023927,0,0x0,8
tick,0x7ffdb840feb4,180039106,0,0x0,8
tick,0x7ffdb840feb4,180054771,0,0x0,8
tick,0x7ffdb840feb4,180070760,0,0x0,8
tick,0x7ffdb840feb4,180085753,0,0x0,8
tick,0x7ffdb840feb4,180101111,0,0x0,8
tick,0x7ffdb840feb4,180116806,0,0x0,8
tick,0x7ffdb840feb4,180132404,0,0x0,8
tick,0x7ffdb840feb4,180147755,0,0x0,8
tick,0x7ffdb840feb4,180163139,0,0x0,8
tick,0x7ffdb840feb4,180178428,0,0x0,8
tick,0x7ffdb840feb4,180194429,0,0x0,8
tick,0x7ffdb840feb4,180209418,0,0x0,8
tick,0x7ffdb840feb4,180225225,0,0x0,8
tick,0x7ffdb840feb4,180240362,0,0x0,8
tick,0x7ffdb840feb4,180255859,0,0x0,8
tick,0x7ffdb840feb4,180271791,0,0x0,8
tick,0x7ffdb840feb4,180287857,0,0x0,8
tick,0x7ffdb840feb4,180303871,0,0x0,8
tick,0x7ffdb840feb4,180319229,0,0x0,8
tick,0x7ffdb840feb4,180334787,0,0x0,8
tick,0x7ffdb840feb4,180350079,0,0x0,8
tick,0x7ffdb840feb4,180365790,0,0x0,8
tick,0x7ffdb840feb4,180381411,0,0x0,8
tick,0x7ffdb840feb4,180397415,0,0x0,8
tick,0x7ffdb840feb4,180413284,0,0x0,8
tick,0x7ffdb840feb4,180428991,0,0x0,8
tick,0x7ffdb840feb4,180444801,0,0x0,8
tick,0x7ffdb840feb4,180459975,0,0x0,8
tick,0x7ffdb840feb4,180475797,0,0x0,8
tick,0x7ffdb840feb4,180490809,0,0x0,8
tick,0x7ffdb840feb4,180505976,0,0x0,8
tick,0x7ffdb840feb4,180521836,0,0x0,8
tick,0x7ffdb840feb4,180536991,0,0x0,8
tick,0x7ffdb840feb4,180553074,0,0x0,8
tick,0x7ffdb840feb4,180567992,0,0x0,8
tick,0x7ffdb840feb4,180582938,0,0x0,8
tick,0x7ffdb840feb4,180597994,0,0x0,8
tick,0x7ffdb840feb4,180613872,0,0x0,8
tick,0x7ffdb840feb4,180629045,0,0x0,8
tick,0x7ffdb840feb4,180644822,0,0x0,8
tick,0x7ffdb840feb4,180660570,0,0x0,8
tick,0x7ffdb840feb4,180675830,0,0x0,8
tick,0x7ffdb840feb4,180691828,0,0x0,8
tick,0x7ffdb840feb4,180707653,0,0x0,8
tick,0x7ffdb840feb4,180723648,0,0x0,8
tick,0x7ffdb840feb4,180739666,0,0x0,8
tick,0x7ffdb840feb4,180754833,0,0x0,8
tick,0x7ffdb840feb4,180769630,0,0x0,8
tick,0x7ffdb840feb4,180785669,0,0x0,8
tick,0x7ffdb840feb4,180800836,0,0x0,8
tick,0x7ffdb840feb4,180815888,0,0x0,8
tick,0x7ffdb840feb4,180831406,0,0x0,8
tick,0x7ffdb840feb4,180847014,0,0x0,8
tick,0x7ffdb840feb4,180862025,0,0x0,8
tick,0x7ffdb840feb4,180878021,0,0x0,8
tick,0x7ffdb840feb4,180893352,0,0x0,8
tick,0x7ffdb840feb4,180908784,0,0x0,8
tick,0x7ffdb840feb4,180924860,0,0x0,8
tick,0x7ffdb840feb4,180940864,0,0x0,8
tick,0x7ffdb840feb4,180955852,0,0x0,8
tick,0x7ffdb840feb4,180970864,0,0x0,8
tick,0x7ffdb840feb4,180986030,0,0x0,8
tick,0x7ffdb840feb4,181001845,0,0x0,8
tick,0x7ffdb840feb4,181017019,0,0x0,8
tick,0x7ffdb840feb4,181032413,0,0x0,8
tick,0x7ffdb840feb4,181048043,0,0x0,8
tick,0x7ffdb840feb4,181063046,0,0x0,8
tick,0x7ffdb840feb4,181077712,0,0x0,8
tick,0x7ffdb840feb4,181093439,0,0x0,8
tick,0x7ffdb840feb4,181109053,0,0x0,8
tick,0x7ffdb840feb4,181124880,0,0x0,8
tick,0x7ffdb840feb4,181140903,0,0x0,8
tick,0x7ffdb840feb4,181155878,0,0x0,8
tick,0x7ffdb840feb4,181170888,0,0x0,8
tick,0x7ffdb840feb4,181186060,0,0x0,8
tick,0x7ffdb840feb4,181200860,0,0x0,8
tick,0x7ffdb840feb4,181215888,0,0x0,8
tick,0x7ffdb840feb4,181231235,0,0x0,8
tick,0x7ffdb840feb4,181247091,0,0x0,8
tick,0x7ffdb840feb4,181262579,0,0x0,8
tick,0x7ffdb840feb4,181277777,0,0x0,8
tick,0x7ffdb840feb4,181293505,0,0x0,8
tick,0x7ffdb840feb4,181308784,0,0x0,8
tick,0x7ffdb840feb4,181324907,0,0x0,8
tick,0x7ffdb840feb4,181340804,0,0x0,8
tick,0x7ffdb840feb4,181356085,0,0x0,8
tick,0x7ffdb840feb4,181372085,0,0x0,8
tick,0x7ffdb840feb4,181387554,0,0x0,8
tick,0x7ffdb840feb4,181402699,0,0x0,8
tick,0x7ffdb840feb4,181418707,0,0x0,8
tick,0x7ffdb840feb4,181433936,0,0x0,8
tick,0x7ffdb840feb4,181448669,0,0x0,8
tick,0x7ffdb840feb4,181463671,0,0x0,8
tick,0x7ffdb840feb4,181478790,0,0x0,8
tick,0x7ffdb840feb4,181493918,0,0x0,8
tick,0x7ffdb840feb4,181509931,0,0x0,8
tick,0x7ffdb840feb4,181525922,0,0x0,8
tick,0x7ffdb840feb4,181541938,0,0x0,8
tick,0x7ffdb840feb4,181557938,0,0x0,8
tick,0x7ffdb840feb4,181573806,0,0x0,8
tick,0x7ffdb840feb4,181589799,0,0x0,8
tick,0x7ffdb840feb4,181604960,0,0x0,8
tick,0x7ffdb840feb4,181619833,0,0x0,8
tick,0x7ffdb840feb4,181634949,0,0x0,8
tick,0x7ffdb840feb4,181650945,0,0x0,8
tick,0x7ffdb840feb4,181665950,0,0x0,8
tick,0x7ffdb840feb4,181681416,0,0x0,8
tick,0x7ffdb840feb4,181697427,0,0x0,8
tick,0x7ffdb840feb4,181713419,0,0x0,8
tick,0x7ffdb840feb4,181729424,0,0x0,8
tick,0x7ffdb840feb4,181744953,0,0x0,8
tick,0x7ffdb840feb4,181760127,0,0x0,8
tick,0x7ffdb840feb4,181775127,0,0x0,8
tick,0x7ffdb840feb4,181790430,0,0x0,8
tick,0x7ffdb840feb4,181805957,0,0x0,8
tick,0x7ffdb840feb4,181821312,0,0x0,8
tick,0x7ffdb840feb4,181836723,0,0x0,8
tick,0x7ffdb840feb4,181852703,0,0x0,8
tick,0x7ffdb840feb4,181868703,0,0x0,8
tick,0x7ffdb840feb4,181884146,0,0x0,8
tick,0x7ffdb840feb4,181899983,0,0x0,8
tick,0x7ffdb840feb4,181915967,0,0x0,8
tick,0x7ffdb840feb4,181932026,0,0x0,8
tick,0x7ffdb840feb4,181948148,0,0x0,8
tick,0x7ffdb840feb4,181963752,0,0x0,8
tick,0x7ffdb840feb4,181978759,0,0x0,8
tick,0x7ffdb840feb4,181994165,0,0x0,8
tick,0x7ffdb840feb4,182008838,0,0x0,8
tick,0x7ffdb840feb4,182023996,0,0x0,8
tick,0x7ffdb840feb4,182039607,0,0x0,8
tick,0x7ffdb840feb4,182054989,0,0x0,8
tick,0x7ffdb840feb4,182070025,0,0x0,8
tick,0x7ffdb840feb4,182086018,0,0x0,8
tick,0x7ffdb840feb4,182100979,0,0x0,8
tick,0x7ffdb840feb4,182117103,0,0x0,8
tick,0x7ffdb840feb4,182132808,0,0x0,8
tick,0x7ffdb840feb4,182148817,0,0x0,8
tick,0x7ffdb840feb4,182163985,0,0x0,8
tick,0x7ffdb840feb4,182178831,0,0x0,8
tick,0x7ffdb840feb4,182194009,0,0x0,8
tick,0x7ffdb840feb4,182209810,0,0x0,8
tick,0x7ffdb840feb4,182224847,0,0x0,8
tick,0x7ffdb840feb4,182240011,0,0x0,8
tick,0x7ffdb840feb4,182256020,0,0x0,8
tick,0x7ffdb840feb4,182271021,0,0x0,8
tick,0x7ffdb840feb4,182286190,0,0x0,8
tick,0x7ffdb840feb4,182301985,0,0x0,8
tick,0x7ffdb840feb4,182316992,0,0x0,8
tick,0x7ffdb840feb4,182332957,0,0x0,8
tick,0x7ffdb840feb4,182348082,0,0x0,8
tick,0x7ffdb840feb4,182363525,0,0x0,8
tick,0x7ffdb840feb4,182379211,0,0x0,8
tick,0x7ffdb840feb4,182395029,0,0x0,8
tick,0x7ffdb840feb4,182410211,0,0x0,8
tick,0x7ffdb840feb4,182425434,0,0x0,8
tick,0x7ffdb840feb4,182441455,0,0x0,8
tick,0x7ffdb840feb4,182457212,0,0x0,8
tick,0x7ffdb840feb4,182472346,0,0x0,8
tick,0x7ffdb840feb4,182487365,0,0x0,8
tick,0x7ffdb840feb4,182502999,0,0x0,8
tick,0x7ffdb840feb4,182519009,0,0x0,8
tick,0x7ffdb840feb4,182535050,0,0x0,8
tick,0x7ffdb840feb4,182550090,0,0x0,8
tick,0x7ffdb840feb4,182565052,0,0x0,8
tick,0x7ffdb840feb4,182580060,0,0x0,8
tick,0x7ffdb840feb4,182596057,0,0x0,8
tick,0x7ffdb840feb4,182610962,0,0x0,8
tick,0x7ffdb840feb4,182627065,0,0x0,8
tick,0x7ffdb840feb4,182642216,0,0x0,8
tick,0x7ffdb840feb4,182658081,0,0x0,8
tick,0x7ffdb840feb4,182673471,0,0x0,8
tick,0x7ffdb840feb4,182689076,0,0x0,8
tick,0x7ffdb840feb4,182705070,0,0x0,8
tick,0x7ffdb840feb4,182721075,0,0x0,8
tick,0x7ffdb840feb4,182737082,0,0x0,8
tick,0x7ffdb840feb4,182753094,0,0x0,8
tick,0x7ffdb840feb4,182768008,0,0x0,8
tick,0x7ffdb840feb4,182783421,0,0x0,8
tick,0x7ffdb840feb4,182798420,0,0x0,8
tick,0x7ffdb840feb4,182813754,0,0x0,8
tick,0x7ffdb840feb4,182829268,0,0x0,8
tick,0x7ffdb840feb4,182844221,0,0x0,8
tick,0x7ffdb840feb4,182859412,0,0x0,8
tick,0x7ffdb840feb4,182875095,0,0x0,8
tick,0x7ffdb840feb4,182890397,0,0x0,8
tick,0x7ffdb840feb4,182905890,0,0x0,8
tick,0x7ffdb840feb4,182921194,0,0x0,8
tick,0x7ffdb840feb4,182936266,0,0x0,8
tick,0x7ffdb840feb4,182952089,0,0x0,8
tick,0x7ffdb840feb4,182967277,0,0x0,8
tick,0x7ffdb840feb4,182982430,0,0x0,8
tick,0x7ffdb840feb4,182998113,0,0x0,8
tick,0x7ffdb840feb4,183013748,0,0x0,8
tick,0x7ffdb840feb4,183029145,0,0x0,8
tick,0x7ffdb840feb4,183044237,0,0x0,8
tick,0x7ffdb840feb4,183059779,0,0x0,8
tick,0x7ffdb840feb4,183075112,0,0x0,8
tick,0x7ffdb840feb4,183090298,0,0x0,8
tick,0x7ffdb840feb4,183106124,0,0x0,8
tick,0x7ffdb840feb4,183122211,0,0x0,8
tick,0x7ffdb840feb4,183137121,0,0x0,8
tick,0x7ffdb840feb4,183152094,0,0x0,8
tick,0x7ffdb840feb4,183168119,0,0x0,8
tick,0x7ffdb840feb4,183183425,0,0x0,8
tick,0x7ffdb840feb4,183198130,0,0x0,8
tick,0x7ffdb840feb4,183213320,0,0x0,8
tick,0x7ffdb840feb4,183229109,0,0x0,8
tick,0x7ffdb840feb4,183244239,0,0x0,8
tick,0x7ffdb840feb4,183259401,0,0x0,8
tick,0x7ffdb840feb4,183275243,0,0x0,8
tick,0x7ffdb840feb4,183290541,0,0x0,8
tick,0x7ffdb840feb4,183305732,0,0x0,8
tick,0x7ffdb840feb4,183321110,0,0x0,8
tick,0x7ffdb840feb4,183336318,0,0x0,8
tick,0x7ffdb840feb4,183352146,0,0x0,8
tick,0x7ffdb840feb4,183367154,0,0x0,8
tick,0x7ffdb840feb4,183383156,0,0x0,8
tick,0x7ffdb840feb4,183398319,0,0x0,8
tick,0x7ffdb840feb4,183413160,0,0x0,8
tick,0x7ffdb840feb4,183428326,0,0x0,8
tick,0x7ffdb840feb4,183444245,0,0x0,8
tick,0x7ffdb840feb4,183459338,0,0x0,8
tick,0x7ffdb840feb4,183475154,0,0x0,8
tick,0x7ffdb840feb4,183490335,0,0x0,8
tick,0x7ffdb840feb4,183505338,0,0x0,8
tick,0x7ffdb840feb4,183520964,0,0x0,8
tick,0x7ffdb840feb4,183536343,0,0x0,8
tick,0x7ffdb840feb4,183552094,0,0x0,8
tick,0x7ffdb840feb4,183567352,0,0x0,8
tick,0x7ffdb840feb4,183583435,0,0x0,8
tick,0x7ffdb840feb4,183598650,0,0x0,8
tick,0x7ffdb840feb4,183614184,0,0x0,8
tick,0x7ffdb840feb4,183630144,0,0x0,8
tick,0x7ffdb840feb4,183645253,0,0x0,8
tick,0x7ffdb840feb4,183660521,0,0x0,8
tick,0x7ffdb840feb4,183676226,0,0x0,8
tick,0x7ffdb840feb4,183692192,0,0x0,8
tick,0x7ffdb840feb4,183708195,0,0x0,8
tick,0x7ffdb840feb4,183724192,0,0x0,8
tick,0x7ffdb840feb4,183740207,0,0x0,8
tick,0x7ffdb840feb4,183755790,0,0x0,8
tick,0x7ffdb840feb4,183770773,0,0x0,8
tick,0x7ffdb840feb4,183786672,0,0x0,8
tick,0x7ffdb840feb4,183802201,0,0x0,8
tick,0x7ffdb840feb4,183817390,0,0x0,8
tick,0x7ffdb840feb4,183833460,0,0x0,8
tick,0x7ffdb840feb4,183847864,0,0x0,8
tick,0x7ffdb840feb4,183863222,0,0x0,8
tick,0x7ffdb840feb4,183879221,0,0x0,8
tick,0x7ffdb840feb4,183895208,0,0x0,8
tick,0x7ffdb840feb4,183910216,0,0x0,8
tick,0x7ffdb840feb4,183925213,0,0x0,8
tick,0x7ffdb840feb4,183941224,0,0x0,8
tick,0x7ffdb840feb4,183956395,0,0x0,8
tick,0x7ffdb840feb4,183972005,0,0x0,8
tick,0x7ffdb840feb4,183987396,0,0x0,8
tick,0x7ffdb840feb4,184003216,0,0x0,8
tick,0x7ffdb840feb4,184018000,0,0x0,8
tick,0x7ffdb840feb4,184033444,0,0x0,8
tick,0x7ffdb840feb4,184049103,0,0x0,8
tick,0x7ffdb840feb4,184064203,0,0x0,8
tick,0x7ffdb840feb4,184079517,0,0x0,8
tick,0x7ffdb840feb4,184095236,0,0x0,8
tick,0x7ffdb840feb4,184110110,0,0x0,8
tick,0x7ffdb840feb4,184125240,0,0x0,8
tick,0x7ffdb840feb4,184141314,0,0x0,8
tick,0x7ffdb840feb4,184156238,0,0x0,8
tick,0x7ffdb840feb4,184171426,0,0x0,8
tick,0x7ffdb840feb4,184187245,0,0x0,8
tick,0x7ffdb840feb4,184202714,0,0x0,8
tick,0x7ffdb840feb4,184218432,0,0x0,8
tick,0x7ffdb840feb4,184234251,0,0x0,8
tick,0x7ffdb840feb4,184250097,0,0x0,8
tick,0x7ffdb840feb4,184265251,0,0x0,8
tick,0x7ffdb840feb4,184280795,0,0x0,8
tick,0x7ffdb840feb4,184296038,0,0x0,8
tick,0x7ffdb840feb4,184311229,0,0x0,8
tick,0x7ffdb840feb4,184326439,0,0x0,8
tick,0x7ffdb840feb4,184342450,0,0x0,8
tick,0x7ffdb840feb4,184357605,0,0x0,8
tick,0x7ffdb840feb4,184372932,0,0x0,8
tick,0x7ffdb840feb4,184388455,0,0x0,8
tick,0x7ffdb840feb4,184403855,0,0x0,8
tick,0x7ffdb840feb4,184419369,0,0x0,8
tick,0x7ffdb840feb4,184435274,0,0x0,8
tick,0x7ffdb840feb4,184451112,0,0x0,8
tick,0x7ffdb840feb4,184466285,0,0x0,8
tick,0x7ffdb840feb4,184481425,0,0x0,8
tick,0x7ffdb840feb4,184497462,0,0x0,8
tick,0x7ffdb840feb4,184513383,0,0x0,8
tick,0x7ffdb840feb4,184528956,0,0x0,8
tick,0x7ffdb840feb4,184544287,0,0x0,8
tick,0x7ffdb840feb4,184559624,0,0x0,8
tick,0x7ffdb840feb4,184575289,0,0x0,8
tick,0x7ffdb840feb4,184591294,0,0x0,8
tick,0x7ffdb840feb4,184607305,0,0x0,8
tick,0x7ffdb840feb4,184622488,0,0x0,8
tick,0x7ffdb840feb4,184637705,0,0x0,8
tick,0x7ffdb840feb4,184653737,0,0x0,8
tick,0x7ffdb840feb4,184669487,0,0x0,8
tick,0x7ffdb840feb4,184685315,0,0x0,8
tick,0x7ffdb840feb4,184700310,0,0x0,8
tick,0x7ffdb840feb4,184716323,0,0x0,8
tick,0x7ffdb840feb4,184731358,0,0x0,8
tick,0x7ffdb840feb4,184746318,0,0x0,8
tick,0x7ffdb840feb4,184762006,0,0x0,8
tick,0x7ffdb840feb4,184777489,0,0x0,8
tick,0x7ffdb840feb4,184792914,0,0x0,8
tick,0x7ffdb840feb4,184808312,0,0x0,8
tick,0x7ffdb840feb4,184824112,0,0x0,8
tick,0x7ffdb840feb4,184839655,0,0x0,8
tick,0x7ffdb840feb4,184855330,0,0x0,8
tick,0x7ffdb840feb4,184870337,0,0x0,8
tick,0x7ffdb840feb4,184885524,0,0x0,8
tick,0x7ffdb840feb4,184901100,0,0x0,8
tick,0x7ffdb840feb4,184916336,0,0x0,8
tick,0x7ffdb840feb4,184932436,0,0x0,8
tick,0x7ffdb840feb4,184948097,0,0x0,8
tick,0x7ffdb840feb4,184963943,0,0x0,8
tick,0x7ffdb840feb4,184979331,0,0x0,8
tick,0x7ffdb840feb4,184994910,0,0x0,8
tick,0x7ffdb840feb4,185010146,0,0x0,8
tick,0x7ffdb840feb4,185025343,0,0x0,8
tick,0x7ffdb840feb4,185041108,0,0x0,8
tick,0x7ffdb840feb4,185056351,0,0x0,8
tick,0x7ffdb840feb4,185072342,0,0x0,8
tick,0x7ffdb840feb4,185087356,0,0x0,8
tick,0x7ffdb840feb4,185103103,0,0x0,8
tick,0x7ffdb840feb4,185118357,0,0x0,8
tick,0x7ffdb840feb4,185133886,0,0x0,8
tick,0x7ffdb840feb4,185149104,0,0x0,8
tick,0x7ffdb840feb4,185164363,0,0x0,8
tick,0x7ffdb840feb4,185180355,0,0x0,8
tick,0x7ffdb840feb4,185196363,0,0x0,8
tick,0x7ffdb840feb4,185212150,0,0x0,8
tick,0x7ffdb840feb4,185227559,0,0x0,8
tick,0x7ffdb840feb4,185243559,0,0x0,8
tick,0x7ffdb840feb4,185259097,0,0x0,8
tick,0x7ffdb840feb4,185274374,0,0x0,8
tick,0x7ffdb840feb4,185290361,0,0x0,8
tick,0x7ffdb840feb4,185306396,0,0x0,8
tick,0x7ffdb840feb4,185321056,0,0x0,8
tick,0x7ffdb840feb4,185336383,0,0x0,8
tick,0x7ffdb840feb4,185352094,0,0x0,8
tick,0x7ffdb840feb4,185367567,0,0x0,8
tick,0x7ffdb840feb4,185382435,0,0x0,8
tick,0x7ffdb840feb4,185398288,0,0x0,8
tick,0x7ffdb840feb4,185414292,0,0x0,8
tick,0x7ffdb840feb4,185429580,0,0x0,8
tick,0x7ffdb840feb4,185445399,0,0x0,8
tick,0x7ffdb840feb4,185460097,0,0x0,8
tick,0x7ffdb840feb4,185476110,0,0x0,8
tick,0x7ffdb840feb4,185492130,0,0x0,8
tick,0x7ffdb840feb4,185507405,0,0x0,8
tick,0x7ffdb840feb4,185523404,0,0x0,8
tick,0x7ffdb840feb4,185539033,0,0x0,8
tick,0x7ffdb840feb4,185554411,0,0x0,8
tick,0x7ffdb840feb4,185569355,0,0x0,8
tick,0x7ffdb840feb4,185585413,0,0x0,8
tick,0x7ffdb840feb4,185601063,0,0x0,8
tick,0x7ffdb840feb4,185616425,0,0x0,8
tick,0x7ffdb840feb4,185632428,0,0x0,8
tick,0x7ffdb840feb4,185648102,0,0x0,8
tick,0x7ffdb840feb4,185663421,0,0x0,8
tick,0x7ffdb840feb4,185678428,0,0x0,8
tick,0x7ffdb840feb4,185693976,0,0x0,8
tick,0x7ffdb840feb4,185709410,0,0x0,8
tick,0x7ffdb840feb4,185724414,0,0x0,8
tick,0x7ffdb840feb4,185740418,0,0x0,8
tick,0x7ffdb840feb4,185756420,0,0x0,8
tick,0x7ffdb840feb4,185772432,0,0x0,8
tick,0x7ffdb840feb4,185787436,0,0x0,8
tick,0x7ffdb840feb4,185802373,0,0x0,8
tick,0x7ffdb840feb4,185818113,0,0x0,8
tick,0x7ffdb840feb4,185833438,0,0x0,8
tick,0x7ffdb840feb4,185849104,0,0x0,8
tick,0x7ffdb840feb4,185864445,0,0x0,8
tick,0x7ffdb840feb4,185879452,0,0x0,8
tick,0x7ffdb840feb4,185895446,0,0x0,8
tick,0x7ffdb840feb4,185911421,0,0x0,8
tick,0x7ffdb840feb4,185927474,0,0x0,8
tick,0x7ffdb840feb4,185942637,0,0x0,8
tick,0x7ffdb840feb4,185958453,0,0x0,8
tick,0x7ffdb840feb4,185973462,0,0x0,8
tick,0x7ffdb840feb4,185989466,0,0x0,8
tick,0x7ffdb840feb4,186005462,0,0x0,8
tick,0x7ffdb840feb4,186020790,0,0x0,8
tick,0x7ffdb840feb4,186036463,0,0x0,8
tick,0x7ffdb840feb4,186051475,0,0x0,8
tick,0x7ffdb840feb4,186067475,0,0x0,8
tick,0x7ffdb840feb4,186083436,0,0x0,8
tick,0x7ffdb840feb4,186098108,0,0x0,8
tick,0x7ffdb840feb4,186113392,0,0x0,8
tick,0x7ffdb840feb4,186128662,0,0x0,8
tick,0x7ffdb840feb4,186144258,0,0x0,8
tick,0x7ffdb840feb4,186160269,0,0x0,8
tick,0x7ffdb840feb4,186175480,0,0x0,8
tick,0x7ffdb840feb4,186191497,0,0x0,8
tick,0x7ffdb840feb4,186206281,0,0x0,8
tick,0x7ffdb840feb4,186221722,0,0x0,8
tick,0x7ffdb840feb4,186237687,0,0x0,8
tick,0x7ffdb840feb4,186253695,0,0x0,8
tick,0x7ffdb840feb4,186268883,0,0x0,8
tick,0x7ffdb840feb4,186284441,0,0x0,8
tick,0x7ffdb840feb4,186300107,0,0x0,8
tick,0x7ffdb840feb4,186315502,0,0x0,8
tick,0x7ffdb840feb4,186330498,0,0x0,8
tick,0x7ffdb840feb4,186346502,0,0x0,8
tick,0x7ffdb840feb4,186361669,0,0x0,8
tick,0x7ffdb840feb4,186376511,0,0x0,8
tick,0x7ffdb840feb4,186391543,0,0x0,8
tick,0x7ffdb840feb4,186407017,0,0x0,8
tick,0x7ffdb840feb4,186423053,0,0x0,8
tick,0x7ffdb840feb4,186438387,0,0x0,8
tick,0x7ffdb840feb4,186453683,0,0x0,8
tick,0x7ffdb840feb4,186469535,0,0x0,8
tick,0x7ffdb840feb4,186485520,0,0x0,8
tick,0x7ffdb840feb4,186501470,0,0x0,8
tick,0x7ffdb840feb4,186516526,0,0x0,8
tick,0x7ffdb840feb4,186531740,0,0x0,8
tick,0x7ffdb840feb4,186547739,0,0x0,8
tick,0x7ffdb840feb4,186563617,0,0x0,8
tick,0x7ffdb840feb4,186578547,0,0x0,8
tick,0x7ffdb840feb4,186593629,0,0x0,8
tick,0x7ffdb840feb4,186609713,0,0x0,8
tick,0x7ffdb840feb4,186625552,0,0x0,8
tick,0x7ffdb840feb4,186640709,0,0x0,8
tick,0x7ffdb840feb4,186656538,0,0x0,8
tick,0x7ffdb840feb4,186671727,0,0x0,8
tick,0x7ffdb840feb4,186687717,0,0x0,8
tick,0x7ffdb840feb4,186703113,0,0x0,8
tick,0x7ffdb840feb4,186718557,0,0x0,8
tick,0x7ffdb840feb4,186733562,0,0x0,8
tick,0x7ffdb840feb4,186749560,0,0x0,8
tick,0x7ffdb840feb4,186765565,0,0x0,8
tick,0x7ffdb840feb4,186780747,0,0x0,8
tick,0x7ffdb840feb4,186795557,0,0x0,8
tick,0x7ffdb840feb4,186810729,0,0x0,8
tick,0x7ffdb840feb4,186826557,0,0x0,8
tick,0x7ffdb840feb4,186841656,0,0x0,8
tick,0x7ffdb840feb4,186857567,0,0x0,8
tick,0x7ffdb840feb4,186872746,0,0x0,8
tick,0x7ffdb840feb4,186887574,0,0x0,8
tick,0x7ffdb840feb4,186903112,0,0x0,8
tick,0x7ffdb840feb4,186918580,0,0x0,8
tick,0x7ffdb840feb4,186933625,0,0x0,8
tick,0x7ffdb840feb4,186949111,0,0x0,8
tick,0x7ffdb840feb4,186964575,0,0x0,8
tick,0x7ffdb840feb4,186979758,0,0x0,8
tick,0x7ffdb840feb4,186995593,0,0x0,8
tick,0x7ffdb840feb4,187010735,0,0x0,8
tick,0x7ffdb840feb4,187025920,0,0x0,8
tick,0x7ffdb840feb4,187041711,0,0x0,8
tick,0x7ffdb840feb4,187057763,0,0x0,8
tick,0x7ffdb840feb4,187072600,0,0x0,8
tick,0x7ffdb840feb4,187087769,0,0x0,8
tick,0x7ffdb840feb4,187102787,0,0x0,8
tick,0x7ffdb840feb4,187117925,0,0x0,8
tick,0x7ffdb840feb4,187133923,0,0x0,8
tick,0x7ffdb840feb4,187148763,0,0x0,8
tick,0x7ffdb840feb4,187164771,0,0x0,8
tick,0x7ffdb840feb4,187180212,0,0x0,8
tick,0x7ffdb840feb4,187195604,0,0x0,8
tick,0x7ffdb840feb4,187211720,0,0x0,8
tick,0x7ffdb840feb4,187227836,0,0x0,8
tick,0x7ffdb840feb4,187242981,0,0x0,8
tick,0x7ffdb840feb4,187258793,0,0x0,8
tick,0x7ffdb840feb4,187274775,0,0x0,8
tick,0x7ffdb840feb4,187290263,0,0x0,8
tick,0x7ffdb840feb4,187306268,0,0x0,8
tick,0x7ffdb840feb4,187322286,0,0x0,8
tick,0x7ffdb840feb4,187338285,0,0x0,8
tick,0x7ffdb840feb4,187353597,0,0x0,8
tick,0x7ffdb840feb4,187368930,0,0x0,8
tick,0x7ffdb840feb4,187384603,0,0x0,8
tick,0x7ffdb840feb4,187400610,0,0x0,8
tick,0x7ffdb840feb4,187415808,0,0x0,8
tick,0x7ffdb840feb4,187430823,0,0x0,8
tick,0x7ffdb840feb4,187446633,0,0x0,8
tick,0x7ffdb840feb4,187462652,0,0x0,8
tick,0x7ffdb840feb4,187477817,0,0x0,8
tick,0x7ffdb840feb4,187492651,0,0x0,8
tick,0x7ffdb840feb4,187508650,0,0x0,8
tick,0x7ffdb840feb4,187523826,0,0x0,8
tick,0x7ffdb840feb4,187539657,0,0x0,8
tick,0x7ffdb840feb4,187554668,0,0x0,8
tick,0x7ffdb840feb4,187569844,0,0x0,8
tick,0x7ffdb840feb4,187585659,0,0x0,8
tick,0x7ffdb840feb4,187600661,0,0x0,8
tick,0x7ffdb840feb4,187615664,0,0x0,8
tick,0x7ffdb840feb4,187630415,0,0x0,8
tick,0x7ffdb840feb4,187645664,0,0x0,8
tick,0x7ffdb840feb4,187660841,0,0x0,8
tick,0x7ffdb840feb4,187676657,0,0x0,8
tick,0x7ffdb840feb4,187691841,0,0x0,8
tick,0x7ffdb840feb4,187707698,0,0x0,8
tick,0x7ffdb840feb4,187723708,0,0x0,8
tick,0x7ffdb840feb4,187739720,0,0x0,8
tick,0x7ffdb840feb4,187755710,0,0x0,8
tick,0x7ffdb840feb4,187771705,0,0x0,8
tick,0x7ffdb840feb4,187787708,0,0x0,8
tick,0x7ffdb840feb4,187803582,0,0x0,8
tick,0x7ffdb840feb4,187818731,0,0x0,8
tick,0x7ffdb840feb4,187834453,0,0x0,8
tick,0x7ffdb840feb4,187849110,0,0x0,8
tick,0x7ffdb840feb4,187863778,0,0x0,8
tick,0x7ffdb840feb4,187879692,0,0x0,8
tick,0x7ffdb840feb4,187894693,0,0x0,8
tick,0x7ffdb840feb4,187910659,0,0x0,8
tick,0x7ffdb840feb4,187925693,0,0x0,8
tick,0x7ffdb840feb4,187941704,0,0x0,8
tick,0x7ffdb840feb4,187956872,0,0x0,8
tick,0x7ffdb840feb4,187971707,0,0x0,8
tick,0x7ffdb840feb4,187987698,0,0x0,8
tick,0x7ffdb840feb4,188003115,0,0x0,8
tick,0x7ffdb840feb4,188018257,0,0x0,8
tick,0x7ffdb840feb4,188033448,0,0x0,8
tick,0x7ffdb840feb4,188049111,0,0x0,8
tick,0x7ffdb840feb4,188064714,0,0x0,8
tick,0x7ffdb840feb4,188080715,0,0x0,8
tick,0x7ffdb840feb4,188096723,0,0x0,8
tick,0x7ffdb840feb4,188111667,0,0x0,8
tick,0x7ffdb840feb4,188126713,0,0x0,8
tick,0x7ffdb840feb4,188142250,0,0x0,8
tick,0x7ffdb840feb4,188157893,0,0x0,8
tick,0x7ffdb840feb4,188172902,0,0x0,8
tick,0x7ffdb840feb4,188188380,0,0x0,8
tick,0x7ffdb840feb4,188204130,0,0x0,8
tick,0x7ffdb840feb4,188219262,0,0x0,8
tick,0x7ffdb840feb4,188234457,0,0x0,8
tick,0x7ffdb840feb4,188250174,0,0x0,8
tick,0x7ffdb840feb4,188265738,0,0x0,8
tick,0x7ffdb840feb4,188281741,0,0x0,8
tick,0x7ffdb840feb4,188297742,0,0x0,8
tick,0x7ffdb840feb4,188313673,0,0x0,8
tick,0x7ffdb840feb4,188328924,0,0x0,8
tick,0x7ffdb840feb4,188344552,0,0x0,8
tick,0x7ffdb840feb4,188360542,0,0x0,8
tick,0x7ffdb840feb4,188375744,0,0x0,8
tick,0x7ffdb840feb4,188390439,0,0x0,8
tick,0x7ffdb840feb4,188405760,0,0x0,8
tick,0x7ffdb840feb4,188421703,0,0x0,8
tick,0x7ffdb840feb4,188436943,0,0x0,8
tick,0x7ffdb840feb4,188452714,0,0x0,8
tick,0x7ffdb840feb4,188467697,0,0x0,8
tick,0x7ffdb840feb4,188483453,0,0x0,8
tick,0x7ffdb840feb4,188498705,0,0x0,8
tick,0x7ffdb840feb4,188513701,0,0x0,8
tick,0x7ffdb840feb4,188528947,0,0x0,8
tick,0x7ffdb840feb4,188544224,0,0x0,8
tick,0x7ffdb840feb4,188560233,0,0x0,8
tick,0x7ffdb840feb4,188575805,0,0x0,8
tick,0x7ffdb840feb4,188591580,0,0x0,8
tick,0x7ffdb840feb4,188606769,0,0x0,8
tick,0x7ffdb840feb4,188621983,0,0x0,8
tick,0x7ffdb840feb4,188636956,0,0x0,8
tick,0x7ffdb840feb4,188652118,0,0x0,8
tick,0x7ffdb840feb4,188667674,0,0x0,8
tick,0x7ffdb840feb4,188683454,0,0x0,8
tick,0x7ffdb840feb4,188699246,0,0x0,8
tick,0x7ffdb840feb4,188714274,0,0x0,8
tick,0x7ffdb840feb4,188729551,0,0x0,8
tick,0x7ffdb840feb4,188744805,0,0x0,8
tick,0x7ffdb840feb4,188759805,0,0x0,8
tick,0x7ffdb840feb4,188775802,0,0x0,8
tick,0x7ffdb840feb4,188791806,0,0x0,8
tick,0x7ffdb840feb4,188807817,0,0x0,8
tick,0x7ffdb840feb4,188823694,0,0x0,8
tick,0x7ffdb840feb4,188838841,0,0x0,8
tick,0x7ffdb840feb4,188853829,0,0x0,8
tick,0x7ffdb840feb4,188868796,0,0x0,8
tick,0x7ffdb840feb4,188884446,0,0x0,8
tick,0x7ffdb840feb4,188899789,0,0x0,8
tick,0x7ffdb840feb4,188915816,0,0x0,8
tick,0x7ffdb840feb4,188931449,0,0x0,8
tick,0x7ffdb840feb4,188946689,0,0x0,8
tick,0x7ffdb840feb4,188961881,0,0x0,8
tick,0x7ffdb840feb4,188977689,0,0x0,8
tick,0x7ffdb840feb4,188993817,0,0x0,8
tick,0x7ffdb840feb4,189009803,0,0x0,8
tick,0x7ffdb840feb4,189025827,0,0x0,8
tick,0x7ffdb840feb4,189041814,0,0x0,8
tick,0x7ffdb840feb4,189057007,0,0x0,8
tick,0x7ffdb840feb4,189072849,0,0x0,8
tick,0x7ffdb840feb4,189088014,0,0x0,8
tick,0x7ffdb840feb4,189103251,0,0x0,8
tick,0x7ffdb840feb4,189118846,0,0x0,8
tick,0x7ffdb840feb4,189134708,0,0x0,8
tick,0x7ffdb840feb4,189150721,0,0x0,8
tick,0x7ffdb840feb4,189165850,0,0x0,8
tick,0x7ffdb840feb4,189180848,0,0x0,8
tick,0x7ffdb840feb4,189196851,0,0x0,8
tick,0x7ffdb840feb4,189212425,0,0x0,8
tick,0x7ffdb840feb4,189227857,0,0x0,8
tick,0x7ffdb840feb4,189243861,0,0x0,8
tick,0x7ffdb840feb4,189259471,0,0x0,8
tick,0x7ffdb840feb4,189274513,0,0x0,8
tick,0x7ffdb840feb4,189289862,0,0x0,8
tick,0x7ffdb840feb4,189305867,0,0x0,8
tick,0x7ffdb840feb4,189321862,0,0x0,8
tick,0x7ffdb840feb4,189337037,0,0x0,8
tick,0x7ffdb840feb4,189352860,0,0x0,8
tick,0x7ffdb840feb4,189367863,0,0x0,8
tick,0x7ffdb840feb4,189383462,0,0x0,8
tick,0x7ffdb840feb4,189398673,0,0x0,8
tick,0x7ffdb840feb4,189414705,0,0x0,8
tick,0x7ffdb840feb4,189430711,0,0x0,8
tick,0x7ffdb840feb4,189445870,0,0x0,8
tick,0x7ffdb840feb4,189460874,0,0x0,8
tick,0x7ffdb840feb4,189476876,0,0x0,8
tick,0x7ffdb840feb4,189492059,0,0x0,8
tick,0x7ffdb840feb4,189506841,0,0x0,8
tick,0x7ffdb840feb4,189522056,0,0x0,8
tick,0x7ffdb840feb4,189538053,0,0x0,8
tick,0x7ffdb840feb4,189553119,0,0x0,8
tick,0x7ffdb840feb4,189568069,0,0x0,8
tick,0x7ffdb840feb4,189583455,0,0x0,8
tick,0x7ffdb840feb4,189599131,0,0x0,8
tick,0x7ffdb840feb4,189614712,0,0x0,8
tick,0x7ffdb840feb4,189629921,0,0x0,8
tick,0x7ffdb840feb4,189645916,0,0x0,8
tick,0x7ffdb840feb4,189661081,0,0x0,8
tick,0x7ffdb840feb4,189676910,0,0x0,8
tick,0x7ffdb840feb4,189691939,0,0x0,8
tick,0x7ffdb840feb4,189707927,0,0x0,8
tick,0x7ffdb840feb4,189723934,0,0x0,8
tick,0x7ffdb840feb4,189739308,0,0x0,8
tick,0x7ffdb840feb4,189755302,0,0x0,8
tick,0x7ffdb840feb4,189771291,0,0x0,8
tick,0x7ffdb840feb4,189787296,0,0x0,8
tick,0x7ffdb840feb4,189802886,0,0x0,8
tick,0x7ffdb840feb4,189818104,0,0x0,8
tick,0x7ffdb840feb4,189833455,0,0x0,8
tick,0x7ffdb840feb4,189849141,0,0x0,8
tick,0x7ffdb840feb4,189864322,0,0x0,8
tick,0x7ffdb840feb4,189880315,0,0x0,8
tick,0x7ffdb840feb4,189895310,0,0x0,8
tick,0x7ffdb840feb4,189910992,0,0x0,8
tick,0x7ffdb840feb4,189926951,0,0x0,8
tick,0x7ffdb840feb4,189942288,0,0x0,8
tick,0x7ffdb840feb4,189958106,0,0x0,8
tick,0x7ffdb840feb4,189973112,0,0x0,8
tick,0x7ffdb840feb4,189989129,0,0x0,8
tick,0x7ffdb840feb4,190004842,0,0x0,8
tick,0x7ffdb840feb4,190020336,0,0x0,8
tick,0x7ffdb840feb4,190035952,0,0x0,8
tick,0x7ffdb840feb4,190050948,0,0x0,8
tick,0x7ffdb840feb4,190066123,0,0x0,8
tick,0x7ffdb840feb4,190081450,0,0x0,8
tick,0x7ffdb840feb4,190096726,0,0x0,8
tick,0x7ffdb840feb4,190112082,0,0x0,8
tick,0x7ffdb840feb4,190127962,0,0x0,8
tick,0x7ffdb840feb4,190143346,0,0x0,8
tick,0x7ffdb840feb4,190158585,0,0x0,8
tick,0x7ffdb840feb4,190174584,0,0x0,8
tick,0x7ffdb840feb4,190189594,0,0x0,8
tick,0x7ffdb840feb4,190204971,0,0x0,8
tick,0x7ffdb840feb4,190220344,0,0x0,8
tick,0x7ffdb840feb4,190235973,0,0x0,8
tick,0x7ffdb840feb4,190251144,0,0x0,8
tick,0x7ffdb840feb4,190265975,0,0x0,8
tick,0x7ffdb840feb4,190281153,0,0x0,8
tick,0x7ffdb840feb4,190296979,0,0x0,8
tick,0x7ffdb840feb4,190312982,0,0x0,8
tick,0x7ffdb840feb4,190328156,0,0x0,8
tick,0x7ffdb840feb4,190343935,0,0x0,8
tick,0x7ffdb840feb4,190359180,0,0x0,8
tick,0x7ffdb840feb4,190374990,0,0x0,8
tick,0x7ffdb840feb4,190391000,0,0x0,8
tick,0x7ffdb840feb4,190406173,0,0x0,8
tick,0x7ffdb840feb4,190422008,0,0x0,8
tick,0x7ffdb840feb4,190437010,0,0x0,8
tick,0x7ffdb840feb4,190452999,0,0x0,8
tick,0x7ffdb840feb4,190468011,0,0x0,8
tick,0x7ffdb840feb4,190483020,0,0x0,8
tick,0x7ffdb840feb4,190499135,0,0x0,8
tick,0x7ffdb840feb4,190514796,0,0x0,8
tick,0x7ffdb840feb4,190530194,0,0x0,8
tick,0x7ffdb840feb4,190546009,0,0x0,8
tick,0x7ffdb840feb4,190561173,0,0x0,8
tick,0x7ffdb840feb4,190576924,0,0x0,8
tick,0x7ffdb840feb4,190592427,0,0x0,8
tick,0x7ffdb840feb4,190608017,0,0x0,8
tick,0x7ffdb840feb4,190623817,0,0x0,8
tick,0x7ffdb840feb4,190639189,0,0x0,8
tick,0x7ffdb840feb4,190654025,0,0x0,8
tick,0x7ffdb840feb4,190669280,0,0x0,8
tick,0x7ffdb840feb4,190685033,0,0x0,8
tick,0x7ffdb840feb4,190700369,0,0x0,8
tick,0x7ffdb840feb4,190716032,0,0x0,8
tick,0x7ffdb840feb4,190731297,0,0x0,8
tick,0x7ffdb840feb4,190746316,0,0x0,8
tick,0x7ffdb840feb4,190762302,0,0x0,8
tick,0x7ffdb840feb4,190778305,0,0x0,8
tick,0x7ffdb840feb4,190794321,0,0x0,8
tick,0x7ffdb840feb4,190810097,0,0x0,8
tick,0x7ffdb840feb4,190826037,0,0x0,8
tick,0x7ffdb840feb4,190841219,0,0x0,8
tick,0x7ffdb840feb4,190856045,0,0x0,8
tick,0x7ffdb840feb4,190871793,0,0x0,8
tick,0x7ffdb840feb4,190887226,0,0x0,8
tick,0x7ffdb840feb4,190902557,0,0x0,8
tick,0x7ffdb840feb4,190917820,0,0x0,8
tick,0x7ffdb840feb4,190933621,0,0x0,8
tick,0x7ffdb840feb4,190948589,0,0x0,8
tick,0x7ffdb840feb4,190963621,0,0x0,8
tick,0x7ffdb840feb4,190978331,0,0x0,8
tick,0x7ffdb840feb4,190993125,0,0x0,8
tick,0x7ffdb840feb4,191008586,0,0x0,8
tick,0x7ffdb840feb4,191023827,0,0x0,8
tick,0x7ffdb840feb4,191039249,0,0x0,8
tick,0x7ffdb840feb4,191054422,0,0x0,8
tick,0x7ffdb840feb4,191070265,0,0x0,8
tick,0x7ffdb840feb4,191086069,0,0x0,8
tick,0x7ffdb840feb4,191102076,0,0x0,8
tick,0x7ffdb840feb4,191118091,0,0x0,8
tick,0x7ffdb840feb4,191133463,0,0x0,8
tick,0x7ffdb840feb4,191149090,0,0x0,8
tick,0x7ffdb840feb4,191164099,0,0x0,8
tick,0x7ffdb840feb4,191179357,0,0x0,8
tick,0x7ffdb840feb4,191195356,0,0x0,8
tick,0x7ffdb840feb4,191210248,0,0x0,8
tick,0x7ffdb840feb4,191225101,0,0x0,8
tick,0x7ffdb840feb4,191241096,0,0x0,8
tick,0x7ffdb840feb4,191257096,0,0x0,8
tick,0x7ffdb840feb4,191273110,0,0x0,8
tick,0x7ffdb840feb4,191288275,0,0x0,8
tick,0x7ffdb840feb4,191303358,0,0x0,8
tick,0x7ffdb840feb4,191319096,0,0x0,8
tick,0x7ffdb840feb4,191334471,0,0x0,8
tick,0x7ffdb840feb4,191349278,0,0x0,8
tick,0x7ffdb840feb4,191364793,0,0x0,8
tick,0x7ffdb840feb4,191380360,0,0x0,8
tick,0x7ffdb840feb4,191396110,0,0x0,8
tick,0x7ffdb840feb4,191412126,0,0x0,8
tick,0x7ffdb840feb4,191428199,0,0x0,8
tick,0x7ffdb840feb4,191443725,0,0x0,8
tick,0x7ffdb840feb4,191459121,0,0x0,8
tick,0x7ffdb840feb4,191474540,0,0x0,8
tick,0x7ffdb840feb4,191489774,0,0x0,8
tick,0x7ffdb840feb4,191505139,0,0x0,8
tick,0x7ffdb840feb4,191520296,0,0x0,8
tick,0x7ffdb840feb4,191536298,0,0x0,8
tick,0x7ffdb840feb4,191552175,0,0x0,8
tick,0x7ffdb840feb4,191568125,0,0x0,8
tick,0x7ffdb840feb4,191583472,0,0x0,8
tick,0x7ffdb840feb4,191599136,0,0x0,8
tick,0x7ffdb840feb4,191614369,0,0x0,8
tick,0x7ffdb840feb4,191630334,0,0x0,8
tick,0x7ffdb840feb4,191646144,0,0x0,8
tick,0x7ffdb840feb4,191661376,0,0x0,8
tick,0x7ffdb840feb4,191676316,0,0x0,8
tick,0x7ffdb840feb4,191691664,0,0x0,8
tick,0x7ffdb840feb4,191707149,0,0x0,8
tick,0x7ffdb840feb4,191722221,0,0x0,8
tick,0x7ffdb840feb4,191738336,0,0x0,8
tick,0x7ffdb840feb4,191754162,0,0x0,8
tick,0x7ffdb840feb4,191769340,0,0x0,8
tick,0x7ffdb840feb4,191785344,0,0x0,8
tick,0x7ffdb840feb4,191800335,0,0x0,8
tick,0x7ffdb840feb4,191816346,0,0x0,8
tick,0x7ffdb840feb4,191832462,0,0x0,8
tick,0x7ffdb840feb4,191848129,0,0x0,8
tick,0x7ffdb840feb4,191863390,0,0x0,8
tick,0x7ffdb840feb4,191878351,0,0x0,8
tick,0x7ffdb840feb4,191893618,0,0x0,8
tick,0x7ffdb840feb4,191909696,0,0x0,8
tick,0x7ffdb840feb4,191925174,0,0x0,8
tick,0x7ffdb840feb4,191940394,0,0x0,8
tick,0x7ffdb840feb4,191956188,0,0x0,8
tick,0x7ffdb840feb4,191971363,0,0x0,8
tick,0x7ffdb840feb4,191987185,0,0x0,8
tick,0x7ffdb840feb4,192002186,0,0x0,8
tick,0x7ffdb840feb4,192017440,0,0x0,8
tick,0x7ffdb840feb4,192032488,0,0x0,8
tick,0x7ffdb840feb4,192048191,0,0x0,8
tick,0x7ffdb840feb4,192063398,0,0x0,8
tick,0x7ffdb840feb4,192078529,0,0x0,8
tick,0x7ffdb840feb4,192094649,0,0x0,8
tick,0x7ffdb840feb4,192110295,0,0x0,8
tick,0x7ffdb840feb4,192125198,0,0x0,8
tick,0x7ffdb840feb4,192140408,0,0x0,8
tick,0x7ffdb840feb4,192155211,0,0x0,8
tick,0x7ffdb840feb4,192170503,0,0x0,8
tick,0x7ffdb840feb4,192186207,0,0x0,8
tick,0x7ffdb840feb4,192202210,0,0x0,8
tick,0x7ffdb840feb4,192217849,0,0x0,8
tick,0x7ffdb840feb4,192232507,0,0x0,8
tick,0x7ffdb840feb4,192248140,0,0x0,8
tick,0x7ffdb840feb4,192263392,0,0x0,8
tick,0x7ffdb840feb4,192278408,0,0x0,8
tick,0x7ffdb840feb4,192293688,0,0x0,8
tick,0x7ffdb840feb4,192308918,0,0x0,8
tick,0x7ffdb840feb4,192324313,0,0x0,8
tick,0x7ffdb840feb4,192340421,0,0x0,8
tick,0x7ffdb840feb4,192356223,0,0x0,8
tick,0x7ffdb840feb4,192371430,0,0x0,8
tick,0x7ffdb840feb4,192386414,0,0x0,8
tick,0x7ffdb840feb4,192402241,0,0x0,8
tick,0x7ffdb840feb4,192417416,0,0x0,8
tick,0x7ffdb840feb4,192432475,0,0x0,8
tick,0x7ffdb840feb4,192448136,0,0x0,8
tick,0x7ffdb840feb4,192464141,0,0x0,8
tick,0x7ffdb840feb4,192479443,0,0x0,8
tick,0x7ffdb840feb4,192495466,0,0x0,8
tick,0x7ffdb840feb4,192511251,0,0x0,8
tick,0x7ffdb840feb4,192527261,0,0x0,8
tick,0x7ffdb840feb4,192543252,0,0x0,8
tick,0x7ffdb840feb4,192558418,0,0x0,8
tick,0x7ffdb840feb4,192573431,0,0x0,8
tick,0x7ffdb840feb4,192588646,0,0x0,8
tick,0x7ffdb840feb4,192603800,0,0x0,8
tick,0x7ffdb840feb4,192619435,0,0x0,8
tick,0x7ffdb840feb4,192634691,0,0x0,8
tick,0x7ffdb840feb4,192650145,0,0x0,8
tick,0x7ffdb840feb4,192665266,0,0x0,8
tick,0x7ffdb840feb4,192680484,0,0x0,8
tick,0x7ffdb840feb4,192695870,0,0x0,8
tick,0x7ffdb840feb4,192711863,0,0x0,8
tick,0x7ffdb840feb4,192727270,0,0x0,8
tick,0x7ffdb840feb4,192743295,0,0x0,8
tick,0x7ffdb840feb4,192758467,0,0x0,8
tick,0x7ffdb840feb4,192774461,0,0x0,8
tick,0x7ffdb840feb4,192789466,0,0x0,8
tick,0x7ffdb840feb4,192805475,0,0x0,8
tick,0x7ffdb840feb4,192821290,0,0x0,8
tick,0x7ffdb840feb4,192836478,0,0x0,8
tick,0x7ffdb840feb4,192852292,0,0x0,8
tick,0x7ffdb840feb4,192867290,0,0x0,8
tick,0x7ffdb840feb4,192882654,0,0x0,8
tick,0x7ffdb840feb4,192898141,0,0x0,8
tick,0x7ffdb840feb4,192913283,0,0x0,8
tick,0x7ffdb840feb4,192928486,0,0x0,8
tick,0x7ffdb840feb4,192943443,0,0x0,8
tick,0x7ffdb840feb4,192958987,0,0x0,8
tick,0x7ffdb840feb4,192974130,0,0x0,8
tick,0x7ffdb840feb4,192989450,0,0x0,8
tick,0x7ffdb840feb4,193004949,0,0x0,8
tick,0x7ffdb840feb4,193020299,0,0x0,8
tick,0x7ffdb840feb4,193036307,0,0x0,8
tick,0x7ffdb840feb4,193051480,0,0x0,8
tick,0x7ffdb840feb4,193066836,0,0x0,8
tick,0x7ffdb840feb4,193082503,0,0x0,8
tick,0x7ffdb840feb4,193098173,0,0x0,8
tick,0x7ffdb840feb4,193113843,0,0x0,8
tick,0x7ffdb840feb4,193129496,0,0x0,8
tick,0x7ffdb840feb4,193145324,0,0x0,8
tick,0x7ffdb840feb4,193160500,0,0x0,8
tick,0x7ffdb840feb4,193176510,0,0x0,8
tick,0x7ffdb840feb4,193191511,0,0x0,8
tick,0x7ffdb840feb4,193207330,0,0x0,8
tick,0x7ffdb840feb4,193223304,0,0x0,8
tick,0x7ffdb840feb4,193238504,0,0x0,8
tick,0x7ffdb840feb4,193253981,0,0x0,8
tick,0x7ffdb840feb4,193268979,0,0x0,8
tick,0x7ffdb840feb4,193284127,0,0x0,8
tick,0x7ffdb840feb4,193299438,0,0x0,8
tick,0x7ffdb840feb4,193314514,0,0x0,8
tick,0x7ffdb840feb4,193329979,0,0x0,8
tick,0x7ffdb840feb4,193345361,0,0x0,8
tick,0x7ffdb840feb4,193360534,0,0x0,8
tick,0x7ffdb840feb4,193376530,0,0x0,8
tick,0x7ffdb840feb4,193392295,0,0x0,8
tick,0x7ffdb840feb4,193407521,0,0x0,8
tick,0x7ffdb840feb4,193423319,0,0x0,8
tick,0x7ffdb840feb4,193438534,0,0x0,8
tick,0x7ffdb840feb4,193454149,0,0x0,8
tick,0x7ffdb840feb4,193469538,0,0x0,8
tick,0x7ffdb840feb4,193485230,0,0x0,8
tick,0x7ffdb840feb4,193500471,0,0x0,8
tick,0x7ffdb840feb4,193516376,0,0x0,8
tick,0x7ffdb840feb4,193531490,0,0x0,8
tick,0x7ffdb840feb4,193547379,0,0x0,8
tick,0x7ffdb840feb4,193563388,0,0x0,8
tick,0x7ffdb840feb4,193579393,0,0x0,8
tick,0x7ffdb840feb4,193594810,0,0x0,8
tick,0x7ffdb840feb4,193610585,0,0x0,8
tick,0x7ffdb840feb4,193626388,0,0x0,8
tick,0x7ffdb840feb4,193642385,0,0x0,8
tick,0x7ffdb840feb4,193657558,0,0x0,8
tick,0x7ffdb840feb4,193672392,0,0x0,8
tick,0x7ffdb840feb4,193687564,0,0x0,8
tick,0x7ffdb840feb4,193703487,0,0x0,8
tick,0x7ffdb840feb4,193718592,0,0x0,8
tick,0x7ffdb840feb4,193734335,0,0x0,8
tick,0x7ffdb840feb4,193750330,0,0x0,8
tick,0x7ffdb840feb4,193766385,0,0x0,8
tick,0x7ffdb840feb4,193782385,0,0x0,8
tick,0x7ffdb840feb4,193798393,0,0x0,8
tick,0x7ffdb840feb4,193814397,0,0x0,8
tick,0x7ffdb840feb4,193829583,0,0x0,8
tick,0x7ffdb840feb4,193845340,0,0x0,8
tick,0x7ffdb840feb4,193860474,0,0x0,8
tick,0x7ffdb840feb4,193876409,0,0x0,8
tick,0x7ffdb840feb4,193892416,0,0x0,8
tick,0x7ffdb840feb4,193908415,0,0x0,8
tick,0x7ffdb840feb4,193923394,0,0x0,8
tick,0x7ffdb840feb4,193938406,0,0x0,8
tick,0x7ffdb840feb4,193953588,0,0x0,8
tick,0x7ffdb840feb4,193968740,0,0x0,8
tick,0x7ffdb840feb4,193984479,0,0x0,8
tick,0x7ffdb840feb4,194000143,0,0x0,8
tick,0x7ffdb840feb4,194016183,0,0x0,8
tick,0x7ffdb840feb4,194031470,0,0x0,8
tick,0x7ffdb840feb4,194047437,0,0x0,8
tick,0x7ffdb840feb4,194062486,0,0x0,8
tick,0x7ffdb840feb4,194077433,0,0x0,8
tick,0x7ffdb840feb4,194093090,0,0x0,8
tick,0x7ffdb840feb4,194108439,0,0x0,8
tick,0x7ffdb840feb4,194124514,0,0x0,8
tick,0x7ffdb840feb4,194139483,0,0x0,8
tick,0x7ffdb840feb4,194154581,0,0x0,8
tick,0x7ffdb840feb4,194169763,0,0x0,8
tick,0x7ffdb840feb4,194185442,0,0x0,8
tick,0x7ffdb840feb4,194201145,0,0x0,8
tick,0x7ffdb840feb4,194216453,0,0x0,8
tick,0x7ffdb840feb4,194232479,0,0x0,8
tick,0x7ffdb840feb4,194247623,0,0x0,8
tick,0x7ffdb840feb4,194263492,0,0x0,8
tick,0x7ffdb840feb4,194278633,0,0x0,8
tick,0x7ffdb840feb4,194293642,0,0x0,8
tick,0x7ffdb840feb4,194309629,0,0x0,8
tick,0x7ffdb840feb4,194325416,0,0x0,8
tick,0x7ffdb840feb4,194341453,0,0x0,8
tick,0x7ffdb840feb4,194357465,0,0x0,8
tick,0x7ffdb840feb4,194372589,0,0x0,8
tick,0x7ffdb840feb4,194388471,0,0x0,8
tick,0x7ffdb840feb4,194403484,0,0x0,8
tick,0x7ffdb840feb4,194419493,0,0x0,8
tick,0x7ffdb840feb4,194435479,0,0x0,8
tick,0x7ffdb840feb4,194451151,0,0x0,8
tick,0x7ffdb840feb4,194466476,0,0x0,8
tick,0x7ffdb840feb4,194481484,0,0x0,8
tick,0x7ffdb840feb4,194497480,0,0x0,8
tick,0x7ffdb840feb4,194513248,0,0x0,8
tick,0x7ffdb840feb4,194528667,0,0x0,8
tick,0x7ffdb840feb4,194544505,0,0x0,8
tick,0x7ffdb840feb4,194559665,0,0x0,8
tick,0x7ffdb840feb4,194575490,0,0x0,8
tick,0x7ffdb840feb4,194590504,0,0x0,8
tick,0x7ffdb840feb4,194606493,0,0x0,8
tick,0x7ffdb840feb4,194622512,0,0x0,8
tick,0x7ffdb840feb4,194637671,0,0x0,8
tick,0x7ffdb840feb4,194653096,0,0x0,8
tick,0x7ffdb840feb4,194669114,0,0x0,8
tick,0x7ffdb840feb4,194684694,0,0x0,8
tick,0x7ffdb840feb4,194700450,0,0x0,8
tick,0x7ffdb840feb4,194716519,0,0x0,8
tick,0x7ffdb840feb4,194732486,0,0x0,8
tick,0x7ffdb840feb4,194748515,0,0x0,8
tick,0x7ffdb840feb4,194763685,0,0x0,8
tick,0x7ffdb840feb4,194778704,0,0x0,8
tick,0x7ffdb840feb4,194794695,0,0x0,8
tick,0x7ffdb840feb4,194810729,0,0x0,8
tick,0x7ffdb840feb4,194826731,0,0x0,8
tick,0x7ffdb840feb4,194842718,0,0x0,8
tick,0x7ffdb840feb4,194858709,0,0x0,8
tick,0x7ffdb840feb4,194874533,0,0x0,8
tick,0x7ffdb840feb4,194889706,0,0x0,8
tick,0x7ffdb840feb4,194905523,0,0x0,8
tick,0x7ffdb840feb4,194920722,0,0x0,8
tick,0x7ffdb840feb4,194936535,0,0x0,8
tick,0x7ffdb840feb4,194951871,0,0x0,8
tick,0x7ffdb840feb4,194967536,0,0x0,8
tick,0x7ffdb840feb4,194983482,0,0x0,8
tick,0x7ffdb840feb4,194998712,0,0x0,8
tick,0x7ffdb840feb4,195013515,0,0x0,8
tick,0x7ffdb840feb4,195028728,0,0x0,8
tick,0x7ffdb840feb4,195044691,0,0x0,8
tick,0x7ffdb840feb4,195059728,0,0x0,8
tick,0x7ffdb840feb4,195074919,0,0x0,8
tick,0x7ffdb840feb4,195090216,0,0x0,8
tick,0x7ffdb840feb4,195105556,0,0x0,8
tick,0x7ffdb840feb4,195120714,0,0x0,8
tick,0x7ffdb840feb4,195136727,0,0x0,8
tick,0x7ffdb840feb4,195151743,0,0x0,8
tick,0x7ffdb840feb4,195167577,0,0x0,8
tick,0x7ffdb840feb4,195183487,0,0x0,8
tick,0x7ffdb840feb4,195199152,0,0x0,8
tick,0x7ffdb840feb4,195214368,0,0x0,8
tick,0x7ffdb840feb4,195229369,0,0x0,8
tick,0x7ffdb840feb4,195244774,0,0x0,8
tick,0x7ffdb840feb4,195260552,0,0x0,8
tick,0x7ffdb840feb4,195275527,0,0x0,8
tick,0x7ffdb840feb4,195290897,0,0x0,8
tick,0x7ffdb840feb4,195306583,0,0x0,8
tick,0x7ffdb840feb4,195321588,0,0x0,8
tick,0x7ffdb840feb4,195337576,0,0x0,8
tick,0x7ffdb840feb4,195353596,0,0x0,8
tick,0x7ffdb840feb4,195368795,0,0x0,8
tick,0x7ffdb840feb4,195384591,0,0x0,8
tick,0x7ffdb840feb4,195399473,0,0x0,8
tick,0x7ffdb840feb4,195414822,0,0x0,8
tick,0x7ffdb840feb4,195430476,0,0x0,8
tick,0x7ffdb840feb4,195445484,0,0x0,8
tick,0x7ffdb840feb4,195461541,0,0x0,8
tick,0x7ffdb840feb4,195477494,0,0x0,8
tick,0x7ffdb840feb4,195492774,0,0x0,8
tick,0x7ffdb840feb4,195508795,0,0x0,8
tick,0x7ffdb840feb4,195524897,0,0x0,8
tick,0x7ffdb840feb4,195540557,0,0x0,8
tick,0x7ffdb840feb4,195556611,0,0x0,8
tick,0x7ffdb840feb4,195572500,0,0x0,8
tick,0x7ffdb840feb4,195588500,0,0x0,8
tick,0x7ffdb840feb4,195603708,0,0x0,8
tick,0x7ffdb840feb4,195618709,0,0x0,8
tick,0x7ffdb840feb4,195634496,0,0x0,8
tick,0x7ffdb840feb4,195649641,0,0x0,8
tick,0x7ffdb840feb4,195664627,0,0x0,8
tick,0x7ffdb840feb4,195679509,0,0x0,8
tick,0x7ffdb840feb4,195695519,0,0x0,8
tick,0x7ffdb840feb4,195710511,0,0x0,8
tick,0x7ffdb840feb4,195726626,0,0x0,8
tick,0x7ffdb840feb4,195741556,0,0x0,8
tick,0x7ffdb840feb4,195756631,0,0x0,8
tick,0x7ffdb840feb4,195772514,0,0x0,8
tick,0x7ffdb840feb4,195787650,0,0x0,8
tick,0x7ffdb840feb4,195802641,0,0x0,8
tick,0x7ffdb840feb4,195818645,0,0x0,8
tick,0x7ffdb840feb4,195834656,0,0x0,8
tick,0x7ffdb840feb4,195850152,0,0x0,8
tick,0x7ffdb840feb4,195865648,0,0x0,8
tick,0x7ffdb840feb4,195880861,0,0x0,8
tick,0x7ffdb840feb4,195896649,0,0x0,8
tick,0x7ffdb840feb4,195912673,0,0x0,8
tick,0x7ffdb840feb4,195928677,0,0x0,8
tick,0x7ffdb840feb4,195944675,0,0x0,8
tick,0x7ffdb840feb4,195959858,0,0x0,8
tick,0x7ffdb840feb4,195975249,0,0x0,8
tick,0x7ffdb840feb4,195991237,0,0x0,8
tick,0x7ffdb840feb4,196006673,0,0x0,8
tick,0x7ffdb840feb4,196021879,0,0x0,8
tick,0x7ffdb840feb4,196037668,0,0x0,8
tick,0x7ffdb840feb4,196053236,0,0x0,8
tick,0x7ffdb840feb4,196068616,0,0x0,8
tick,0x7ffdb840feb4,196083619,0,0x0,8
tick,0x7ffdb840feb4,196099674,0,0x0,8
tick,0x7ffdb840feb4,196114858,0,0x0,8
tick,0x7ffdb840feb4,196129857,0,0x0,8
tick,0x7ffdb840feb4,196145679,0,0x0,8
tick,0x7ffdb840feb4,196161318,0,0x0,8
tick,0x7ffdb840feb4,196177321,0,0x0,8
tick,0x7ffdb840feb4,196192694,0,0x0,8
tick,0x7ffdb840feb4,196207860,0,0x0,8
tick,0x7ffdb840feb4,196223874,0,0x0,8
tick,0x7ffdb840feb4,196238867,0,0x0,8
tick,0x7ffdb840feb4,196254193,0,0x0,8
tick,0x7ffdb840feb4,196269700,0,0x0,8
tick,0x7ffdb840feb4,196284800,0,0x0,8
tick,0x7ffdb840feb4,196300194,0,0x0,8
tick,0x7ffdb840feb4,196315719,0,0x0,8
tick,0x7ffdb840feb4,196330888,0,0x0,8
tick,0x7ffdb840feb4,196346708,0,0x0,8
tick,0x7ffdb840feb4,196362517,0,0x0,8
tick,0x7ffdb840feb4,196377702,0,0x0,8
tick,0x7ffdb840feb4,196393415,0,0x0,8
tick,0x7ffdb840feb4,196408888,0,0x0,8
tick,0x7ffdb840feb4,196423593,0,0x0,8
tick,0x7ffdb840feb4,196438933,0,0x0,8
tick,0x7ffdb840feb4,196453921,0,0x0,8
tick,0x7ffdb840feb4,196469922,0,0x0,8
tick,0x7ffdb840feb4,196485379,0,0x0,8
tick,0x7ffdb840feb4,196500586,0,0x0,8
tick,0x7ffdb840feb4,196515740,0,0x0,8
tick,0x7ffdb840feb4,196530907,0,0x0,8
tick,0x7ffdb840feb4,196546728,0,0x0,8
tick,0x7ffdb840feb4,196561913,0,0x0,8
tick,0x7ffdb840feb4,196577735,0,0x0,8
tick,0x7ffdb840feb4,196593478,0,0x0,8
tick,0x7ffdb840feb4,196608758,0,0x0,8
tick,0x7ffdb840feb4,196623748,0,0x0,8
tick,0x7ffdb840feb4,196638914,0,0x0,8
tick,0x7ffdb840feb4,196653886,0,0x0,8
tick,0x7ffdb840feb4,196669751,0,0x0,8
tick,0x7ffdb840feb4,196685320,0,0x0,8
tick,0x7ffdb840feb4,196700603,0,0x0,8
tick,0x7ffdb840feb4,196715755,0,0x0,8
tick,0x7ffdb840feb4,196730925,0,0x0,8
tick,0x7ffdb840feb4,196746750,0,0x0,8
tick,0x7ffdb840feb4,196761933,0,0x0,8
tick,0x7ffdb840feb4,196777756,0,0x0,8
tick,0x7ffdb840feb4,196793774,0,0x0,8
tick,0x7ffdb840feb4,196809773,0,0x0,8
tick,0x7ffdb840feb4,196825779,0,0x0,8
tick,0x7ffdb840feb4,196841784,0,0x0,8
tick,0x7ffdb840feb4,196857802,0,0x0,8
tick,0x7ffdb840feb4,196872807,0,0x0,8
tick,0x7ffdb840feb4,196887783,0,0x0,8
tick,0x7ffdb840feb4,196903638,0,0x0,8
tick,0x7ffdb840feb4,196918959,0,0x0,8
tick,0x7ffdb840feb4,196934497,0,0x0,8
tick,0x7ffdb840feb4,196950501,0,0x0,8
tick,0x7ffdb840feb4,196965805,0,0x0,8
tick,0x7ffdb840feb4,196980807,0,0x0,8
tick,0x7ffdb840feb4,196996785,0,0x0,8
tick,0x7ffdb840feb4,197012582,0,0x0,8
tick,0x7ffdb840feb4,197027778,0,0x0,8
tick,0x7ffdb840feb4,197042980,0,0x0,8
tick,0x7ffdb840feb4,197058972,0,0x0,8
tick,0x7ffdb840feb4,197074656,0,0x0,8
tick,0x7ffdb840feb4,197089987,0,0x0,8
tick,0x7ffdb840feb4,197105663,0,0x0,8
tick,0x7ffdb840feb4,197120977,0,0x0,8
tick,0x7ffdb840feb4,197136803,0,0x0,8
tick,0x7ffdb840feb4,197151690,0,0x0,8
tick,0x7ffdb840feb4,197167804,0,0x0,8
tick,0x7ffdb840feb4,197183493,0,0x0,8
tick,0x7ffdb840feb4,197198990,0,0x0,8
tick,0x7ffdb840feb4,197214800,0,0x0,8
tick,0x7ffdb840feb4,197230815,0,0x0,8
tick,0x7ffdb840feb4,197246814,0,0x0,8
tick,0x7ffdb840feb4,197262631,0,0x0,8
tick,0x7ffdb840feb4,197277823,0,0x0,8
tick,0x7ffdb840feb4,197292996,0,0x0,8
tick,0x7ffdb840feb4,197308999,0,0x0,8
tick,0x7ffdb840feb4,197324294,0,0x0,8
tick,0x7ffdb840feb4,197340008,0,0x0,8
tick,0x7ffdb840feb4,197355826,0,0x0,8
tick,0x7ffdb840feb4,197371832,0,0x0,8
tick,0x7ffdb840feb4,197387827,0,0x0,8
tick,0x7ffdb840feb4,197402719,0,0x0,8
tick,0x7ffdb840feb4,197418843,0,0x0,8
tick,0x7ffdb840feb4,197434497,0,0x0,8
tick,0x7ffdb840feb4,197449191,0,0x0,8
tick,0x7ffdb840feb4,197464827,0,0x0,8
tick,0x7ffdb840feb4,197480011,0,0x0,8
tick,0x7ffdb840feb4,197495018,0,0x0,8
tick,0x7ffdb840feb4,197510848,0,0x0,8
tick,0x7ffdb840feb4,197526601,0,0x0,8
tick,0x7ffdb840feb4,197542634,0,0x0,8
tick,0x7ffdb840feb4,197557852,0,0x0,8
tick,0x7ffdb840feb4,197572861,0,0x0,8
tick,0x7ffdb840feb4,197588026,0,0x0,8
tick,0x7ffdb840feb4,197603873,0,0x0,8
tick,0x7ffdb840feb4,197619782,0,0x0,8
tick,0x7ffdb840feb4,197635871,0,0x0,8
tick,0x7ffdb840feb4,197651875,0,0x0,8
tick,0x7ffdb840feb4,197667861,0,0x0,8
tick,0x7ffdb840feb4,197682549,0,0x0,8
tick,0x7ffdb840feb4,197698614,0,0x0,8
tick,0x7ffdb840feb4,197713829,0,0x0,8
tick,0x7ffdb840feb4,197729055,0,0x0,8
tick,0x7ffdb840feb4,197743895,0,0x0,8
tick,0x7ffdb840feb4,197759878,0,0x0,8
tick,0x7ffdb840feb4,197775880,0,0x0,8
tick,0x7ffdb840feb4,197791775,0,0x0,8
tick,0x7ffdb840feb4,197807883,0,0x0,8
tick,0x7ffdb840feb4,197823888,0,0x0,8
tick,0x7ffdb840feb4,197839887,0,0x0,8
tick,0x7ffdb840feb4,197855900,0,0x0,8
tick,0x7ffdb840feb4,197871897,0,0x0,8
tick,0x7ffdb840feb4,197887063,0,0x0,8
tick,0x7ffdb840feb4,197902655,0,0x0,8
tick,0x7ffdb840feb4,197917931,0,0x0,8
tick,0x7ffdb840feb4,197933500,0,0x0,8
tick,0x7ffdb840feb4,197949073,0,0x0,8
tick,0x7ffdb840feb4,197964482,0,0x0,8
tick,0x7ffdb840feb4,197980076,0,0x0,8
tick,0x7ffdb840feb4,197994900,0,0x0,8
tick,0x7ffdb840feb4,198010087,0,0x0,8
tick,0x7ffdb840feb4,198025918,0,0x0,8
tick,0x7ffdb840feb4,198040886,0,0x0,8
tick,0x7ffdb840feb4,198056906,0,0x0,8
tick,0x7ffdb840feb4,198072911,0,0x0,8
tick,0x7ffdb840feb4,198087900,0,0x0,8
tick,0x7ffdb840feb4,198102859,0,0x0,8
tick,0x7ffdb840feb4,198118092,0,0x0,8
tick,0x7ffdb840feb4,198133723,0,0x0,8
tick,0x7ffdb840feb4,198149109,0,0x0,8
tick,0x7ffdb840feb4,198164100,0,0x0,8
tick,0x7ffdb840feb4,198179506,0,0x0,8
tick,0x7ffdb840feb4,198194914,0,0x0,8
tick,0x7ffdb840feb4,198210911,0,0x0,8
tick,0x7ffdb840feb4,198226933,0,0x0,8
tick,0x7ffdb840feb4,198241881,0,0x0,8
tick,0x7ffdb840feb4,198256884,0,0x0,8
tick,0x7ffdb840feb4,198272113,0,0x0,8
tick,0x7ffdb840feb4,198287940,0,0x0,8
tick,0x7ffdb840feb4,198303621,0,0x0,8
tick,0x7ffdb840feb4,198319115,0,0x0,8
tick,0x7ffdb840feb4,198334500,0,0x0,8
tick,0x7ffdb840feb4,198349951,0,0x0,8
tick,0x7ffdb840feb4,198365469,0,0x0,8
tick,0x7ffdb840feb4,198381118,0,0x0,8
tick,0x7ffdb840feb4,198396726,0,0x0,8
tick,0x7ffdb840feb4,198412517,0,0x0,8
tick,0x7ffdb840feb4,198427978,0,0x0,8
tick,0x7ffdb840feb4,198442901,0,0x0,8
tick,0x7ffdb840feb4,198458948,0,0x0,8
tick,0x7ffdb840feb4,198474689,0,0x0,8
tick,0x7ffdb840feb4,198490141,0,0x0,8
tick,0x7ffdb840feb4,198505652,0,0x0,8
tick,0x7ffdb840feb4,198520779,0,0x0,8
tick,0x7ffdb840feb4,198535965,0,0x0,8
tick,0x7ffdb840feb4,198551968,0,0x0,8
tick,0x7ffdb840feb4,198566976,0,0x0,8
tick,0x7ffdb840feb4,198582658,0,0x0,8
tick,0x7ffdb840feb4,198597977,0,0x0,8
tick,0x7ffdb840feb4,198613138,0,0x0,8
tick,0x7ffdb840feb4,198627984,0,0x0,8
tick,0x7ffdb840feb4,198643585,0,0x0,8
tick,0x7ffdb840feb4,198659117,0,0x0,8
tick,0x7ffdb840feb4,198675136,0,0x0,8
tick,0x7ffdb840feb4,198690638,0,0x0,8
tick,0x7ffdb840feb4,198705993,0,0x0,8
tick,0x7ffdb840feb4,198721174,0,0x0,8
tick,0x7ffdb840feb4,198735990,0,0x0,8
tick,0x7ffdb840feb4,198751994,0,0x0,8
tick,0x7ffdb840feb4,198767997,0,0x0,8
tick,0x7ffdb840feb4,198783508,0,0x0,8
tick,0x7ffdb840feb4,198799173,0,0x0,8
tick,0x7ffdb840feb4,198814814,0,0x0,8
tick,0x7ffdb840feb4,198830812,0,0x0,8
tick,0x7ffdb840feb4,198846813,0,0x0,8
tick,0x7ffdb840feb4,198861822,0,0x0,8
tick,0x7ffdb840feb4,198877014,0,0x0,8
tick,0x7ffdb840feb4,198892186,0,0x0,8
tick,0x7ffdb840feb4,198908015,0,0x0,8
tick,0x7ffdb840feb4,198924024,0,0x0,8
tick,0x7ffdb840feb4,198939367,0,0x0,8
tick,0x7ffdb840feb4,198955034,0,0x0,8
tick,0x7ffdb840feb4,198970826,0,0x0,8
tick,0x7ffdb840feb4,198986833,0,0x0,8
tick,0x7ffdb840feb4,199002202,0,0x0,8
tick,0x7ffdb840feb4,199018031,0,0x0,8
tick,0x7ffdb840feb4,199033507,0,0x0,8
tick,0x7ffdb840feb4,199049218,0,0x0,8
tick,0x7ffdb840feb4,199064836,0,0x0,8
tick,0x7ffdb840feb4,199080216,0,0x0,8
tick,0x7ffdb840feb4,199095349,0,0x0,8
tick,0x7ffdb840feb4,199111352,0,0x0,8
tick,0x7ffdb840feb4,199127036,0,0x0,8
tick,0x7ffdb840feb4,199142677,0,0x0,8
tick,0x7ffdb840feb4,199158045,0,0x0,8
tick,0x7ffdb840feb4,199173836,0,0x0,8
tick,0x7ffdb840feb4,199189237,0,0x0,8
tick,0x7ffdb840feb4,199205232,0,0x0,8
tick,0x7ffdb840feb4,199220654,0,0x0,8
tick,0x7ffdb840feb4,199236063,0,0x0,8
tick,0x7ffdb840feb4,199251227,0,0x0,8
tick,0x7ffdb840feb4,199267066,0,0x0,8
tick,0x7ffdb840feb4,199282505,0,0x0,8
tick,0x7ffdb840feb4,199298142,0,0x0,8
tick,0x7ffdb840feb4,199313488,0,0x0,8
tick,0x7ffdb840feb4,199329045,0,0x0,8
tick,0x7ffdb840feb4,199345085,0,0x0,8
tick,0x7ffdb840feb4,199360250,0,0x0,8
tick,0x7ffdb840feb4,199375847,0,0x0,8
tick,0x7ffdb840feb4,199391849,0,0x0,8
tick,0x7ffdb840feb4,199407734,0,0x0,8
tick,0x7ffdb840feb4,199423708,0,0x0,8
tick,0x7ffdb840feb4,199439246,0,0x0,8
tick,0x7ffdb840feb4,199454090,0,0x0,8
tick,0x7ffdb840feb4,199469286,0,0x0,8
tick,0x7ffdb840feb4,199485265,0,0x0,8
tick,0x7ffdb840feb4,199500689,0,0x0,8
tick,0x7ffdb840feb4,199515844,0,0x0,8
tick,0x7ffdb840feb4,199531061,0,0x0,8
tick,0x7ffdb840feb4,199547088,0,0x0,8
tick,0x7ffdb840feb4,199562264,0,0x0,8
tick,0x7ffdb840feb4,199577915,0,0x0,8
tick,0x7ffdb840feb4,199593067,0,0x0,8
tick,0x7ffdb840feb4,199609103,0,0x0,8
tick,0x7ffdb840feb4,199624726,0,0x0,8
tick,0x7ffdb840feb4,199640272,0,0x0,8
tick,0x7ffdb840feb4,199655422,0,0x0,8
tick,0x7ffdb840feb4,199671104,0,0x0,8
tick,0x7ffdb840feb4,199687107,0,0x0,8
tick,0x7ffdb840feb4,199703128,0,0x0,8
tick,0x7ffdb840feb4,199718117,0,0x0,8
tick,0x7ffdb840feb4,199733512,0,0x0,8
tick,0x7ffdb840feb4,199749294,0,0x0,8
tick,0x7ffdb840feb4,199765298,0,0x0,8
tick,0x7ffdb840feb4,199780503,0,0x0,8
tick,0x7ffdb840feb4,199795470,0,0x0,8
tick,0x7ffdb840feb4,199811331,0,0x0,8
tick,0x7ffdb840feb4,199825788,0,0x0,8
tick,0x7ffdb840feb4,199841788,0,0x0,8
tick,0x7ffdb840feb4,199857788,0,0x0,8
tick,0x7ffdb840feb4,199872795,0,0x0,8
tick,0x7ffdb840feb4,199888096,0,0x0,8
tick,0x7ffdb840feb4,199903745,0,0x0,8
tick,0x7ffdb840feb4,199919312,0,0x0,8
tick,0x7ffdb840feb4,199934509,0,0x0,8
tick,0x7ffdb840feb4,199950064,0,0x0,8
tick,0x7ffdb840feb4,199965299,0,0x0,8
tick,0x7ffdb840feb4,199980456,0,0x0,8
tick,0x7ffdb840feb4,199996489,0,0x0,8
tick,0x7ffdb840feb4,200011927,0,0x0,8
tick,0x7ffdb840feb4,200027158,0,0x0,8
tick,0x7ffdb840feb4,200041784,0,0x0,8
tick,0x7ffdb840feb4,200057152,0,0x0,8
tick,0x7ffdb840feb4,200072810,0,0x0,8
tick,0x7ffdb840feb4,200088154,0,0x0,8
tick,0x7ffdb840feb4,200103808,0,0x0,8
tick,0x7ffdb840feb4,200119799,0,0x0,8
tick,0x7ffdb840feb4,200135516,0,0x0,8
tick,0x7ffdb840feb4,200151161,0,0x0,8
tick,0x7ffdb840feb4,200167161,0,0x0,8
tick,0x7ffdb840feb4,200182755,0,0x0,8
tick,0x7ffdb840feb4,200198170,0,0x0,8
tick,0x7ffdb840feb4,200213173,0,0x0,8
tick,0x7ffdb840feb4,200228339,0,0x0,8
tick,0x7ffdb840feb4,200244359,0,0x0,8
tick,0x7ffdb840feb4,200259346,0,0x0,8
tick,0x7ffdb840feb4,200275188,0,0x0,8
tick,0x7ffdb840feb4,200291192,0,0x0,8
tick,0x7ffdb840feb4,200307183,0,0x0,8
tick,0x7ffdb840feb4,200322798,0,0x0,8
tick,0x7ffdb840feb4,200338867,0,0x0,8
tick,0x7ffdb840feb4,200354895,0,0x0,8
tick,0x7ffdb840feb4,200370367,0,0x0,8
tick,0x7ffdb840feb4,200386199,0,0x0,8
tick,0x7ffdb840feb4,200401732,0,0x0,8
tick,0x7ffdb840feb4,200417728,0,0x0,8
tick,0x7ffdb840feb4,200433736,0,0x0,8
tick,0x7ffdb840feb4,200449751,0,0x0,8
tick,0x7ffdb840feb4,200464786,0,0x0,8
tick,0x7ffdb840feb4,200480203,0,0x0,8
tick,0x7ffdb840feb4,200495547,0,0x0,8
tick,0x7ffdb840feb4,200511210,0,0x0,8
tick,0x7ffdb840feb4,200527205,0,0x0,8
tick,0x7ffdb840feb4,200542775,0,0x0,8
tick,0x7ffdb840feb4,200558208,0,0x0,8
tick,0x7ffdb840feb4,200573214,0,0x0,8
tick,0x7ffdb840feb4,200588392,0,0x0,8
tick,0x7ffdb840feb4,200603553,0,0x0,8
tick,0x7ffdb840feb4,200619233,0,0x0,8
tick,0x7ffdb840feb4,200635224,0,0x0,8
tick,0x7ffdb840feb4,200650346,0,0x0,8
tick,0x7ffdb840feb4,200665852,0,0x0,8
tick,0x7ffdb840feb4,200680407,0,0x0,8
tick,0x7ffdb840feb4,200695570,0,0x0,8
tick,0x7ffdb840feb4,200711566,0,0x0,8
tick,0x7ffdb840feb4,200727233,0,0x0,8
tick,0x7ffdb840feb4,200742683,0,0x0,8
tick,0x7ffdb840feb4,200758230,0,0x0,8
tick,0x7ffdb840feb4,200774225,0,0x0,8
tick,0x7ffdb840feb4,200789443,0,0x0,8
tick,0x7ffdb840feb4,200804419,0,0x0,8
tick,0x7ffdb840feb4,200820238,0,0x0,8
tick,0x7ffdb840feb4,200836239,0,0x0,8
tick,0x7ffdb840feb4,200852237,0,0x0,8
tick,0x7ffdb840feb4,200868247,0,0x0,8
tick,0x7ffdb840feb4,200884248,0,0x0,8
tick,0x7ffdb840feb4,200900264,0,0x0,8
tick,0x7ffdb840feb4,200916259,0,0x0,8
tick,0x7ffdb840feb4,200931510,0,0x0,8
tick,0x7ffdb840feb4,200947258,0,0x0,8
tick,0x7ffdb840feb4,200963265,0,0x0,8
tick,0x7ffdb840feb4,200978255,0,0x0,8
tick,0x7ffdb840feb4,200994271,0,0x0,8
tick,0x7ffdb840feb4,201009270,0,0x0,8
tick,0x7ffdb840feb4,201024867,0,0x0,8
tick,0x7ffdb840feb4,201040249,0,0x0,8
tick,0x7ffdb840feb4,201055251,0,0x0,8
tick,0x7ffdb840feb4,201070451,0,0x0,8
tick,0x7ffdb840feb4,201086448,0,0x0,8
tick,0x7ffdb840feb4,201101902,0,0x0,8
tick,0x7ffdb840feb4,201117258,0,0x0,8
tick,0x7ffdb840feb4,201133259,0,0x0,8
tick,0x7ffdb840feb4,201148469,0,0x0,8
tick,0x7ffdb840feb4,201164266,0,0x0,8
tick,0x7ffdb840feb4,201178919,0,0x0,8
tick,0x7ffdb840feb4,201194311,0,0x0,8
tick,0x7ffdb840feb4,201209466,0,0x0,8
tick,0x7ffdb840feb4,201224813,0,0x0,8
tick,0x7ffdb840feb4,201240890,0,0x0,8
tick,0x7ffdb840feb4,201256297,0,0x0,8
tick,0x7ffdb840feb4,201272293,0,0x0,8
tick,0x7ffdb840feb4,201287894,0,0x0,8
tick,0x7ffdb840feb4,201303827,0,0x0,8
tick,0x7ffdb840feb4,201318469,0,0x0,8
tick,0x7ffdb840feb4,201334322,0,0x0,8
tick,0x7ffdb840feb4,201349481,0,0x0,8
tick,0x7ffdb840feb4,201364322,0,0x0,8
tick,0x7ffdb840feb4,201380089,0,0x0,8
tick,0x7ffdb840feb4,201395318,0,0x0,8
tick,0x7ffdb840feb4,201411002,0,0x0,8
tick,0x7ffdb840feb4,201426309,0,0x0,8
tick,0x7ffdb840feb4,201441745,0,0x0,8
tick,0x7ffdb840feb4,201457320,0,0x0,8
tick,0x7ffdb840feb4,201472325,0,0x0,8
tick,0x7ffdb840feb4,201487498,0,0x0,8
tick,0x7ffdb840feb4,201503326,0,0x0,8
tick,0x7ffdb840feb4,201518333,0,0x0,8
tick,0x7ffdb840feb4,201534303,0,0x0,8
tick,0x7ffdb840feb4,201549515,0,0x0,8
tick,0x7ffdb840feb4,201564506,0,0x0,8
tick,0x7ffdb840feb4,201580016,0,0x0,8
tick,0x7ffdb840feb4,201595344,0,0x0,8
tick,0x7ffdb840feb4,201610515,0,0x0,8
tick,0x7ffdb840feb4,201625777,0,0x0,8
tick,0x7ffdb840feb4,201640989,0,0x0,8
tick,0x7ffdb840feb4,201656345,0,0x0,8
tick,0x7ffdb840feb4,201672361,0,0x0,8
tick,0x7ffdb840feb4,201687347,0,0x0,8
tick,0x7ffdb840feb4,201702083,0,0x0,8
tick,0x7ffdb840feb4,201717355,0,0x0,8
tick,0x7ffdb840feb4,201733315,0,0x0,8
tick,0x7ffdb840feb4,201748193,0,0x0,8
tick,0x7ffdb840feb4,201763549,0,0x0,8
tick,0x7ffdb840feb4,201779403,0,0x0,8
tick,0x7ffdb840feb4,201794421,0,0x0,8
tick,0x7ffdb840feb4,201809700,0,0x0,8
tick,0x7ffdb840feb4,201824837,0,0x0,8
tick,0x7ffdb840feb4,201840552,0,0x0,8
tick,0x7ffdb840feb4,201855543,0,0x0,8
tick,0x7ffdb840feb4,201871552,0,0x0,8
tick,0x7ffdb840feb4,201886545,0,0x0,8
tick,0x7ffdb840feb4,201901834,0,0x0,8
tick,0x7ffdb840feb4,201917379,0,0x0,8
tick,0x7ffdb840feb4,201932382,0,0x0,8
tick,0x7ffdb840feb4,201948128,0,0x0,8
tick,0x7ffdb840feb4,201963048,0,0x0,8
tick,0x7ffdb840feb4,201978146,0,0x0,8
tick,0x7ffdb840feb4,201993142,0,0x0,8
tick,0x7ffdb840feb4,202009137,0,0x0,8
tick,0x7ffdb840feb4,202024235,0,0x0,8
tick,0x7ffdb840feb4,202039383,0,0x0,8
tick,0x7ffdb840feb4,202055390,0,0x0,8
tick,0x7ffdb840feb4,202070395,0,0x0,8
tick,0x7ffdb840feb4,202085406,0,0x0,8
tick,0x7ffdb840feb4,202101263,0,0x0,8
tick,0x7ffdb840feb4,202116402,0,0x0,8
tick,0x7ffdb840feb4,202132502,0,0x0,8
tick,0x7ffdb840feb4,202148407,0,0x0,8
tick,0x7ffdb840feb4,202164510,0,0x0,8
tick,0x7ffdb840feb4,202179510,0,0x0,8
tick,0x7ffdb840feb4,202194417,0,0x0,8
tick,0x7ffdb840feb4,202209374,0,0x0,8
tick,0x7ffdb840feb4,202225271,0,0x0,8
tick,0x7ffdb840feb4,202240894,0,0x0,8
tick,0x7ffdb840feb4,202256415,0,0x0,8
tick,0x7ffdb840feb4,202271592,0,0x0,8
tick,0x7ffdb840feb4,202286418,0,0x0,8
tick,0x7ffdb840feb4,202301901,0,0x0,8
tick,0x7ffdb840feb4,202317425,0,0x0,8
tick,0x7ffdb840feb4,202332512,0,0x0,8
tick,0x7ffdb840feb4,202348189,0,0x0,8
tick,0x7ffdb840feb4,202363617,0,0x0,8
tick,0x7ffdb840feb4,202378436,0,0x0,8
tick,0x7ffdb840feb4,202393613,0,0x0,8
tick,0x7ffdb840feb4,202409611,0,0x0,8
tick,0x7ffdb840feb4,202424863,0,0x0,8
tick,0x7ffdb840feb4,202440618,0,0x0,8
tick,0x7ffdb840feb4,202456309,0,0x0,8
tick,0x7ffdb840feb4,202471013,0,0x0,8
tick,0x7ffdb840feb4,202486195,0,0x0,8
tick,0x7ffdb840feb4,202501432,0,0x0,8
tick,0x7ffdb840feb4,202517033,0,0x0,8
tick,0x7ffdb840feb4,202532454,0,0x0,8
tick,0x7ffdb840feb4,202548022,0,0x0,8
tick,0x7ffdb840feb4,202563866,0,0x0,8
tick,0x7ffdb840feb4,202579036,0,0x0,8
tick,0x7ffdb840feb4,202594036,0,0x0,8
tick,0x7ffdb840feb4,202609629,0,0x0,8
tick,0x7ffdb840feb4,202624900,0,0x0,8
tick,0x7ffdb840feb4,202640162,0,0x0,8
tick,0x7ffdb840feb4,202655650,0,0x0,8
tick,0x7ffdb840feb4,202671152,0,0x0,8
tick,0x7ffdb840feb4,202686071,0,0x0,8
tick,0x7ffdb840feb4,202701537,0,0x0,8
tick,0x7ffdb840feb4,202717475,0,0x0,8
tick,0x7ffdb840feb4,202732640,0,0x0,8
tick,0x7ffdb840feb4,202748188,0,0x0,8
tick,0x7ffdb840feb4,202763479,0,0x0,8
tick,0x7ffdb840feb4,202778477,0,0x0,8
tick,0x7ffdb840feb4,202794200,0,0x0,8
tick,0x7ffdb840feb4,202809660,0,0x0,8
tick,0x7ffdb840feb4,202824881,0,0x0,8
tick,0x7ffdb840feb4,202840663,0,0x0,8
tick,0x7ffdb840feb4,202855659,0,0x0,8
tick,0x7ffdb840feb4,202870669,0,0x0,8
tick,0x7ffdb840feb4,202886673,0,0x0,8
tick,0x7ffdb840feb4,202901616,0,0x0,8
tick,0x7ffdb840feb4,202917495,0,0x0,8
tick,0x7ffdb840feb4,202933395,0,0x0,8
tick,0x7ffdb840feb4,202948693,0,0x0,8
tick,0x7ffdb840feb4,202964157,0,0x0,8
tick,0x7ffdb840feb4,202979851,0,0x0,8
tick,0x7ffdb840feb4,202995628,0,0x0,8
tick,0x7ffdb840feb4,203011153,0,0x0,8
tick,0x7ffdb840feb4,203026507,0,0x0,8
tick,0x7ffdb840feb4,203042526,0,0x0,8
tick,0x7ffdb840feb4,203058510,0,0x0,8
tick,0x7ffdb840feb4,203073678,0,0x0,8
tick,0x7ffdb840feb4,203088506,0,0x0,8
tick,0x7ffdb840feb4,203103676,0,0x0,8
tick,0x7ffdb840feb4,203119693,0,0x0,8
tick,0x7ffdb840feb4,203134662,0,0x0,8
tick,0x7ffdb840feb4,203150168,0,0x0,8
tick,0x7ffdb840feb4,203166255,0,0x0,8
tick,0x7ffdb840feb4,203181528,0,0x0,8
tick,0x7ffdb840feb4,203197331,0,0x0,8
tick,0x7ffdb840feb4,203212529,0,0x0,8
tick,0x7ffdb840feb4,203227669,0,0x0,8
tick,0x7ffdb840feb4,203243674,0,0x0,8
tick,0x7ffdb840feb4,203258532,0,0x0,8
tick,0x7ffdb840feb4,203273694,0,0x0,8
tick,0x7ffdb840feb4,203289709,0,0x0,8
tick,0x7ffdb840feb4,203304693,0,0x0,8
tick,0x7ffdb840feb4,203319723,0,0x0,8
tick,0x7ffdb840feb4,203335673,0,0x0,8
tick,0x7ffdb840feb4,203350675,0,0x0,8
tick,0x7ffdb840feb4,203366557,0,0x0,8
tick,0x7ffdb840feb4,203382538,0,0x0,8
tick,0x7ffdb840feb4,203397972,0,0x0,8
tick,0x7ffdb840feb4,203413783,0,0x0,8
tick,0x7ffdb840feb4,203429733,0,0x0,8
tick,0x7ffdb840feb4,203445747,0,0x0,8
tick,0x7ffdb840feb4,203461752,0,0x0,8
tick,0x7ffdb840feb4,203477034,0,0x0,8
tick,0x7ffdb840feb4,203492568,0,0x0,8
tick,0x7ffdb840feb4,203508603,0,0x0,8
tick,0x7ffdb840feb4,203524025,0,0x0,8
tick,0x7ffdb840feb4,203539395,0,0x0,8
tick,0x7ffdb840feb4,203555404,0,0x0,8
tick,0x7ffdb840feb4,203571391,0,0x0,8
tick,0x7ffdb840feb4,203586574,0,0x0,8
tick,0x7ffdb840feb4,203601776,0,0x0,8
tick,0x7ffdb840feb4,203616582,0,0x0,8
tick,0x7ffdb840feb4,203632407,0,0x0,8
tick,0x7ffdb840feb4,203647582,0,0x0,8
tick,0x7ffdb840feb4,203662766,0,0x0,8
tick,0x7ffdb840feb4,203678587,0,0x0,8
tick,0x7ffdb840feb4,203693591,0,0x0,8
tick,0x7ffdb840feb4,203708763,0,0x0,8
tick,0x7ffdb840feb4,203724463,0,0x0,8
tick,0x7ffdb840feb4,203739470,0,0x0,8
tick,0x7ffdb840feb4,203754718,0,0x0,8
tick,0x7ffdb840feb4,203770220,0,0x0,8
tick,0x7ffdb840feb4,203784930,0,0x0,8
tick,0x7ffdb840feb4,203799778,0,0x0,8
tick,0x7ffdb840feb4,203815882,0,0x0,8
tick,0x7ffdb840feb4,203830535,0,0x0,8
tick,0x7ffdb840feb4,203846500,0,0x0,8
tick,0x7ffdb840feb4,203861506,0,0x0,8
tick,0x7ffdb840feb4,203876511,0,0x0,8
tick,0x7ffdb840feb4,203892510,0,0x0,8
tick,0x7ffdb840feb4,203908615,0,0x0,8
tick,0x7ffdb840feb4,203923802,0,0x0,8
tick,0x7ffdb840feb4,203939532,0,0x0,8
tick,0x7ffdb840feb4,203954533,0,0x0,8
tick,0x7ffdb840feb4,203970533,0,0x0,8
tick,0x7ffdb840feb4,203986532,0,0x0,8
tick,0x7ffdb840feb4,204000969,0,0x0,8
tick,0x7ffdb840feb4,204016934,0,0x0,8
tick,0x7ffdb840feb4,204032806,0,0x0,8
tick,0x7ffdb840feb4,204048580,0,0x0,8
tick,0x7ffdb840feb4,204063936,0,0x0,8
tick,0x7ffdb840feb4,204079586,0,0x0,8
tick,0x7ffdb840feb4,204094832,0,0x0,8
tick,0x7ffdb840feb4,204109960,0,0x0,8
tick,0x7ffdb840feb4,204125844,0,0x0,8
tick,0x7ffdb840feb4,204141631,0,0x0,8
tick,0x7ffdb840feb4,204157654,0,0x0,8
tick,0x7ffdb840feb4,204172823,0,0x0,8
tick,0x7ffdb840feb4,204188648,0,0x0,8
tick,0x7ffdb840feb4,204203661,0,0x0,8
tick,0x7ffdb840feb4,204218820,0,0x0,8
tick,0x7ffdb840feb4,204234825,0,0x0,8
tick,0x7ffdb840feb4,204249835,0,0x0,8
tick,0x7ffdb840feb4,204264855,0,0x0,8
tick,0x7ffdb840feb4,204279829,0,0x0,8
tick,0x7ffdb840feb4,204295307,0,0x0,8
tick,0x7ffdb840feb4,204310492,0,0x0,8
tick,0x7ffdb840feb4,204326503,0,0x0,8
tick,0x7ffdb840feb4,204341509,0,0x0,8
tick,0x7ffdb840feb4,204356676,0,0x0,8
tick,0x7ffdb840feb4,204371844,0,0x0,8
tick,0x7ffdb840feb4,204387678,0,0x0,8
tick,0x7ffdb840feb4,204403381,0,0x0,8
tick,0x7ffdb840feb4,204418532,0,0x0,8
tick,0x7ffdb840feb4,204434536,0,0x0,8
tick,0x7ffdb840feb4,204449857,0,0x0,8
tick,0x7ffdb840feb4,204464874,0,0x0,8
tick,0x7ffdb840feb4,204480030,0,0x0,8
tick,0x7ffdb840feb4,204495688,0,0x0,8
tick,0x7ffdb840feb4,204510868,0,0x0,8
tick,0x7ffdb840feb4,204526911,0,0x0,8
tick,0x7ffdb840feb4,204542835,0,0x0,8
tick,0x7ffdb840feb4,204558850,0,0x0,8
tick,0x7ffdb840feb4,204574561,0,0x0,8
tick,0x7ffdb840feb4,204589872,0,0x0,8
tick,0x7ffdb840feb4,204604800,0,0x0,8
tick,0x7ffdb840feb4,204620801,0,0x0,8
tick,0x7ffdb840feb4,204636550,0,0x0,8
tick,0x7ffdb840feb4,204651875,0,0x0,8
tick,0x7ffdb840feb4,204667707,0,0x0,8
tick,0x7ffdb840feb4,204682538,0,0x0,8
tick,0x7ffdb840feb4,204697705,0,0x0,8
tick,0x7ffdb840feb4,204713713,0,0x0,8
tick,0x7ffdb840feb4,204728717,0,0x0,8
tick,0x7ffdb840feb4,204744190,0,0x0,8
tick,0x7ffdb840feb4,204759892,0,0x0,8
tick,0x7ffdb840feb4,204774720,0,0x0,8
tick,0x7ffdb840feb4,204789898,0,0x0,8
tick,0x7ffdb840feb4,204805209,0,0x0,8
tick,0x7ffdb840feb4,204820886,0,0x0,8
tick,0x7ffdb840feb4,204836557,0,0x0,8
tick,0x7ffdb840feb4,204851903,0,0x0,8
tick,0x7ffdb840feb4,204866909,0,0x0,8
tick,0x7ffdb840feb4,204882905,0,0x0,8
tick,0x7ffdb840feb4,204898922,0,0x0,8
tick,0x7ffdb840feb4,204914876,0,0x0,8
tick,0x7ffdb840feb4,204930034,0,0x0,8
tick,0x7ffdb840feb4,204944981,0,0x0,8
tick,0x7ffdb840feb4,204960417,0,0x0,8
tick,0x7ffdb840feb4,204976429,0,0x0,8
tick,0x7ffdb840feb4,204992436,0,0x0,8
tick,0x7ffdb840feb4,205008442,0,0x0,8
tick,0x7ffdb840feb4,205023604,0,0x0,8
tick,0x7ffdb840feb4,205038432,0,0x0,8
tick,0x7ffdb840feb4,205054428,0,0x0,8
tick,0x7ffdb840feb4,205070432,0,0x0,8
tick,0x7ffdb840feb4,205086433,0,0x0,8
tick,0x7ffdb840feb4,205101925,0,0x0,8
tick,0x7ffdb840feb4,205117772,0,0x0,8
tick,0x7ffdb840feb4,205133535,0,0x0,8
tick,0x7ffdb840feb4,205148764,0,0x0,8
tick,0x7ffdb840feb4,205163769,0,0x0,8
tick,0x7ffdb840feb4,205178944,0,0x0,8
tick,0x7ffdb840feb4,205194772,0,0x0,8
tick,0x7ffdb840feb4,205209937,0,0x0,8
tick,0x7ffdb840feb4,205224995,0,0x0,8
tick,0x7ffdb840feb4,205240906,0,0x0,8
tick,0x7ffdb840feb4,205255945,0,0x0,8
tick,0x7ffdb840feb4,205271100,0,0x0,8
tick,0x7ffdb840feb4,205286774,0,0x0,8
tick,0x7ffdb840feb4,205302385,0,0x0,8
tick,0x7ffdb840feb4,205317790,0,0x0,8
tick,0x7ffdb840feb4,205333800,0,0x0,8
tick,0x7ffdb840feb4,205348973,0,0x0,8
tick,0x7ffdb840feb4,205364136,0,0x0,8
tick,0x7ffdb840feb4,205379978,0,0x0,8
tick,0x7ffdb840feb4,205395970,0,0x0,8
tick,0x7ffdb840feb4,205411127,0,0x0,8
tick,0x7ffdb840feb4,205425993,0,0x0,8
tick,0x7ffdb840feb4,205441141,0,0x0,8
tick,0x7ffdb840feb4,205456806,0,0x0,8
tick,0x7ffdb840feb4,205471976,0,0x0,8
tick,0x7ffdb840feb4,205487975,0,0x0,8
tick,0x7ffdb840feb4,205503444,0,0x0,8
tick,0x7ffdb840feb4,205518808,0,0x0,8
tick,0x7ffdb840feb4,205534538,0,0x0,8
tick,0x7ffdb840feb4,205550004,0,0x0,8
tick,0x7ffdb840feb4,205565487,0,0x0,8
tick,0x7ffdb840feb4,205581604,0,0x0,8
tick,0x7ffdb840feb4,205596814,0,0x0,8
tick,0x7ffdb840feb4,205612828,0,0x0,8
tick,0x7ffdb840feb4,205627826,0,0x0,8
tick,0x7ffdb840feb4,205642998,0,0x0,8
tick,0x7ffdb840feb4,205658822,0,0x0,8
tick,0x7ffdb840feb4,205673826,0,0x0,8
tick,0x7ffdb840feb4,205689003,0,0x0,8
tick,0x7ffdb840feb4,205705003,0,0x0,8
tick,0x7ffdb840feb4,205720471,0,0x0,8
tick,0x7ffdb840feb4,205735625,0,0x0,8
tick,0x7ffdb840feb4,205751009,0,0x0,8
tick,0x7ffdb840feb4,205766892,0,0x0,8
tick,0x7ffdb840feb4,205782541,0,0x0,8
tick,0x7ffdb840feb4,205797841,0,0x0,8
tick,0x7ffdb840feb4,205812840,0,0x0,8
tick,0x7ffdb840feb4,205828849,0,0x0,8
tick,0x7ffdb840feb4,205844027,0,0x0,8
tick,0x7ffdb840feb4,205858824,0,0x0,8
tick,0x7ffdb840feb4,205874838,0,0x0,8
tick,0x7ffdb840feb4,205890832,0,0x0,8
tick,0x7ffdb840feb4,205906838,0,0x0,8
tick,0x7ffdb840feb4,205922032,0,0x0,8
tick,0x7ffdb840feb4,205936848,0,0x0,8
tick,0x7ffdb840feb4,205952038,0,0x0,8
tick,0x7ffdb840feb4,205967840,0,0x0,8
tick,0x7ffdb840feb4,205983548,0,0x0,8
tick,0x7ffdb840feb4,205998844,0,0x0,8
tick,0x7ffdb840feb4,206014455,0,0x0,8
tick,0x7ffdb840feb4,206030038,0,0x0,8
tick,0x7ffdb840feb4,206045226,0,0x0,8
tick,0x7ffdb840feb4,206060999,0,0x0,8
tick,0x7ffdb840feb4,206076012,0,0x0,8
tick,0x7ffdb840feb4,206091183,0,0x0,8
tick,0x7ffdb840feb4,206106881,0,0x0,8
tick,0x7ffdb840feb4,206122052,0,0x0,8
tick,0x7ffdb840feb4,206137843,0,0x0,8
tick,0x7ffdb840feb4,206153696,0,0x0,8
tick,0x7ffdb840feb4,206169368,0,0x0,8
tick,0x7ffdb840feb4,206185068,0,0x0,8
tick,0x7ffdb840feb4,206200232,0,0x0,8
tick,0x7ffdb840feb4,206215821,0,0x0,8
tick,0x7ffdb840feb4,206231072,0,0x0,8
tick,0x7ffdb840feb4,206246401,0,0x0,8
tick,0x7ffdb840feb4,206261736,0,0x0,8
tick,0x7ffdb840feb4,206276895,0,0x0,8
tick,0x7ffdb840feb4,206292713,0,0x0,8
tick,0x7ffdb840feb4,206307904,0,0x0,8
tick,0x7ffdb840feb4,206322907,0,0x0,8
tick,0x7ffdb840feb4,206338828,0,0x0,8
tick,0x7ffdb840feb4,206354107,0,0x0,8
tick,0x7ffdb840feb4,206369109,0,0x0,8
tick,0x7ffdb840feb4,206385052,0,0x0,8
tick,0x7ffdb840feb4,206400984,0,0x0,8
tick,0x7ffdb840feb4,206416805,0,0x0,8
tick,0x7ffdb840feb4,206432487,0,0x0,8
tick,0x7ffdb840feb4,206448131,0,0x0,8
tick,0x7ffdb840feb4,206464059,0,0x0,8
tick,0x7ffdb840feb4,206479092,0,0x0,8
tick,0x7ffdb840feb4,206494925,0,0x0,8
tick,0x7ffdb840feb4,206510104,0,0x0,8
tick,0x7ffdb840feb4,206525840,0,0x0,8
tick,0x7ffdb840feb4,206541879,0,0x0,8
tick,0x7ffdb840feb4,206556878,0,0x0,8
tick,0x7ffdb840feb4,206572112,0,0x0,8
tick,0x7ffdb840feb4,206588109,0,0x0,8
tick,0x7ffdb840feb4,206603836,0,0x0,8
tick,0x7ffdb840feb4,206619116,0,0x0,8
tick,0x7ffdb840feb4,206634122,0,0x0,8
tick,0x7ffdb840feb4,206650117,0,0x0,8
tick,0x7ffdb840feb4,206666051,0,0x0,8
tick,0x7ffdb840feb4,206681523,0,0x0,8
tick,0x7ffdb840feb4,206696946,0,0x0,8
tick,0x7ffdb840feb4,206712129,0,0x0,8
tick,0x7ffdb840feb4,206727836,0,0x0,8
tick,0x7ffdb840feb4,206743848,0,0x0,8
tick,0x7ffdb840feb4,206759880,0,0x0,8
tick,0x7ffdb840feb4,206775156,0,0x0,8
tick,0x7ffdb840feb4,206791130,0,0x0,8
tick,0x7ffdb840feb4,206807148,0,0x0,8
tick,0x7ffdb840feb4,206823138,0,0x0,8
tick,0x7ffdb840feb4,206838843,0,0x0,8
tick,0x7ffdb840feb4,206853873,0,0x0,8
tick,0x7ffdb840feb4,206869145,0,0x0,8
tick,0x7ffdb840feb4,206885148,0,0x0,8
tick,0x7ffdb840feb4,206901154,0,0x0,8
tick,0x7ffdb840feb4,206917155,0,0x0,8
tick,0x7ffdb840feb4,206932546,0,0x0,8
tick,0x7ffdb840feb4,206947980,0,0x0,8
tick,0x7ffdb840feb4,206963894,0,0x0,8
tick,0x7ffdb840feb4,206978985,0,0x0,8
tick,0x7ffdb840feb4,206994993,0,0x0,8
tick,0x7ffdb840feb4,207010167,0,0x0,8
tick,0x7ffdb840feb4,207026178,0,0x0,8
tick,0x7ffdb840feb4,207041857,0,0x0,8
tick,0x7ffdb840feb4,207056532,0,0x0,8
tick,0x7ffdb840feb4,207071878,0,0x0,8
tick,0x7ffdb840feb4,207087714,0,0x0,8
tick,0x7ffdb840feb4,207103166,0,0x0,8
tick,0x7ffdb840feb4,207118736,0,0x0,8
tick,0x7ffdb840feb4,207133744,0,0x0,8
tick,0x7ffdb840feb4,207149009,0,0x0,8
tick,0x7ffdb840feb4,207164878,0,0x0,8
tick,0x7ffdb840feb4,207180013,0,0x0,8
tick,0x7ffdb840feb4,207195252,0,0x0,8
tick,0x7ffdb840feb4,207210583,0,0x0,8
tick,0x7ffdb840feb4,207226113,0,0x0,8
tick,0x7ffdb840feb4,207241860,0,0x0,8
tick,0x7ffdb840feb4,207257871,0,0x0,8
tick,0x7ffdb840feb4,207272793,0,0x0,8
tick,0x7ffdb840feb4,207288780,0,0x0,8
tick,0x7ffdb840feb4,207304107,0,0x0,8
tick,0x7ffdb840feb4,207319195,0,0x0,8
tick,0x7ffdb840feb4,207335025,0,0x0,8
tick,0x7ffdb840feb4,207350212,0,0x0,8
tick,0x7ffdb840feb4,207365887,0,0x0,8
tick,0x7ffdb840feb4,207381188,0,0x0,8
tick,0x7ffdb840feb4,207396969,0,0x0,8
tick,0x7ffdb840feb4,207412221,0,0x0,8
tick,0x7ffdb840feb4,207428033,0,0x0,8
tick,0x7ffdb840feb4,207443208,0,0x0,8
tick,0x7ffdb840feb4,207459040,0,0x0,8
tick,0x7ffdb840feb4,207475049,0,0x0,8
tick,0x7ffdb840feb4,207490217,0,0x0,8
tick,0x7ffdb840feb4,207506131,0,0x0,8
tick,0x7ffdb840feb4,207521036,0,0x0,8
tick,0x7ffdb840feb4,207536535,0,0x0,8
tick,0x7ffdb840feb4,207552233,0,0x0,8
tick,0x7ffdb840feb4,207567889,0,0x0,8
tick,0x7ffdb840feb4,207583248,0,0x0,8
tick,0x7ffdb840feb4,207599227,0,0x0,8
tick,0x7ffdb840feb4,207614353,0,0x0,8
tick,0x7ffdb840feb4,207630241,0,0x0,8
tick,0x7ffdb840feb4,207645221,0,0x0,8
tick,0x7ffdb840feb4,207660378,0,0x0,8
tick,0x7ffdb840feb4,207675601,0,0x0,8
tick,0x7ffdb840feb4,207691255,0,0x0,8
tick,0x7ffdb840feb4,207706136,0,0x0,8
tick,0x7ffdb840feb4,207721482,0,0x0,8
tick,0x7ffdb840feb4,207737141,0,0x0,8
tick,0x7ffdb840feb4,207752445,0,0x0,8
tick,0x7ffdb840feb4,207768144,0,0x0,8
tick,0x7ffdb840feb4,207783211,0,0x0,8
tick,0x7ffdb840feb4,207798640,0,0x0,8
tick,0x7ffdb840feb4,207814259,0,0x0,8
tick,0x7ffdb840feb4,207829263,0,0x0,8
tick,0x7ffdb840feb4,207845147,0,0x0,8
tick,0x7ffdb840feb4,207860326,0,0x0,8
tick,0x7ffdb840feb4,207875681,0,0x0,8
tick,0x7ffdb840feb4,207891672,0,0x0,8
tick,0x7ffdb840feb4,207907682,0,0x0,8
tick,0x7ffdb840feb4,207923189,0,0x0,8
tick,0x7ffdb840feb4,207939102,0,0x0,8
tick,0x7ffdb840feb4,207955197,0,0x0,8
tick,0x7ffdb840feb4,207970399,0,0x0,8
tick,0x7ffdb840feb4,207986146,0,0x0,8
tick,0x7ffdb840feb4,208001284,0,0x0,8
tick,0x7ffdb840feb4,208016490,0,0x0,8
tick,0x7ffdb840feb4,208032493,0,0x0,8
tick,0x7ffdb840feb4,208047502,0,0x0,8
tick,0x7ffdb840feb4,208062502,0,0x0,8
tick,0x7ffdb840feb4,208078110,0,0x0,8
tick,0x7ffdb840feb4,208093296,0,0x0,8
tick,0x7ffdb840feb4,208108438,0,0x0,8
tick,0x7ffdb840feb4,208123799,0,0x0,8
tick,0x7ffdb840feb4,208139128,0,0x0,8
tick,0x7ffdb840feb4,208154780,0,0x0,8
tick,0x7ffdb840feb4,208170447,0,0x0,8
tick,0x7ffdb840feb4,208186138,0,0x0,8
tick,0x7ffdb840feb4,208201309,0,0x0,8
tick,0x7ffdb840feb4,208217128,0,0x0,8
tick,0x7ffdb840feb4,208232558,0,0x0,8
tick,0x7ffdb840feb4,208248557,0,0x0,8
tick,0x7ffdb840feb4,208263833,0,0x0,8
tick,0x7ffdb840feb4,208279308,0,0x0,8
tick,0x7ffdb840feb4,208294447,0,0x0,8
tick,0x7ffdb840feb4,208310315,0,0x0,8
tick,0x7ffdb840feb4,208326315,0,0x0,8
tick,0x7ffdb840feb4,208341491,0,0x0,8
tick,0x7ffdb840feb4,208356852,0,0x0,8
tick,0x7ffdb840feb4,208372888,0,0x0,8
tick,0x7ffdb840feb4,208388153,0,0x0,8
tick,0x7ffdb840feb4,208403326,0,0x0,8
tick,0x7ffdb840feb4,208418980,0,0x0,8
tick,0x7ffdb840feb4,208434878,0,0x0,8
tick,0x7ffdb840feb4,208450327,0,0x0,8
tick,0x7ffdb840feb4,208466190,0,0x0,8
tick,0x7ffdb840feb4,208481339,0,0x0,8
tick,0x7ffdb840feb4,208497386,0,0x0,8
tick,0x7ffdb840feb4,208512339,0,0x0,8
tick,0x7ffdb840feb4,208528170,0,0x0,8
tick,0x7ffdb840feb4,208544214,0,0x0,8
tick,0x7ffdb840feb4,208559346,0,0x0,8
tick,0x7ffdb840feb4,208575180,0,0x0,8
tick,0x7ffdb840feb4,208590354,0,0x0,8
tick,0x7ffdb840feb4,208605944,0,0x0,8
tick,0x7ffdb840feb4,208621950,0,0x0,8
tick,0x7ffdb840feb4,208637964,0,0x0,8
tick,0x7ffdb840feb4,208653965,0,0x0,8
tick,0x7ffdb840feb4,208669354,0,0x0,8
tick,0x7ffdb840feb4,208685345,0,0x0,8
tick,0x7ffdb840feb4,208701368,0,0x0,8
tick,0x7ffdb840feb4,208717101,0,0x0,8
tick,0x7ffdb840feb4,208732552,0,0x0,8
tick,0x7ffdb840feb4,208748193,0,0x0,8
tick,0x7ffdb840feb4,208763196,0,0x0,8
tick,0x7ffdb840feb4,208779202,0,0x0,8
tick,0x7ffdb840feb4,208794010,0,0x0,8
tick,0x7ffdb840feb4,208809375,0,0x0,8
tick,0x7ffdb840feb4,208824765,0,0x0,8
tick,0x7ffdb840feb4,208840383,0,0x0,8
tick,0x7ffdb840feb4,208855375,0,0x0,8
tick,0x7ffdb840feb4,208870535,0,0x0,8
tick,0x7ffdb840feb4,208886351,0,0x0,8
tick,0x7ffdb840feb4,208901355,0,0x0,8
tick,0x7ffdb840feb4,208917372,0,0x0,8
tick,0x7ffdb840feb4,208933358,0,0x0,8
tick,0x7ffdb840feb4,208949247,0,0x0,8
tick,0x7ffdb840feb4,208964892,0,0x0,8
tick,0x7ffdb840feb4,208980082,0,0x0,8
tick,0x7ffdb840feb4,208995388,0,0x0,8
tick,0x7ffdb840feb4,209010529,0,0x0,8
tick,0x7ffdb840feb4,209026352,0,0x0,8
tick,0x7ffdb840feb4,209041567,0,0x0,8
tick,0x7ffdb840feb4,209056779,0,0x0,8
tick,0x7ffdb840feb4,209071638,0,0x0,8
tick,0x7ffdb840feb4,209086788,0,0x0,8
tick,0x7ffdb840feb4,209102833,0,0x0,8
tick,0x7ffdb840feb4,209118474,0,0x0,8
tick,0x7ffdb840feb4,209134389,0,0x0,8
tick,0x7ffdb840feb4,209149971,0,0x0,8
tick,0x7ffdb840feb4,209165888,0,0x0,8
tick,0x7ffdb840feb4,209181824,0,0x0,8
tick,0x7ffdb840feb4,209197241,0,0x0,8
tick,0x7ffdb840feb4,209212422,0,0x0,8
tick,0x7ffdb840feb4,209228249,0,0x0,8
tick,0x7ffdb840feb4,209243881,0,0x0,8
tick,0x7ffdb840feb4,209259985,0,0x0,8
tick,0x7ffdb840feb4,209275351,0,0x0,8
tick,0x7ffdb840feb4,209290555,0,0x0,8
tick,0x7ffdb840feb4,209306209,0,0x0,8
tick,0x7ffdb840feb4,209321440,0,0x0,8
tick,0x7ffdb840feb4,209337257,0,0x0,8
tick,0x7ffdb840feb4,209351997,0,0x0,8
tick,0x7ffdb840feb4,209367995,0,0x0,8
tick,0x7ffdb840feb4,209383396,0,0x0,8
tick,0x7ffdb840feb4,209398983,0,0x0,8
tick,0x7ffdb840feb4,209413998,0,0x0,8
tick,0x7ffdb840feb4,209429285,0,0x0,8
tick,0x7ffdb840feb4,209445221,0,0x0,8
tick,0x7ffdb840feb4,209460472,0,0x0,8
tick,0x7ffdb840feb4,209476456,0,0x0,8
tick,0x7ffdb840feb4,209492462,0,0x0,8
tick,0x7ffdb840feb4,209508463,0,0x0,8
tick,0x7ffdb840feb4,209524469,0,0x0,8
tick,0x7ffdb840feb4,209540467,0,0x0,8
tick,0x7ffdb840feb4,209556470,0,0x0,8
tick,0x7ffdb840feb4,209572480,0,0x0,8
tick,0x7ffdb840feb4,209588291,0,0x0,8
tick,0x7ffdb840feb4,209604312,0,0x0,8
tick,0x7ffdb840feb4,209619305,0,0x0,8
tick,0x7ffdb840feb4,209634318,0,0x0,8
tick,0x7ffdb840feb4,209650302,0,0x0,8
tick,0x7ffdb840feb4,209665894,0,0x0,8
tick,0x7ffdb840feb4,209681318,0,0x0,8
tick,0x7ffdb840feb4,209696514,0,0x0,8
tick,0x7ffdb840feb4,209712484,0,0x0,8
tick,0x7ffdb840feb4,209728308,0,0x0,8
tick,0x7ffdb840feb4,209744321,0,0x0,8
tick,0x7ffdb840feb4,209759485,0,0x0,8
tick,0x7ffdb840feb4,209775390,0,0x0,8
tick,0x7ffdb840feb4,209790501,0,0x0,8
tick,0x7ffdb840feb4,209806323,0,0x0,8
tick,0x7ffdb840feb4,209821395,0,0x0,8
tick,0x7ffdb840feb4,209837340,0,0x0,8
tick,0x7ffdb840feb4,209853398,0,0x0,8
tick,0x7ffdb840feb4,209869340,0,0x0,8
tick,0x7ffdb840feb4,209885408,0,0x0,8
tick,0x7ffdb840feb4,209901517,0,0x0,8
tick,0x7ffdb840feb4,209917333,0,0x0,8
tick,0x7ffdb840feb4,209932339,0,0x0,8
tick,0x7ffdb840feb4,209948342,0,0x0,8
tick,0x7ffdb840feb4,209964344,0,0x0,8
tick,0x7ffdb840feb4,209979514,0,0x0,8
tick,0x7ffdb840feb4,209994357,0,0x0,8
tick,0x7ffdb840feb4,210009524,0,0x0,8
tick,0x7ffdb840feb4,210025234,0,0x0,8
tick,0x7ffdb840feb4,210040351,0,0x0,8
tick,0x7ffdb840feb4,210055496,0,0x0,8
tick,0x7ffdb840feb4,210071010,0,0x0,8
tick,0x7ffdb840feb4,210086418,0,0x0,8
tick,0x7ffdb840feb4,210102422,0,0x0,8
tick,0x7ffdb840feb4,210118523,0,0x0,8
tick,0x7ffdb840feb4,210134502,0,0x0,8
tick,0x7ffdb840feb4,210150533,0,0x0,8
tick,0x7ffdb840feb4,210165896,0,0x0,8
tick,0x7ffdb840feb4,210181894,0,0x0,8
tick,0x7ffdb840feb4,210197539,0,0x0,8
tick,0x7ffdb840feb4,210212961,0,0x0,8
tick,0x7ffdb840feb4,210228376,0,0x0,8
tick,0x7ffdb840feb4,210243876,0,0x0,8
tick,0x7ffdb840feb4,210259373,0,0x0,8
tick,0x7ffdb840feb4,210274373,0,0x0,8
tick,0x7ffdb840feb4,210289543,0,0x0,8
tick,0x7ffdb840feb4,210305385,0,0x0,8
tick,0x7ffdb840feb4,210320551,0,0x0,8
tick,0x7ffdb840feb4,210335880,0,0x0,8
tick,0x7ffdb840feb4,210351545,0,0x0,8
tick,0x7ffdb840feb4,210366907,0,0x0,8
tick,0x7ffdb840feb4,210382943,0,0x0,8
tick,0x7ffdb840feb4,210398979,0,0x0,8
tick,0x7ffdb840feb4,210414399,0,0x0,8
tick,0x7ffdb840feb4,210429570,0,0x0,8
tick,0x7ffdb840feb4,210445233,0,0x0,8
tick,0x7ffdb840feb4,210460576,0,0x0,8
tick,0x7ffdb840feb4,210476576,0,0x0,8
tick,0x7ffdb840feb4,210492002,0,0x0,8
tick,0x7ffdb840feb4,210507004,0,0x0,8
tick,0x7ffdb840feb4,210522239,0,0x0,8
tick,0x7ffdb840feb4,210537408,0,0x0,8
tick,0x7ffdb840feb4,210552568,0,0x0,8
tick,0x7ffdb840feb4,210568435,0,0x0,8
tick,0x7ffdb840feb4,210583951,0,0x0,8
tick,0x7ffdb840feb4,210599413,0,0x0,8
tick,0x7ffdb840feb4,210614426,0,0x0,8
tick,0x7ffdb840feb4,210629598,0,0x0,8
tick,0x7ffdb840feb4,210644774,0,0x0,8
tick,0x7ffdb840feb4,210660605,0,0x0,8
tick,0x7ffdb840feb4,210675603,0,0x0,8
tick,0x7ffdb840feb4,210690730,0,0x0,8
tick,0x7ffdb840feb4,210706274,0,0x0,8
tick,0x7ffdb840feb4,210722113,0,0x0,8
tick,0x7ffdb840feb4,210737276,0,0x0,8
tick,0x7ffdb840feb4,210752569,0,0x0,8
tick,0x7ffdb840feb4,210768281,0,0x0,8
tick,0x7ffdb840feb4,210783472,0,0x0,8
tick,0x7ffdb840feb4,210798557,0,0x0,8
tick,0x7ffdb840feb4,210813901,0,0x0,8
tick,0x7ffdb840feb4,210829611,0,0x0,8
tick,0x7ffdb840feb4,210844622,0,0x0,8
tick,0x7ffdb840feb4,210860625,0,0x0,8
tick,0x7ffdb840feb4,210876633,0,0x0,8
tick,0x7ffdb840feb4,210892453,0,0x0,8
tick,0x7ffdb840feb4,210907458,0,0x0,8
tick,0x7ffdb840feb4,210923452,0,0x0,8
tick,0x7ffdb840feb4,210939457,0,0x0,8
tick,0x7ffdb840feb4,210955466,0,0x0,8
tick,0x7ffdb840feb4,210970613,0,0x0,8
tick,0x7ffdb840feb4,210986290,0,0x0,8
tick,0x7ffdb840feb4,211001645,0,0x0,8
tick,0x7ffdb840feb4,211017255,0,0x0,8
tick,0x7ffdb840feb4,211032566,0,0x0,8
tick,0x7ffdb840feb4,211048473,0,0x0,8
tick,0x7ffdb840feb4,211063675,0,0x0,8
tick,0x7ffdb840feb4,211079476,0,0x0,8
tick,0x7ffdb840feb4,211094657,0,0x0,8
tick,0x7ffdb840feb4,211110648,0,0x0,8
tick,0x7ffdb840feb4,211126161,0,0x0,8
tick,0x7ffdb840feb4,211141129,0,0x0,8
tick,0x7ffdb840feb4,211157162,0,0x0,8
tick,0x7ffdb840feb4,211172864,0,0x0,8
tick,0x7ffdb840feb4,211187575,0,0x0,8
tick,0x7ffdb840feb4,211202836,0,0x0,8
tick,0x7ffdb840feb4,211218012,0,0x0,8
tick,0x7ffdb840feb4,211233570,0,0x0,8
tick,0x7ffdb840feb4,211248920,0,0x0,8
tick,0x7ffdb840feb4,211263928,0,0x0,8
tick,0x7ffdb840feb4,211279674,0,0x0,8
tick,0x7ffdb840feb4,211294833,0,0x0,8
tick,0x7ffdb840feb4,211310680,0,0x0,8
tick,0x7ffdb840feb4,211326517,0,0x0,8
tick,0x7ffdb840feb4,211342510,0,0x0,8
tick,0x7ffdb840feb4,211358512,0,0x0,8
tick,0x7ffdb840feb4,211373977,0,0x0,8
tick,0x7ffdb840feb4,211389516,0,0x0,8
tick,0x7ffdb840feb4,211404518,0,0x0,8
tick,0x7ffdb840feb4,211419702,0,0x0,8
tick,0x7ffdb840feb4,211434993,0,0x0,8
tick,0x7ffdb840feb4,211450934,0,0x0,8
tick,0x7ffdb840feb4,211466343,0,0x0,8
tick,0x7ffdb840feb4,211481562,0,0x0,8
tick,0x7ffdb840feb4,211496701,0,0x0,8
tick,0x7ffdb840feb4,211512186,0,0x0,8
tick,0x7ffdb840feb4,211527533,0,0x0,8
tick,0x7ffdb840feb4,211542708,0,0x0,8
tick,0x7ffdb840feb4,211558534,0,0x0,8
tick,0x7ffdb840feb4,211573719,0,0x0,8
tick,0x7ffdb840feb4,211589542,0,0x0,8
tick,0x7ffdb840feb4,211604734,0,0x0,8
tick,0x7ffdb840feb4,211620710,0,0x0,8
tick,0x7ffdb840feb4,211636729,0,0x0,8
tick,0x7ffdb840feb4,211651944,0,0x0,8
tick,0x7ffdb840feb4,211667080,0,0x0,8
tick,0x7ffdb840feb4,211682568,0,0x0,8
tick,0x7ffdb840feb4,211698548,0,0x0,8
tick,0x7ffdb840feb4,211713730,0,0x0,8
tick,0x7ffdb840feb4,211728728,0,0x0,8
tick,0x7ffdb840feb4,211743917,0,0x0,8
tick,0x7ffdb840feb4,211759730,0,0x0,8
tick,0x7ffdb840feb4,211774743,0,0x0,8
tick,0x7ffdb840feb4,211790729,0,0x0,8
tick,0x7ffdb840feb4,211805903,0,0x0,8
tick,0x7ffdb840feb4,211820735,0,0x0,8
tick,0x7ffdb840feb4,211836142,0,0x0,8
tick,0x7ffdb840feb4,211851958,0,0x0,8
tick,0x7ffdb840feb4,211866745,0,0x0,8
tick,0x7ffdb840feb4,211882747,0,0x0,8
tick,0x7ffdb840feb4,211898574,0,0x0,8
tick,0x7ffdb840feb4,211914490,0,0x0,8
tick,0x7ffdb840feb4,211929490,0,0x0,8
tick,0x7ffdb840feb4,211944497,0,0x0,8
tick,0x7ffdb840feb4,211960506,0,0x0,8
tick,0x7ffdb840feb4,211975752,0,0x0,8
tick,0x7ffdb840feb4,211990902,0,0x0,8
tick,0x7ffdb840feb4,212006508,0,0x0,8
tick,0x7ffdb840feb4,212022513,0,0x0,8
tick,0x7ffdb840feb4,212038606,0,0x0,8
tick,0x7ffdb840feb4,212053750,0,0x0,8
tick,0x7ffdb840feb4,212068599,0,0x0,8
tick,0x7ffdb840feb4,212084601,0,0x0,8
tick,0x7ffdb840feb4,212099766,0,0x0,8
tick,0x7ffdb840feb4,212114773,0,0x0,8
tick,0x7ffdb840feb4,212129773,0,0x0,8
tick,0x7ffdb840feb4,212144984,0,0x0,8
tick,0x7ffdb840feb4,212160775,0,0x0,8
tick,0x7ffdb840feb4,212175626,0,0x0,8
tick,0x7ffdb840feb4,212190787,0,0x0,8
tick,0x7ffdb840feb4,212206199,0,0x0,8
tick,0x7ffdb840feb4,212222194,0,0x0,8
tick,0x7ffdb840feb4,212237197,0,0x0,8
tick,0x7ffdb840feb4,212252180,0,0x0,8
tick,0x7ffdb840feb4,212267198,0,0x0,8
tick,0x7ffdb840feb4,212282579,0,0x0,8
tick,0x7ffdb840feb4,212298646,0,0x0,8
tick,0x7ffdb840feb4,212313798,0,0x0,8
tick,0x7ffdb840feb4,212329655,0,0x0,8
tick,0x7ffdb840feb4,212345029,0,0x0,8
tick,0x7ffdb840feb4,212360809,0,0x0,8
tick,0x7ffdb840feb4,212376571,0,0x0,8
tick,0x7ffdb840feb4,212391816,0,0x0,8
tick,0x7ffdb840feb4,212407623,0,0x0,8
tick,0x7ffdb840feb4,212423365,0,0x0,8
tick,0x7ffdb840feb4,212438648,0,0x0,8
tick,0x7ffdb840feb4,212454192,0,0x0,8
tick,0x7ffdb840feb4,212469640,0,0x0,8
tick,0x7ffdb840feb4,212485577,0,0x0,8
tick,0x7ffdb840feb4,212500821,0,0x0,8
tick,0x7ffdb840feb4,212515649,0,0x0,8
tick,0x7ffdb840feb4,212531570,0,0x0,8
tick,0x7ffdb840feb4,212547241,0,0x0,8
tick,0x7ffdb840feb4,212562820,0,0x0,8
tick,0x7ffdb840feb4,212578416,0,0x0,8
tick,0x7ffdb840feb4,212593830,0,0x0,8
tick,0x7ffdb840feb4,212609660,0,0x0,8
tick,0x7ffdb840feb4,212625215,0,0x0,8
tick,0x7ffdb840feb4,212640840,0,0x0,8
tick,0x7ffdb840feb4,212656223,0,0x0,8
tick,0x7ffdb840feb4,212671853,0,0x0,8
tick,0x7ffdb840feb4,212687457,0,0x0,8
tick,0x7ffdb840feb4,212703464,0,0x0,8
tick,0x7ffdb840feb4,212719480,0,0x0,8
tick,0x7ffdb840feb4,212735576,0,0x0,8
tick,0x7ffdb840feb4,212750847,0,0x0,8
tick,0x7ffdb840feb4,212766909,0,0x0,8
tick,0x7ffdb840feb4,212782910,0,0x0,8
tick,0x7ffdb840feb4,212798678,0,0x0,8
tick,0x7ffdb840feb4,212813861,0,0x0,8
tick,0x7ffdb840feb4,212828689,0,0x0,8
tick,0x7ffdb840feb4,212844686,0,0x0,8
tick,0x7ffdb840feb4,212859858,0,0x0,8
tick,0x7ffdb840feb4,212875858,0,0x0,8
tick,0x7ffdb840feb4,212891298,0,0x0,8
tick,0x7ffdb840feb4,212906704,0,0x0,8
tick,0x7ffdb840feb4,212922549,0,0x0,8
tick,0x7ffdb840feb4,212937557,0,0x0,8
tick,0x7ffdb840feb4,212953563,0,0x0,8
tick,0x7ffdb840feb4,212969570,0,0x0,8
tick,0x7ffdb840feb4,212984576,0,0x0,8
tick,0x7ffdb840feb4,212999723,0,0x0,8
tick,0x7ffdb840feb4,213014908,0,0x0,8
tick,0x7ffdb840feb4,213030878,0,0x0,8
tick,0x7ffdb840feb4,213046897,0,0x0,8
tick,0x7ffdb840feb4,213062900,0,0x0,8
tick,0x7ffdb840feb4,213078890,0,0x0,8
tick,0x7ffdb840feb4,213094508,0,0x0,8
tick,0x7ffdb840feb4,213109713,0,0x0,8
tick,0x7ffdb840feb4,213124892,0,0x0,8
tick,0x7ffdb840feb4,213140887,0,0x0,8
tick,0x7ffdb840feb4,213156570,0,0x0,8
tick,0x7ffdb840feb4,213172473,0,0x0,8
tick,0x7ffdb840feb4,213187350,0,0x0,8
tick,0x7ffdb840feb4,213202330,0,0x0,8
tick,0x7ffdb840feb4,213217884,0,0x0,8
tick,0x7ffdb840feb4,213233577,0,0x0,8
tick,0x7ffdb840feb4,213248736,0,0x0,8
tick,0x7ffdb840feb4,213263682,0,0x0,8
tick,0x7ffdb840feb4,213278909,0,0x0,8
tick,0x7ffdb840feb4,213294505,0,0x0,8
tick,0x7ffdb840feb4,213309736,0,0x0,8
tick,0x7ffdb840feb4,213325754,0,0x0,8
tick,0x7ffdb840feb4,213340918,0,0x0,8
tick,0x7ffdb840feb4,213356923,0,0x0,8
tick,0x7ffdb840feb4,213372823,0,0x0,8
tick,0x7ffdb840feb4,213388752,0,0x0,8
tick,0x7ffdb840feb4,213404296,0,0x0,8
tick,0x7ffdb840feb4,213419544,0,0x0,8
tick,0x7ffdb840feb4,213435091,0,0x0,8
tick,0x7ffdb840feb4,213450937,0,0x0,8
tick,0x7ffdb840feb4,213466587,0,0x0,8
tick,0x7ffdb840feb4,213482098,0,0x0,8
tick,0x7ffdb840feb4,213497101,0,0x0,8
tick,0x7ffdb840feb4,213512822,0,0x0,8
tick,0x7ffdb840feb4,213528769,0,0x0,8
tick,0x7ffdb840feb4,213544770,0,0x0,8
tick,0x7ffdb840feb4,213559942,0,0x0,8
tick,0x7ffdb840feb4,213574747,0,0x0,8
tick,0x7ffdb840feb4,213589953,0,0x0,8
tick,0x7ffdb840feb4,213605452,0,0x0,8
tick,0x7ffdb840feb4,213620956,0,0x0,8
tick,0x7ffdb840feb4,213636957,0,0x0,8
tick,0x7ffdb840feb4,213652698,0,0x0,8
tick,0x7ffdb840feb4,213667367,0,0x0,8
tick,0x7ffdb840feb4,213682579,0,0x0,8
tick,0x7ffdb840feb4,213697795,0,0x0,8
tick,0x7ffdb840feb4,213713616,0,0x0,8
tick,0x7ffdb840feb4,213728789,0,0x0,8
tick,0x7ffdb840feb4,213744554,0,0x0,8
tick,0x7ffdb840feb4,213759782,0,0x0,8
tick,0x7ffdb840feb4,213775727,0,0x0,8
tick,0x7ffdb840feb4,213790973,0,0x0,8
tick,0x7ffdb840feb4,213806124,0,0x0,8
tick,0x7ffdb840feb4,213821804,0,0x0,8
tick,0x7ffdb840feb4,213837393,0,0x0,8
tick,0x7ffdb840feb4,213853390,0,0x0,8
tick,0x7ffdb840feb4,213868804,0,0x0,8
tick,0x7ffdb840feb4,213884600,0,0x0,8
tick,0x7ffdb840feb4,213900582,0,0x0,8
tick,0x7ffdb840feb4,213915926,0,0x0,8
tick,0x7ffdb840feb4,213931921,0,0x0,8
tick,0x7ffdb840feb4,213947918,0,0x0,8
tick,0x7ffdb840feb4,213963925,0,0x0,8
tick,0x7ffdb840feb4,213979931,0,0x0,8
tick,0x7ffdb840feb4,213994942,0,0x0,8
tick,0x7ffdb840feb4,214009934,0,0x0,8
tick,0x7ffdb840feb4,214025646,0,0x0,8
tick,0x7ffdb840feb4,214041000,0,0x0,8
tick,0x7ffdb840feb4,214055931,0,0x0,8
tick,0x7ffdb840feb4,214071954,0,0x0,8
tick,0x7ffdb840feb4,214087583,0,0x0,8
tick,0x7ffdb840feb4,214103583,0,0x0,8
tick,0x7ffdb840feb4,214118991,0,0x0,8
tick,0x7ffdb840feb4,214134588,0,0x0,8
tick,0x7ffdb840feb4,214149843,0,0x0,8
tick,0x7ffdb840feb4,214164911,0,0x0,8
tick,0x7ffdb840feb4,214181014,0,0x0,8
tick,0x7ffdb840feb4,214197020,0,0x0,8
tick,0x7ffdb840feb4,214212859,0,0x0,8
tick,0x7ffdb840feb4,214228853,0,0x0,8
tick,0x7ffdb840feb4,214244765,0,0x0,8
tick,0x7ffdb840feb4,214260852,0,0x0,8
tick,0x7ffdb840feb4,214276031,0,0x0,8
tick,0x7ffdb840feb4,214291593,0,0x0,8
tick,0x7ffdb840feb4,214306861,0,0x0,8
tick,0x7ffdb840feb4,214322037,0,0x0,8
tick,0x7ffdb840feb4,214337814,0,0x0,8
tick,0x7ffdb840feb4,214352836,0,0x0,8
tick,0x7ffdb840feb4,214367824,0,0x0,8
tick,0x7ffdb840feb4,214383858,0,0x0,8
tick,0x7ffdb840feb4,214399628,0,0x0,8
tick,0x7ffdb840feb4,214414915,0,0x0,8
tick,0x7ffdb840feb4,214430044,0,0x0,8
tick,0x7ffdb840feb4,214445237,0,0x0,8
tick,0x7ffdb840feb4,214461060,0,0x0,8
tick,0x7ffdb840feb4,214477122,0,0x0,8
tick,0x7ffdb840feb4,214492633,0,0x0,8
tick,0x7ffdb840feb4,214508633,0,0x0,8
tick,0x7ffdb840feb4,214523953,0,0x0,8
tick,0x7ffdb840feb4,214539889,0,0x0,8
tick,0x7ffdb840feb4,214555963,0,0x0,8
tick,0x7ffdb840feb4,214572074,0,0x0,8
tick,0x7ffdb840feb4,214587403,0,0x0,8
tick,0x7ffdb840feb4,214602647,0,0x0,8
tick,0x7ffdb840feb4,214617896,0,0x0,8
tick,0x7ffdb840feb4,214633590,0,0x0,8
tick,0x7ffdb840feb4,214648901,0,0x0,8
tick,0x7ffdb840feb4,214663903,0,0x0,8
tick,0x7ffdb840feb4,214679911,0,0x0,8
tick,0x7ffdb840feb4,214695914,0,0x0,8
tick,0x7ffdb840feb4,214711074,0,0x0,8
tick,0x7ffdb840feb4,214726916,0,0x0,8
tick,0x7ffdb840feb4,214742089,0,0x0,8
tick,0x7ffdb840feb4,214757089,0,0x0,8
tick,0x7ffdb840feb4,214773065,0,0x0,8
tick,0x7ffdb840feb4,214788931,0,0x0,8
tick,0x7ffdb840feb4,214804102,0,0x0,8
tick,0x7ffdb840feb4,214819431,0,0x0,8
tick,0x7ffdb840feb4,214834941,0,0x0,8
tick,0x7ffdb840feb4,214850431,0,0x0,8
tick,0x7ffdb840feb4,214865934,0,0x0,8
tick,0x7ffdb840feb4,214881103,0,0x0,8
tick,0x7ffdb840feb4,214896994,0,0x0,8
tick,0x7ffdb840feb4,214912255,0,0x0,8
tick,0x7ffdb840feb4,214927121,0,0x0,8
tick,0x7ffdb840feb4,214943116,0,0x0,8
tick,0x7ffdb840feb4,214959128,0,0x0,8
tick,0x7ffdb840feb4,214975124,0,0x0,8
tick,0x7ffdb840feb4,214991126,0,0x0,8
tick,0x7ffdb840feb4,215006470,0,0x0,8
tick,0x7ffdb840feb4,215022120,0,0x0,8
tick,0x7ffdb840feb4,215037123,0,0x0,8
tick,0x7ffdb840feb4,215053183,0,0x0,8
tick,0x7ffdb840feb4,215068956,0,0x0,8
tick,0x7ffdb840feb4,215084979,0,0x0,8
tick,0x7ffdb840feb4,215099951,0,0x0,8
tick,0x7ffdb840feb4,215114931,0,0x0,8
tick,0x7ffdb840feb4,215130957,0,0x0,8
tick,0x7ffdb840feb4,215146960,0,0x0,8
tick,0x7ffdb840feb4,215162035,0,0x0,8
tick,0x7ffdb840feb4,215177961,0,0x0,8
tick,0x7ffdb840feb4,215193146,0,0x0,8
tick,0x7ffdb840feb4,215208966,0,0x0,8
tick,0x7ffdb840feb4,215224105,0,0x0,8
tick,0x7ffdb840feb4,215239980,0,0x0,8
tick,0x7ffdb840feb4,215254977,0,0x0,8
tick,0x7ffdb840feb4,215270148,0,0x0,8
tick,0x7ffdb840feb4,215285607,0,0x0,8
tick,0x7ffdb840feb4,215301157,0,0x0,8
tick,0x7ffdb840feb4,215316439,0,0x0,8
tick,0x7ffdb840feb4,215331592,0,0x0,8
tick,0x7ffdb840feb4,215347136,0,0x0,8
tick,0x7ffdb840feb4,215362157,0,0x0,8
tick,0x7ffdb840feb4,215377825,0,0x0,8
tick,0x7ffdb840feb4,215393142,0,0x0,8
tick,0x7ffdb840feb4,215408990,0,0x0,8
tick,0x7ffdb840feb4,215424644,0,0x0,8
tick,0x7ffdb840feb4,215440000,0,0x0,8
tick,0x7ffdb840feb4,215455345,0,0x0,8
tick,0x7ffdb840feb4,215471177,0,0x0,8
tick,0x7ffdb840feb4,215486588,0,0x0,8
tick,0x7ffdb840feb4,215502175,0,0x0,8
tick,0x7ffdb840feb4,215517178,0,0x0,8
tick,0x7ffdb840feb4,215532588,0,0x0,8
tick,0x7ffdb840feb4,215548457,0,0x0,8
tick,0x7ffdb840feb4,215564171,0,0x0,8
tick,0x7ffdb840feb4,215579284,0,0x0,8
tick,0x7ffdb840feb4,215594971,0,0x0,8
tick,0x7ffdb840feb4,215610972,0,0x0,8
tick,0x7ffdb840feb4,215626406,0,0x0,8
tick,0x7ffdb840feb4,215641693,0,0x0,8
tick,0x7ffdb840feb4,215656906,0,0x0,8
tick,0x7ffdb840feb4,215672058,0,0x0,8
tick,0x7ffdb840feb4,215687907,0,0x0,8
tick,0x7ffdb840feb4,215703903,0,0x0,8
tick,0x7ffdb840feb4,215720023,0,0x0,8
tick,0x7ffdb840feb4,215735917,0,0x0,8
tick,0x7ffdb840feb4,215751208,0,0x0,8
tick,0x7ffdb840feb4,215766933,0,0x0,8
tick,0x7ffdb840feb4,215782589,0,0x0,8
tick,0x7ffdb840feb4,215798596,0,0x0,8
tick,0x7ffdb840feb4,215814508,0,0x0,8
tick,0x7ffdb840feb4,215829045,0,0x0,8
tick,0x7ffdb840feb4,215844218,0,0x0,8
tick,0x7ffdb840feb4,215860048,0,0x0,8
tick,0x7ffdb840feb4,215875229,0,0x0,8
tick,0x7ffdb840feb4,215891224,0,0x0,8
tick,0x7ffdb840feb4,215906379,0,0x0,8
tick,0x7ffdb840feb4,215921851,0,0x0,8
tick,0x7ffdb840feb4,215937572,0,0x0,8
tick,0x7ffdb840feb4,215952360,0,0x0,8
tick,0x7ffdb840feb4,215968370,0,0x0,8
tick,0x7ffdb840feb4,215984378,0,0x0,8
tick,0x7ffdb840feb4,216000371,0,0x0,8
tick,0x7ffdb840feb4,216015926,0,0x0,8
tick,0x7ffdb840feb4,216031246,0,0x0,8
tick,0x7ffdb840feb4,216046933,0,0x0,8
tick,0x7ffdb840feb4,216062368,0,0x0,8
tick,0x7ffdb840feb4,216077937,0,0x0,8
tick,0x7ffdb840feb4,216093386,0,0x0,8
tick,0x7ffdb840feb4,216109081,0,0x0,8
tick,0x7ffdb840feb4,216124469,0,0x0,8
tick,0x7ffdb840feb4,216140078,0,0x0,8
tick,0x7ffdb840feb4,216155257,0,0x0,8
tick,0x7ffdb840feb4,216171085,0,0x0,8
tick,0x7ffdb840feb4,216186549,0,0x0,8
tick,0x7ffdb840feb4,216201730,0,0x0,8
tick,0x7ffdb840feb4,216216928,0,0x0,8
tick,0x7ffdb840feb4,216232591,0,0x0,8
tick,0x7ffdb840feb4,216247763,0,0x0,8
tick,0x7ffdb840feb4,216263385,0,0x0,8
tick,0x7ffdb840feb4,216279099,0,0x0,8
tick,0x7ffdb840feb4,216294376,0,0x0,8
tick,0x7ffdb840feb4,216310110,0,0x0,8
tick,0x7ffdb840feb4,216325111,0,0x0,8
tick,0x7ffdb840feb4,216340273,0,0x0,8
tick,0x7ffdb840feb4,216356105,0,0x0,8
tick,0x7ffdb840feb4,216371108,0,0x0,8
tick,0x7ffdb840feb4,216386540,0,0x0,8
tick,0x7ffdb840feb4,216401463,0,0x0,8
tick,0x7ffdb840feb4,216416853,0,0x0,8
tick,0x7ffdb840feb4,216432594,0,0x0,8
tick,0x7ffdb840feb4,216447248,0,0x0,8
tick,0x7ffdb840feb4,216462385,0,0x0,8
tick,0x7ffdb840feb4,216478118,0,0x0,8
tick,0x7ffdb840feb4,216493676,0,0x0,8
tick,0x7ffdb840feb4,216508680,0,0x0,8
tick,0x7ffdb840feb4,216524692,0,0x0,8
tick,0x7ffdb840feb4,216540125,0,0x0,8
tick,0x7ffdb840feb4,216555309,0,0x0,8
tick,0x7ffdb840feb4,216571117,0,0x0,8
tick,0x7ffdb840feb4,216586123,0,0x0,8
tick,0x7ffdb840feb4,216601324,0,0x0,8
tick,0x7ffdb840feb4,216615971,0,0x0,8
tick,0x7ffdb840feb4,216631324,0,0x0,8
tick,0x7ffdb840feb4,216647266,0,0x0,8
tick,0x7ffdb840feb4,216663403,0,0x0,8
tick,0x7ffdb840feb4,216679152,0,0x0,8
tick,0x7ffdb840feb4,216694405,0,0x0,8
tick,0x7ffdb840feb4,216709327,0,0x0,8
tick,0x7ffdb840feb4,216725290,0,0x0,8
tick,0x7ffdb840feb4,216741328,0,0x0,8
tick,0x7ffdb840feb4,216756972,0,0x0,8
tick,0x7ffdb840feb4,216772882,0,0x0,8
tick,0x7ffdb840feb4,216788156,0,0x0,8
tick,0x7ffdb840feb4,216803335,0,0x0,8
tick,0x7ffdb840feb4,216819161,0,0x0,8
tick,0x7ffdb840feb4,216834775,0,0x0,8
tick,0x7ffdb840feb4,216850171,0,0x0,8
tick,0x7ffdb840feb4,216865709,0,0x0,8
tick,0x7ffdb840feb4,216881352,0,0x0,8
tick,0x7ffdb840feb4,216897347,0,0x0,8
tick,0x7ffdb840feb4,216912501,0,0x0,8
tick,0x7ffdb840feb4,216928176,0,0x0,8
tick,0x7ffdb840feb4,216943045,0,0x0,8
tick,0x7ffdb840feb4,216958377,0,0x0,8
tick,0x7ffdb840feb4,216974358,0,0x0,8
tick,0x7ffdb840feb4,216990368,0,0x0,8
tick,0x7ffdb840feb4,217006365,0,0x0,8
tick,0x7ffdb840feb4,217021533,0,0x0,8
tick,0x7ffdb840feb4,217037375,0,0x0,8
tick,0x7ffdb840feb4,217052370,0,0x0,8
tick,0x7ffdb840feb4,217068202,0,0x0,8
tick,0x7ffdb840feb4,217083599,0,0x0,8
tick,0x7ffdb840feb4,217099203,0,0x0,8
tick,0x7ffdb840feb4,217114929,0,0x0,8
tick,0x7ffdb840feb4,217130206,0,0x0,8
tick,0x7ffdb840feb4,217145876,0,0x0,8
tick,0x7ffdb840feb4,217161383,0,0x0,8
tick,0x7ffdb840feb4,217176935,0,0x0,8
tick,0x7ffdb840feb4,217192390,0,0x0,8
tick,0x7ffdb840feb4,217207883,0,0x0,8
tick,0x7ffdb840feb4,217223150,0,0x0,8
tick,0x7ffdb840feb4,217239218,0,0x0,8
tick,0x7ffdb840feb4,217255072,0,0x0,8
tick,0x7ffdb840feb4,217270224,0,0x0,8
tick,0x7ffdb840feb4,217285607,0,0x0,8
tick,0x7ffdb840feb4,217301393,0,0x0,8
tick,0x7ffdb840feb4,217316929,0,0x0,8
tick,0x7ffdb840feb4,217332397,0,0x0,8
tick,0x7ffdb840feb4,217347909,0,0x0,8
tick,0x7ffdb840feb4,217363389,0,0x0,8
tick,0x7ffdb840feb4,217379231,0,0x0,8
tick,0x7ffdb840feb4,217394415,0,0x0,8
tick,0x7ffdb840feb4,217410239,0,0x0,8
tick,0x7ffdb840feb4,217426237,0,0x0,8
tick,0x7ffdb840feb4,217441423,0,0x0,8
tick,0x7ffdb840feb4,217456238,0,0x0,8
tick,0x7ffdb840feb4,217471415,0,0x0,8
tick,0x7ffdb840feb4,217487405,0,0x0,8
tick,0x7ffdb840feb4,217502657,0,0x0,8
tick,0x7ffdb840feb4,217518244,0,0x0,8
tick,0x7ffdb840feb4,217534159,0,0x0,8
tick,0x7ffdb840feb4,217549250,0,0x0,8
tick,0x7ffdb840feb4,217564397,0,0x0,8
tick,0x7ffdb840feb4,217580253,0,0x0,8
tick,0x7ffdb840feb4,217595430,0,0x0,8
tick,0x7ffdb840feb4,217611304,0,0x0,8
tick,0x7ffdb840feb4,217626183,0,0x0,8
tick,0x7ffdb840feb4,217641439,0,0x0,8
tick,0x7ffdb840feb4,217657143,0,0x0,8
tick,0x7ffdb840feb4,217672441,0,0x0,8
tick,0x7ffdb840feb4,217687600,0,0x0,8
tick,0x7ffdb840feb4,217703332,0,0x0,8
tick,0x7ffdb840feb4,217719283,0,0x0,8
tick,0x7ffdb840feb4,217735217,0,0x0,8
tick,0x7ffdb840feb4,217750270,0,0x0,8
tick,0x7ffdb840feb4,217765929,0,0x0,8
tick,0x7ffdb840feb4,217781447,0,0x0,8
tick,0x7ffdb840feb4,217797290,0,0x0,8
tick,0x7ffdb840feb4,217813234,0,0x0,8
tick,0x7ffdb840feb4,217828077,0,0x0,8
tick,0x7ffdb840feb4,217843473,0,0x0,8
tick,0x7ffdb840feb4,217859292,0,0x0,8
tick,0x7ffdb840feb4,217875296,0,0x0,8
tick,0x7ffdb840feb4,217890291,0,0x0,8
tick,0x7ffdb840feb4,217906092,0,0x0,8
tick,0x7ffdb840feb4,217921469,0,0x0,8
tick,0x7ffdb840feb4,217937107,0,0x0,8
tick,0x7ffdb840feb4,217952326,0,0x0,8
tick,0x7ffdb840feb4,217967761,0,0x0,8
tick,0x7ffdb840feb4,217983772,0,0x0,8
tick,0x7ffdb840feb4,217999767,0,0x0,8
tick,0x7ffdb840feb4,218014772,0,0x0,8
tick,0x7ffdb840feb4,218030314,0,0x0,8
tick,0x7ffdb840feb4,218046319,0,0x0,8
tick,0x7ffdb840feb4,218061487,0,0x0,8
tick,0x7ffdb840feb4,218076849,0,0x0,8
tick,0x7ffdb840feb4,218092021,0,0x0,8
tick,0x7ffdb840feb4,218107341,0,0x0,8
tick,0x7ffdb840feb4,218123393,0,0x0,8
tick,0x7ffdb840feb4,218138295,0,0x0,8
tick,0x7ffdb840feb4,218153503,0,0x0,8
tick,0x7ffdb840feb4,218169323,0,0x0,8
tick,0x7ffdb840feb4,218184835,0,0x0,8
tick,0x7ffdb840feb4,218200503,0,0x0,8
tick,0x7ffdb840feb4,218215936,0,0x0,8
tick,0x7ffdb840feb4,218231501,0,0x0,8
tick,0x7ffdb840feb4,218246517,0,0x0,8
tick,0x7ffdb840feb4,218262029,0,0x0,8
tick,0x7ffdb840feb4,218278015,0,0x0,8
tick,0x7ffdb840feb4,218293356,0,0x0,8
tick,0x7ffdb840feb4,218309338,0,0x0,8
tick,0x7ffdb840feb4,218324949,0,0x0,8
tick,0x7ffdb840feb4,218340342,0,0x0,8
tick,0x7ffdb840feb4,218355851,0,0x0,8
tick,0x7ffdb840feb4,218370833,0,0x0,8
tick,0x7ffdb840feb4,218386287,0,0x0,8
tick,0x7ffdb840feb4,218401515,0,0x0,8
tick,0x7ffdb840feb4,218416659,0,0x0,8
tick,0x7ffdb840feb4,218431815,0,0x0,8
tick,0x7ffdb840feb4,218447826,0,0x0,8
tick,0x7ffdb840feb4,218462687,0,0x0,8
tick,0x7ffdb840feb4,218478693,0,0x0,8
tick,0x7ffdb840feb4,218494363,0,0x0,8
tick,0x7ffdb840feb4,218509356,0,0x0,8
tick,0x7ffdb840feb4,218524701,0,0x0,8
tick,0x7ffdb840feb4,218540259,0,0x0,8
tick,0x7ffdb840feb4,218556263,0,0x0,8
tick,0x7ffdb840feb4,218571544,0,0x0,8
tick,0x7ffdb840feb4,218587358,0,0x0,8
tick,0x7ffdb840feb4,218602529,0,0x0,8
tick,0x7ffdb840feb4,218617942,0,0x0,8
tick,0x7ffdb840feb4,218632860,0,0x0,8
tick,0x7ffdb840feb4,218648073,0,0x0,8
tick,0x7ffdb840feb4,218664081,0,0x0,8
tick,0x7ffdb840feb4,218680081,0,0x0,8
tick,0x7ffdb840feb4,218696091,0,0x0,8
tick,0x7ffdb840feb4,218711573,0,0x0,8
tick,0x7ffdb840feb4,218727080,0,0x0,8
tick,0x7ffdb840feb4,218742083,0,0x0,8
tick,0x7ffdb840feb4,218758082,0,0x0,8
tick,0x7ffdb840feb4,218774086,0,0x0,8
tick,0x7ffdb840feb4,218789400,0,0x0,8
tick,0x7ffdb840feb4,218805106,0,0x0,8
tick,0x7ffdb840feb4,218820549,0,0x0,8
tick,0x7ffdb840feb4,218836618,0,0x0,8
tick,0x7ffdb840feb4,218852573,0,0x0,8
tick,0x7ffdb840feb4,218868414,0,0x0,8
tick,0x7ffdb840feb4,218883582,0,0x0,8
tick,0x7ffdb840feb4,218899410,0,0x0,8
tick,0x7ffdb840feb4,218914947,0,0x0,8
tick,0x7ffdb840feb4,218930409,0,0x0,8
tick,0x7ffdb840feb4,218945414,0,0x0,8
tick,0x7ffdb840feb4,218960595,0,0x0,8
tick,0x7ffdb840feb4,218976589,0,0x0,8
tick,0x7ffdb840feb4,218991592,0,0x0,8
tick,0x7ffdb840feb4,219007600,0,0x0,8
tick,0x7ffdb840feb4,219023103,0,0x0,8
tick,0x7ffdb840feb4,219039107,0,0x0,8
tick,0x7ffdb840feb4,219054660,0,0x0,8
tick,0x7ffdb840feb4,219070115,0,0x0,8
tick,0x7ffdb840feb4,219086123,0,0x0,8
tick,0x7ffdb840feb4,219102124,0,0x0,8
tick,0x7ffdb840feb4,219118130,0,0x0,8
tick,0x7ffdb840feb4,219133194,0,0x0,8
tick,0x7ffdb840feb4,219148444,0,0x0,8
tick,0x7ffdb840feb4,219163619,0,0x0,8
tick,0x7ffdb840feb4,219179437,0,0x0,8
tick,0x7ffdb840feb4,219195130,0,0x0,8
tick,0x7ffdb840feb4,219210419,0,0x0,8
tick,0x7ffdb840feb4,219226420,0,0x0,8
tick,0x7ffdb840feb4,219242429,0,0x0,8
tick,0x7ffdb840feb4,219258245,0,0x0,8
tick,0x7ffdb840feb4,219273490,0,0x0,8
tick,0x7ffdb840feb4,219289457,0,0x0,8
tick,0x7ffdb840feb4,219304135,0,0x0,8
tick,0x7ffdb840feb4,219319144,0,0x0,8
tick,0x7ffdb840feb4,219334793,0,0x0,8
tick,0x7ffdb840feb4,219350633,0,0x0,8
tick,0x7ffdb840feb4,219366592,0,0x0,8
tick,0x7ffdb840feb4,219381605,0,0x0,8
tick,0x7ffdb840feb4,219396660,0,0x0,8
tick,0x7ffdb840feb4,219412639,0,0x0,8
tick,0x7ffdb840feb4,219427793,0,0x0,8
tick,0x7ffdb840feb4,219443430,0,0x0,8
tick,0x7ffdb840feb4,219459484,0,0x0,8
tick,0x7ffdb840feb4,219475124,0,0x0,8
tick,0x7ffdb840feb4,219490477,0,0x0,8
tick,0x7ffdb840feb4,219505789,0,0x0,8
tick,0x7ffdb840feb4,219521656,0,0x0,8
tick,0x7ffdb840feb4,219536834,0,0x0,8
tick,0x7ffdb840feb4,219552661,0,0x0,8
tick,0x7ffdb840feb4,219567671,0,0x0,8
tick,0x7ffdb840feb4,219583609,0,0x0,8
tick,0x7ffdb840feb4,219598672,0,0x0,8
tick,0x7ffdb840feb4,219613854,0,0x0,8
tick,0x7ffdb840feb4,219628509,0,0x0,8
tick,0x7ffdb840feb4,219643697,0,0x0,8
tick,0x7ffdb840feb4,219659503,0,0x0,8
tick,0x7ffdb840feb4,219675518,0,0x0,8
tick,0x7ffdb840feb4,219690431,0,0x0,8
tick,0x7ffdb840feb4,219705428,0,0x0,8
tick,0x7ffdb840feb4,219720675,0,0x0,8
tick,0x7ffdb840feb4,219735894,0,0x0,8
tick,0x7ffdb840feb4,219751689,0,0x0,8
tick,0x7ffdb840feb4,219767727,0,0x0,8
tick,0x7ffdb840feb4,219783180,0,0x0,8
tick,0x7ffdb840feb4,219798733,0,0x0,8
tick,0x7ffdb840feb4,219813911,0,0x0,8
tick,0x7ffdb840feb4,219829532,0,0x0,8
tick,0x7ffdb840feb4,219844213,0,0x0,8
tick,0x7ffdb840feb4,219859523,0,0x0,8
tick,0x7ffdb840feb4,219874682,0,0x0,8
tick,0x7ffdb840feb4,219890560,0,0x0,8
tick,0x7ffdb840feb4,219906546,0,0x0,8
tick,0x7ffdb840feb4,219922298,0,0x0,8
tick,0x7ffdb840feb4,219938103,0,0x0,8
tick,0x7ffdb840feb4,219952850,0,0x0,8
tick,0x7ffdb840feb4,219968564,0,0x0,8
tick,0x7ffdb840feb4,219984180,0,0x0,8
tick,0x7ffdb840feb4,219999623,0,0x0,8
tick,0x7ffdb840feb4,220015618,0,0x0,8
tick,0x7ffdb840feb4,220031623,0,0x0,8
tick,0x7ffdb840feb4,220046867,0,0x0,8
tick,0x7ffdb840feb4,220061728,0,0x0,8
tick,0x7ffdb840feb4,220077597,0,0x0,8
tick,0x7ffdb840feb4,220092666,0,0x0,8
tick,0x7ffdb840feb4,220107924,0,0x0,8
tick,0x7ffdb840feb4,220123435,0,0x0,8
tick,0x7ffdb840feb4,220138571,0,0x0,8
tick,0x7ffdb840feb4,220153740,0,0x0,8
tick,0x7ffdb840feb4,220169437,0,0x0,8
tick,0x7ffdb840feb4,220184572,0,0x0,8
tick,0x7ffdb840feb4,220200551,0,0x0,8
tick,0x7ffdb840feb4,220215924,0,0x0,8
tick,0x7ffdb840feb4,220231749,0,0x0,8
tick,0x7ffdb840feb4,220247274,0,0x0,8
tick,0x7ffdb840feb4,220262754,0,0x0,8
tick,0x7ffdb840feb4,220278279,0,0x0,8
tick,0x7ffdb840feb4,220294076,0,0x0,8
tick,0x7ffdb840feb4,220309582,0,0x0,8
tick,0x7ffdb840feb4,220324974,0,0x0,8
tick,0x7ffdb840feb4,220340587,0,0x0,8
tick,0x7ffdb840feb4,220355758,0,0x0,8
tick,0x7ffdb840feb4,220371775,0,0x0,8
tick,0x7ffdb840feb4,220386779,0,0x0,8
tick,0x7ffdb840feb4,220402308,0,0x0,8
tick,0x7ffdb840feb4,220417675,0,0x0,8
tick,0x7ffdb840feb4,220433627,0,0x0,8
tick,0x7ffdb840feb4,220449597,0,0x0,8
tick,0x7ffdb840feb4,220464952,0,0x0,8
tick,0x7ffdb840feb4,220480774,0,0x0,8
tick,0x7ffdb840feb4,220496785,0,0x0,8
tick,0x7ffdb840feb4,220511930,0,0x0,8
tick,0x7ffdb840feb4,220527666,0,0x0,8
tick,0x7ffdb840feb4,220542796,0,0x0,8
tick,0x7ffdb840feb4,220557940,0,0x0,8
tick,0x7ffdb840feb4,220573204,0,0x0,8
tick,0x7ffdb840feb4,220588618,0,0x0,8
tick,0x7ffdb840feb4,220604308,0,0x0,8
tick,0x7ffdb840feb4,220619616,0,0x0,8
tick,0x7ffdb840feb4,220634689,0,0x0,8
tick,0x7ffdb840feb4,220650625,0,0x0,8
tick,0x7ffdb840feb4,220665759,0,0x0,8
tick,0x7ffdb840feb4,220680766,0,0x0,8
tick,0x7ffdb840feb4,220696765,0,0x0,8
tick,0x7ffdb840feb4,220711811,0,0x0,8
tick,0x7ffdb840feb4,220726676,0,0x0,8
tick,0x7ffdb840feb4,220742687,0,0x0,8
tick,0x7ffdb840feb4,220758131,0,0x0,8
tick,0x7ffdb840feb4,220772958,0,0x0,8
tick,0x7ffdb840feb4,220788125,0,0x0,8
tick,0x7ffdb840feb4,220803299,0,0x0,8
tick,0x7ffdb840feb4,220818469,0,0x0,8
tick,0x7ffdb840feb4,220833680,0,0x0,8
tick,0x7ffdb840feb4,220849644,0,0x0,8
tick,0x7ffdb840feb4,220865662,0,0x0,8
tick,0x7ffdb840feb4,220880818,0,0x0,8
tick,0x7ffdb840feb4,220896281,0,0x0,8
tick,0x7ffdb840feb4,220911836,0,0x0,8
tick,0x7ffdb840feb4,220927624,0,0x0,8
tick,0x7ffdb840feb4,220942833,0,0x0,8
tick,0x7ffdb840feb4,220958836,0,0x0,8
tick,0x7ffdb840feb4,220973686,0,0x0,8
tick,0x7ffdb840feb4,220989679,0,0x0,8
tick,0x7ffdb840feb4,221005676,0,0x0,8
tick,0x7ffdb840feb4,221021685,0,0x0,8
tick,0x7ffdb840feb4,221036674,0,0x0,8
tick,0x7ffdb840feb4,221051683,0,0x0,8
tick,0x7ffdb840feb4,221067338,0,0x0,8
tick,0x7ffdb840feb4,221082628,0,0x0,8
tick,0x7ffdb840feb4,221097639,0,0x0,8
tick,0x7ffdb840feb4,221112849,0,0x0,8
tick,0x7ffdb840feb4,221128487,0,0x0,8
tick,0x7ffdb840feb4,221143681,0,0x0,8
tick,0x7ffdb840feb4,221159666,0,0x0,8
tick,0x7ffdb840feb4,221175666,0,0x0,8
tick,0x7ffdb840feb4,221190708,0,0x0,8
tick,0x7ffdb840feb4,221206683,0,0x0,8
tick,0x7ffdb840feb4,221222297,0,0x0,8
tick,0x7ffdb840feb4,221237694,0,0x0,8
tick,0x7ffdb840feb4,221253709,0,0x0,8
tick,0x7ffdb840feb4,221269505,0,0x0,8
tick,0x7ffdb840feb4,221284624,0,0x0,8
tick,0x7ffdb840feb4,221299707,0,0x0,8
tick,0x7ffdb840feb4,221314948,0,0x0,8
tick,0x7ffdb840feb4,221330716,0,0x0,8
tick,0x7ffdb840feb4,221345714,0,0x0,8
tick,0x7ffdb840feb4,221360879,0,0x0,8
tick,0x7ffdb840feb4,221376028,0,0x0,8
tick,0x7ffdb840feb4,221390716,0,0x0,8
tick,0x7ffdb840feb4,221406686,0,0x0,8
tick,0x7ffdb840feb4,221422527,0,0x0,8
tick,0x7ffdb840feb4,221437779,0,0x0,8
tick,0x7ffdb840feb4,221453778,0,0x0,8
tick,0x7ffdb840feb4,221469720,0,0x0,8
tick,0x7ffdb840feb4,221484616,0,0x0,8
tick,0x7ffdb840feb4,221499721,0,0x0,8
tick,0x7ffdb840feb4,221514962,0,0x0,8
tick,0x7ffdb840feb4,221530734,0,0x0,8
tick,0x7ffdb840feb4,221546092,0,0x0,8
tick,0x7ffdb840feb4,221561905,0,0x0,8
tick,0x7ffdb840feb4,221577114,0,0x0,8
tick,0x7ffdb840feb4,221592399,0,0x0,8
tick,0x7ffdb840feb4,221607737,0,0x0,8
tick,0x7ffdb840feb4,221623721,0,0x0,8
tick,0x7ffdb840feb4,221639718,0,0x0,8
tick,0x7ffdb840feb4,221655632,0,0x0,8
tick,0x7ffdb840feb4,221670746,0,0x0,8
tick,0x7ffdb840feb4,221686612,0,0x0,8
tick,0x7ffdb840feb4,221701930,0,0x0,8
tick,0x7ffdb840feb4,221717613,0,0x0,8
tick,0x7ffdb840feb4,221733626,0,0x0,8
tick,0x7ffdb840feb4,221748753,0,0x0,8
tick,0x7ffdb840feb4,221763753,0,0x0,8
tick,0x7ffdb840feb4,221779772,0,0x0,8
tick,0x7ffdb840feb4,221795186,0,0x0,8
tick,0x7ffdb840feb4,221810758,0,0x0,8
tick,0x7ffdb840feb4,221825765,0,0x0,8
tick,0x7ffdb840feb4,221840939,0,0x0,8
tick,0x7ffdb840feb4,221856202,0,0x0,8
tick,0x7ffdb840feb4,221871759,0,0x0,8
tick,0x7ffdb840feb4,221887724,0,0x0,8
tick,0x7ffdb840feb4,221902947,0,0x0,8
tick,0x7ffdb840feb4,221917956,0,0x0,8
tick,0x7ffdb840feb4,221933956,0,0x0,8
tick,0x7ffdb840feb4,221949787,0,0x0,8
tick,0x7ffdb840feb4,221964951,0,0x0,8
tick,0x7ffdb840feb4,221980785,0,0x0,8
tick,0x7ffdb840feb4,221995748,0,0x0,8
tick,0x7ffdb840feb4,222011747,0,0x0,8
tick,0x7ffdb840feb4,222027749,0,0x0,8
tick,0x7ffdb840feb4,222042759,0,0x0,8
tick,0x7ffdb840feb4,222058783,0,0x0,8
tick,0x7ffdb840feb4,222073769,0,0x0,8
tick,0x7ffdb840feb4,222089729,0,0x0,8
tick,0x7ffdb840feb4,222105765,0,0x0,8
tick,0x7ffdb840feb4,222121773,0,0x0,8
tick,0x7ffdb840feb4,222137776,0,0x0,8
tick,0x7ffdb840feb4,222152980,0,0x0,8
tick,0x7ffdb840feb4,222168789,0,0x0,8
tick,0x7ffdb840feb4,222183679,0,0x0,8
tick,0x7ffdb840feb4,222199288,0,0x0,8
tick,0x7ffdb840feb4,222214789,0,0x0,8
tick,0x7ffdb840feb4,222229736,0,0x0,8
tick,0x7ffdb840feb4,222245444,0,0x0,8
tick,0x7ffdb840feb4,222261479,0,0x0,8
tick,0x7ffdb840feb4,222277006,0,0x0,8
tick,0x7ffdb840feb4,222291702,0,0x0,8
tick,0x7ffdb840feb4,222307660,0,0x0,8
tick,0x7ffdb840feb4,222322673,0,0x0,8
tick,0x7ffdb840feb4,222337875,0,0x0,8
tick,0x7ffdb840feb4,222353013,0,0x0,8
tick,0x7ffdb840feb4,222368837,0,0x0,8
tick,0x7ffdb840feb4,222384019,0,0x0,8
tick,0x7ffdb840feb4,222398666,0,0x0,8
tick,0x7ffdb840feb4,222414008,0,0x0,8
tick,0x7ffdb840feb4,222429835,0,0x0,8
tick,0x7ffdb840feb4,222445108,0,0x0,8
tick,0x7ffdb840feb4,222460844,0,0x0,8
tick,0x7ffdb840feb4,222476029,0,0x0,8
tick,0x7ffdb840feb4,222490879,0,0x0,8
tick,0x7ffdb840feb4,222506846,0,0x0,8
tick,0x7ffdb840feb4,222522818,0,0x0,8
tick,0x7ffdb840feb4,222537970,0,0x0,8
tick,0x7ffdb840feb4,222553174,0,0x0,8
tick,0x7ffdb840feb4,222568858,0,0x0,8
tick,0x7ffdb840feb4,222584663,0,0x0,8
tick,0x7ffdb840feb4,222599659,0,0x0,8
tick,0x7ffdb840feb4,222614644,0,0x0,8
tick,0x7ffdb840feb4,222629872,0,0x0,8
tick,0x7ffdb840feb4,222645040,0,0x0,8
tick,0x7ffdb840feb4,222660867,0,0x0,8
tick,0x7ffdb840feb4,222676660,0,0x0,8
tick,0x7ffdb840feb4,222692671,0,0x0,8
tick,0x7ffdb840feb4,222708695,0,0x0,8
tick,0x7ffdb840feb4,222724057,0,0x0,8
tick,0x7ffdb840feb4,222739869,0,0x0,8
tick,0x7ffdb840feb4,222755056,0,0x0,8
tick,0x7ffdb840feb4,222770053,0,0x0,8
tick,0x7ffdb840feb4,222785214,0,0x0,8
tick,0x7ffdb840feb4,222800639,0,0x0,8
tick,0x7ffdb840feb4,222815997,0,0x0,8
tick,0x7ffdb840feb4,222832063,0,0x0,8
tick,0x7ffdb840feb4,222847889,0,0x0,8
tick,0x7ffdb840feb4,222862528,0,0x0,8
tick,0x7ffdb840feb4,222878552,0,0x0,8
tick,0x7ffdb840feb4,222893881,0,0x0,8
tick,0x7ffdb840feb4,222909680,0,0x0,8
tick,0x7ffdb840feb4,222925669,0,0x0,8
tick,0x7ffdb840feb4,222940894,0,0x0,8
tick,0x7ffdb840feb4,222956908,0,0x0,8
tick,0x7ffdb840feb4,222972077,0,0x0,8
tick,0x7ffdb840feb4,222988022,0,0x0,8
tick,0x7ffdb840feb4,223003081,0,0x0,8
tick,0x7ffdb840feb4,223018080,0,0x0,8
tick,0x7ffdb840feb4,223034094,0,0x0,8
tick,0x7ffdb840feb4,223050090,0,0x0,8
tick,0x7ffdb840feb4,223065865,0,0x0,8
tick,0x7ffdb840feb4,223081088,0,0x0,8
tick,0x7ffdb840feb4,223096164,0,0x0,8
tick,0x7ffdb840feb4,223112092,0,0x0,8
tick,0x7ffdb840feb4,223127678,0,0x0,8
tick,0x7ffdb840feb4,223143105,0,0x0,8
tick,0x7ffdb840feb4,223158687,0,0x0,8
tick,0x7ffdb840feb4,223173684,0,0x0,8
tick,0x7ffdb840feb4,223188909,0,0x0,8
tick,0x7ffdb840feb4,223204102,0,0x0,8
tick,0x7ffdb840feb4,223219930,0,0x0,8
tick,0x7ffdb840feb4,223235109,0,0x0,8
tick,0x7ffdb840feb4,223250115,0,0x0,8
tick,0x7ffdb840feb4,223265400,0,0x0,8
tick,0x7ffdb840feb4,223280947,0,0x0,8
tick,0x7ffdb840feb4,223296172,0,0x0,8
tick,0x7ffdb840feb4,223312113,0,0x0,8
tick,0x7ffdb840feb4,223327492,0,0x0,8
tick,0x7ffdb840feb4,223343117,0,0x0,8
tick,0x7ffdb840feb4,223358127,0,0x0,8
tick,0x7ffdb840feb4,223374115,0,0x0,8
tick,0x7ffdb840feb4,223389948,0,0x0,8
tick,0x7ffdb840feb4,223405122,0,0x0,8
tick,0x7ffdb840feb4,223420954,0,0x0,8
tick,0x7ffdb840feb4,223435965,0,0x0,8
tick,0x7ffdb840feb4,223451124,0,0x0,8
tick,0x7ffdb840feb4,223467138,0,0x0,8
tick,0x7ffdb840feb4,223482630,0,0x0,8
tick,0x7ffdb840feb4,223497281,0,0x0,8
tick,0x7ffdb840feb4,223512685,0,0x0,8
tick,0x7ffdb840feb4,223527828,0,0x0,8
tick,0x7ffdb840feb4,223543145,0,0x0,8
tick,0x7ffdb840feb4,223558510,0,0x0,8
tick,0x7ffdb840feb4,223573512,0,0x0,8
tick,0x7ffdb840feb4,223588973,0,0x0,8
tick,0x7ffdb840feb4,223604656,0,0x0,8
tick,0x7ffdb840feb4,223619991,0,0x0,8
tick,0x7ffdb840feb4,223635165,0,0x0,8
tick,0x7ffdb840feb4,223650796,0,0x0,8
tick,0x7ffdb840feb4,223665963,0,0x0,8
tick,0x7ffdb840feb4,223681167,0,0x0,8
tick,0x7ffdb840feb4,223696812,0,0x0,8
tick,0x7ffdb840feb4,223712168,0,0x0,8
tick,0x7ffdb840feb4,223727557,0,0x0,8
tick,0x7ffdb840feb4,223743170,0,0x0,8
tick,0x7ffdb840feb4,223758562,0,0x0,8
tick,0x7ffdb840feb4,223774562,0,0x0,8
tick,0x7ffdb840feb4,223790589,0,0x0,8
tick,0x7ffdb840feb4,223806577,0,0x0,8
tick,0x7ffdb840feb4,223822598,0,0x0,8
tick,0x7ffdb840feb4,223838011,0,0x0,8
tick,0x7ffdb840feb4,223854013,0,0x0,8
tick,0x7ffdb840feb4,223870005,0,0x0,8
tick,0x7ffdb840feb4,223886015,0,0x0,8
tick,0x7ffdb840feb4,223901189,0,0x0,8
tick,0x7ffdb840feb4,223916969,0,0x0,8
tick,0x7ffdb840feb4,223932189,0,0x0,8
tick,0x7ffdb840feb4,223947344,0,0x0,8
tick,0x7ffdb840feb4,223963199,0,0x0,8
tick,0x7ffdb840feb4,223978594,0,0x0,8
tick,0x7ffdb840feb4,223994210,0,0x0,8
tick,0x7ffdb840feb4,224010182,0,0x0,8
tick,0x7ffdb840feb4,224026181,0,0x0,8
tick,0x7ffdb840feb4,224042185,0,0x0,8
tick,0x7ffdb840feb4,224058184,0,0x0,8
tick,0x7ffdb840feb4,224073697,0,0x0,8
tick,0x7ffdb840feb4,224089031,0,0x0,8
tick,0x7ffdb840feb4,224104208,0,0x0,8
tick,0x7ffdb840feb4,224120046,0,0x0,8
tick,0x7ffdb840feb4,224135557,0,0x0,8
tick,0x7ffdb840feb4,224150863,0,0x0,8
tick,0x7ffdb840feb4,224165975,0,0x0,8
tick,0x7ffdb840feb4,224181219,0,0x0,8
tick,0x7ffdb840feb4,224196971,0,0x0,8
tick,0x7ffdb840feb4,224212186,0,0x0,8
tick,0x7ffdb840feb4,224227526,0,0x0,8
tick,0x7ffdb840feb4,224243202,0,0x0,8
tick,0x7ffdb840feb4,224258553,0,0x0,8
tick,0x7ffdb840feb4,224274232,0,0x0,8
tick,0x7ffdb840feb4,224290057,0,0x0,8
tick,0x7ffdb840feb4,224305198,0,0x0,8
tick,0x7ffdb840feb4,224321059,0,0x0,8
tick,0x7ffdb840feb4,224336827,0,0x0,8
tick,0x7ffdb840feb4,224352068,0,0x0,8
tick,0x7ffdb840feb4,224367963,0,0x0,8
tick,0x7ffdb840feb4,224383073,0,0x0,8
tick,0x7ffdb840feb4,224398677,0,0x0,8
tick,0x7ffdb840feb4,224414190,0,0x0,8
tick,0x7ffdb840feb4,224429077,0,0x0,8
tick,0x7ffdb840feb4,224445084,0,0x0,8
tick,0x7ffdb840feb4,224461073,0,0x0,8
tick,0x7ffdb840feb4,224476610,0,0x0,8
tick,0x7ffdb840feb4,224492263,0,0x0,8
tick,0x7ffdb840feb4,224507608,0,0x0,8
tick,0x7ffdb840feb4,224523677,0,0x0,8
tick,0x7ffdb840feb4,224539095,0,0x0,8
tick,0x7ffdb840feb4,224555085,0,0x0,8
tick,0x7ffdb840feb4,224571090,0,0x0,8
tick,0x7ffdb840feb4,224586273,0,0x0,8
tick,0x7ffdb840feb4,224602272,0,0x0,8
tick,0x7ffdb840feb4,224616975,0,0x0,8
tick,0x7ffdb840feb4,224632277,0,0x0,8
tick,0x7ffdb840feb4,224647296,0,0x0,8
tick,0x7ffdb840feb4,224662536,0,0x0,8
tick,0x7ffdb840feb4,224677696,0,0x0,8
tick,0x7ffdb840feb4,224693605,0,0x0,8
tick,0x7ffdb840feb4,224708801,0,0x0,8
tick,0x7ffdb840feb4,224724288,0,0x0,8
tick,0x7ffdb840feb4,224740116,0,0x0,8
tick,0x7ffdb840feb4,224755869,0,0x0,8
tick,0x7ffdb840feb4,224771121,0,0x0,8
tick,0x7ffdb840feb4,224786124,0,0x0,8
tick,0x7ffdb840feb4,224802118,0,0x0,8
tick,0x7ffdb840feb4,224817973,0,0x0,8
tick,0x7ffdb840feb4,224833653,0,0x0,8
tick,0x7ffdb840feb4,224849124,0,0x0,8
tick,0x7ffdb840feb4,224863975,0,0x0,8
tick,0x7ffdb840feb4,224879137,0,0x0,8
tick,0x7ffdb840feb4,224894500,0,0x0,8
tick,0x7ffdb840feb4,224910130,0,0x0,8
tick,0x7ffdb840feb4,224926143,0,0x0,8
tick,0x7ffdb840feb4,224941304,0,0x0,8
tick,0x7ffdb840feb4,224956694,0,0x0,8
tick,0x7ffdb840feb4,224972316,0,0x0,8
tick,0x7ffdb840feb4,224987694,0,0x0,8
tick,0x7ffdb840feb4,225002754,0,0x0,8
tick,0x7ffdb840feb4,225018151,0,0x0,8
tick,0x7ffdb840feb4,225034147,0,0x0,8
tick,0x7ffdb840feb4,225050157,0,0x0,8
tick,0x7ffdb840feb4,225066171,0,0x0,8
tick,0x7ffdb840feb4,225081321,0,0x0,8
tick,0x7ffdb840feb4,225096572,0,0x0,8
tick,0x7ffdb840feb4,225112348,0,0x0,8
tick,0x7ffdb840feb4,225127964,0,0x0,8
tick,0x7ffdb840feb4,225143348,0,0x0,8
tick,0x7ffdb840feb4,225159162,0,0x0,8
tick,0x7ffdb840feb4,225174661,0,0x0,8
tick,0x7ffdb840feb4,225190167,0,0x0,8
tick,0x7ffdb840feb4,225205347,0,0x0,8
tick,0x7ffdb840feb4,225221167,0,0x0,8
tick,0x7ffdb840feb4,225236898,0,0x0,8
tick,0x7ffdb840feb4,225252354,0,0x0,8
tick,0x7ffdb840feb4,225268371,0,0x0,8
tick,0x7ffdb840feb4,225283767,0,0x0,8
tick,0x7ffdb840feb4,225299181,0,0x0,8
tick,0x7ffdb840feb4,225314343,0,0x0,8
tick,0x7ffdb840feb4,225330185,0,0x0,8
tick,0x7ffdb840feb4,225346195,0,0x0,8
tick,0x7ffdb840feb4,225361184,0,0x0,8
tick,0x7ffdb840feb4,225376674,0,0x0,8
tick,0x7ffdb840feb4,225392364,0,0x0,8
tick,0x7ffdb840feb4,225408187,0,0x0,8
tick,0x7ffdb840feb4,225423386,0,0x0,8
tick,0x7ffdb840feb4,225438943,0,0x0,8
tick,0x7ffdb840feb4,225454938,0,0x0,8
tick,0x7ffdb840feb4,225470203,0,0x0,8
tick,0x7ffdb840feb4,225485640,0,0x0,8
tick,0x7ffdb840feb4,225501203,0,0x0,8
tick,0x7ffdb840feb4,225516162,0,0x0,8
tick,0x7ffdb840feb4,225531218,0,0x0,8
tick,0x7ffdb840feb4,225546917,0,0x0,8
tick,0x7ffdb840feb4,225562306,0,0x0,8
tick,0x7ffdb840feb4,225577684,0,0x0,8
tick,0x7ffdb840feb4,225592389,0,0x0,8
tick,0x7ffdb840feb4,225608231,0,0x0,8
tick,0x7ffdb840feb4,225623995,0,0x0,8
tick,0x7ffdb840feb4,225639233,0,0x0,8
tick,0x7ffdb840feb4,225654222,0,0x0,8
tick,0x7ffdb840feb4,225670220,0,0x0,8
tick,0x7ffdb840feb4,225685396,0,0x0,8
tick,0x7ffdb840feb4,225700232,0,0x0,8
tick,0x7ffdb840feb4,225715972,0,0x0,8
tick,0x7ffdb840feb4,225731234,0,0x0,8
tick,0x7ffdb840feb4,225746335,0,0x0,8
tick,0x7ffdb840feb4,225762411,0,0x0,8
tick,0x7ffdb840feb4,225777695,0,0x0,8
tick,0x7ffdb840feb4,225792917,0,0x0,8
tick,0x7ffdb840feb4,225808342,0,0x0,8
tick,0x7ffdb840feb4,225824214,0,0x0,8
tick,0x7ffdb840feb4,225840248,0,0x0,8
tick,0x7ffdb840feb4,225856173,0,0x0,8
tick,0x7ffdb840feb4,225871255,0,0x0,8
tick,0x7ffdb840feb4,225887249,0,0x0,8
tick,0x7ffdb840feb4,225902434,0,0x0,8
tick,0x7ffdb840feb4,225918253,0,0x0,8
tick,0x7ffdb840feb4,225934258,0,0x0,8
tick,0x7ffdb840feb4,225950261,0,0x0,8
tick,0x7ffdb840feb4,225965991,0,0x0,8
tick,0x7ffdb840feb4,225981276,0,0x0,8
tick,0x7ffdb840feb4,225997176,0,0x0,8
tick,0x7ffdb840feb4,226012415,0,0x0,8
tick,0x7ffdb840feb4,226027410,0,0x0,8
tick,0x7ffdb840feb4,226042416,0,0x0,8
tick,0x7ffdb840feb4,226058423,0,0x0,8
tick,0x7ffdb840feb4,226074426,0,0x0,8
tick,0x7ffdb840feb4,226090280,0,0x0,8
tick,0x7ffdb840feb4,226106278,0,0x0,8
tick,0x7ffdb840feb4,226122288,0,0x0,8
tick,0x7ffdb840feb4,226138316,0,0x0,8
tick,0x7ffdb840feb4,226153931,0,0x0,8
tick,0x7ffdb840feb4,226168986,0,0x0,8
tick,0x7ffdb840feb4,226184952,0,0x0,8
tick,0x7ffdb840feb4,226200292,0,0x0,8
tick,0x7ffdb840feb4,226215464,0,0x0,8
tick,0x7ffdb840feb4,226231291,0,0x0,8
tick,0x7ffdb840feb4,226246214,0,0x0,8
tick,0x7ffdb840feb4,226261469,0,0x0,8
tick,0x7ffdb840feb4,226277434,0,0x0,8
tick,0x7ffdb840feb4,226292487,0,0x0,8
tick,0x7ffdb840feb4,226308296,0,0x0,8
tick,0x7ffdb840feb4,226324307,0,0x0,8
tick,0x7ffdb840feb4,226340298,0,0x0,8
tick,0x7ffdb840feb4,226355487,0,0x0,8
tick,0x7ffdb840feb4,226370308,0,0x0,8
tick,0x7ffdb840feb4,226385645,0,0x0,8
tick,0x7ffdb840feb4,226401577,0,0x0,8
tick,0x7ffdb840feb4,226416698,0,0x0,8
tick,0x7ffdb840feb4,226431487,0,0x0,8
tick,0x7ffdb840feb4,226447090,0,0x0,8
tick,0x7ffdb840feb4,226462493,0,0x0,8
tick,0x7ffdb840feb4,226478443,0,0x0,8
tick,0x7ffdb840feb4,226494334,0,0x0,8
tick,0x7ffdb840feb4,226510331,0,0x0,8
tick,0x7ffdb840feb4,226525683,0,0x0,8
tick,0x7ffdb840feb4,226540924,0,0x0,8
tick,0x7ffdb840feb4,226556513,0,0x0,8
tick,0x7ffdb840feb4,226572504,0,0x0,8
tick,0x7ffdb840feb4,226587632,0,0x0,8
tick,0x7ffdb840feb4,226602636,0,0x0,8
tick,0x7ffdb840feb4,226618485,0,0x0,8
tick,0x7ffdb840feb4,226633928,0,0x0,8
tick,0x7ffdb840feb4,226649346,0,0x0,8
tick,0x7ffdb840feb4,226664531,0,0x0,8
tick,0x7ffdb840feb4,226679922,0,0x0,8
tick,0x7ffdb840feb4,226695136,0,0x0,8
tick,0x7ffdb840feb4,226710347,0,0x0,8
tick,0x7ffdb840feb4,226726431,0,0x0,8
tick,0x7ffdb840feb4,226742416,0,0x0,8
tick,0x7ffdb840feb4,226758422,0,0x0,8
tick,0x7ffdb840feb4,226774426,0,0x0,8
tick,0x7ffdb840feb4,226790357,0,0x0,8
tick,0x7ffdb840feb4,226806437,0,0x0,8
tick,0x7ffdb840feb4,226822537,0,0x0,8
tick,0x7ffdb840feb4,226838379,0,0x0,8
tick,0x7ffdb840feb4,226854375,0,0x0,8
tick,0x7ffdb840feb4,226870382,0,0x0,8
tick,0x7ffdb840feb4,226885550,0,0x0,8
tick,0x7ffdb840feb4,226900369,0,0x0,8
tick,0x7ffdb840feb4,226915983,0,0x0,8
tick,0x7ffdb840feb4,226931529,0,0x0,8
tick,0x7ffdb840feb4,226946561,0,0x0,8
tick,0x7ffdb840feb4,226962381,0,0x0,8
tick,0x7ffdb840feb4,226978384,0,0x0,8
tick,0x7ffdb840feb4,226993969,0,0x0,8
tick,0x7ffdb840feb4,227009388,0,0x0,8
tick,0x7ffdb840feb4,227025159,0,0x0,8
tick,0x7ffdb840feb4,227040517,0,0x0,8
tick,0x7ffdb840feb4,227056527,0,0x0,8
tick,0x7ffdb840feb4,227072527,0,0x0,8
tick,0x7ffdb840feb4,227087523,0,0x0,8
tick,0x7ffdb840feb4,227102575,0,0x0,8
tick,0x7ffdb840feb4,227117519,0,0x0,8
tick,0x7ffdb840feb4,227133004,0,0x0,8
tick,0x7ffdb840feb4,227148503,0,0x0,8
tick,0x7ffdb840feb4,227163992,0,0x0,8
tick,0x7ffdb840feb4,227179528,0,0x0,8
tick,0x7ffdb840feb4,227194446,0,0x0,8
tick,0x7ffdb840feb4,227210406,0,0x0,8
tick,0x7ffdb840feb4,227225772,0,0x0,8
tick,0x7ffdb840feb4,227241412,0,0x0,8
tick,0x7ffdb840feb4,227256634,0,0x0,8
tick,0x7ffdb840feb4,227272600,0,0x0,8
tick,0x7ffdb840feb4,227288454,0,0x0,8
tick,0x7ffdb840feb4,227304542,0,0x0,8
tick,0x7ffdb840feb4,227320426,0,0x0,8
tick,0x7ffdb840feb4,227336426,0,0x0,8
tick,0x7ffdb840feb4,227351599,0,0x0,8
tick,0x7ffdb840feb4,227366981,0,0x0,8
tick,0x7ffdb840feb4,227382614,0,0x0,8
tick,0x7ffdb840feb4,227398700,0,0x0,8
tick,0x7ffdb840feb4,227414695,0,0x0,8
tick,0x7ffdb840feb4,227430440,0,0x0,8
tick,0x7ffdb840feb4,227446109,0,0x0,8
tick,0x7ffdb840feb4,227461439,0,0x0,8
tick,0x7ffdb840feb4,227476624,0,0x0,8
tick,0x7ffdb840feb4,227492637,0,0x0,8
tick,0x7ffdb840feb4,227508626,0,0x0,8
tick,0x7ffdb840feb4,227524635,0,0x0,8
tick,0x7ffdb840feb4,227540447,0,0x0,8
tick,0x7ffdb840feb4,227555621,0,0x0,8
tick,0x7ffdb840feb4,227570651,0,0x0,8
tick,0x7ffdb840feb4,227586656,0,0x0,8
tick,0x7ffdb840feb4,227602669,0,0x0,8
tick,0x7ffdb840feb4,227618636,0,0x0,8
tick,0x7ffdb840feb4,227633639,0,0x0,8
tick,0x7ffdb840feb4,227649318,0,0x0,8
tick,0x7ffdb840feb4,227664638,0,0x0,8
tick,0x7ffdb840feb4,227680544,0,0x0,8
tick,0x7ffdb840feb4,227695539,0,0x0,8
tick,0x7ffdb840feb4,227711550,0,0x0,8
tick,0x7ffdb840feb4,227727551,0,0x0,8
tick,0x7ffdb840feb4,227743550,0,0x0,8
tick,0x7ffdb840feb4,227759023,0,0x0,8
tick,0x7ffdb840feb4,227775006,0,0x0,8
tick,0x7ffdb840feb4,227790473,0,0x0,8
tick,0x7ffdb840feb4,227806492,0,0x0,8
tick,0x7ffdb840feb4,227821662,0,0x0,8
tick,0x7ffdb840feb4,227836489,0,0x0,8
tick,0x7ffdb840feb4,227852483,0,0x0,8
tick,0x7ffdb840feb4,227867772,0,0x0,8
tick,0x7ffdb840feb4,227883152,0,0x0,8
tick,0x7ffdb840feb4,227898317,0,0x0,8
tick,0x7ffdb840feb4,227913555,0,0x0,8
tick,0x7ffdb840feb4,227929473,0,0x0,8
tick,0x7ffdb840feb4,227945489,0,0x0,8
tick,0x7ffdb840feb4,227961494,0,0x0,8
tick,0x7ffdb840feb4,227976966,0,0x0,8
tick,0x7ffdb840feb4,227992672,0,0x0,8
tick,0x7ffdb840feb4,228008505,0,0x0,8
tick,0x7ffdb840feb4,228023273,0,0x0,8
tick,0x7ffdb840feb4,228038549,0,0x0,8
tick,0x7ffdb840feb4,228054542,0,0x0,8
tick,0x7ffdb840feb4,228070549,0,0x0,8
tick,0x7ffdb840feb4,228085550,0,0x0,8
tick,0x7ffdb840feb4,228100551,0,0x0,8
tick,0x7ffdb840feb4,228115985,0,0x0,8
tick,0x7ffdb840feb4,228131565,0,0x0,8
tick,0x7ffdb840feb4,228146534,0,0x0,8
tick,0x7ffdb840feb4,228162210,0,0x0,8
tick,0x7ffdb840feb4,228178227,0,0x0,8
tick,0x7ffdb840feb4,228193627,0,0x0,8
tick,0x7ffdb840feb4,228209233,0,0x0,8
tick,0x7ffdb840feb4,228224332,0,0x0,8
tick,0x7ffdb840feb4,228239530,0,0x0,8
tick,0x7ffdb840feb4,228255586,0,0x0,8
tick,0x7ffdb840feb4,228271259,0,0x0,8
tick,0x7ffdb840feb4,228286585,0,0x0,8
tick,0x7ffdb840feb4,228301538,0,0x0,8
tick,0x7ffdb840feb4,228317595,0,0x0,8
tick,0x7ffdb840feb4,228332865,0,0x0,8
tick,0x7ffdb840feb4,228348282,0,0x0,8
tick,0x7ffdb840feb4,228363556,0,0x0,8
tick,0x7ffdb840feb4,228378969,0,0x0,8
tick,0x7ffdb840feb4,228393962,0,0x0,8
tick,0x7ffdb840feb4,228409102,0,0x0,8
tick,0x7ffdb840feb4,228424413,0,0x0,8
tick,0x7ffdb840feb4,228439550,0,0x0,8
tick,0x7ffdb840feb4,228455653,0,0x0,8
tick,0x7ffdb840feb4,228470563,0,0x0,8
tick,0x7ffdb840feb4,228486564,0,0x0,8
tick,0x7ffdb840feb4,228501736,0,0x0,8
tick,0x7ffdb840feb4,228516985,0,0x0,8
tick,0x7ffdb840feb4,228532745,0,0x0,8
tick,0x7ffdb840feb4,228547911,0,0x0,8
tick,0x7ffdb840feb4,228563327,0,0x0,8
tick,0x7ffdb840feb4,228579339,0,0x0,8
tick,0x7ffdb840feb4,228594968,0,0x0,8
tick,0x7ffdb840feb4,228610575,0,0x0,8
tick,0x7ffdb840feb4,228625758,0,0x0,8
tick,0x7ffdb840feb4,228641588,0,0x0,8
tick,0x7ffdb840feb4,228656775,0,0x0,8
tick,0x7ffdb840feb4,228672612,0,0x0,8
tick,0x7ffdb840feb4,228687643,0,0x0,8
tick,0x7ffdb840feb4,228702767,0,0x0,8
tick,0x7ffdb840feb4,228718649,0,0x0,8
tick,0x7ffdb840feb4,228733789,0,0x0,8
tick,0x7ffdb840feb4,228749433,0,0x0,8
tick,0x7ffdb840feb4,228764600,0,0x0,8
tick,0x7ffdb840feb4,228780615,0,0x0,8
tick,0x7ffdb840feb4,228795617,0,0x0,8
tick,0x7ffdb840feb4,228811602,0,0x0,8
tick,0x7ffdb840feb4,228826567,0,0x0,8
tick,0x7ffdb840feb4,228842602,0,0x0,8
tick,0x7ffdb840feb4,228858616,0,0x0,8
tick,0x7ffdb840feb4,228874008,0,0x0,8
tick,0x7ffdb840feb4,228888943,0,0x0,8
tick,0x7ffdb840feb4,228904276,0,0x0,8
tick,0x7ffdb840feb4,228919499,0,0x0,8
tick,0x7ffdb840feb4,228935509,0,0x0,8
tick,0x7ffdb840feb4,228950615,0,0x0,8
tick,0x7ffdb840feb4,228965998,0,0x0,8
tick,0x7ffdb840feb4,228981625,0,0x0,8
tick,0x7ffdb840feb4,228996796,0,0x0,8
tick,0x7ffdb840feb4,229012810,0,0x0,8
tick,0x7ffdb840feb4,229028198,0,0x0,8
tick,0x7ffdb840feb4,229043993,0,0x0,8
tick,0x7ffdb840feb4,229059636,0,0x0,8
tick,0x7ffdb840feb4,229075568,0,0x0,8
tick,0x7ffdb840feb4,229090559,0,0x0,8
tick,0x7ffdb840feb4,229105565,0,0x0,8
tick,0x7ffdb840feb4,229121567,0,0x0,8
tick,0x7ffdb840feb4,229136947,0,0x0,8
tick,0x7ffdb840feb4,229152823,0,0x0,8
tick,0x7ffdb840feb4,229167993,0,0x0,8
tick,0x7ffdb840feb4,229183333,0,0x0,8
tick,0x7ffdb840feb4,229198335,0,0x0,8
tick,0x7ffdb840feb4,229213831,0,0x0,8
tick,0x7ffdb840feb4,229228837,0,0x0,8
tick,0x7ffdb840feb4,229244221,0,0x0,8
tick,0x7ffdb840feb4,229259654,0,0x0,8
tick,0x7ffdb840feb4,229274841,0,0x0,8
tick,0x7ffdb840feb4,229290657,0,0x0,8
tick,0x7ffdb840feb4,229306312,0,0x0,8
tick,0x7ffdb840feb4,229322307,0,0x0,8
tick,0x7ffdb840feb4,229337846,0,0x0,8
tick,0x7ffdb840feb4,229353708,0,0x0,8
tick,0x7ffdb840feb4,229369330,0,0x0,8
tick,0x7ffdb840feb4,229385332,0,0x0,8
tick,0x7ffdb840feb4,229400671,0,0x0,8
tick,0x7ffdb840feb4,229416669,0,0x0,8
tick,0x7ffdb840feb4,229431849,0,0x0,8
tick,0x7ffdb840feb4,229447128,0,0x0,8
tick,0x7ffdb840feb4,229462873,0,0x0,8
tick,0x7ffdb840feb4,229478686,0,0x0,8
tick,0x7ffdb840feb4,229494706,0,0x0,8
tick,0x7ffdb840feb4,229510705,0,0x0,8
tick,0x7ffdb840feb4,229526628,0,0x0,8
tick,0x7ffdb840feb4,229541543,0,0x0,8
tick,0x7ffdb840feb4,229557474,0,0x0,8
tick,0x7ffdb840feb4,229573266,0,0x0,8
tick,0x7ffdb840feb4,229589332,0,0x0,8
tick,0x7ffdb840feb4,229604486,0,0x0,8
tick,0x7ffdb840feb4,229620460,0,0x0,8
tick,0x7ffdb840feb4,229635890,0,0x0,8
tick,0x7ffdb840feb4,229650725,0,0x0,8
tick,0x7ffdb840feb4,229666028,0,0x0,8
tick,0x7ffdb840feb4,229681717,0,0x0,8
tick,0x7ffdb840feb4,229697491,0,0x0,8
tick,0x7ffdb840feb4,229712879,0,0x0,8
tick,0x7ffdb840feb4,229728487,0,0x0,8
tick,0x7ffdb840feb4,229743887,0,0x0,8
tick,0x7ffdb840feb4,229758659,0,0x0,8
tick,0x7ffdb840feb4,229773903,0,0x0,8
tick,0x7ffdb840feb4,229789728,0,0x0,8
tick,0x7ffdb840feb4,229805741,0,0x0,8
tick,0x7ffdb840feb4,229821016,0,0x0,8
tick,0x7ffdb840feb4,229836746,0,0x0,8
tick,0x7ffdb840feb4,229851765,0,0x0,8
tick,0x7ffdb840feb4,229867012,0,0x0,8
tick,0x7ffdb840feb4,229882015,0,0x0,8
tick,0x7ffdb840feb4,229897346,0,0x0,8
tick,0x7ffdb840feb4,229912910,0,0x0,8
tick,0x7ffdb840feb4,229928556,0,0x0,8
tick,0x7ffdb840feb4,229943444,0,0x0,8
tick,0x7ffdb840feb4,229958742,0,0x0,8
tick,0x7ffdb840feb4,229973914,0,0x0,8
tick,0x7ffdb840feb4,229989567,0,0x0,8
tick,0x7ffdb840feb4,230005012,0,0x0,8
tick,0x7ffdb840feb4,230020748,0,0x0,8
tick,0x7ffdb840feb4,230035924,0,0x0,8
tick,0x7ffdb840feb4,230051565,0,0x0,8
tick,0x7ffdb840feb4,230067002,0,0x0,8
tick,0x7ffdb840feb4,230081999,0,0x0,8
tick,0x7ffdb840feb4,230098007,0,0x0,8
tick,0x7ffdb840feb4,230114018,0,0x0,8
tick,0x7ffdb840feb4,230129373,0,0x0,8
tick,0x7ffdb840feb4,230144948,0,0x0,8
tick,0x7ffdb840feb4,230160761,0,0x0,8
tick,0x7ffdb840feb4,230175637,0,0x0,8
tick,0x7ffdb840feb4,230190773,0,0x0,8
tick,0x7ffdb840feb4,230205966,0,0x0,8
tick,0x7ffdb840feb4,230221777,0,0x0,8
tick,0x7ffdb840feb4,230236954,0,0x0,8
tick,0x7ffdb840feb4,230251970,0,0x0,8
tick,0x7ffdb840feb4,230267944,0,0x0,8
tick,0x7ffdb840feb4,230283921,0,0x0,8
tick,0x7ffdb840feb4,230299749,0,0x0,8
tick,0x7ffdb840feb4,230314943,0,0x0,8
tick,0x7ffdb840feb4,230329790,0,0x0,8
tick,0x7ffdb840feb4,230344964,0,0x0,8
tick,0x7ffdb840feb4,230359791,0,0x0,8
tick,0x7ffdb840feb4,230375323,0,0x0,8
tick,0x7ffdb840feb4,230390798,0,0x0,8
tick,0x7ffdb840feb4,230406073,0,0x0,8
tick,0x7ffdb840feb4,230421801,0,0x0,8
tick,0x7ffdb840feb4,230436973,0,0x0,8
tick,0x7ffdb840feb4,230452983,0,0x0,8
tick,0x7ffdb840feb4,230468001,0,0x0,8
tick,0x7ffdb840feb4,230483977,0,0x0,8
tick,0x7ffdb840feb4,230499380,0,0x0,8
tick,0x7ffdb840feb4,230515386,0,0x0,8
tick,0x7ffdb840feb4,230530830,0,0x0,8
tick,0x7ffdb840feb4,230545995,0,0x0,8
tick,0x7ffdb840feb4,230561934,0,0x0,8
tick,0x7ffdb840feb4,230577109,0,0x0,8
tick,0x7ffdb840feb4,230592995,0,0x0,8
tick,0x7ffdb840feb4,230608143,0,0x0,8
tick,0x7ffdb840feb4,230623022,0,0x0,8
tick,0x7ffdb840feb4,230638011,0,0x0,8
tick,0x7ffdb840feb4,230653144,0,0x0,8
tick,0x7ffdb840feb4,230669003,0,0x0,8
tick,0x7ffdb840feb4,230685000,0,0x0,8
tick,0x7ffdb840feb4,230700833,0,0x0,8
tick,0x7ffdb840feb4,230716000,0,0x0,8
tick,0x7ffdb840feb4,230731664,0,0x0,8
tick,0x7ffdb840feb4,230747018,0,0x0,8
tick,0x7ffdb840feb4,230763014,0,0x0,8
tick,0x7ffdb840feb4,230778795,0,0x0,8
tick,0x7ffdb840feb4,230794012,0,0x0,8
tick,0x7ffdb840feb4,230809851,0,0x0,8
tick,0x7ffdb840feb4,230825629,0,0x0,8
tick,0x7ffdb840feb4,230840857,0,0x0,8
tick,0x7ffdb840feb4,230856861,0,0x0,8
tick,0x7ffdb840feb4,230871629,0,0x0,8
tick,0x7ffdb840feb4,230887213,0,0x0,8
tick,0x7ffdb840feb4,230903024,0,0x0,8
tick,0x7ffdb840feb4,230918853,0,0x0,8
tick,0x7ffdb840feb4,230934029,0,0x0,8
tick,0x7ffdb840feb4,230949032,0,0x0,8
tick,0x7ffdb840feb4,230964320,0,0x0,8
tick,0x7ffdb840feb4,230979793,0,0x0,8
tick,0x7ffdb840feb4,230994510,0,0x0,8
tick,0x7ffdb840feb4,231009669,0,0x0,8
tick,0x7ffdb840feb4,231025232,0,0x0,8
tick,0x7ffdb840feb4,231040886,0,0x0,8
tick,0x7ffdb840feb4,231056893,0,0x0,8
tick,0x7ffdb840feb4,231072012,0,0x0,8
tick,0x7ffdb840feb4,231087010,0,0x0,8
tick,0x7ffdb840feb4,231103012,0,0x0,8
tick,0x7ffdb840feb4,231119012,0,0x0,8
tick,0x7ffdb840feb4,231135025,0,0x0,8
tick,0x7ffdb840feb4,231151026,0,0x0,8
tick,0x7ffdb840feb4,231167034,0,0x0,8
tick,0x7ffdb840feb4,231183073,0,0x0,8
tick,0x7ffdb840feb4,231198041,0,0x0,8
tick,0x7ffdb840feb4,231213210,0,0x0,8
tick,0x7ffdb840feb4,231228406,0,0x0,8
tick,0x7ffdb840feb4,231243892,0,0x0,8
tick,0x7ffdb840feb4,231259808,0,0x0,8
tick,0x7ffdb840feb4,231275076,0,0x0,8
tick,0x7ffdb840feb4,231290914,0,0x0,8
tick,0x7ffdb840feb4,231306077,0,0x0,8
tick,0x7ffdb840feb4,231322028,0,0x0,8
tick,0x7ffdb840feb4,231337626,0,0x0,8
tick,0x7ffdb840feb4,231352642,0,0x0,8
tick,0x7ffdb840feb4,231368647,0,0x0,8
tick,0x7ffdb840feb4,231383643,0,0x0,8
tick,0x7ffdb840feb4,231398985,0,0x0,8
tick,0x7ffdb840feb4,231414568,0,0x0,8
tick,0x7ffdb840feb4,231429659,0,0x0,8
tick,0x7ffdb840feb4,231445657,0,0x0,8
tick,0x7ffdb840feb4,231460922,0,0x0,8
tick,0x7ffdb840feb4,231476977,0,0x0,8
tick,0x7ffdb840feb4,231491918,0,0x0,8
tick,0x7ffdb840feb4,231506659,0,0x0,8
tick,0x7ffdb840feb4,231522030,0,0x0,8
tick,0x7ffdb840feb4,231537653,0,0x0,8
tick,0x7ffdb840feb4,231553106,0,0x0,8
tick,0x7ffdb840feb4,231569029,0,0x0,8
tick,0x7ffdb840feb4,231584282,0,0x0,8
tick,0x7ffdb840feb4,231599631,0,0x0,8
tick,0x7ffdb840feb4,231614268,0,0x0,8
tick,0x7ffdb840feb4,231629264,0,0x0,8
tick,0x7ffdb840feb4,231645136,0,0x0,8
tick,0x7ffdb840feb4,231660945,0,0x0,8
tick,0x7ffdb840feb4,231676129,0,0x0,8
tick,0x7ffdb840feb4,231691127,0,0x0,8
tick,0x7ffdb840feb4,231707126,0,0x0,8
tick,0x7ffdb840feb4,231723129,0,0x0,8
tick,0x7ffdb840feb4,231738831,0,0x0,8
tick,0x7ffdb840feb4,231753985,0,0x0,8
tick,0x7ffdb840feb4,231769140,0,0x0,8
tick,0x7ffdb840feb4,231784601,0,0x0,8
tick,0x7ffdb840feb4,231799960,0,0x0,8
tick,0x7ffdb840feb4,231816002,0,0x0,8
tick,0x7ffdb840feb4,231831682,0,0x0,8
tick,0x7ffdb840feb4,231847589,0,0x0,8
tick,0x7ffdb840feb4,231863140,0,0x0,8
tick,0x7ffdb840feb4,231878334,0,0x0,8
tick,0x7ffdb840feb4,231893966,0,0x0,8
tick,0x7ffdb840feb4,231909272,0,0x0,8
tick,0x7ffdb840feb4,231924534,0,0x0,8
tick,0x7ffdb840feb4,231939851,0,0x0,8
tick,0x7ffdb840feb4,231955152,0,0x0,8
tick,0x7ffdb840feb4,231970979,0,0x0,8
tick,0x7ffdb840feb4,231986159,0,0x0,8
tick,0x7ffdb840feb4,232001977,0,0x0,8
tick,0x7ffdb840feb4,232017986,0,0x0,8
tick,0x7ffdb840feb4,232033188,0,0x0,8
tick,0x7ffdb840feb4,232048348,0,0x0,8
tick,0x7ffdb840feb4,232063641,0,0x0,8
tick,0x7ffdb840feb4,232078783,0,0x0,8
tick,0x7ffdb840feb4,232094784,0,0x0,8
tick,0x7ffdb840feb4,232109786,0,0x0,8
tick,0x7ffdb840feb4,232125792,0,0x0,8
tick,0x7ffdb840feb4,232141005,0,0x0,8
tick,0x7ffdb840feb4,232156185,0,0x0,8
tick,0x7ffdb840feb4,232172004,0,0x0,8
tick,0x7ffdb840feb4,232187189,0,0x0,8
tick,0x7ffdb840feb4,232202177,0,0x0,8
tick,0x7ffdb840feb4,232218192,0,0x0,8
tick,0x7ffdb840feb4,232234042,0,0x0,8
tick,0x7ffdb840feb4,232249341,0,0x0,8
tick,0x7ffdb840feb4,232264037,0,0x0,8
tick,0x7ffdb840feb4,232279415,0,0x0,8
tick,0x7ffdb840feb4,232294790,0,0x0,8
tick,0x7ffdb840feb4,232310417,0,0x0,8
tick,0x7ffdb840feb4,232325798,0,0x0,8
tick,0x7ffdb840feb4,232341023,0,0x0,8
tick,0x7ffdb840feb4,232356029,0,0x0,8
tick,0x7ffdb840feb4,232371028,0,0x0,8
tick,0x7ffdb840feb4,232387036,0,0x0,8
tick,0x7ffdb840feb4,232402041,0,0x0,8
tick,0x7ffdb840feb4,232416918,0,0x0,8
tick,0x7ffdb840feb4,232432212,0,0x0,8
tick,0x7ffdb840feb4,232447648,0,0x0,8
tick,0x7ffdb840feb4,232463217,0,0x0,8
tick,0x7ffdb840feb4,232478386,0,0x0,8
tick,0x7ffdb840feb4,232493048,0,0x0,8
tick,0x7ffdb840feb4,232508224,0,0x0,8
tick,0x7ffdb840feb4,232524041,0,0x0,8
tick,0x7ffdb840feb4,232539647,0,0x0,8
tick,0x7ffdb840feb4,232555657,0,0x0,8
tick,0x7ffdb840feb4,232571046,0,0x0,8
tick,0x7ffdb840feb4,232586239,0,0x0,8
tick,0x7ffdb840feb4,232602064,0,0x0,8
tick,0x7ffdb840feb4,232617063,0,0x0,8
tick,0x7ffdb840feb4,232632233,0,0x0,8
tick,0x7ffdb840feb4,232647655,0,0x0,8
tick,0x7ffdb840feb4,232663245,0,0x0,8
tick,0x7ffdb840feb4,232678392,0,0x0,8
tick,0x7ffdb840feb4,232693917,0,0x0,8
tick,0x7ffdb840feb4,232709935,0,0x0,8
tick,0x7ffdb840feb4,232725932,0,0x0,8
tick,0x7ffdb840feb4,232741349,0,0x0,8
tick,0x7ffdb840feb4,232756932,0,0x0,8
tick,0x7ffdb840feb4,232772949,0,0x0,8
tick,0x7ffdb840feb4,232788497,0,0x0,8
tick,0x7ffdb840feb4,232804503,0,0x0,8
tick,0x7ffdb840feb4,232820499,0,0x0,8
tick,0x7ffdb840feb4,232836495,0,0x0,8
tick,0x7ffdb840feb4,232852492,0,0x0,8
tick,0x7ffdb840feb4,232868508,0,0x0,8
tick,0x7ffdb840feb4,232884507,0,0x0,8
tick,0x7ffdb840feb4,232900512,0,0x0,8
tick,0x7ffdb840feb4,232916534,0,0x0,8
tick,0x7ffdb840feb4,232932509,0,0x0,8
tick,0x7ffdb840feb4,232948518,0,0x0,8
tick,0x7ffdb840feb4,232964516,0,0x0,8
tick,0x7ffdb840feb4,232979522,0,0x0,8
tick,0x7ffdb840feb4,232995523,0,0x0,8
tick,0x7ffdb840feb4,233010541,0,0x0,8
tick,0x7ffdb840feb4,233026563,0,0x0,8
tick,0x7ffdb840feb4,233042545,0,0x0,8
tick,0x7ffdb840feb4,233058540,0,0x0,8
tick,0x7ffdb840feb4,233074555,0,0x0,8
tick,0x7ffdb840feb4,233090554,0,0x0,8
tick,0x7ffdb840feb4,233106559,0,0x0,8
tick,0x7ffdb840feb4,233122565,0,0x0,8
tick,0x7ffdb840feb4,233138582,0,0x0,8
tick,0x7ffdb840feb4,233154562,0,0x0,8
tick,0x7ffdb840feb4,233170404,0,0x0,8
tick,0x7ffdb840feb4,233186411,0,0x0,8
tick,0x7ffdb840feb4,233202421,0,0x0,8
tick,0x7ffdb840feb4,233218428,0,0x0,8
tick,0x7ffdb840feb4,233234430,0,0x0,8
tick,0x7ffdb840feb4,233250431,0,0x0,8
tick,0x7ffdb840feb4,233266431,0,0x0,8
tick,0x7ffdb840feb4,233282448,0,0x0,8
tick,0x7ffdb840feb4,233298441,0,0x0,8
tick,0x7ffdb840feb4,233313470,0,0x0,8
tick,0x7ffdb840feb4,233328449,0,0x0,8
tick,0x7ffdb840feb4,233344457,0,0x0,8
tick,0x7ffdb840feb4,233360458,0,0x0,8
tick,0x7ffdb840feb4,233376451,0,0x0,8
tick,0x7ffdb840feb4,233392449,0,0x0,8
tick,0x7ffdb840feb4,233408454,0,0x0,8
tick,0x7ffdb840feb4,233424469,0,0x0,8
tick,0x7ffdb840feb4,233440468,0,0x0,8
tick,0x7ffdb840feb4,233456472,0,0x0,8
tick,0x7ffdb840feb4,233472490,0,0x0,8
tick,0x7ffdb840feb4,233488477,0,0x0,8
tick,0x7ffdb840feb4,233504487,0,0x0,8
tick,0x7ffdb840feb4,233520483,0,0x0,8
tick,0x7ffdb840feb4,233536519,0,0x0,8
tick,0x7ffdb840feb4,233552497,0,0x0,8
tick,0x7ffdb840feb4,233568494,0,0x0,8
tick,0x7ffdb840feb4,233584522,0,0x0,8
tick,0x7ffdb840feb4,233599641,0,0x0,8
tick,0x7ffdb840feb4,233614653,0,0x0,8
tick,0x7ffdb840feb4,233630661,0,0x0,8
tick,0x7ffdb840feb4,233646658,0,0x0,8
tick,0x7ffdb840feb4,233661649,0,0x0,8
tick,0x7ffdb840feb4,233677650,0,0x0,8
tick,0x7ffdb840feb4,233692674,0,0x0,8
tick,0x7ffdb840feb4,233708678,0,0x0,8
tick,0x7ffdb840feb4,233724673,0,0x0,8
tick,0x7ffdb840feb4,233740699,0,0x0,8
tick,0x7ffdb840feb4,233756693,0,0x0,8
tick,0x7ffdb840feb4,233772689,0,0x0,8
tick,0x7ffdb840feb4,233788698,0,0x0,8
tick,0x7ffdb840feb4,233804711,0,0x0,8
tick,0x7ffdb840feb4,233820721,0,0x0,8
tick,0x7ffdb840feb4,233836717,0,0x0,8
tick,0x7ffdb840feb4,233852719,0,0x0,8
tick,0x7ffdb840feb4,233868730,0,0x0,8
tick,0x7ffdb840feb4,233884736,0,0x0,8
tick,0x7ffdb840feb4,233900727,0,0x0,8
tick,0x7ffdb840feb4,233916745,0,0x0,8
tick,0x7ffdb840feb4,233932741,0,0x0,8
tick,0x7ffdb840feb4,233948743,0,0x0,8
tick,0x7ffdb840feb4,233964750,0,0x0,8
tick,0x7ffdb840feb4,233979745,0,0x0,8
tick,0x7ffdb840feb4,233994736,0,0x0,8
tick,0x7ffdb840feb4,234010748,0,0x0,8
tick,0x7ffdb840feb4,234026768,0,0x0,8
tick,0x7ffdb840feb4,234042766,0,0x0,8
tick,0x7ffdb840feb4,234058784,0,0x0,8
tick,0x7ffdb840feb4,234074781,0,0x0,8
tick,0x7ffdb840feb4,234090766,0,0x0,8
tick,0x7ffdb840feb4,234106776,0,0x0,8
tick,0x7ffdb840feb4,234122813,0,0x0,8
tick,0x7ffdb840feb4,234138801,0,0x0,8
tick,0x7ffdb840feb4,234154793,0,0x0,8
tick,0x7ffdb840feb4,234170783,0,0x0,8
tick,0x7ffdb840feb4,234186788,0,0x0,8
tick,0x7ffdb840feb4,234202800,0,0x0,8
tick,0x7ffdb840feb4,234218800,0,0x0,8
tick,0x7ffdb840feb4,234234806,0,0x0,8
tick,0x7ffdb840feb4,234250822,0,0x0,8
tick,0x7ffdb840feb4,234266827,0,0x0,8
tick,0x7ffdb840feb4,234282828,0,0x0,8
tick,0x7ffdb840feb4,234298830,0,0x0,8
tick,0x7ffdb840feb4,234314814,0,0x0,8
tick,0x7ffdb840feb4,234330821,0,0x0,8
tick,0x7ffdb840feb4,234346921,0,0x0,8
tick,0x7ffdb840feb4,234362141,0,0x0,8
tick,0x7ffdb840feb4,234378227,0,0x0,8
tick,0x7ffdb840feb4,234394223,0,0x0,8
tick,0x7ffdb840feb4,234410235,0,0x0,8
tick,0x7ffdb840feb4,234426244,0,0x0,8
tick,0x7ffdb840feb4,234442247,0,0x0,8
tick,0x7ffdb840feb4,234458247,0,0x0,8
tick,0x7ffdb840feb4,234474264,0,0x0,8
tick,0x7ffdb840feb4,234490255,0,0x0,8
tick,0x7ffdb840feb4,234506020,0,0x0,8
tick,0x7ffdb840feb4,234522016,0,0x0,8
tick,0x7ffdb840feb4,234537536,0,0x0,8
tick,0x7ffdb840feb4,234553529,0,0x0,8
tick,0x7ffdb840feb4,234569529,0,0x0,8
tick,0x7ffdb840feb4,234585541,0,0x0,8
tick,0x7ffdb840feb4,234601534,0,0x0,8
tick,0x7ffdb840feb4,234617567,0,0x0,8
tick,0x7ffdb840feb4,234633563,0,0x0,8
tick,0x7ffdb840feb4,234649291,0,0x0,8
tick,0x7ffdb840feb4,234665287,0,0x0,8
tick,0x7ffdb840feb4,234681286,0,0x0,8
tick,0x7ffdb840feb4,234697311,0,0x0,8
tick,0x7ffdb840feb4,234713287,0,0x0,8
tick,0x7ffdb840feb4,234729302,0,0x0,8
tick,0x7ffdb840feb4,234745314,0,0x0,8
tick,0x7ffdb840feb4,234761348,0,0x0,8
tick,0x7ffdb840feb4,234777344,0,0x0,8
tick,0x7ffdb840feb4,234793380,0,0x0,8
tick,0x7ffdb840feb4,234809385,0,0x0,8
tick,0x7ffdb840feb4,234824877,0,0x0,8
tick,0x7ffdb840feb4,234839872,0,0x0,8
tick,0x7ffdb840feb4,234855875,0,0x0,8
tick,0x7ffdb840feb4,234870898,0,0x0,8
tick,0x7ffdb840feb4,234886889,0,0x0,8
tick,0x7ffdb840feb4,234902907,0,0x0,8
tick,0x7ffdb840feb4,234918920,0,0x0,8
tick,0x7ffdb840feb4,234934897,0,0x0,8
tick,0x7ffdb840feb4,234950908,0,0x0,8
tick,0x7ffdb840feb4,234966914,0,0x0,8
tick,0x7ffdb840feb4,234982912,0,0x0,8
tick,0x7ffdb840feb4,234998907,0,0x0,8
tick,0x7ffdb840feb4,235014916,0,0x0,8
tick,0x7ffdb840feb4,235030966,0,0x0,8
tick,0x7ffdb840feb4,235046938,0,0x0,8
tick,0x7ffdb840feb4,235061941,0,0x0,8
tick,0x7ffdb840feb4,235076940,0,0x0,8
tick,0x7ffdb840feb4,235091940,0,0x0,8
tick,0x7ffdb840feb4,235106930,0,0x0,8
tick,0x7ffdb840feb4,235122947,0,0x0,8
tick,0x7ffdb840feb4,235137967,0,0x0,8
tick,0x7ffdb840feb4,235153963,0,0x0,8
tick,0x7ffdb840feb4,235168949,0,0x0,8
tick,0x7ffdb840feb4,235189730,0,0x0,8
tick,0x7ffdb840feb4,235200968,0,0x0,8
tick,0x7ffdb840feb4,235216986,0,0x0,8
tick,0x7ffdb840feb4,235232983,0,0x0,8
tick,0x7ffdb840feb4,235249030,0,0x0,8
tick,0x7ffdb840feb4,235264977,0,0x0,8
tick,0x7ffdb840feb4,235280970,0,0x0,8
tick,0x7ffdb840feb4,235297323,0,0x0,8
tick,0x7ffdb840feb4,235313001,0,0x0,8
tick,0x7ffdb840feb4,235329013,0,0x0,8
tick,0x7ffdb840feb4,235343994,0,0x0,8
tick,0x7ffdb840feb4,235360021,0,0x0,8
tick,0x7ffdb840feb4,235375019,0,0x0,8
tick,0x7ffdb840feb4,235391015,0,0x0,8
tick,0x7ffdb840feb4,235407009,0,0x0,8
tick,0x7ffdb840feb4,235423011,0,0x0,8
tick,0x7ffdb840feb4,235439036,0,0x0,8
tick,0x7ffdb840feb4,235455021,0,0x0,8
tick,0x7ffdb840feb4,235471069,0,0x0,8
tick,0x7ffdb840feb4,235487039,0,0x0,8
tick,0x7ffdb840feb4,235503044,0,0x0,8
tick,0x7ffdb840feb4,235519034,0,0x0,8
tick,0x7ffdb840feb4,235535040,0,0x0,8
tick,0x7ffdb840feb4,235551053,0,0x0,8
tick,0x7ffdb840feb4,235567045,0,0x0,8
tick,0x7ffdb840feb4,235583063,0,0x0,8
tick,0x7ffdb840feb4,235598055,0,0x0,8
tick,0x7ffdb840feb4,235613092,0,0x0,8
tick,0x7ffdb840feb4,235628070,0,0x0,8
tick,0x7ffdb840feb4,235643060,0,0x0,8
tick,0x7ffdb840feb4,235659074,0,0x0,8
tick,0x7ffdb840feb4,235675075,0,0x0,8
tick,0x7ffdb840feb4,235691091,0,0x0,8
tick,0x7ffdb840feb4,235707076,0,0x0,8
tick,0x7ffdb840feb4,235723087,0,0x0,8
tick,0x7ffdb840feb4,235739081,0,0x0,8
tick,0x7ffdb840feb4,235755090,0,0x0,8
tick,0x7ffdb840feb4,235771103,0,0x0,8
tick,0x7ffdb840feb4,235787097,0,0x0,8
tick,0x7ffdb840feb4,235803124,0,0x0,8
tick,0x7ffdb840feb4,235819108,0,0x0,8
tick,0x7ffdb840feb4,235835116,0,0x0,8
tick,0x7ffdb840feb4,235850109,0,0x0,8
tick,0x7ffdb840feb4,235865110,0,0x0,8
tick,0x7ffdb840feb4,235881156,0,0x0,8
tick,0x7ffdb840feb4,235897153,0,0x0,8
tick,0x7ffdb840feb4,235913156,0,0x0,8
tick,0x7ffdb840feb4,235929132,0,0x0,8
tick,0x7ffdb840feb4,235945144,0,0x0,8
tick,0x7ffdb840feb4,235961135,0,0x0,8
tick,0x7ffdb840feb4,235977170,0,0x0,8
tick,0x7ffdb840feb4,235993139,0,0x0,8
tick,0x7ffdb840feb4,236009154,0,0x0,8
tick,0x7ffdb840feb4,236025152,0,0x0,8
tick,0x7ffdb840feb4,236040152,0,0x0,8
tick,0x7ffdb840feb4,236056161,0,0x0,8
tick,0x7ffdb840feb4,236071177,0,0x0,8
tick,0x7ffdb840feb4,236087170,0,0x0,8
tick,0x7ffdb840feb4,236103173,0,0x0,8
tick,0x7ffdb840feb4,236119165,0,0x0,8
tick,0x7ffdb840feb4,236135188,0,0x0,8
tick,0x7ffdb840feb4,236151183,0,0x0,8
tick,0x7ffdb840feb4,236167192,0,0x0,8
tick,0x7ffdb840feb4,236183262,0,0x0,8
tick,0x7ffdb840feb4,236198201,0,0x0,8
tick,0x7ffdb840feb4,236213183,0,0x0,8
tick,0x7ffdb840feb4,236229183,0,0x0,8
tick,0x7ffdb840feb4,236245211,0,0x0,8
tick,0x7ffdb840feb4,236261202,0,0x0,8
tick,0x7ffdb840feb4,236277200,0,0x0,8
tick,0x7ffdb840feb4,236293210,0,0x0,8
tick,0x7ffdb840feb4,236309214,0,0x0,8
tick,0x7ffdb840feb4,236325275,0,0x0,8
tick,0x7ffdb840feb4,236341231,0,0x0,8
tick,0x7ffdb840feb4,236357241,0,0x0,8
tick,0x7ffdb840feb4,236373220,0,0x0,8
tick,0x7ffdb840feb4,236389226,0,0x0,8
tick,0x7ffdb840feb4,236405246,0,0x0,8
tick,0x7ffdb840feb4,236421240,0,0x0,8
tick,0x7ffdb840feb4,236437240,0,0x0,8
tick,0x7ffdb840feb4,236453244,0,0x0,8
tick,0x7ffdb840feb4,236469281,0,0x0,8
tick,0x7ffdb840feb4,236485260,0,0x0,8
tick,0x7ffdb840feb4,236501255,0,0x0,8
tick,0x7ffdb840feb4,236517252,0,0x0,8
tick,0x7ffdb840feb4,236533266,0,0x0,8
tick,0x7ffdb840feb4,236549257,0,0x0,8
tick,0x7ffdb840feb4,236565268,0,0x0,8
tick,0x7ffdb840feb4,236581278,0,0x0,8
tick,0x7ffdb840feb4,236597273,0,0x0,8
tick,0x7ffdb840feb4,236613281,0,0x0,8
tick,0x7ffdb840feb4,236628291,0,0x0,8
tick,0x7ffdb840feb4,236643276,0,0x0,8
tick,0x7ffdb840feb4,236658563,0,0x0,8
tick,0x7ffdb840feb4,236673723,0,0x0,8
tick,0x7ffdb840feb4,236689587,0,0x0,8
tick,0x7ffdb840feb4,236704731,0,0x0,8
tick,0x7ffdb840feb4,236719949,0,0x0,8
tick,0x7ffdb840feb4,236735729,0,0x0,8
tick,0x7ffdb840feb4,236751601,0,0x0,8
tick,0x7ffdb840feb4,236767631,0,0x0,8
tick,0x7ffdb840feb4,236782736,0,0x0,8
tick,0x7ffdb840feb4,236798385,0,0x0,8
tick,0x7ffdb840feb4,236813756,0,0x0,8
tick,0x7ffdb840feb4,236829277,0,0x0,8
tick,0x7ffdb840feb4,236844575,0,0x0,8
tick,0x7ffdb840feb4,236859943,0,0x0,8
tick,0x7ffdb840feb4,236875747,0,0x0,8
tick,0x7ffdb840feb4,236891770,0,0x0,8
tick,0x7ffdb840feb4,236907635,0,0x0,8
tick,0x7ffdb840feb4,236922589,0,0x0,8
tick,0x7ffdb840feb4,236937760,0,0x0,8
tick,0x7ffdb840feb4,236953757,0,0x0,8
tick,0x7ffdb840feb4,236968778,0,0x0,8
tick,0x7ffdb840feb4,236983763,0,0x0,8
tick,0x7ffdb840feb4,236999056,0,0x0,8
tick,0x7ffdb840feb4,237014766,0,0x0,8
tick,0x7ffdb840feb4,237029784,0,0x0,8
tick,0x7ffdb840feb4,237045771,0,0x0,8
tick,0x7ffdb840feb4,237061608,0,0x0,8
tick,0x7ffdb840feb4,237076773,0,0x0,8
tick,0x7ffdb840feb4,237092603,0,0x0,8
tick,0x7ffdb840feb4,237107777,0,0x0,8
tick,0x7ffdb840feb4,237123784,0,0x0,8
tick,0x7ffdb840feb4,237139786,0,0x0,8
tick,0x7ffdb840feb4,237155789,0,0x0,8
tick,0x7ffdb840feb4,237171634,0,0x0,8
tick,0x7ffdb840feb4,237187184,0,0x0,8
tick,0x7ffdb840feb4,237203077,0,0x0,8
tick,0x7ffdb840feb4,237219071,0,0x0,8
tick,0x7ffdb840feb4,237234634,0,0x0,8
tick,0x7ffdb840feb4,237250375,0,0x0,8
tick,0x7ffdb840feb4,237266040,0,0x0,8
tick,0x7ffdb840feb4,237281618,0,0x0,8
tick,0x7ffdb840feb4,237296796,0,0x0,8
tick,0x7ffdb840feb4,237312645,0,0x0,8
tick,0x7ffdb840feb4,237328651,0,0x0,8
tick,0x7ffdb840feb4,237343834,0,0x0,8
tick,0x7ffdb840feb4,237358810,0,0x0,8
tick,0x7ffdb840feb4,237374291,0,0x0,8
tick,0x7ffdb840feb4,237389640,0,0x0,8
tick,0x7ffdb840feb4,237405643,0,0x0,8
tick,0x7ffdb840feb4,237420655,0,0x0,8
tick,0x7ffdb840feb4,237436648,0,0x0,8
tick,0x7ffdb840feb4,237451669,0,0x0,8
tick,0x7ffdb840feb4,237467033,0,0x0,8
tick,0x7ffdb840feb4,237482637,0,0x0,8
tick,0x7ffdb840feb4,237498018,0,0x0,8
tick,0x7ffdb840feb4,237513818,0,0x0,8
tick,0x7ffdb840feb4,237529037,0,0x0,8
tick,0x7ffdb840feb4,237544301,0,0x0,8
tick,0x7ffdb840feb4,237560040,0,0x0,8
tick,0x7ffdb840feb4,237575830,0,0x0,8
tick,0x7ffdb840feb4,237591677,0,0x0,8
tick,0x7ffdb840feb4,237606826,0,0x0,8
tick,0x7ffdb840feb4,237621665,0,0x0,8
tick,0x7ffdb840feb4,237636999,0,0x0,8
tick,0x7ffdb840feb4,237652665,0,0x0,8
tick,0x7ffdb840feb4,237667585,0,0x0,8
tick,0x7ffdb840feb4,237682726,0,0x0,8
tick,0x7ffdb840feb4,237698375,0,0x0,8
tick,0x7ffdb840feb4,237713845,0,0x0,8
tick,0x7ffdb840feb4,237729095,0,0x0,8
tick,0x7ffdb840feb4,237744610,0,0x0,8
tick,0x7ffdb840feb4,237760612,0,0x0,8
tick,0x7ffdb840feb4,237776610,0,0x0,8
tick,0x7ffdb840feb4,237792673,0,0x0,8
tick,0x7ffdb840feb4,237807827,0,0x0,8
tick,0x7ffdb840feb4,237823870,0,0x0,8
tick,0x7ffdb840feb4,237839085,0,0x0,8
tick,0x7ffdb840feb4,237854867,0,0x0,8
tick,0x7ffdb840feb4,237870075,0,0x0,8
tick,0x7ffdb840feb4,237885060,0,0x0,8
tick,0x7ffdb840feb4,237900717,0,0x0,8
tick,0x7ffdb840feb4,237916038,0,0x0,8
tick,0x7ffdb840feb4,237931053,0,0x0,8
tick,0x7ffdb840feb4,237947051,0,0x0,8
tick,0x7ffdb840feb4,237962700,0,0x0,8
tick,0x7ffdb840feb4,237978532,0,0x0,8
tick,0x7ffdb840feb4,237994543,0,0x0,8
tick,0x7ffdb840feb4,238010557,0,0x0,8
tick,0x7ffdb840feb4,238026559,0,0x0,8
tick,0x7ffdb840feb4,238042550,0,0x0,8
tick,0x7ffdb840feb4,238058550,0,0x0,8
tick,0x7ffdb840feb4,238073707,0,0x0,8
tick,0x7ffdb840feb4,238089741,0,0x0,8
tick,0x7ffdb840feb4,238104835,0,0x0,8
tick,0x7ffdb840feb4,238120553,0,0x0,8
tick,0x7ffdb840feb4,238136334,0,0x0,8
tick,0x7ffdb840feb4,238152382,0,0x0,8
tick,0x7ffdb840feb4,238167367,0,0x0,8
tick,0x7ffdb840feb4,238182740,0,0x0,8
tick,0x7ffdb840feb4,238198359,0,0x0,8
tick,0x7ffdb840feb4,238213918,0,0x0,8
tick,0x7ffdb840feb4,238228810,0,0x0,8
tick,0x7ffdb840feb4,238244062,0,0x0,8
tick,0x7ffdb840feb4,238259467,0,0x0,8
tick,0x7ffdb840feb4,238274751,0,0x0,8
tick,0x7ffdb840feb4,238290753,0,0x0,8
tick,0x7ffdb840feb4,238305894,0,0x0,8
tick,0x7ffdb840feb4,238320844,0,0x0,8
tick,0x7ffdb840feb4,238336733,0,0x0,8
tick,0x7ffdb840feb4,238352757,0,0x0,8
tick,0x7ffdb840feb4,238368778,0,0x0,8
tick,0x7ffdb840feb4,238384720,0,0x0,8
tick,0x7ffdb840feb4,238400231,0,0x0,8
tick,0x7ffdb840feb4,238416051,0,0x0,8
tick,0x7ffdb840feb4,238431755,0,0x0,8
tick,0x7ffdb840feb4,238447376,0,0x0,8
tick,0x7ffdb840feb4,238462722,0,0x0,8
tick,0x7ffdb840feb4,238478511,0,0x0,8
tick,0x7ffdb840feb4,238493944,0,0x0,8
tick,0x7ffdb840feb4,238508838,0,0x0,8
tick,0x7ffdb840feb4,238524089,0,0x0,8
tick,0x7ffdb840feb4,238539535,0,0x0,8
tick,0x7ffdb840feb4,238554719,0,0x0,8
tick,0x7ffdb840feb4,238570719,0,0x0,8
tick,0x7ffdb840feb4,238586541,0,0x0,8
tick,0x7ffdb840feb4,238601775,0,0x0,8
tick,0x7ffdb840feb4,238617046,0,0x0,8
tick,0x7ffdb840feb4,238632773,0,0x0,8
tick,0x7ffdb840feb4,238648062,0,0x0,8
tick,0x7ffdb840feb4,238663535,0,0x0,8
tick,0x7ffdb840feb4,238678787,0,0x0,8
tick,0x7ffdb840feb4,238693971,0,0x0,8
tick,0x7ffdb840feb4,238709785,0,0x0,8
tick,0x7ffdb840feb4,238724983,0,0x0,8
tick,0x7ffdb840feb4,238740520,0,0x0,8
tick,0x7ffdb840feb4,238755975,0,0x0,8
tick,0x7ffdb840feb4,238771795,0,0x0,8
tick,0x7ffdb840feb4,238787042,0,0x0,8
tick,0x7ffdb840feb4,238802789,0,0x0,8
tick,0x7ffdb840feb4,238817749,0,0x0,8
tick,0x7ffdb840feb4,238832802,0,0x0,8
tick,0x7ffdb840feb4,238848371,0,0x0,8
tick,0x7ffdb840feb4,238863533,0,0x0,8
tick,0x7ffdb840feb4,238878811,0,0x0,8
tick,0x7ffdb840feb4,238893982,0,0x0,8
tick,0x7ffdb840feb4,238909546,0,0x0,8
tick,0x7ffdb840feb4,238924807,0,0x0,8
tick,0x7ffdb840feb4,238940596,0,0x0,8
tick,0x7ffdb840feb4,238956001,0,0x0,8
tick,0x7ffdb840feb4,238971826,0,0x0,8
tick,0x7ffdb840feb4,238987547,0,0x0,8
tick,0x7ffdb840feb4,239002828,0,0x0,8
tick,0x7ffdb840feb4,239018831,0,0x0,8
tick,0x7ffdb840feb4,239034824,0,0x0,8
tick,0x7ffdb840feb4,239050378,0,0x0,8
tick,0x7ffdb840feb4,239066052,0,0x0,8
tick,0x7ffdb840feb4,239080730,0,0x0,8
tick,0x7ffdb840feb4,239096009,0,0x0,8
tick,0x7ffdb840feb4,239111836,0,0x0,8
tick,0x7ffdb840feb4,239127788,0,0x0,8
tick,0x7ffdb840feb4,239143789,0,0x0,8
tick,0x7ffdb840feb4,239159794,0,0x0,8
tick,0x7ffdb840feb4,239175795,0,0x0,8
tick,0x7ffdb840feb4,239191852,0,0x0,8
tick,0x7ffdb840feb4,239207818,0,0x0,8
tick,0x7ffdb840feb4,239223035,0,0x0,8
tick,0x7ffdb840feb4,239237810,0,0x0,8
tick,0x7ffdb840feb4,239253026,0,0x0,8
tick,0x7ffdb840feb4,239269023,0,0x0,8
tick,0x7ffdb840feb4,239284038,0,0x0,8
tick,0x7ffdb840feb4,239299864,0,0x0,8
tick,0x7ffdb840feb4,239315046,0,0x0,8
tick,0x7ffdb840feb4,239329873,0,0x0,8
tick,0x7ffdb840feb4,239345563,0,0x0,8
tick,0x7ffdb840feb4,239360384,0,0x0,8
tick,0x7ffdb840feb4,239375517,0,0x0,8
tick,0x7ffdb840feb4,239390870,0,0x0,8
tick,0x7ffdb840feb4,239406850,0,0x0,8
tick,0x7ffdb840feb4,239422885,0,0x0,8
tick,0x7ffdb840feb4,239438054,0,0x0,8
tick,0x7ffdb840feb4,239453060,0,0x0,8
tick,0x7ffdb840feb4,239469071,0,0x0,8
tick,0x7ffdb840feb4,239485083,0,0x0,8
tick,0x7ffdb840feb4,239501075,0,0x0,8
tick,0x7ffdb840feb4,239517095,0,0x0,8
tick,0x7ffdb840feb4,239533094,0,0x0,8
tick,0x7ffdb840feb4,239549091,0,0x0,8
tick,0x7ffdb840feb4,239565110,0,0x0,8
tick,0x7ffdb840feb4,239580106,0,0x0,8
tick,0x7ffdb840feb4,239595423,0,0x0,8
tick,0x7ffdb840feb4,239610924,0,0x0,8
tick,0x7ffdb840feb4,239626164,0,0x0,8
tick,0x7ffdb840feb4,239641905,0,0x0,8
tick,0x7ffdb840feb4,239657901,0,0x0,8
tick,0x7ffdb840feb4,239672905,0,0x0,8
tick,0x7ffdb840feb4,239687914,0,0x0,8
tick,0x7ffdb840feb4,239703920,0,0x0,8
tick,0x7ffdb840feb4,239719066,0,0x0,8
tick,0x7ffdb840feb4,239734724,0,0x0,8
tick,0x7ffdb840feb4,239749874,0,0x0,8
tick,0x7ffdb840feb4,239765862,0,0x0,8
tick,0x7ffdb840feb4,239780718,0,0x0,8
tick,0x7ffdb840feb4,239796101,0,0x0,8
tick,0x7ffdb840feb4,239811917,0,0x0,8
tick,0x7ffdb840feb4,239827231,0,0x0,8
tick,0x7ffdb840feb4,239842944,0,0x0,8
tick,0x7ffdb840feb4,239858098,0,0x0,8
tick,0x7ffdb840feb4,239873945,0,0x0,8
tick,0x7ffdb840feb4,239889183,0,0x0,8
tick,0x7ffdb840feb4,239904572,0,0x0,8
tick,0x7ffdb840feb4,239920057,0,0x0,8
tick,0x7ffdb840feb4,239936114,0,0x0,8
tick,0x7ffdb840feb4,239951938,0,0x0,8
tick,0x7ffdb840feb4,239967146,0,0x0,8
tick,0x7ffdb840feb4,239982945,0,0x0,8
tick,0x7ffdb840feb4,239997949,0,0x0,8
tick,0x7ffdb840feb4,240013113,0,0x0,8
tick,0x7ffdb840feb4,240028624,0,0x0,8
tick,0x7ffdb840feb4,240044629,0,0x0,8
tick,0x7ffdb840feb4,240060656,0,0x0,8
tick,0x7ffdb840feb4,240075623,0,0x0,8
tick,0x7ffdb840feb4,240090958,0,0x0,8
tick,0x7ffdb840feb4,240106952,0,0x0,8
tick,0x7ffdb840feb4,240122131,0,0x0,8
tick,0x7ffdb840feb4,240136967,0,0x0,8
tick,0x7ffdb840feb4,240152978,0,0x0,8
tick,0x7ffdb840feb4,240168984,0,0x0,8
tick,0x7ffdb840feb4,240184973,0,0x0,8
tick,0x7ffdb840feb4,240200978,0,0x0,8
tick,0x7ffdb840feb4,240216236,0,0x0,8
tick,0x7ffdb840feb4,240231976,0,0x0,8
tick,0x7ffdb840feb4,240246976,0,0x0,8
tick,0x7ffdb840feb4,240262157,0,0x0,8
tick,0x7ffdb840feb4,240277391,0,0x0,8
tick,0x7ffdb840feb4,240292984,0,0x0,8
tick,0x7ffdb840feb4,240308999,0,0x0,8
tick,0x7ffdb840feb4,240324166,0,0x0,8
tick,0x7ffdb840feb4,240339159,0,0x0,8
tick,0x7ffdb840feb4,240354422,0,0x0,8
tick,0x7ffdb840feb4,240370201,0,0x0,8
tick,0x7ffdb840feb4,240385434,0,0x0,8
tick,0x7ffdb840feb4,240400989,0,0x0,8
tick,0x7ffdb840feb4,240416168,0,0x0,8
tick,0x7ffdb840feb4,240431995,0,0x0,8
tick,0x7ffdb840feb4,240447276,0,0x0,8
tick,0x7ffdb840feb4,240463003,0,0x0,8
tick,0x7ffdb840feb4,240478555,0,0x0,8
tick,0x7ffdb840feb4,240494190,0,0x0,8
tick,0x7ffdb840feb4,240509193,0,0x0,8
tick,0x7ffdb840feb4,240524179,0,0x0,8
tick,0x7ffdb840feb4,240540194,0,0x0,8
tick,0x7ffdb840feb4,240556199,0,0x0,8
tick,0x7ffdb840feb4,240572012,0,0x0,8
tick,0x7ffdb840feb4,240587200,0,0x0,8
tick,0x7ffdb840feb4,240602916,0,0x0,8
tick,0x7ffdb840feb4,240619036,0,0x0,8
tick,0x7ffdb840feb4,240635023,0,0x0,8
tick,0x7ffdb840feb4,240651024,0,0x0,8
tick,0x7ffdb840feb4,240666222,0,0x0,8
tick,0x7ffdb840feb4,240681040,0,0x0,8
tick,0x7ffdb840feb4,240696206,0,0x0,8
tick,0x7ffdb840feb4,240712230,0,0x0,8
tick,0x7ffdb840feb4,240727220,0,0x0,8
tick,0x7ffdb840feb4,240743039,0,0x0,8
tick,0x7ffdb840feb4,240759044,0,0x0,8
tick,0x7ffdb840feb4,240774232,0,0x0,8
tick,0x7ffdb840feb4,240790227,0,0x0,8
tick,0x7ffdb840feb4,240805228,0,0x0,8
tick,0x7ffdb840feb4,240821250,0,0x0,8
tick,0x7ffdb840feb4,240837061,0,0x0,8
tick,0x7ffdb840feb4,240853062,0,0x0,8
tick,0x7ffdb840feb4,240868066,0,0x0,8
tick,0x7ffdb840feb4,240883061,0,0x0,8
tick,0x7ffdb840feb4,240898234,0,0x0,8
tick,0x7ffdb840feb4,240914094,0,0x0,8
tick,0x7ffdb840feb4,240929258,0,0x0,8
tick,0x7ffdb840feb4,240945245,0,0x0,8
tick,0x7ffdb840feb4,240961248,0,0x0,8
tick,0x7ffdb840feb4,240977247,0,0x0,8
tick,0x7ffdb840feb4,240993074,0,0x0,8
tick,0x7ffdb840feb4,241008261,0,0x0,8
tick,0x7ffdb840feb4,241023251,0,0x0,8
tick,0x7ffdb840feb4,241038264,0,0x0,8
tick,0x7ffdb840feb4,241054250,0,0x0,8
tick,0x7ffdb840feb4,241070237,0,0x0,8
tick,0x7ffdb840feb4,241085258,0,0x0,8
tick,0x7ffdb840feb4,241101265,0,0x0,8
tick,0x7ffdb840feb4,241116260,0,0x0,8
tick,0x7ffdb840feb4,241131082,0,0x0,8
tick,0x7ffdb840feb4,241146277,0,0x0,8
tick,0x7ffdb840feb4,241161655,0,0x0,8
tick,0x7ffdb840feb4,241177657,0,0x0,8
tick,0x7ffdb840feb4,241193680,0,0x0,8
tick,0x7ffdb840feb4,241208724,0,0x0,8
tick,0x7ffdb840feb4,241224273,0,0x0,8
tick,0x7ffdb840feb4,241240101,0,0x0,8
tick,0x7ffdb840feb4,241254753,0,0x0,8
tick,0x7ffdb840feb4,241270055,0,0x0,8
tick,0x7ffdb840feb4,241285280,0,0x0,8
tick,0x7ffdb840feb4,241300509,0,0x0,8
tick,0x7ffdb840feb4,241316059,0,0x0,8
tick,0x7ffdb840feb4,241332109,0,0x0,8
tick,0x7ffdb840feb4,241348121,0,0x0,8
tick,0x7ffdb840feb4,241363300,0,0x0,8
tick,0x7ffdb840feb4,241378005,0,0x0,8
tick,0x7ffdb840feb4,241393109,0,0x0,8
tick,0x7ffdb840feb4,241408118,0,0x0,8
tick,0x7ffdb840feb4,241423290,0,0x0,8
tick,0x7ffdb840feb4,241438712,0,0x0,8
tick,0x7ffdb840feb4,241454291,0,0x0,8
tick,0x7ffdb840feb4,241470068,0,0x0,8
tick,0x7ffdb840feb4,241485299,0,0x0,8
tick,0x7ffdb840feb4,241500844,0,0x0,8
tick,0x7ffdb840feb4,241516066,0,0x0,8
tick,0x7ffdb840feb4,241531178,0,0x0,8
tick,0x7ffdb840feb4,241547065,0,0x0,8
tick,0x7ffdb840feb4,241562134,0,0x0,8
tick,0x7ffdb840feb4,241578077,0,0x0,8
tick,0x7ffdb840feb4,241594131,0,0x0,8
tick,0x7ffdb840feb4,241609683,0,0x0,8
tick,0x7ffdb840feb4,241625650,0,0x0,8
tick,0x7ffdb840feb4,241641143,0,0x0,8
tick,0x7ffdb840feb4,241656325,0,0x0,8
tick,0x7ffdb840feb4,241672155,0,0x0,8
tick,0x7ffdb840feb4,241687446,0,0x0,8
tick,0x7ffdb840feb4,241703146,0,0x0,8
tick,0x7ffdb840feb4,241718053,0,0x0,8
tick,0x7ffdb840feb4,241733321,0,0x0,8
tick,0x7ffdb840feb4,241749389,0,0x0,8
tick,0x7ffdb840feb4,241764327,0,0x0,8
tick,0x7ffdb840feb4,241780335,0,0x0,8
tick,0x7ffdb840feb4,241795842,0,0x0,8
tick,0x7ffdb840feb4,241811683,0,0x0,8
tick,0x7ffdb840feb4,241827669,0,0x0,8
tick,0x7ffdb840feb4,241843178,0,0x0,8
tick,0x7ffdb840feb4,241858344,0,0x0,8
tick,0x7ffdb840feb4,241874356,0,0x0,8
tick,0x7ffdb840feb4,241890379,0,0x0,8
tick,0x7ffdb840feb4,241905730,0,0x0,8
tick,0x7ffdb840feb4,241921076,0,0x0,8
tick,0x7ffdb840feb4,241936985,0,0x0,8
tick,0x7ffdb840feb4,241952192,0,0x0,8
tick,0x7ffdb840feb4,241968206,0,0x0,8
tick,0x7ffdb840feb4,241983214,0,0x0,8
tick,0x7ffdb840feb4,241999216,0,0x0,8
tick,0x7ffdb840feb4,242015281,0,0x0,8
tick,0x7ffdb840feb4,242030266,0,0x0,8
tick,0x7ffdb840feb4,242046249,0,0x0,8
tick,0x7ffdb840feb4,242061233,0,0x0,8
tick,0x7ffdb840feb4,242077241,0,0x0,8
tick,0x7ffdb840feb4,242093231,0,0x0,8
tick,0x7ffdb840feb4,242109225,0,0x0,8
tick,0x7ffdb840feb4,242124400,0,0x0,8
tick,0x7ffdb840feb4,242139398,0,0x0,8
tick,0x7ffdb840feb4,242155400,0,0x0,8
tick,0x7ffdb840feb4,242171119,0,0x0,8
tick,0x7ffdb840feb4,242186702,0,0x0,8
tick,0x7ffdb840feb4,242202215,0,0x0,8
tick,0x7ffdb840feb4,242217488,0,0x0,8
tick,0x7ffdb840feb4,242233529,0,0x0,8
tick,0x7ffdb840feb4,242249487,0,0x0,8
tick,0x7ffdb840feb4,242264636,0,0x0,8
tick,0x7ffdb840feb4,242280623,0,0x0,8
tick,0x7ffdb840feb4,242295635,0,0x0,8
tick,0x7ffdb840feb4,242310896,0,0x0,8
tick,0x7ffdb840feb4,242325659,0,0x0,8
tick,0x7ffdb840feb4,242341666,0,0x0,8
tick,0x7ffdb840feb4,242357668,0,0x0,8
tick,0x7ffdb840feb4,242373242,0,0x0,8
tick,0x7ffdb840feb4,242388664,0,0x0,8
tick,0x7ffdb840feb4,242403406,0,0x0,8
tick,0x7ffdb840feb4,242418670,0,0x0,8
tick,0x7ffdb840feb4,242434683,0,0x0,8
tick,0x7ffdb840feb4,242450073,0,0x0,8
tick,0x7ffdb840feb4,242465065,0,0x0,8
tick,0x7ffdb840feb4,242480249,0,0x0,8
tick,0x7ffdb840feb4,242495436,0,0x0,8
tick,0x7ffdb840feb4,242511256,0,0x0,8
tick,0x7ffdb840feb4,242526448,0,0x0,8
tick,0x7ffdb840feb4,242541444,0,0x0,8
tick,0x7ffdb840feb4,242557440,0,0x0,8
tick,0x7ffdb840feb4,242573266,0,0x0,8
tick,0x7ffdb840feb4,242588283,0,0x0,8
tick,0x7ffdb840feb4,242603433,0,0x0,8
tick,0x7ffdb840feb4,242618318,0,0x0,8
tick,0x7ffdb840feb4,242634322,0,0x0,8
tick,0x7ffdb840feb4,242649491,0,0x0,8
tick,0x7ffdb840feb4,242664456,0,0x0,8
tick,0x7ffdb840feb4,242680459,0,0x0,8
tick,0x7ffdb840feb4,242696001,0,0x0,8
tick,0x7ffdb840feb4,242711990,0,0x0,8
tick,0x7ffdb840feb4,242727989,0,0x0,8
tick,0x7ffdb840feb4,242743280,0,0x0,8
tick,0x7ffdb840feb4,242758436,0,0x0,8
tick,0x7ffdb840feb4,242774470,0,0x0,8
tick,0x7ffdb840feb4,242790465,0,0x0,8
tick,0x7ffdb840feb4,242806478,0,0x0,8
tick,0x7ffdb840feb4,242822185,0,0x0,8
tick,0x7ffdb840feb4,242837462,0,0x0,8
tick,0x7ffdb840feb4,242852460,0,0x0,8
tick,0x7ffdb840feb4,242867477,0,0x0,8
tick,0x7ffdb840feb4,242883302,0,0x0,8
tick,0x7ffdb840feb4,242898471,0,0x0,8
tick,0x7ffdb840feb4,242914299,0,0x0,8
tick,0x7ffdb840feb4,242930306,0,0x0,8
tick,0x7ffdb840feb4,242945316,0,0x0,8
tick,0x7ffdb840feb4,242961313,0,0x0,8
tick,0x7ffdb840feb4,242976310,0,0x0,8
tick,0x7ffdb840feb4,242991325,0,0x0,8
tick,0x7ffdb840feb4,243007312,0,0x0,8
tick,0x7ffdb840feb4,243022317,0,0x0,8
tick,0x7ffdb840feb4,243037215,0,0x0,8
tick,0x7ffdb840feb4,243052320,0,0x0,8
tick,0x7ffdb840feb4,243068339,0,0x0,8
tick,0x7ffdb840feb4,243083324,0,0x0,8
tick,0x7ffdb840feb4,243099406,0,0x0,8
tick,0x7ffdb840feb4,243114399,0,0x0,8
tick,0x7ffdb840feb4,243130407,0,0x0,8
tick,0x7ffdb840feb4,243145741,0,0x0,8
tick,0x7ffdb840feb4,243161330,0,0x0,8
tick,0x7ffdb840feb4,243176333,0,0x0,8
tick,0x7ffdb840feb4,243192343,0,0x0,8
tick,0x7ffdb840feb4,243208349,0,0x0,8
tick,0x7ffdb840feb4,243223518,0,0x0,8
tick,0x7ffdb840feb4,243238350,0,0x0,8
tick,0x7ffdb840feb4,243253512,0,0x0,8
tick,0x7ffdb840feb4,243269066,0,0x0,8
tick,0x7ffdb840feb4,243284349,0,0x0,8
tick,0x7ffdb840feb4,243300360,0,0x0,8
tick,0x7ffdb840feb4,243316080,0,0x0,8
tick,0x7ffdb840feb4,243331343,0,0x0,8
tick,0x7ffdb840feb4,243347077,0,0x0,8
tick,0x7ffdb840feb4,243362351,0,0x0,8
tick,0x7ffdb840feb4,243378085,0,0x0,8
tick,0x7ffdb840feb4,243393354,0,0x0,8
tick,0x7ffdb840feb4,243408356,0,0x0,8
tick,0x7ffdb840feb4,243423533,0,0x0,8
tick,0x7ffdb840feb4,243439559,0,0x0,8
tick,0x7ffdb840feb4,243454529,0,0x0,8
tick,0x7ffdb840feb4,243470243,0,0x0,8
tick,0x7ffdb840feb4,243485533,0,0x0,8
tick,0x7ffdb840feb4,243501237,0,0x0,8
tick,0x7ffdb840feb4,243516600,0,0x0,8
tick,0x7ffdb840feb4,243532198,0,0x0,8
tick,0x7ffdb840feb4,243547398,0,0x0,8
tick,0x7ffdb840feb4,243562550,0,0x0,8
tick,0x7ffdb840feb4,243578573,0,0x0,8
tick,0x7ffdb840feb4,243594245,0,0x0,8
tick,0x7ffdb840feb4,243609466,0,0x0,8
tick,0x7ffdb840feb4,243624609,0,0x0,8
tick,0x7ffdb840feb4,243639571,0,0x0,8
tick,0x7ffdb840feb4,243654704,0,0x0,8
tick,0x7ffdb840feb4,243670073,0,0x0,8
tick,0x7ffdb840feb4,243685569,0,0x0,8
tick,0x7ffdb840feb4,243701663,0,0x0,8
tick,0x7ffdb840feb4,243717067,0,0x0,8
tick,0x7ffdb840feb4,243732385,0,0x0,8
tick,0x7ffdb840feb4,243748423,0,0x0,8
tick,0x7ffdb840feb4,243763571,0,0x0,8
tick,0x7ffdb840feb4,243778790,0,0x0,8
tick,0x7ffdb840feb4,243794795,0,0x0,8
tick,0x7ffdb840feb4,243810807,0,0x0,8
tick,0x7ffdb840feb4,243826375,0,0x0,8
tick,0x7ffdb840feb4,243842409,0,0x0,8
tick,0x7ffdb840feb4,243857375,0,0x0,8
tick,0x7ffdb840feb4,243872400,0,0x0,8
tick,0x7ffdb840feb4,243887588,0,0x0,8
tick,0x7ffdb840feb4,243903412,0,0x0,8
tick,0x7ffdb840feb4,243918595,0,0x0,8
tick,0x7ffdb840feb4,243934600,0,0x0,8
tick,0x7ffdb840feb4,243950570,0,0x0,8
tick,0x7ffdb840feb4,243966608,0,0x0,8
tick,0x7ffdb840feb4,243982614,0,0x0,8
tick,0x7ffdb840feb4,243998435,0,0x0,8
tick,0x7ffdb840feb4,244013621,0,0x0,8
tick,0x7ffdb840feb4,244028619,0,0x0,8
tick,0x7ffdb840feb4,244044602,0,0x0,8
tick,0x7ffdb840feb4,244060628,0,0x0,8
tick,0x7ffdb840feb4,244076639,0,0x0,8
tick,0x7ffdb840feb4,244092433,0,0x0,8
tick,0x7ffdb840feb4,244107625,0,0x0,8
tick,0x7ffdb840feb4,244123637,0,0x0,8
tick,0x7ffdb840feb4,244138620,0,0x0,8
tick,0x7ffdb840feb4,244154625,0,0x0,8
tick,0x7ffdb840feb4,244170626,0,0x0,8
tick,0x7ffdb840feb4,244186658,0,0x0,8
tick,0x7ffdb840feb4,244202629,0,0x0,8
tick,0x7ffdb840feb4,244218631,0,0x0,8
tick,0x7ffdb840feb4,244234628,0,0x0,8
tick,0x7ffdb840feb4,244249626,0,0x0,8
tick,0x7ffdb840feb4,244265456,0,0x0,8
tick,0x7ffdb840feb4,244280633,0,0x0,8
tick,0x7ffdb840feb4,244295778,0,0x0,8
tick,0x7ffdb840feb4,244311199,0,0x0,8
tick,0x7ffdb840feb4,244327217,0,0x0,8
tick,0x7ffdb840feb4,244342432,0,0x0,8
tick,0x7ffdb840feb4,244357670,0,0x0,8
tick,0x7ffdb840feb4,244373474,0,0x0,8
tick,0x7ffdb840feb4,244387854,0,0x0,8
tick,0x7ffdb840feb4,244403654,0,0x0,8
tick,0x7ffdb840feb4,244419195,0,0x0,8
tick,0x7ffdb840feb4,244434641,0,0x0,8
tick,0x7ffdb840feb4,244450654,0,0x0,8
tick,0x7ffdb840feb4,244465795,0,0x0,8
tick,0x7ffdb840feb4,244481471,0,0x0,8
tick,0x7ffdb840feb4,244496664,0,0x0,8
tick,0x7ffdb840feb4,244512486,0,0x0,8
tick,0x7ffdb840feb4,244527953,0,0x0,8
tick,0x7ffdb840feb4,244543493,0,0x0,8
tick,0x7ffdb840feb4,244559507,0,0x0,8
tick,0x7ffdb840feb4,244574674,0,0x0,8
tick,0x7ffdb840feb4,244590493,0,0x0,8
tick,0x7ffdb840feb4,244605696,0,0x0,8
tick,0x7ffdb840feb4,244621715,0,0x0,8
tick,0x7ffdb840feb4,244637532,0,0x0,8
tick,0x7ffdb840feb4,244653516,0,0x0,8
tick,0x7ffdb840feb4,244668649,0,0x0,8
tick,0x7ffdb840feb4,244683526,0,0x0,8
tick,0x7ffdb840feb4,244698808,0,0x0,8
tick,0x7ffdb840feb4,244714516,0,0x0,8
tick,0x7ffdb840feb4,244730000,0,0x0,8
tick,0x7ffdb840feb4,244745151,0,0x0,8
tick,0x7ffdb840feb4,244760532,0,0x0,8
tick,0x7ffdb840feb4,244776519,0,0x0,8
tick,0x7ffdb840feb4,244792516,0,0x0,8
tick,0x7ffdb840feb4,244808399,0,0x0,8
tick,0x7ffdb840feb4,244823699,0,0x0,8
tick,0x7ffdb840feb4,244838964,0,0x0,8
tick,0x7ffdb840feb4,244854698,0,0x0,8
tick,0x7ffdb840feb4,244869839,0,0x0,8
tick,0x7ffdb840feb4,244885707,0,0x0,8
tick,0x7ffdb840feb4,244901556,0,0x0,8
tick,0x7ffdb840feb4,244916748,0,0x0,8
tick,0x7ffdb840feb4,244932543,0,0x0,8
tick,0x7ffdb840feb4,244948376,0,0x0,8
tick,0x7ffdb840feb4,244963561,0,0x0,8
tick,0x7ffdb840feb4,244979541,0,0x0,8
tick,0x7ffdb840feb4,244994541,0,0x0,8
tick,0x7ffdb840feb4,245010232,0,0x0,8
tick,0x7ffdb840feb4,245025552,0,0x0,8
tick,0x7ffdb840feb4,245041143,0,0x0,8
tick,0x7ffdb840feb4,245056507,0,0x0,8
tick,0x7ffdb840feb4,245072555,0,0x0,8
tick,0x7ffdb840feb4,245088553,0,0x0,8
tick,0x7ffdb840feb4,245103731,0,0x0,8
tick,0x7ffdb840feb4,245118555,0,0x0,8
tick,0x7ffdb840feb4,245133732,0,0x0,8
tick,0x7ffdb840feb4,245149412,0,0x0,8
tick,0x7ffdb840feb4,245164741,0,0x0,8
tick,0x7ffdb840feb4,245180783,0,0x0,8
tick,0x7ffdb840feb4,245196750,0,0x0,8
tick,0x7ffdb840feb4,245212764,0,0x0,8
tick,0x7ffdb840feb4,245228767,0,0x0,8
tick,0x7ffdb840feb4,245244749,0,0x0,8
tick,0x7ffdb840feb4,245260261,0,0x0,8
tick,0x7ffdb840feb4,245275563,0,0x0,8
tick,0x7ffdb840feb4,245290560,0,0x0,8
tick,0x7ffdb840feb4,245305830,0,0x0,8
tick,0x7ffdb840feb4,245321757,0,0x0,8
tick,0x7ffdb840feb4,245337356,0,0x0,8
tick,0x7ffdb840feb4,245353360,0,0x0,8
tick,0x7ffdb840feb4,245368772,0,0x0,8
tick,0x7ffdb840feb4,245384778,0,0x0,8
tick,0x7ffdb840feb4,245400455,0,0x0,8
tick,0x7ffdb840feb4,245416082,0,0x0,8
tick,0x7ffdb840feb4,245431468,0,0x0,8
tick,0x7ffdb840feb4,245447074,0,0x0,8
tick,0x7ffdb840feb4,245462360,0,0x0,8
tick,0x7ffdb840feb4,245478090,0,0x0,8
tick,0x7ffdb840feb4,245493375,0,0x0,8
tick,0x7ffdb840feb4,245509327,0,0x0,8
tick,0x7ffdb840feb4,245524781,0,0x0,8
tick,0x7ffdb840feb4,245540380,0,0x0,8
tick,0x7ffdb840feb4,245555606,0,0x0,8
tick,0x7ffdb840feb4,245571351,0,0x0,8
tick,0x7ffdb840feb4,245586848,0,0x0,8
tick,0x7ffdb840feb4,245602628,0,0x0,8
tick,0x7ffdb840feb4,245618088,0,0x0,8
tick,0x7ffdb840feb4,245633618,0,0x0,8
tick,0x7ffdb840feb4,245648620,0,0x0,8
tick,0x7ffdb840feb4,245664341,0,0x0,8
tick,0x7ffdb840feb4,245680340,0,0x0,8
tick,0x7ffdb840feb4,245695808,0,0x0,8
tick,0x7ffdb840feb4,245711653,0,0x0,8
tick,0x7ffdb840feb4,245726817,0,0x0,8
tick,0x7ffdb840feb4,245742824,0,0x0,8
tick,0x7ffdb840feb4,245757820,0,0x0,8
tick,0x7ffdb840feb4,245772636,0,0x0,8
tick,0x7ffdb840feb4,245787852,0,0x0,8
tick,0x7ffdb840feb4,245803655,0,0x0,8
tick,0x7ffdb840feb4,245818660,0,0x0,8
tick,0x7ffdb840feb4,245834638,0,0x0,8
tick,0x7ffdb840feb4,245850344,0,0x0,8
tick,0x7ffdb840feb4,245864834,0,0x0,8
tick,0x7ffdb840feb4,245880318,0,0x0,8
tick,0x7ffdb840feb4,245895836,0,0x0,8
tick,0x7ffdb840feb4,245911660,0,0x0,8
tick,0x7ffdb840feb4,245927489,0,0x0,8
tick,0x7ffdb840feb4,245943494,0,0x0,8
tick,0x7ffdb840feb4,245958809,0,0x0,8
tick,0x7ffdb840feb4,245974828,0,0x0,8
tick,0x7ffdb840feb4,245990674,0,0x0,8
tick,0x7ffdb840feb4,246005836,0,0x0,8
tick,0x7ffdb840feb4,246021401,0,0x0,8
tick,0x7ffdb840feb4,246036850,0,0x0,8
tick,0x7ffdb840feb4,246052669,0,0x0,8
tick,0x7ffdb840feb4,246067869,0,0x0,8
tick,0x7ffdb840feb4,246083673,0,0x0,8
tick,0x7ffdb840feb4,246098853,0,0x0,8
tick,0x7ffdb840feb4,246114864,0,0x0,8
tick,0x7ffdb840feb4,246130415,0,0x0,8
tick,0x7ffdb840feb4,246145860,0,0x0,8
tick,0x7ffdb840feb4,246160678,0,0x0,8
tick,0x7ffdb840feb4,246175860,0,0x0,8
tick,0x7ffdb840feb4,246191314,0,0x0,8
tick,0x7ffdb840feb4,246207310,0,0x0,8
tick,0x7ffdb840feb4,246223313,0,0x0,8
tick,0x7ffdb840feb4,246239319,0,0x0,8
tick,0x7ffdb840feb4,246254698,0,0x0,8
tick,0x7ffdb840feb4,246269886,0,0x0,8
tick,0x7ffdb840feb4,246284884,0,0x0,8
tick,0x7ffdb840feb4,246300946,0,0x0,8
tick,0x7ffdb840feb4,246316888,0,0x0,8
tick,0x7ffdb840feb4,246332708,0,0x0,8
tick,0x7ffdb840feb4,246347654,0,0x0,8
tick,0x7ffdb840feb4,246363659,0,0x0,8
tick,0x7ffdb840feb4,246379655,0,0x0,8
tick,0x7ffdb840feb4,246394887,0,0x0,8
tick,0x7ffdb840feb4,246409594,0,0x0,8
tick,0x7ffdb840feb4,246424888,0,0x0,8
tick,0x7ffdb840feb4,246440830,0,0x0,8
tick,0x7ffdb840feb4,246455666,0,0x0,8
tick,0x7ffdb840feb4,246471370,0,0x0,8
tick,0x7ffdb840feb4,246487356,0,0x0,8
tick,0x7ffdb840feb4,246502702,0,0x0,8
tick,0x7ffdb840feb4,246517897,0,0x0,8
tick,0x7ffdb840feb4,246533715,0,0x0,8
tick,0x7ffdb840feb4,246549417,0,0x0,8
tick,0x7ffdb840feb4,246564897,0,0x0,8
tick,0x7ffdb840feb4,246580409,0,0x0,8
tick,0x7ffdb840feb4,246596409,0,0x0,8
tick,0x7ffdb840feb4,246611749,0,0x0,8
tick,0x7ffdb840feb4,246626715,0,0x0,8
tick,0x7ffdb840feb4,246641515,0,0x0,8
tick,0x7ffdb840feb4,246656741,0,0x0,8
tick,0x7ffdb840feb4,246672740,0,0x0,8
tick,0x7ffdb840feb4,246687940,0,0x0,8
tick,0x7ffdb840feb4,246703436,0,0x0,8
tick,0x7ffdb840feb4,246718795,0,0x0,8
tick,0x7ffdb840feb4,246733929,0,0x0,8
tick,0x7ffdb840feb4,246749190,0,0x0,8
tick,0x7ffdb840feb4,246764921,0,0x0,8
tick,0x7ffdb840feb4,246780109,0,0x0,8
tick,0x7ffdb840feb4,246795106,0,0x0,8
tick,0x7ffdb840feb4,246811115,0,0x0,8
tick,0x7ffdb840feb4,246827118,0,0x0,8
tick,0x7ffdb840feb4,246842760,0,0x0,8
tick,0x7ffdb840feb4,246857949,0,0x0,8
tick,0x7ffdb840feb4,246872770,0,0x0,8
tick,0x7ffdb840feb4,246887943,0,0x0,8
tick,0x7ffdb840feb4,246903945,0,0x0,8
tick,0x7ffdb840feb4,246918964,0,0x0,8
tick,0x7ffdb840feb4,246934949,0,0x0,8
tick,0x7ffdb840feb4,246950966,0,0x0,8
tick,0x7ffdb840feb4,246966114,0,0x0,8
tick,0x7ffdb840feb4,246981548,0,0x0,8
tick,0x7ffdb840feb4,246996960,0,0x0,8
tick,0x7ffdb840feb4,247012558,0,0x0,8
tick,0x7ffdb840feb4,247028119,0,0x0,8
tick,0x7ffdb840feb4,247042961,0,0x0,8
tick,0x7ffdb840feb4,247058130,0,0x0,8
tick,0x7ffdb840feb4,247073791,0,0x0,8
tick,0x7ffdb840feb4,247088940,0,0x0,8
tick,0x7ffdb840feb4,247104971,0,0x0,8
tick,0x7ffdb840feb4,247119687,0,0x0,8
tick,0x7ffdb840feb4,247134971,0,0x0,8
tick,0x7ffdb840feb4,247150422,0,0x0,8
tick,0x7ffdb840feb4,247166089,0,0x0,8
tick,0x7ffdb840feb4,247181576,0,0x0,8
tick,0x7ffdb840feb4,247196761,0,0x0,8
tick,0x7ffdb840feb4,247212757,0,0x0,8
tick,0x7ffdb840feb4,247227760,0,0x0,8
tick,0x7ffdb840feb4,247243778,0,0x0,8
tick,0x7ffdb840feb4,247258948,0,0x0,8
tick,0x7ffdb840feb4,247273831,0,0x0,8
tick,0x7ffdb840feb4,247289815,0,0x0,8
tick,0x7ffdb840feb4,247304761,0,0x0,8
tick,0x7ffdb840feb4,247319767,0,0x0,8
tick,0x7ffdb840feb4,247335003,0,0x0,8
tick,0x7ffdb840feb4,247350423,0,0x0,8
tick,0x7ffdb840feb4,247366007,0,0x0,8
tick,0x7ffdb840feb4,247382012,0,0x0,8
tick,0x7ffdb840feb4,247398015,0,0x0,8
tick,0x7ffdb840feb4,247413765,0,0x0,8
tick,0x7ffdb840feb4,247428774,0,0x0,8
tick,0x7ffdb840feb4,247444013,0,0x0,8
tick,0x7ffdb840feb4,247460015,0,0x0,8
tick,0x7ffdb840feb4,247476026,0,0x0,8
tick,0x7ffdb840feb4,247492029,0,0x0,8
tick,0x7ffdb840feb4,247507936,0,0x0,8
tick,0x7ffdb840feb4,247523846,0,0x0,8
tick,0x7ffdb840feb4,247539843,0,0x0,8
tick,0x7ffdb840feb4,247555853,0,0x0,8
tick,0x7ffdb840feb4,247571859,0,0x0,8
tick,0x7ffdb840feb4,247587938,0,0x0,8
tick,0x7ffdb840feb4,247603749,0,0x0,8
tick,0x7ffdb840feb4,247619099,0,0x0,8
tick,0x7ffdb840feb4,247634499,0,0x0,8
tick,0x7ffdb840feb4,247649799,0,0x0,8
tick,0x7ffdb840feb4,247665864,0,0x0,8
tick,0x7ffdb840feb4,247680787,0,0x0,8
tick,0x7ffdb840feb4,247696055,0,0x0,8
tick,0x7ffdb840feb4,247711879,0,0x0,8
tick,0x7ffdb840feb4,247727898,0,0x0,8
tick,0x7ffdb840feb4,247743795,0,0x0,8
tick,0x7ffdb840feb4,247758872,0,0x0,8
tick,0x7ffdb840feb4,247773891,0,0x0,8
tick,0x7ffdb840feb4,247789066,0,0x0,8
tick,0x7ffdb840feb4,247805055,0,0x0,8
tick,0x7ffdb840feb4,247820064,0,0x0,8
tick,0x7ffdb840feb4,247836076,0,0x0,8
tick,0x7ffdb840feb4,247851868,0,0x0,8
tick,0x7ffdb840feb4,247867074,0,0x0,8
tick,0x7ffdb840feb4,247882898,0,0x0,8
tick,0x7ffdb840feb4,247898075,0,0x0,8
tick,0x7ffdb840feb4,247914072,0,0x0,8
tick,0x7ffdb840feb4,247930081,0,0x0,8
tick,0x7ffdb840feb4,247946087,0,0x0,8
tick,0x7ffdb840feb4,247961073,0,0x0,8
tick,0x7ffdb840feb4,247976080,0,0x0,8
tick,0x7ffdb840feb4,247991913,0,0x0,8
tick,0x7ffdb840feb4,248007081,0,0x0,8
tick,0x7ffdb840feb4,248022097,0,0x0,8
tick,0x7ffdb840feb4,248037901,0,0x0,8
tick,0x7ffdb840feb4,248053082,0,0x0,8
tick,0x7ffdb840feb4,248068742,0,0x0,8
tick,0x7ffdb840feb4,248083926,0,0x0,8
tick,0x7ffdb840feb4,248099933,0,0x0,8
tick,0x7ffdb840feb4,248115086,0,0x0,8
tick,0x7ffdb840feb4,248130575,0,0x0,8
tick,0x7ffdb840feb4,248146101,0,0x0,8
tick,0x7ffdb840feb4,248161887,0,0x0,8
tick,0x7ffdb840feb4,248177106,0,0x0,8
tick,0x7ffdb840feb4,248192932,0,0x0,8
tick,0x7ffdb840feb4,248208016,0,0x0,8
tick,0x7ffdb840feb4,248223108,0,0x0,8
tick,0x7ffdb840feb4,248239115,0,0x0,8
tick,0x7ffdb840feb4,248254107,0,0x0,8
tick,0x7ffdb840feb4,248269363,0,0x0,8
tick,0x7ffdb840feb4,248285111,0,0x0,8
tick,0x7ffdb840feb4,248300135,0,0x0,8
tick,0x7ffdb840feb4,248316126,0,0x0,8
tick,0x7ffdb840feb4,248332125,0,0x0,8
tick,0x7ffdb840feb4,248347963,0,0x0,8
tick,0x7ffdb840feb4,248363959,0,0x0,8
tick,0x7ffdb840feb4,248378661,0,0x0,8
tick,0x7ffdb840feb4,248393953,0,0x0,8
tick,0x7ffdb840feb4,248409740,0,0x0,8
tick,0x7ffdb840feb4,248425129,0,0x0,8
tick,0x7ffdb840feb4,248440747,0,0x0,8
tick,0x7ffdb840feb4,248456139,0,0x0,8
tick,0x7ffdb840feb4,248471965,0,0x0,8
tick,0x7ffdb840feb4,248487131,0,0x0,8
tick,0x7ffdb840feb4,248502959,0,0x0,8
tick,0x7ffdb840feb4,248518448,0,0x0,8
tick,0x7ffdb840feb4,248533975,0,0x0,8
tick,0x7ffdb840feb4,248549428,0,0x0,8
tick,0x7ffdb840feb4,248564142,0,0x0,8
tick,0x7ffdb840feb4,248579570,0,0x0,8
tick,0x7ffdb840feb4,248594860,0,0x0,8
tick,0x7ffdb840feb4,248610034,0,0x0,8
tick,0x7ffdb840feb4,248625289,0,0x0,8
tick,0x7ffdb840feb4,248640604,0,0x0,8
tick,0x7ffdb840feb4,248656154,0,0x0,8
tick,0x7ffdb840feb4,248671982,0,0x0,8
tick,0x7ffdb840feb4,248687508,0,0x0,8
tick,0x7ffdb840feb4,248702985,0,0x0,8
tick,0x7ffdb840feb4,248718526,0,0x0,8
tick,0x7ffdb840feb4,248733996,0,0x0,8
tick,0x7ffdb840feb4,248749431,0,0x0,8
tick,0x7ffdb840feb4,248765093,0,0x0,8
tick,0x7ffdb840feb4,248780396,0,0x0,8
tick,0x7ffdb840feb4,248796400,0,0x0,8
tick,0x7ffdb840feb4,248812002,0,0x0,8
tick,0x7ffdb840feb4,248827991,0,0x0,8
tick,0x7ffdb840feb4,248844012,0,0x0,8
tick,0x7ffdb840feb4,248859011,0,0x0,8
tick,0x7ffdb840feb4,248874010,0,0x0,8
tick,0x7ffdb840feb4,248890004,0,0x0,8
tick,0x7ffdb840feb4,248905597,0,0x0,8
tick,0x7ffdb840feb4,248921608,0,0x0,8
tick,0x7ffdb840feb4,248937002,0,0x0,8
tick,0x7ffdb840feb4,248952019,0,0x0,8
tick,0x7ffdb840feb4,248968028,0,0x0,8
tick,0x7ffdb840feb4,248983021,0,0x0,8
tick,0x7ffdb840feb4,248998435,0,0x0,8
tick,0x7ffdb840feb4,249014021,0,0x0,8
tick,0x7ffdb840feb4,249029004,0,0x0,8
tick,0x7ffdb840feb4,249044207,0,0x0,8
tick,0x7ffdb840feb4,249059647,0,0x0,8
tick,0x7ffdb840feb4,249075011,0,0x0,8
tick,0x7ffdb840feb4,249090206,0,0x0,8
tick,0x7ffdb840feb4,249105643,0,0x0,8
tick,0x7ffdb840feb4,249121657,0,0x0,8
tick,0x7ffdb840feb4,249137010,0,0x0,8
tick,0x7ffdb840feb4,249153041,0,0x0,8
tick,0x7ffdb840feb4,249169016,0,0x0,8
tick,0x7ffdb840feb4,249184216,0,0x0,8
tick,0x7ffdb840feb4,249199229,0,0x0,8
tick,0x7ffdb840feb4,249215222,0,0x0,8
tick,0x7ffdb840feb4,249231229,0,0x0,8
tick,0x7ffdb840feb4,249247228,0,0x0,8
tick,0x7ffdb840feb4,249263265,0,0x0,8
tick,0x7ffdb840feb4,249278377,0,0x0,8
tick,0x7ffdb840feb4,249294071,0,0x0,8
tick,0x7ffdb840feb4,249310072,0,0x0,8
tick,0x7ffdb840feb4,249325238,0,0x0,8
tick,0x7ffdb840feb4,249341037,0,0x0,8
tick,0x7ffdb840feb4,249356047,0,0x0,8
tick,0x7ffdb840feb4,249371585,0,0x0,8
tick,0x7ffdb840feb4,249387017,0,0x0,8
tick,0x7ffdb840feb4,249402075,0,0x0,8
tick,0x7ffdb840feb4,249418056,0,0x0,8
tick,0x7ffdb840feb4,249434082,0,0x0,8
tick,0x7ffdb840feb4,249450075,0,0x0,8
tick,0x7ffdb840feb4,249466033,0,0x0,8
tick,0x7ffdb840feb4,249480762,0,0x0,8
tick,0x7ffdb840feb4,249496257,0,0x0,8
tick,0x7ffdb840feb4,249511455,0,0x0,8
tick,0x7ffdb840feb4,249527250,0,0x0,8
tick,0x7ffdb840feb4,249543085,0,0x0,8
tick,0x7ffdb840feb4,249558838,0,0x0,8
tick,0x7ffdb840feb4,249574100,0,0x0,8
tick,0x7ffdb840feb4,249588905,0,0x0,8
tick,0x7ffdb840feb4,249604104,0,0x0,8
tick,0x7ffdb840feb4,249619411,0,0x0,8
tick,0x7ffdb840feb4,249635293,0,0x0,8
tick,0x7ffdb840feb4,249650439,0,0x0,8
tick,0x7ffdb840feb4,249666030,0,0x0,8
tick,0x7ffdb840feb4,249681257,0,0x0,8
tick,0x7ffdb840feb4,249696435,0,0x0,8
tick,0x7ffdb840feb4,249712118,0,0x0,8
tick,0x7ffdb840feb4,249728116,0,0x0,8
tick,0x7ffdb840feb4,249744111,0,0x0,8
tick,0x7ffdb840feb4,249760115,0,0x0,8
tick,0x7ffdb840feb4,249775291,0,0x0,8
tick,0x7ffdb840feb4,249791127,0,0x0,8
tick,0x7ffdb840feb4,249806295,0,0x0,8
tick,0x7ffdb840feb4,249821974,0,0x0,8
tick,0x7ffdb840feb4,249837121,0,0x0,8
tick,0x7ffdb840feb4,249853126,0,0x0,8
tick,0x7ffdb840feb4,249869135,0,0x0,8
tick,0x7ffdb840feb4,249884325,0,0x0,8
tick,0x7ffdb840feb4,249899294,0,0x0,8
tick,0x7ffdb840feb4,249915326,0,0x0,8
tick,0x7ffdb840feb4,249930456,0,0x0,8
tick,0x7ffdb840feb4,249946144,0,0x0,8
tick,0x7ffdb840feb4,249961153,0,0x0,8
tick,0x7ffdb840feb4,249976675,0,0x0,8
tick,0x7ffdb840feb4,249992145,0,0x0,8
tick,0x7ffdb840feb4,250007660,0,0x0,8
tick,0x7ffdb840feb4,250023142,0,0x0,8
tick,0x7ffdb840feb4,250039022,0,0x0,8
tick,0x7ffdb840feb4,250054165,0,0x0,8
tick,0x7ffdb840feb4,250070026,0,0x0,8
tick,0x7ffdb840feb4,250085330,0,0x0,8
tick,0x7ffdb840feb4,250101303,0,0x0,8
tick,0x7ffdb840feb4,250117310,0,0x0,8
tick,0x7ffdb840feb4,250133156,0,0x0,8
tick,0x7ffdb840feb4,250149171,0,0x0,8
tick,0x7ffdb840feb4,250164338,0,0x0,8
tick,0x7ffdb840feb4,250180176,0,0x0,8
tick,0x7ffdb840feb4,250195340,0,0x0,8
tick,0x7ffdb840feb4,250211336,0,0x0,8
tick,0x7ffdb840feb4,250226778,0,0x0,8
tick,0x7ffdb840feb4,250242765,0,0x0,8
tick,0x7ffdb840feb4,250258779,0,0x0,8
tick,0x7ffdb840feb4,250274778,0,0x0,8
tick,0x7ffdb840feb4,250290791,0,0x0,8
tick,0x7ffdb840feb4,250306383,0,0x0,8
tick,0x7ffdb840feb4,250321460,0,0x0,8
tick,0x7ffdb840feb4,250337457,0,0x0,8
tick,0x7ffdb840feb4,250352775,0,0x0,8
tick,0x7ffdb840feb4,250368782,0,0x0,8
tick,0x7ffdb840feb4,250384773,0,0x0,8
tick,0x7ffdb840feb4,250400339,0,0x0,8
tick,0x7ffdb840feb4,250416108,0,0x0,8
tick,0x7ffdb840feb4,250431761,0,0x0,8
tick,0x7ffdb840feb4,250447597,0,0x0,8
tick,0x7ffdb840feb4,250463199,0,0x0,8
tick,0x7ffdb840feb4,250478775,0,0x0,8
tick,0x7ffdb840feb4,250494787,0,0x0,8
tick,0x7ffdb840feb4,250509781,0,0x0,8
tick,0x7ffdb840feb4,250525386,0,0x0,8
tick,0x7ffdb840feb4,250541393,0,0x0,8
tick,0x7ffdb840feb4,250556398,0,0x0,8
tick,0x7ffdb840feb4,250572121,0,0x0,8
tick,0x7ffdb840feb4,250587390,0,0x0,8
tick,0x7ffdb840feb4,250603404,0,0x0,8
tick,0x7ffdb840feb4,250619109,0,0x0,8
tick,0x7ffdb840feb4,250635214,0,0x0,8
tick,0x7ffdb840feb4,250650726,0,0x0,8
tick,0x7ffdb840feb4,250666104,0,0x0,8
tick,0x7ffdb840feb4,250681593,0,0x0,8
tick,0x7ffdb840feb4,250697595,0,0x0,8
tick,0x7ffdb840feb4,250713228,0,0x0,8
tick,0x7ffdb840feb4,250728600,0,0x0,8
tick,0x7ffdb840feb4,250743602,0,0x0,8
tick,0x7ffdb840feb4,250759614,0,0x0,8
tick,0x7ffdb840feb4,250775415,0,0x0,8
tick,0x7ffdb840feb4,250791090,0,0x0,8
tick,0x7ffdb840feb4,250806399,0,0x0,8
tick,0x7ffdb840feb4,250821414,0,0x0,8
tick,0x7ffdb840feb4,250837420,0,0x0,8
tick,0x7ffdb840feb4,250853246,0,0x0,8
tick,0x7ffdb840feb4,250869084,0,0x0,8
tick,0x7ffdb840feb4,250884222,0,0x0,8
tick,0x7ffdb840feb4,250899411,0,0x0,8
tick,0x7ffdb840feb4,250915248,0,0x0,8
tick,0x7ffdb840feb4,250930263,0,0x0,8
tick,0x7ffdb840feb4,250945357,0,0x0,8
tick,0x7ffdb840feb4,250960574,0,0x0,8
tick,0x7ffdb840feb4,250976574,0,0x0,8
tick,0x7ffdb840feb4,250992090,0,0x0,8
tick,0x7ffdb840feb4,251007257,0,0x0,8
tick,0x7ffdb840feb4,251023269,0,0x0,8
tick,0x7ffdb840feb4,251038431,0,0x0,8
tick,0x7ffdb840feb4,251054272,0,0x0,8
tick,0x7ffdb840feb4,251070102,0,0x0,8
tick,0x7ffdb840feb4,251086099,0,0x0,8
tick,0x7ffdb840feb4,251101413,0,0x0,8
tick,0x7ffdb840feb4,251117107,0,0x0,8
tick,0x7ffdb840feb4,251133107,0,0x0,8
tick,0x7ffdb840feb4,251149103,0,0x0,8
tick,0x7ffdb840feb4,251164285,0,0x0,8
tick,0x7ffdb840feb4,251179773,0,0x0,8
tick,0x7ffdb840feb4,251195284,0,0x0,8
tick,0x7ffdb840feb4,251211294,0,0x0,8
tick,0x7ffdb840feb4,251226467,0,0x0,8
tick,0x7ffdb840feb4,251242106,0,0x0,8
tick,0x7ffdb840feb4,251257112,0,0x0,8
tick,0x7ffdb840feb4,251273109,0,0x0,8
tick,0x7ffdb840feb4,251289111,0,0x0,8
tick,0x7ffdb840feb4,251304298,0,0x0,8
tick,0x7ffdb840feb4,251320300,0,0x0,8
tick,0x7ffdb840feb4,251335479,0,0x0,8
tick,0x7ffdb840feb4,251351108,0,0x0,8
tick,0x7ffdb840feb4,251366111,0,0x0,8
tick,0x7ffdb840feb4,251381773,0,0x0,8
tick,0x7ffdb840feb4,251397789,0,0x0,8
tick,0x7ffdb840feb4,251413303,0,0x0,8
tick,0x7ffdb840feb4,251429120,0,0x0,8
tick,0x7ffdb840feb4,251444320,0,0x0,8
tick,0x7ffdb840feb4,251459493,0,0x0,8
tick,0x7ffdb840feb4,251475501,0,0x0,8
tick,0x7ffdb840feb4,251491501,0,0x0,8
tick,0x7ffdb840feb4,251507226,0,0x0,8
tick,0x7ffdb840feb4,251522338,0,0x0,8
tick,0x7ffdb840feb4,251538227,0,0x0,8
tick,0x7ffdb840feb4,251553330,0,0x0,8
tick,0x7ffdb840feb4,251569360,0,0x0,8
tick,0x7ffdb840feb4,251584352,0,0x0,8
tick,0x7ffdb840feb4,251600341,0,0x0,8
tick,0x7ffdb840feb4,251615345,0,0x0,8
tick,0x7ffdb840feb4,251630371,0,0x0,8
tick,0x7ffdb840feb4,251646368,0,0x0,8
tick,0x7ffdb840feb4,251661670,0,0x0,8
tick,0x7ffdb840feb4,251677675,0,0x0,8
tick,0x7ffdb840feb4,251693357,0,0x0,8
tick,0x7ffdb840feb4,251709121,0,0x0,8
tick,0x7ffdb840feb4,251724354,0,0x0,8
tick,0x7ffdb840feb4,251739347,0,0x0,8
tick,0x7ffdb840feb4,251754526,0,0x0,8
tick,0x7ffdb840feb4,251769723,0,0x0,8
tick,0x7ffdb840feb4,251785528,0,0x0,8
tick,0x7ffdb840feb4,251801486,0,0x0,8
tick,0x7ffdb840feb4,251817115,0,0x0,8
tick,0x7ffdb840feb4,251832372,0,0x0,8
tick,0x7ffdb840feb4,251847012,0,0x0,8
tick,0x7ffdb840feb4,251862232,0,0x0,8
tick,0x7ffdb840feb4,251877221,0,0x0,8
tick,0x7ffdb840feb4,251892373,0,0x0,8
tick,0x7ffdb840feb4,251907558,0,0x0,8
tick,0x7ffdb840feb4,251923375,0,0x0,8
tick,0x7ffdb840feb4,251939364,0,0x0,8
tick,0x7ffdb840feb4,251954558,0,0x0,8
tick,0x7ffdb840feb4,251970385,0,0x0,8
tick,0x7ffdb840feb4,251985375,0,0x0,8
tick,0x7ffdb840feb4,252001494,0,0x0,8
tick,0x7ffdb840feb4,252017430,0,0x0,8
tick,0x7ffdb840feb4,252033382,0,0x0,8
tick,0x7ffdb840feb4,252049427,0,0x0,8
tick,0x7ffdb840feb4,252064428,0,0x0,8
tick,0x7ffdb840feb4,252079777,0,0x0,8
tick,0x7ffdb840feb4,252095577,0,0x0,8
tick,0x7ffdb840feb4,252111138,0,0x0,8
tick,0x7ffdb840feb4,252126043,0,0x0,8
tick,0x7ffdb840feb4,252141401,0,0x0,8
tick,0x7ffdb840feb4,252157397,0,0x0,8
tick,0x7ffdb840feb4,252173410,0,0x0,8
tick,0x7ffdb840feb4,252189145,0,0x0,8
tick,0x7ffdb840feb4,252204406,0,0x0,8
tick,0x7ffdb840feb4,252219417,0,0x0,8
tick,0x7ffdb840feb4,252234595,0,0x0,8
tick,0x7ffdb840feb4,252250111,0,0x0,8
tick,0x7ffdb840feb4,252266125,0,0x0,8
tick,0x7ffdb840feb4,252282112,0,0x0,8
tick,0x7ffdb840feb4,252298129,0,0x0,8
tick,0x7ffdb840feb4,252314140,0,0x0,8
tick,0x7ffdb840feb4,252330141,0,0x0,8
tick,0x7ffdb840feb4,252345143,0,0x0,8
tick,0x7ffdb840feb4,252359883,0,0x0,8
tick,0x7ffdb840feb4,252374609,0,0x0,8
tick,0x7ffdb840feb4,252390153,0,0x0,8
tick,0x7ffdb840feb4,252405607,0,0x0,8
tick,0x7ffdb840feb4,252420620,0,0x0,8
tick,0x7ffdb840feb4,252435749,0,0x0,8
tick,0x7ffdb840feb4,252450637,0,0x0,8
tick,0x7ffdb840feb4,252465924,0,0x0,8
tick,0x7ffdb840feb4,252481236,0,0x0,8
tick,0x7ffdb840feb4,252496932,0,0x0,8
tick,0x7ffdb840feb4,252511892,0,0x0,8
tick,0x7ffdb840feb4,252527625,0,0x0,8
tick,0x7ffdb840feb4,252542450,0,0x0,8
tick,0x7ffdb840feb4,252558565,0,0x0,8
tick,0x7ffdb840feb4,252574634,0,0x0,8
tick,0x7ffdb840feb4,252589652,0,0x0,8
tick,0x7ffdb840feb4,252604633,0,0x0,8
tick,0x7ffdb840feb4,252619871,0,0x0,8
tick,0x7ffdb840feb4,252634641,0,0x0,8
tick,0x7ffdb840feb4,252650315,0,0x0,8
tick,0x7ffdb840feb4,252665474,0,0x0,8
tick,0x7ffdb840feb4,252680646,0,0x0,8
tick,0x7ffdb840feb4,252696646,0,0x0,8
tick,0x7ffdb840feb4,252712657,0,0x0,8
tick,0x7ffdb840feb4,252727647,0,0x0,8
tick,0x7ffdb840feb4,252743481,0,0x0,8
tick,0x7ffdb840feb4,252758776,0,0x0,8
tick,0x7ffdb840feb4,252774477,0,0x0,8
tick,0x7ffdb840feb4,252789178,0,0x0,8
tick,0x7ffdb840feb4,252804477,0,0x0,8
tick,0x7ffdb840feb4,252820177,0,0x0,8
tick,0x7ffdb840feb4,252835665,0,0x0,8
tick,0x7ffdb840feb4,252851666,0,0x0,8
tick,0x7ffdb840feb4,252867675,0,0x0,8
tick,0x7ffdb840feb4,252883183,0,0x0,8
tick,0x7ffdb840feb4,252899186,0,0x0,8
tick,0x7ffdb840feb4,252914490,0,0x0,8
tick,0x7ffdb840feb4,252930517,0,0x0,8
tick,0x7ffdb840feb4,252945520,0,0x0,8
tick,0x7ffdb840feb4,252960686,0,0x0,8
tick,0x7ffdb840feb4,252975954,0,0x0,8
tick,0x7ffdb840feb4,252991195,0,0x0,8
tick,0x7ffdb840feb4,253006688,0,0x0,8
tick,0x7ffdb840feb4,253021953,0,0x0,8
tick,0x7ffdb840feb4,253037682,0,0x0,8
tick,0x7ffdb840feb4,253053693,0,0x0,8
tick,0x7ffdb840feb4,253069703,0,0x0,8
tick,0x7ffdb840feb4,253085691,0,0x0,8
tick,0x7ffdb840feb4,253101597,0,0x0,8
tick,0x7ffdb840feb4,253116501,0,0x0,8
tick,0x7ffdb840feb4,253131709,0,0x0,8
tick,0x7ffdb840feb4,253147335,0,0x0,8
tick,0x7ffdb840feb4,253162526,0,0x0,8
tick,0x7ffdb840feb4,253177709,0,0x0,8
tick,0x7ffdb840feb4,253193527,0,0x0,8
tick,0x7ffdb840feb4,253208707,0,0x0,8
tick,0x7ffdb840feb4,253223721,0,0x0,8
tick,0x7ffdb840feb4,253239733,0,0x0,8
tick,0x7ffdb840feb4,253255716,0,0x0,8
tick,0x7ffdb840feb4,253270714,0,0x0,8
tick,0x7ffdb840feb4,253286715,0,0x0,8
tick,0x7ffdb840feb4,253301719,0,0x0,8
tick,0x7ffdb840feb4,253317733,0,0x0,8
tick,0x7ffdb840feb4,253333721,0,0x0,8
tick,0x7ffdb840feb4,253349736,0,0x0,8
tick,0x7ffdb840feb4,253365719,0,0x0,8
tick,0x7ffdb840feb4,253381146,0,0x0,8
tick,0x7ffdb840feb4,253396623,0,0x0,8
tick,0x7ffdb840feb4,253411620,0,0x0,8
tick,0x7ffdb840feb4,253426942,0,0x0,8
tick,0x7ffdb840feb4,253442732,0,0x0,8
tick,0x7ffdb840feb4,253457731,0,0x0,8
tick,0x7ffdb840feb4,253472560,0,0x0,8
tick,0x7ffdb840feb4,253488296,0,0x0,8
tick,0x7ffdb840feb4,253503563,0,0x0,8
tick,0x7ffdb840feb4,253518811,0,0x0,8
tick,0x7ffdb840feb4,253534642,0,0x0,8
tick,0x7ffdb840feb4,253550210,0,0x0,8
tick,0x7ffdb840feb4,253565756,0,0x0,8
tick,0x7ffdb840feb4,253581569,0,0x0,8
tick,0x7ffdb840feb4,253597581,0,0x0,8
tick,0x7ffdb840feb4,253613576,0,0x0,8
tick,0x7ffdb840feb4,253628765,0,0x0,8
tick,0x7ffdb840feb4,253643593,0,0x0,8
tick,0x7ffdb840feb4,253658760,0,0x0,8
tick,0x7ffdb840feb4,253674763,0,0x0,8
tick,0x7ffdb840feb4,253690764,0,0x0,8
tick,0x7ffdb840feb4,253706777,0,0x0,8
tick,0x7ffdb840feb4,253722776,0,0x0,8
tick,0x7ffdb840feb4,253738786,0,0x0,8
tick,0x7ffdb840feb4,253754604,0,0x0,8
tick,0x7ffdb840feb4,253769785,0,0x0,8
tick,0x7ffdb840feb4,253785789,0,0x0,8
tick,0x7ffdb840feb4,253800609,0,0x0,8
tick,0x7ffdb840feb4,253815807,0,0x0,8
tick,0x7ffdb840feb4,253831785,0,0x0,8
tick,0x7ffdb840feb4,253846790,0,0x0,8
tick,0x7ffdb840feb4,253862804,0,0x0,8
tick,0x7ffdb840feb4,253878808,0,0x0,8
tick,0x7ffdb840feb4,253893611,0,0x0,8
tick,0x7ffdb840feb4,253908806,0,0x0,8
tick,0x7ffdb840feb4,253924787,0,0x0,8
tick,0x7ffdb840feb4,253940588,0,0x0,8
tick,0x7ffdb840feb4,253956605,0,0x0,8
tick,0x7ffdb840feb4,253972611,0,0x0,8
tick,0x7ffdb840feb4,253987815,0,0x0,8
tick,0x7ffdb840feb4,254002630,0,0x0,8
tick,0x7ffdb840feb4,254017811,0,0x0,8
tick,0x7ffdb840feb4,254033627,0,0x0,8
tick,0x7ffdb840feb4,254048752,0,0x0,8
tick,0x7ffdb840feb4,254064630,0,0x0,8
tick,0x7ffdb840feb4,254079833,0,0x0,8
tick,0x7ffdb840feb4,254094639,0,0x0,8
tick,0x7ffdb840feb4,254110325,0,0x0,8
tick,0x7ffdb840feb4,254125823,0,0x0,8
tick,0x7ffdb840feb4,254140826,0,0x0,8
tick,0x7ffdb840feb4,254156827,0,0x0,8
tick,0x7ffdb840feb4,254172834,0,0x0,8
tick,0x7ffdb840feb4,254188837,0,0x0,8
tick,0x7ffdb840feb4,254204827,0,0x0,8
tick,0x7ffdb840feb4,254220824,0,0x0,8
tick,0x7ffdb840feb4,254236844,0,0x0,8
tick,0x7ffdb840feb4,254252844,0,0x0,8
tick,0x7ffdb840feb4,254268846,0,0x0,8
tick,0x7ffdb840feb4,254284840,0,0x0,8
tick,0x7ffdb840feb4,254300852,0,0x0,8
tick,0x7ffdb840feb4,254316854,0,0x0,8
tick,0x7ffdb840feb4,254332862,0,0x0,8
tick,0x7ffdb840feb4,254348106,0,0x0,8
tick,0x7ffdb840feb4,254363848,0,0x0,8
tick,0x7ffdb840feb4,254379147,0,0x0,8
tick,0x7ffdb840feb4,254394674,0,0x0,8
tick,0x7ffdb840feb4,254410359,0,0x0,8
tick,0x7ffdb840feb4,254425315,0,0x0,8
tick,0x7ffdb840feb4,254440652,0,0x0,8
tick,0x7ffdb840feb4,254455850,0,0x0,8
tick,0x7ffdb840feb4,254471245,0,0x0,8
tick,0x7ffdb840feb4,254486852,0,0x0,8
tick,0x7ffdb840feb4,254502022,0,0x0,8
tick,0x7ffdb840feb4,254517338,0,0x0,8
tick,0x7ffdb840feb4,254532495,0,0x0,8
tick,0x7ffdb840feb4,254548463,0,0x0,8
tick,0x7ffdb840feb4,254563695,0,0x0,8
tick,0x7ffdb840feb4,254578875,0,0x0,8
tick,0x7ffdb840feb4,254593699,0,0x0,8
tick,0x7ffdb840feb4,254608887,0,0x0,8
tick,0x7ffdb840feb4,254624894,0,0x0,8
tick,0x7ffdb840feb4,254640888,0,0x0,8
tick,0x7ffdb840feb4,254656371,0,0x0,8
tick,0x7ffdb840feb4,254671880,0,0x0,8
tick,0x7ffdb840feb4,254686897,0,0x0,8
tick,0x7ffdb840feb4,254702271,0,0x0,8
tick,0x7ffdb840feb4,254717890,0,0x0,8
tick,0x7ffdb840feb4,254733698,0,0x0,8
tick,0x7ffdb840feb4,254749267,0,0x0,8
tick,0x7ffdb840feb4,254764883,0,0x0,8
tick,0x7ffdb840feb4,254779912,0,0x0,8
tick,0x7ffdb840feb4,254795905,0,0x0,8
tick,0x7ffdb840feb4,254811918,0,0x0,8
tick,0x7ffdb840feb4,254827167,0,0x0,8
tick,0x7ffdb840feb4,254842736,0,0x0,8
tick,0x7ffdb840feb4,254857896,0,0x0,8
tick,0x7ffdb840feb4,254872727,0,0x0,8
tick,0x7ffdb840feb4,254887924,0,0x0,8
tick,0x7ffdb840feb4,254903732,0,0x0,8
tick,0x7ffdb840feb4,254919736,0,0x0,8
tick,0x7ffdb840feb4,254934903,0,0x0,8
tick,0x7ffdb840feb4,254950479,0,0x0,8
tick,0x7ffdb840feb4,254966124,0,0x0,8
tick,0x7ffdb840feb4,254981793,0,0x0,8
tick,0x7ffdb840feb4,254997807,0,0x0,8
tick,0x7ffdb840feb4,255013759,0,0x0,8
tick,0x7ffdb840feb4,255028835,0,0x0,8
tick,0x7ffdb840feb4,255044754,0,0x0,8
tick,0x7ffdb840feb4,255059941,0,0x0,8
tick,0x7ffdb840feb4,255075923,0,0x0,8
tick,0x7ffdb840feb4,255091936,0,0x0,8
tick,0x7ffdb840feb4,255107942,0,0x0,8
tick,0x7ffdb840feb4,255123758,0,0x0,8
tick,0x7ffdb840feb4,255138944,0,0x0,8
tick,0x7ffdb840feb4,255154936,0,0x0,8
tick,0x7ffdb840feb4,255169744,0,0x0,8
tick,0x7ffdb840feb4,255184947,0,0x0,8
tick,0x7ffdb840feb4,255200212,0,0x0,8
tick,0x7ffdb840feb4,255215943,0,0x0,8
tick,0x7ffdb840feb4,255231277,0,0x0,8
tick,0x7ffdb840feb4,255246961,0,0x0,8
tick,0x7ffdb840feb4,255261960,0,0x0,8
tick,0x7ffdb840feb4,255277969,0,0x0,8
tick,0x7ffdb840feb4,255293965,0,0x0,8
tick,0x7ffdb840feb4,255309972,0,0x0,8
tick,0x7ffdb840feb4,255325966,0,0x0,8
tick,0x7ffdb840feb4,255341964,0,0x0,8
tick,0x7ffdb840feb4,255357190,0,0x0,8
tick,0x7ffdb840feb4,255371973,0,0x0,8
tick,0x7ffdb840feb4,255387975,0,0x0,8
tick,0x7ffdb840feb4,255403984,0,0x0,8
tick,0x7ffdb840feb4,255419984,0,0x0,8
tick,0x7ffdb840feb4,255435975,0,0x0,8
tick,0x7ffdb840feb4,255451971,0,0x0,8
tick,0x7ffdb840feb4,255467981,0,0x0,8
tick,0x7ffdb840feb4,255483798,0,0x0,8
tick,0x7ffdb840feb4,255499476,0,0x0,8
tick,0x7ffdb840feb4,255514810,0,0x0,8
tick,0x7ffdb840feb4,255529998,0,0x0,8
tick,0x7ffdb840feb4,255545982,0,0x0,8
tick,0x7ffdb840feb4,255561361,0,0x0,8
tick,0x7ffdb840feb4,255576997,0,0x0,8
tick,0x7ffdb840feb4,255592008,0,0x0,8
tick,0x7ffdb840feb4,255607533,0,0x0,8
tick,0x7ffdb840feb4,255622815,0,0x0,8
tick,0x7ffdb840feb4,255637992,0,0x0,8
tick,0x7ffdb840feb4,255653820,0,0x0,8
tick,0x7ffdb840feb4,255669008,0,0x0,8
tick,0x7ffdb840feb4,255684021,0,0x0,8
tick,0x7ffdb840feb4,255699468,0,0x0,8
tick,0x7ffdb840feb4,255714834,0,0x0,8
tick,0x7ffdb840feb4,255729887,0,0x0,8
tick,0x7ffdb840feb4,255745832,0,0x0,8
tick,0x7ffdb840feb4,255761021,0,0x0,8
tick,0x7ffdb840feb4,255776009,0,0x0,8
tick,0x7ffdb840feb4,255792020,0,0x0,8
tick,0x7ffdb840feb4,255808027,0,0x0,8
tick,0x7ffdb840feb4,255823844,0,0x0,8
tick,0x7ffdb840feb4,255839846,0,0x0,8
tick,0x7ffdb840feb4,255855033,0,0x0,8
tick,0x7ffdb840feb4,255871011,0,0x0,8
tick,0x7ffdb840feb4,255886029,0,0x0,8
tick,0x7ffdb840feb4,255901882,0,0x0,8
tick,0x7ffdb840feb4,255917032,0,0x0,8
tick,0x7ffdb840feb4,255932049,0,0x0,8
tick,0x7ffdb840feb4,255948026,0,0x0,8
tick,0x7ffdb840feb4,255963866,0,0x0,8
tick,0x7ffdb840feb4,255979041,0,0x0,8
tick,0x7ffdb840feb4,255995047,0,0x0,8
tick,0x7ffdb840feb4,256010046,0,0x0,8
tick,0x7ffdb840feb4,256025866,0,0x0,8
tick,0x7ffdb840feb4,256041061,0,0x0,8
tick,0x7ffdb840feb4,256056057,0,0x0,8
tick,0x7ffdb840feb4,256071874,0,0x0,8
tick,0x7ffdb840feb4,256087063,0,0x0,8
tick,0x7ffdb840feb4,256102081,0,0x0,8
tick,0x7ffdb840feb4,256117249,0,0x0,8
tick,0x7ffdb840feb4,256133064,0,0x0,8
tick,0x7ffdb840feb4,256148886,0,0x0,8
tick,0x7ffdb840feb4,256163880,0,0x0,8
tick,0x7ffdb840feb4,256179876,0,0x0,8
tick,0x7ffdb840feb4,256194892,0,0x0,8
tick,0x7ffdb840feb4,256210900,0,0x0,8
tick,0x7ffdb840feb4,256226036,0,0x0,8
tick,0x7ffdb840feb4,256241482,0,0x0,8
tick,0x7ffdb840feb4,256257006,0,0x0,8
tick,0x7ffdb840feb4,256272889,0,0x0,8
tick,0x7ffdb840feb4,256288007,0,0x0,8
tick,0x7ffdb840feb4,256304010,0,0x0,8
tick,0x7ffdb840feb4,256319012,0,0x0,8
tick,0x7ffdb840feb4,256335015,0,0x0,8
tick,0x7ffdb840feb4,256350327,0,0x0,8
tick,0x7ffdb840feb4,256366031,0,0x0,8
tick,0x7ffdb840feb4,256381159,0,0x0,8
tick,0x7ffdb840feb4,256396976,0,0x0,8
tick,0x7ffdb840feb4,256412977,0,0x0,8
tick,0x7ffdb840feb4,256427990,0,0x0,8
tick,0x7ffdb840feb4,256442934,0,0x0,8
tick,0x7ffdb840feb4,256458990,0,0x0,8
tick,0x7ffdb840feb4,256474897,0,0x0,8
tick,0x7ffdb840feb4,256490110,0,0x0,8
tick,0x7ffdb840feb4,256506102,0,0x0,8
tick,0x7ffdb840feb4,256520928,0,0x0,8
tick,0x7ffdb840feb4,256536098,0,0x0,8
tick,0x7ffdb840feb4,256551350,0,0x0,8
tick,0x7ffdb840feb4,256567112,0,0x0,8
tick,0x7ffdb840feb4,256582819,0,0x0,8
tick,0x7ffdb840feb4,256598121,0,0x0,8
tick,0x7ffdb840feb4,256613135,0,0x0,8
tick,0x7ffdb840feb4,256628114,0,0x0,8
tick,0x7ffdb840feb4,256643941,0,0x0,8
tick,0x7ffdb840feb4,256659131,0,0x0,8
tick,0x7ffdb840feb4,256674951,0,0x0,8
tick,0x7ffdb840feb4,256690141,0,0x0,8
tick,0x7ffdb840feb4,256705130,0,0x0,8
tick,0x7ffdb840feb4,256721124,0,0x0,8
tick,0x7ffdb840feb4,256736271,0,0x0,8
tick,0x7ffdb840feb4,256751149,0,0x0,8
tick,0x7ffdb840feb4,256766659,0,0x0,8
tick,0x7ffdb840feb4,256781798,0,0x0,8
tick,0x7ffdb840feb4,256797143,0,0x0,8
tick,0x7ffdb840feb4,256812970,0,0x0,8
tick,0x7ffdb840feb4,256828939,0,0x0,8
tick,0x7ffdb840feb4,256843975,0,0x0,8
tick,0x7ffdb840feb4,256859162,0,0x0,8
tick,0x7ffdb840feb4,256875154,0,0x0,8
tick,0x7ffdb840feb4,256890418,0,0x0,8
tick,0x7ffdb840feb4,256906159,0,0x0,8
tick,0x7ffdb840feb4,256921170,0,0x0,8
tick,0x7ffdb840feb4,256937151,0,0x0,8
tick,0x7ffdb840feb4,256952369,0,0x0,8
tick,0x7ffdb840feb4,256967151,0,0x0,8
tick,0x7ffdb840feb4,256982822,0,0x0,8
tick,0x7ffdb840feb4,256997803,0,0x0,8
tick,0x7ffdb840feb4,257012999,0,0x0,8
tick,0x7ffdb840feb4,257028817,0,0x0,8
tick,0x7ffdb840feb4,257043994,0,0x0,8
tick,0x7ffdb840feb4,257059186,0,0x0,8
tick,0x7ffdb840feb4,257074999,0,0x0,8
tick,0x7ffdb840feb4,257090162,0,0x0,8
tick,0x7ffdb840feb4,257105187,0,0x0,8
tick,0x7ffdb840feb4,257121193,0,0x0,8
tick,0x7ffdb840feb4,257136328,0,0x0,8
tick,0x7ffdb840feb4,257151380,0,0x0,8
tick,0x7ffdb840feb4,257166666,0,0x0,8
tick,0x7ffdb840feb4,257181798,0,0x0,8
tick,0x7ffdb840feb4,257197053,0,0x0,8
tick,0x7ffdb840feb4,257212470,0,0x0,8
tick,0x7ffdb840feb4,257227678,0,0x0,8
tick,0x7ffdb840feb4,257243017,0,0x0,8
tick,0x7ffdb840feb4,257258682,0,0x0,8
tick,0x7ffdb840feb4,257274690,0,0x0,8
tick,0x7ffdb840feb4,257290704,0,0x0,8
tick,0x7ffdb840feb4,257306703,0,0x0,8
tick,0x7ffdb840feb4,257322712,0,0x0,8
tick,0x7ffdb840feb4,257338739,0,0x0,8
tick,0x7ffdb840feb4,257354034,0,0x0,8
tick,0x7ffdb840feb4,257369208,0,0x0,8
tick,0x7ffdb840feb4,257385036,0,0x0,8
tick,0x7ffdb840feb4,257400220,0,0x0,8
tick,0x7ffdb840feb4,257416206,0,0x0,8
tick,0x7ffdb840feb4,257431220,0,0x0,8
tick,0x7ffdb840feb4,257447233,0,0x0,8
tick,0x7ffdb840feb4,257463038,0,0x0,8
tick,0x7ffdb840feb4,257479043,0,0x0,8
tick,0x7ffdb840feb4,257494225,0,0x0,8
tick,0x7ffdb840feb4,257509218,0,0x0,8
tick,0x7ffdb840feb4,257525046,0,0x0,8
tick,0x7ffdb840feb4,257540224,0,0x0,8
tick,0x7ffdb840feb4,257555230,0,0x0,8
tick,0x7ffdb840feb4,257570803,0,0x0,8
tick,0x7ffdb840feb4,257586063,0,0x0,8
tick,0x7ffdb840feb4,257602058,0,0x0,8
tick,0x7ffdb840feb4,257617229,0,0x0,8
tick,0x7ffdb840feb4,257633251,0,0x0,8
tick,0x7ffdb840feb4,257648211,0,0x0,8
tick,0x7ffdb840feb4,257664074,0,0x0,8
tick,0x7ffdb840feb4,257680072,0,0x0,8
tick,0x7ffdb840feb4,257696059,0,0x0,8
tick,0x7ffdb840feb4,257711053,0,0x0,8
tick,0x7ffdb840feb4,257726254,0,0x0,8
tick,0x7ffdb840feb4,257741827,0,0x0,8
tick,0x7ffdb840feb4,257757062,0,0x0,8
tick,0x7ffdb840feb4,257772269,0,0x0,8
tick,0x7ffdb840feb4,257788068,0,0x0,8
tick,0x7ffdb840feb4,257804085,0,0x0,8
tick,0x7ffdb840feb4,257820076,0,0x0,8
tick,0x7ffdb840feb4,257835088,0,0x0,8
tick,0x7ffdb840feb4,257850236,0,0x0,8
tick,0x7ffdb840feb4,257866272,0,0x0,8
tick,0x7ffdb840feb4,257881622,0,0x0,8
tick,0x7ffdb840feb4,257897265,0,0x0,8
tick,0x7ffdb840feb4,257912421,0,0x0,8
tick,0x7ffdb840feb4,257928413,0,0x0,8
tick,0x7ffdb840feb4,257944285,0,0x0,8
tick,0x7ffdb840feb4,257960271,0,0x0,8
tick,0x7ffdb840feb4,257976272,0,0x0,8
tick,0x7ffdb840feb4,257991298,0,0x0,8
tick,0x7ffdb840feb4,258006295,0,0x0,8
tick,0x7ffdb840feb4,258021725,0,0x0,8
tick,0x7ffdb840feb4,258037138,0,0x0,8
tick,0x7ffdb840feb4,258052293,0,0x0,8
tick,0x7ffdb840feb4,258068295,0,0x0,8
tick,0x7ffdb840feb4,258084113,0,0x0,8
tick,0x7ffdb840feb4,258099492,0,0x0,8
tick,0x7ffdb840feb4,258115117,0,0x0,8
tick,0x7ffdb840feb4,258130218,0,0x0,8
tick,0x7ffdb840feb4,258146300,0,0x0,8
tick,0x7ffdb840feb4,258162300,0,0x0,8
tick,0x7ffdb840feb4,258177300,0,0x0,8
tick,0x7ffdb840feb4,258192458,0,0x0,8
tick,0x7ffdb840feb4,258207828,0,0x0,8
tick,0x7ffdb840feb4,258223127,0,0x0,8
tick,0x7ffdb840feb4,258238320,0,0x0,8
tick,0x7ffdb840feb4,258254291,0,0x0,8
tick,0x7ffdb840feb4,258270328,0,0x0,8
tick,0x7ffdb840feb4,258286326,0,0x0,8
tick,0x7ffdb840feb4,258302139,0,0x0,8
tick,0x7ffdb840feb4,258318145,0,0x0,8
tick,0x7ffdb840feb4,258334152,0,0x0,8
tick,0x7ffdb840feb4,258350146,0,0x0,8
tick,0x7ffdb840feb4,258365320,0,0x0,8
tick,0x7ffdb840feb4,258381397,0,0x0,8
tick,0x7ffdb840feb4,258396381,0,0x0,8
tick,0x7ffdb840feb4,258412362,0,0x0,8
tick,0x7ffdb840feb4,258428334,0,0x0,8
tick,0x7ffdb840feb4,258444163,0,0x0,8
tick,0x7ffdb840feb4,258459333,0,0x0,8
tick,0x7ffdb840feb4,258474336,0,0x0,8
tick,0x7ffdb840feb4,258489333,0,0x0,8
tick,0x7ffdb840feb4,258505164,0,0x0,8
tick,0x7ffdb840feb4,258520346,0,0x0,8
tick,0x7ffdb840feb4,258536347,0,0x0,8
tick,0x7ffdb840feb4,258552351,0,0x0,8
tick,0x7ffdb840feb4,258567553,0,0x0,8
tick,0x7ffdb840feb4,258583184,0,0x0,8
tick,0x7ffdb840feb4,258599179,0,0x0,8
tick,0x7ffdb840feb4,258614183,0,0x0,8
tick,0x7ffdb840feb4,258629362,0,0x0,8
tick,0x7ffdb840feb4,258645188,0,0x0,8
tick,0x7ffdb840feb4,258661190,0,0x0,8
tick,0x7ffdb840feb4,258676352,0,0x0,8
tick,0x7ffdb840feb4,258691567,0,0x0,8
tick,0x7ffdb840feb4,258707572,0,0x0,8
tick,0x7ffdb840feb4,258723194,0,0x0,8
tick,0x7ffdb840feb4,258738573,0,0x0,8
tick,0x7ffdb840feb4,258754204,0,0x0,8
tick,0x7ffdb840feb4,258769381,0,0x0,8
tick,0x7ffdb840feb4,258785194,0,0x0,8
tick,0x7ffdb840feb4,258800389,0,0x0,8
tick,0x7ffdb840feb4,258815380,0,0x0,8
tick,0x7ffdb840feb4,258830813,0,0x0,8
tick,0x7ffdb840feb4,258846381,0,0x0,8
tick,0x7ffdb840feb4,258861971,0,0x0,8
tick,0x7ffdb840feb4,258877216,0,0x0,8
tick,0x7ffdb840feb4,258891992,0,0x0,8
tick,0x7ffdb840feb4,258907115,0,0x0,8
tick,0x7ffdb840feb4,258923229,0,0x0,8
tick,0x7ffdb840feb4,258938445,0,0x0,8
tick,0x7ffdb840feb4,258954217,0,0x0,8
tick,0x7ffdb840feb4,258969235,0,0x0,8
tick,0x7ffdb840feb4,258984410,0,0x0,8
tick,0x7ffdb840feb4,259000226,0,0x0,8
tick,0x7ffdb840feb4,259015147,0,0x0,8
tick,0x7ffdb840feb4,259030390,0,0x0,8
tick,0x7ffdb840feb4,259046397,0,0x0,8
tick,0x7ffdb840feb4,259062226,0,0x0,8
tick,0x7ffdb840feb4,259078236,0,0x0,8
tick,0x7ffdb840feb4,259094220,0,0x0,8
tick,0x7ffdb840feb4,259110232,0,0x0,8
tick,0x7ffdb840feb4,259125236,0,0x0,8
tick,0x7ffdb840feb4,259140960,0,0x0,8
tick,0x7ffdb840feb4,259156232,0,0x0,8
tick,0x7ffdb840feb4,259172118,0,0x0,8
tick,0x7ffdb840feb4,259187425,0,0x0,8
tick,0x7ffdb840feb4,259202235,0,0x0,8
tick,0x7ffdb840feb4,259218095,0,0x0,8
tick,0x7ffdb840feb4,259233267,0,0x0,8
tick,0x7ffdb840feb4,259248479,0,0x0,8
tick,0x7ffdb840feb4,259264257,0,0x0,8
tick,0x7ffdb840feb4,259279316,0,0x0,8
tick,0x7ffdb840feb4,259294793,0,0x0,8
tick,0x7ffdb840feb4,259310393,0,0x0,8
tick,0x7ffdb840feb4,259325403,0,0x0,8
tick,0x7ffdb840feb4,259341398,0,0x0,8
tick,0x7ffdb840feb4,259357413,0,0x0,8
tick,0x7ffdb840feb4,259373415,0,0x0,8
tick,0x7ffdb840feb4,259389036,0,0x0,8
tick,0x7ffdb840feb4,259404290,0,0x0,8
tick,0x7ffdb840feb4,259420347,0,0x0,8
tick,0x7ffdb840feb4,259435277,0,0x0,8
tick,0x7ffdb840feb4,259450485,0,0x0,8
tick,0x7ffdb840feb4,259465991,0,0x0,8
tick,0x7ffdb840feb4,259481814,0,0x0,8
tick,0x7ffdb840feb4,259497483,0,0x0,8
tick,0x7ffdb840feb4,259512428,0,0x0,8
tick,0x7ffdb840feb4,259527458,0,0x0,8
tick,0x7ffdb840feb4,259543290,0,0x0,8
tick,0x7ffdb840feb4,259558417,0,0x0,8
tick,0x7ffdb840feb4,259574416,0,0x0,8
tick,0x7ffdb840feb4,259589294,0,0x0,8
tick,0x7ffdb840feb4,259604914,0,0x0,8
tick,0x7ffdb840feb4,259620582,0,0x0,8
tick,0x7ffdb840feb4,259636432,0,0x0,8
tick,0x7ffdb840feb4,259651580,0,0x0,8
tick,0x7ffdb840feb4,259666477,0,0x0,8
tick,0x7ffdb840feb4,259681817,0,0x0,8
tick,0x7ffdb840feb4,259697588,0,0x0,8
tick,0x7ffdb840feb4,259712590,0,0x0,8
tick,0x7ffdb840feb4,259728604,0,0x0,8
tick,0x7ffdb840feb4,259744313,0,0x0,8
tick,0x7ffdb840feb4,259759424,0,0x0,8
tick,0x7ffdb840feb4,259775416,0,0x0,8
tick,0x7ffdb840feb4,259790331,0,0x0,8
tick,0x7ffdb840feb4,259805316,0,0x0,8
tick,0x7ffdb840feb4,259821326,0,0x0,8
tick,0x7ffdb840feb4,259836516,0,0x0,8
tick,0x7ffdb840feb4,259852337,0,0x0,8
tick,0x7ffdb840feb4,259868426,0,0x0,8
tick,0x7ffdb840feb4,259884326,0,0x0,8
tick,0x7ffdb840feb4,259899488,0,0x0,8
tick,0x7ffdb840feb4,259914351,0,0x0,8
tick,0x7ffdb840feb4,259929514,0,0x0,8
tick,0x7ffdb840feb4,259945349,0,0x0,8
tick,0x7ffdb840feb4,259960427,0,0x0,8
tick,0x7ffdb840feb4,259976358,0,0x0,8
tick,0x7ffdb840feb4,259992434,0,0x0,8
tick,0x7ffdb840feb4,260008362,0,0x0,8
tick,0x7ffdb840feb4,260024345,0,0x0,8
tick,0x7ffdb840feb4,260039520,0,0x0,8
tick,0x7ffdb840feb4,260055076,0,0x0,8
tick,0x7ffdb840feb4,260070463,0,0x0,8
tick,0x7ffdb840feb4,260085527,0,0x0,8
tick,0x7ffdb840feb4,260100490,0,0x0,8
tick,0x7ffdb840feb4,260115527,0,0x0,8
tick,0x7ffdb840feb4,260130690,0,0x0,8
tick,0x7ffdb840feb4,260146536,0,0x0,8
tick,0x7ffdb840feb4,260161545,0,0x0,8
tick,0x7ffdb840feb4,260177114,0,0x0,8
tick,0x7ffdb840feb4,260192461,0,0x0,8
tick,0x7ffdb840feb4,260208124,0,0x0,8
tick,0x7ffdb840feb4,260223369,0,0x0,8
tick,0x7ffdb840feb4,260239151,0,0x0,8
tick,0x7ffdb840feb4,260254144,0,0x0,8
tick,0x7ffdb840feb4,260269568,0,0x0,8
tick,0x7ffdb840feb4,260285377,0,0x0,8
tick,0x7ffdb840feb4,260300340,0,0x0,8
tick,0x7ffdb840feb4,260315557,0,0x0,8
tick,0x7ffdb840feb4,260331555,0,0x0,8
tick,0x7ffdb840feb4,260347563,0,0x0,8
tick,0x7ffdb840feb4,260363560,0,0x0,8
tick,0x7ffdb840feb4,260379127,0,0x0,8
tick,0x7ffdb840feb4,260394389,0,0x0,8
tick,0x7ffdb840feb4,260410347,0,0x0,8
tick,0x7ffdb840feb4,260425565,0,0x0,8
tick,0x7ffdb840feb4,260441579,0,0x0,8
tick,0x7ffdb840feb4,260456580,0,0x0,8
tick,0x7ffdb840feb4,260472479,0,0x0,8
tick,0x7ffdb840feb4,260487053,0,0x0,8
tick,0x7ffdb840feb4,260502354,0,0x0,8
tick,0x7ffdb840feb4,260517583,0,0x0,8
tick,0x7ffdb840feb4,260532821,0,0x0,8
tick,0x7ffdb840feb4,260548489,0,0x0,8
tick,0x7ffdb840feb4,260564416,0,0x0,8
tick,0x7ffdb840feb4,260580425,0,0x0,8
tick,0x7ffdb840feb4,260595583,0,0x0,8
tick,0x7ffdb840feb4,260610875,0,0x0,8
tick,0x7ffdb840feb4,260626425,0,0x0,8
tick,0x7ffdb840feb4,260641606,0,0x0,8
tick,0x7ffdb840feb4,260657429,0,0x0,8
tick,0x7ffdb840feb4,260672614,0,0x0,8
tick,0x7ffdb840feb4,260688597,0,0x0,8
tick,0x7ffdb840feb4,260704428,0,0x0,8
tick,0x7ffdb840feb4,260719612,0,0x0,8
tick,0x7ffdb840feb4,260734906,0,0x0,8
tick,0x7ffdb840feb4,260750493,0,0x0,8
tick,0x7ffdb840feb4,260765614,0,0x0,8
tick,0x7ffdb840feb4,260780628,0,0x0,8
tick,0x7ffdb840feb4,260796622,0,0x0,8
tick,0x7ffdb840feb4,260812630,0,0x0,8
tick,0x7ffdb840feb4,260828447,0,0x0,8
tick,0x7ffdb840feb4,260844460,0,0x0,8
tick,0x7ffdb840feb4,260859625,0,0x0,8
tick,0x7ffdb840feb4,260874439,0,0x0,8
tick,0x7ffdb840feb4,260889633,0,0x0,8
tick,0x7ffdb840feb4,260905633,0,0x0,8
tick,0x7ffdb840feb4,260920639,0,0x0,8
tick,0x7ffdb840feb4,260936637,0,0x0,8
tick,0x7ffdb840feb4,260952642,0,0x0,8
tick,0x7ffdb840feb4,260968647,0,0x0,8
tick,0x7ffdb840feb4,260984465,0,0x0,8
tick,0x7ffdb840feb4,261000468,0,0x0,8
tick,0x7ffdb840feb4,261015640,0,0x0,8
tick,0x7ffdb840feb4,261030679,0,0x0,8
tick,0x7ffdb840feb4,261046645,0,0x0,8
tick,0x7ffdb840feb4,261062637,0,0x0,8
tick,0x7ffdb840feb4,261078659,0,0x0,8
tick,0x7ffdb840feb4,261094671,0,0x0,8
tick,0x7ffdb840feb4,261109929,0,0x0,8
tick,0x7ffdb840feb4,261125484,0,0x0,8
tick,0x7ffdb840feb4,261140671,0,0x0,8
tick,0x7ffdb840feb4,261156663,0,0x0,8
tick,0x7ffdb840feb4,261172127,0,0x0,8
tick,0x7ffdb840feb4,261187669,0,0x0,8
tick,0x7ffdb840feb4,261203672,0,0x0,8
tick,0x7ffdb840feb4,261219686,0,0x0,8
tick,0x7ffdb840feb4,261234490,0,0x0,8
tick,0x7ffdb840feb4,261249680,0,0x0,8
tick,0x7ffdb840feb4,261264497,0,0x0,8
tick,0x7ffdb840feb4,261279688,0,0x0,8
tick,0x7ffdb840feb4,261295685,0,0x0,8
tick,0x7ffdb840feb4,261310987,0,0x0,8
tick,0x7ffdb840feb4,261326681,0,0x0,8
tick,0x7ffdb840feb4,261341682,0,0x0,8
tick,0x7ffdb840feb4,261357710,0,0x0,8
tick,0x7ffdb840feb4,261372692,0,0x0,8
tick,0x7ffdb840feb4,261387730,0,0x0,8
tick,0x7ffdb840feb4,261402695,0,0x0,8
tick,0x7ffdb840feb4,261418244,0,0x0,8
tick,0x7ffdb840feb4,261433517,0,0x0,8
tick,0x7ffdb840feb4,261449263,0,0x0,8
tick,0x7ffdb840feb4,261464514,0,0x0,8
tick,0x7ffdb840feb4,261479575,0,0x0,8
tick,0x7ffdb840feb4,261495522,0,0x0,8
tick,0x7ffdb840feb4,261510706,0,0x0,8
tick,0x7ffdb840feb4,261525706,0,0x0,8
tick,0x7ffdb840feb4,261541057,0,0x0,8
tick,0x7ffdb840feb4,261556703,0,0x0,8
tick,0x7ffdb840feb4,261571719,0,0x0,8
tick,0x7ffdb840feb4,261587709,0,0x0,8
tick,0x7ffdb840feb4,261603540,0,0x0,8
tick,0x7ffdb840feb4,261618999,0,0x0,8
tick,0x7ffdb840feb4,261634539,0,0x0,8
tick,0x7ffdb840feb4,261649995,0,0x0,8
tick,0x7ffdb840feb4,261665155,0,0x0,8
tick,0x7ffdb840feb4,261680355,0,0x0,8
tick,0x7ffdb840feb4,261695540,0,0x0,8
tick,0x7ffdb840feb4,261711143,0,0x0,8
tick,0x7ffdb840feb4,261726726,0,0x0,8
tick,0x7ffdb840feb4,261742131,0,0x0,8
tick,0x7ffdb840feb4,261758136,0,0x0,8
tick,0x7ffdb840feb4,261773379,0,0x0,8
tick,0x7ffdb840feb4,261788052,0,0x0,8
tick,0x7ffdb840feb4,261803482,0,0x0,8
tick,0x7ffdb840feb4,261818737,0,0x0,8
tick,0x7ffdb840feb4,261834561,0,0x0,8
tick,0x7ffdb840feb4,261850502,0,0x0,8
tick,0x7ffdb840feb4,261865159,0,0x0,8
tick,0x7ffdb840feb4,261880507,0,0x0,8
tick,0x7ffdb840feb4,261895748,0,0x0,8
tick,0x7ffdb840feb4,261911130,0,0x0,8
tick,0x7ffdb840feb4,261926749,0,0x0,8
tick,0x7ffdb840feb4,261942532,0,0x0,8
tick,0x7ffdb840feb4,261957750,0,0x0,8
tick,0x7ffdb840feb4,261972588,0,0x0,8
tick,0x7ffdb840feb4,261988588,0,0x0,8
tick,0x7ffdb840feb4,262004591,0,0x0,8
tick,0x7ffdb840feb4,262020590,0,0x0,8
tick,0x7ffdb840feb4,262035588,0,0x0,8
tick,0x7ffdb840feb4,262050501,0,0x0,8
tick,0x7ffdb840feb4,262065768,0,0x0,8
tick,0x7ffdb840feb4,262081767,0,0x0,8
tick,0x7ffdb840feb4,262097174,0,0x0,8
tick,0x7ffdb840feb4,262112594,0,0x0,8
tick,0x7ffdb840feb4,262128599,0,0x0,8
tick,0x7ffdb840feb4,262144608,0,0x0,8
tick,0x7ffdb840feb4,262160599,0,0x0,8
tick,0x7ffdb840feb4,262175780,0,0x0,8
tick,0x7ffdb840feb4,262191240,0,0x0,8
tick,0x7ffdb840feb4,262206782,0,0x0,8
tick,0x7ffdb840feb4,262222222,0,0x0,8
tick,0x7ffdb840feb4,262237648,0,0x0,8
tick,0x7ffdb840feb4,262252681,0,0x0,8
tick,0x7ffdb840feb4,262268691,0,0x0,8
tick,0x7ffdb840feb4,262284781,0,0x0,8
tick,0x7ffdb840feb4,262300497,0,0x0,8
tick,0x7ffdb840feb4,262315796,0,0x0,8
tick,0x7ffdb840feb4,262330831,0,0x0,8
tick,0x7ffdb840feb4,262346807,0,0x0,8
tick,0x7ffdb840feb4,262362805,0,0x0,8
tick,0x7ffdb840feb4,262378815,0,0x0,8
tick,0x7ffdb840feb4,262394630,0,0x0,8
tick,0x7ffdb840feb4,262409344,0,0x0,8
tick,0x7ffdb840feb4,262424633,0,0x0,8
tick,0x7ffdb840feb4,262439822,0,0x0,8
tick,0x7ffdb840feb4,262455639,0,0x0,8
tick,0x7ffdb840feb4,262471601,0,0x0,8
tick,0x7ffdb840feb4,262486823,0,0x0,8
tick,0x7ffdb840feb4,262502591,0,0x0,8
tick,0x7ffdb840feb4,262517821,0,0x0,8
tick,0x7ffdb840feb4,262533332,0,0x0,8
tick,0x7ffdb840feb4,262548825,0,0x0,8
tick,0x7ffdb840feb4,262564658,0,0x0,8
tick,0x7ffdb840feb4,262580355,0,0x0,8
tick,0x7ffdb840feb4,262595352,0,0x0,8
tick,0x7ffdb840feb4,262611372,0,0x0,8
tick,0x7ffdb840feb4,262626845,0,0x0,8
tick,0x7ffdb840feb4,262642848,0,0x0,8
tick,0x7ffdb840feb4,262658850,0,0x0,8
tick,0x7ffdb840feb4,262674670,0,0x0,8
tick,0x7ffdb840feb4,262689335,0,0x0,8
tick,0x7ffdb840feb4,262704661,0,0x0,8
tick,0x7ffdb840feb4,262719845,0,0x0,8
tick,0x7ffdb840feb4,262735223,0,0x0,8
tick,0x7ffdb840feb4,262750465,0,0x0,8
tick,0x7ffdb840feb4,262765860,0,0x0,8
tick,0x7ffdb840feb4,262780975,0,0x0,8
tick,0x7ffdb840feb4,262796860,0,0x0,8
tick,0x7ffdb840feb4,262811859,0,0x0,8
tick,0x7ffdb840feb4,262827326,0,0x0,8
tick,0x7ffdb840feb4,262842452,0,0x0,8
tick,0x7ffdb840feb4,262857874,0,0x0,8
tick,0x7ffdb840feb4,262872638,0,0x0,8
tick,0x7ffdb840feb4,262887862,0,0x0,8
tick,0x7ffdb840feb4,262903586,0,0x0,8
tick,0x7ffdb840feb4,262918871,0,0x0,8
tick,0x7ffdb840feb4,262934690,0,0x0,8
tick,0x7ffdb840feb4,262949510,0,0x0,8
tick,0x7ffdb840feb4,262964698,0,0x0,8
tick,0x7ffdb840feb4,262980716,0,0x0,8
tick,0x7ffdb840feb4,262995712,0,0x0,8
tick,0x7ffdb840feb4,263010890,0,0x0,8
tick,0x7ffdb840feb4,263025885,0,0x0,8
tick,0x7ffdb840feb4,263041901,0,0x0,8
tick,0x7ffdb840feb4,263057884,0,0x0,8
tick,0x7ffdb840feb4,263072643,0,0x0,8
tick,0x7ffdb840feb4,263087645,0,0x0,8
tick,0x7ffdb840feb4,263102898,0,0x0,8
tick,0x7ffdb840feb4,263118649,0,0x0,8
tick,0x7ffdb840feb4,263133554,0,0x0,8
tick,0x7ffdb840feb4,263149548,0,0x0,8
tick,0x7ffdb840feb4,263165224,0,0x0,8
tick,0x7ffdb840feb4,263181236,0,0x0,8
tick,0x7ffdb840feb4,263196912,0,0x0,8
tick,0x7ffdb840feb4,263212044,0,0x0,8
tick,0x7ffdb840feb4,263227725,0,0x0,8
tick,0x7ffdb840feb4,263242919,0,0x0,8
tick,0x7ffdb840feb4,263258234,0,0x0,8
tick,0x7ffdb840feb4,263274238,0,0x0,8
tick,0x7ffdb840feb4,263290245,0,0x0,8
tick,0x7ffdb840feb4,263305745,0,0x0,8
tick,0x7ffdb840feb4,263320923,0,0x0,8
tick,0x7ffdb840feb4,263336746,0,0x0,8
tick,0x7ffdb840feb4,263351749,0,0x0,8
tick,0x7ffdb840feb4,263367750,0,0x0,8
tick,0x7ffdb840feb4,263383760,0,0x0,8
tick,0x7ffdb840feb4,263399637,0,0x0,8
tick,0x7ffdb840feb4,263415754,0,0x0,8
tick,0x7ffdb840feb4,263430937,0,0x0,8
tick,0x7ffdb840feb4,263446764,0,0x0,8
tick,0x7ffdb840feb4,263461644,0,0x0,8
tick,0x7ffdb840feb4,263476763,0,0x0,8
tick,0x7ffdb840feb4,263492645,0,0x0,8
tick,0x7ffdb840feb4,263507644,0,0x0,8
tick,0x7ffdb840feb4,263522949,0,0x0,8
tick,0x7ffdb840feb4,263538666,0,0x0,8
tick,0x7ffdb840feb4,263553772,0,0x0,8
tick,0x7ffdb840feb4,263568950,0,0x0,8
tick,0x7ffdb840feb4,263584758,0,0x0,8
tick,0x7ffdb840feb4,263599955,0,0x0,8
tick,0x7ffdb840feb4,263615777,0,0x0,8
tick,0x7ffdb840feb4,263631794,0,0x0,8
tick,0x7ffdb840feb4,263646949,0,0x0,8
tick,0x7ffdb840feb4,263662961,0,0x0,8
tick,0x7ffdb840feb4,263677968,0,0x0,8
tick,0x7ffdb840feb4,263693967,0,0x0,8
tick,0x7ffdb840feb4,263709786,0,0x0,8
tick,0x7ffdb840feb4,263724969,0,0x0,8
tick,0x7ffdb840feb4,263740203,0,0x0,8
tick,0x7ffdb840feb4,263755976,0,0x0,8
tick,0x7ffdb840feb4,263771976,0,0x0,8
tick,0x7ffdb840feb4,263787972,0,0x0,8
tick,0x7ffdb840feb4,263803718,0,0x0,8
tick,0x7ffdb840feb4,263819000,0,0x0,8
tick,0x7ffdb840feb4,263834809,0,0x0,8
tick,0x7ffdb840feb4,263850497,0,0x0,8
tick,0x7ffdb840feb4,263865813,0,0x0,8
tick,0x7ffdb840feb4,263880815,0,0x0,8
tick,0x7ffdb840feb4,263895945,0,0x0,8
tick,0x7ffdb840feb4,263911900,0,0x0,8
tick,0x7ffdb840feb4,263926963,0,0x0,8
tick,0x7ffdb840feb4,263942607,0,0x0,8
tick,0x7ffdb840feb4,263957981,0,0x0,8
tick,0x7ffdb840feb4,263973007,0,0x0,8
tick,0x7ffdb840feb4,263989002,0,0x0,8
tick,0x7ffdb840feb4,264004823,0,0x0,8
tick,0x7ffdb840feb4,264020006,0,0x0,8
tick,0x7ffdb840feb4,264036020,0,0x0,8
tick,0x7ffdb840feb4,264051008,0,0x0,8
tick,0x7ffdb840feb4,264067016,0,0x0,8
tick,0x7ffdb840feb4,264083022,0,0x0,8
tick,0x7ffdb840feb4,264099017,0,0x0,8
tick,0x7ffdb840feb4,264114839,0,0x0,8
tick,0x7ffdb840feb4,264130835,0,0x0,8
tick,0x7ffdb840feb4,264146028,0,0x0,8
tick,0x7ffdb840feb4,264161033,0,0x0,8
tick,0x7ffdb840feb4,264177023,0,0x0,8
tick,0x7ffdb840feb4,264192212,0,0x0,8
tick,0x7ffdb840feb4,264207032,0,0x0,8
tick,0x7ffdb840feb4,264222576,0,0x0,8
tick,0x7ffdb840feb4,264238038,0,0x0,8
tick,0x7ffdb840feb4,264253698,0,0x0,8
tick,0x7ffdb840feb4,264269049,0,0x0,8
tick,0x7ffdb840feb4,264284868,0,0x0,8
tick,0x7ffdb840feb4,264300043,0,0x0,8
tick,0x7ffdb840feb4,264315857,0,0x0,8
tick,0x7ffdb840feb4,264331045,0,0x0,8
tick,0x7ffdb840feb4,264346870,0,0x0,8
tick,0x7ffdb840feb4,264362881,0,0x0,8
tick,0x7ffdb840feb4,264378877,0,0x0,8
tick,0x7ffdb840feb4,264394880,0,0x0,8
tick,0x7ffdb840feb4,264410062,0,0x0,8
tick,0x7ffdb840feb4,264424875,0,0x0,8
tick,0x7ffdb840feb4,264440073,0,0x0,8
tick,0x7ffdb840feb4,264455877,0,0x0,8
tick,0x7ffdb840feb4,264470890,0,0x0,8
tick,0x7ffdb840feb4,264486054,0,0x0,8
tick,0x7ffdb840feb4,264501517,0,0x0,8
tick,0x7ffdb840feb4,264517066,0,0x0,8
tick,0x7ffdb840feb4,264532847,0,0x0,8
tick,0x7ffdb840feb4,264548068,0,0x0,8
tick,0x7ffdb840feb4,264563075,0,0x0,8
tick,0x7ffdb840feb4,264578760,0,0x0,8
tick,0x7ffdb840feb4,264593699,0,0x0,8
tick,0x7ffdb840feb4,264609083,0,0x0,8
tick,0x7ffdb840feb4,264623822,0,0x0,8
tick,0x7ffdb840feb4,264639081,0,0x0,8
tick,0x7ffdb840feb4,264654904,0,0x0,8
tick,0x7ffdb840feb4,264670213,0,0x0,8
tick,0x7ffdb840feb4,264685906,0,0x0,8
tick,0x7ffdb840feb4,264700764,0,0x0,8
tick,0x7ffdb840feb4,264716091,0,0x0,8
tick,0x7ffdb840feb4,264731267,0,0x0,8
tick,0x7ffdb840feb4,264747097,0,0x0,8
tick,0x7ffdb840feb4,264762096,0,0x0,8
tick,0x7ffdb840feb4,264777539,0,0x0,8
tick,0x7ffdb840feb4,264792715,0,0x0,8
tick,0x7ffdb840feb4,264808096,0,0x0,8
tick,0x7ffdb840feb4,264823940,0,0x0,8
tick,0x7ffdb840feb4,264839098,0,0x0,8
tick,0x7ffdb840feb4,264854928,0,0x0,8
tick,0x7ffdb840feb4,264870266,0,0x0,8
tick,0x7ffdb840feb4,264885932,0,0x0,8
tick,0x7ffdb840feb4,264901517,0,0x0,8
tick,0x7ffdb840feb4,264916933,0,0x0,8
tick,0x7ffdb840feb4,264931851,0,0x0,8
tick,0x7ffdb840feb4,264947951,0,0x0,8
tick,0x7ffdb840feb4,264963114,0,0x0,8
tick,0x7ffdb840feb4,264978953,0,0x0,8
tick,0x7ffdb840feb4,264994938,0,0x0,8
tick,0x7ffdb840feb4,265010308,0,0x0,8
tick,0x7ffdb840feb4,265025942,0,0x0,8
tick,0x7ffdb840feb4,265040958,0,0x0,8
tick,0x7ffdb840feb4,265056955,0,0x0,8
tick,0x7ffdb840feb4,265072330,0,0x0,8
tick,0x7ffdb840feb4,265087955,0,0x0,8
tick,0x7ffdb840feb4,265103799,0,0x0,8
tick,0x7ffdb840feb4,265118971,0,0x0,8
tick,0x7ffdb840feb4,265134958,0,0x0,8
tick,0x7ffdb840feb4,265150429,0,0x0,8
tick,0x7ffdb840feb4,265165178,0,0x0,8
tick,0x7ffdb840feb4,265180547,0,0x0,8
tick,0x7ffdb840feb4,265195973,0,0x0,8
tick,0x7ffdb840feb4,265211967,0,0x0,8
tick,0x7ffdb840feb4,265227629,0,0x0,8
tick,0x7ffdb840feb4,265243569,0,0x0,8
tick,0x7ffdb840feb4,265259589,0,0x0,8
tick,0x7ffdb840feb4,265274975,0,0x0,8
tick,0x7ffdb840feb4,265290994,0,0x0,8
tick,0x7ffdb840feb4,265306150,0,0x0,8
tick,0x7ffdb840feb4,265321693,0,0x0,8
tick,0x7ffdb840feb4,265336977,0,0x0,8
tick,0x7ffdb840feb4,265352576,0,0x0,8
tick,0x7ffdb840feb4,265368581,0,0x0,8
tick,0x7ffdb840feb4,265384572,0,0x0,8
tick,0x7ffdb840feb4,265400593,0,0x0,8
tick,0x7ffdb840feb4,265416590,0,0x0,8
tick,0x7ffdb840feb4,265431843,0,0x0,8
tick,0x7ffdb840feb4,265447181,0,0x0,8
tick,0x7ffdb840feb4,265462587,0,0x0,8
tick,0x7ffdb840feb4,265478306,0,0x0,8
tick,0x7ffdb840feb4,265494002,0,0x0,8
tick,0x7ffdb840feb4,265509761,0,0x0,8
tick,0x7ffdb840feb4,265525015,0,0x0,8
tick,0x7ffdb840feb4,265540672,0,0x0,8
tick,0x7ffdb840feb4,265555586,0,0x0,8
tick,0x7ffdb840feb4,265571588,0,0x0,8
tick,0x7ffdb840feb4,265587591,0,0x0,8
tick,0x7ffdb840feb4,265603606,0,0x0,8
tick,0x7ffdb840feb4,265619029,0,0x0,8
tick,0x7ffdb840feb4,265635024,0,0x0,8
tick,0x7ffdb840feb4,265650593,0,0x0,8
tick,0x7ffdb840feb4,265665590,0,0x0,8
tick,0x7ffdb840feb4,265681208,0,0x0,8
tick,0x7ffdb840feb4,265696026,0,0x0,8
tick,0x7ffdb840feb4,265711545,0,0x0,8
tick,0x7ffdb840feb4,265726847,0,0x0,8
tick,0x7ffdb840feb4,265742275,0,0x0,8
tick,0x7ffdb840feb4,265758046,0,0x0,8
tick,0x7ffdb840feb4,265773036,0,0x0,8
tick,0x7ffdb840feb4,265788042,0,0x0,8
tick,0x7ffdb840feb4,265804039,0,0x0,8
tick,0x7ffdb840feb4,265819041,0,0x0,8
tick,0x7ffdb840feb4,265834042,0,0x0,8
tick,0x7ffdb840feb4,265849516,0,0x0,8
tick,0x7ffdb840feb4,265865044,0,0x0,8
tick,0x7ffdb840feb4,265880105,0,0x0,8
tick,0x7ffdb840feb4,265896051,0,0x0,8
tick,0x7ffdb840feb4,265911693,0,0x0,8
tick,0x7ffdb840feb4,265927232,0,0x0,8
tick,0x7ffdb840feb4,265942887,0,0x0,8
tick,0x7ffdb840feb4,265958085,0,0x0,8
tick,0x7ffdb840feb4,265973237,0,0x0,8
tick,0x7ffdb840feb4,265989042,0,0x0,8
tick,0x7ffdb840feb4,266004062,0,0x0,8
tick,0x7ffdb840feb4,266019763,0,0x0,8
tick,0x7ffdb840feb4,266035060,0,0x0,8
tick,0x7ffdb840feb4,266050517,0,0x0,8
tick,0x7ffdb840feb4,266066182,0,0x0,8
tick,0x7ffdb840feb4,266081380,0,0x0,8
tick,0x7ffdb840feb4,266097378,0,0x0,8
tick,0x7ffdb840feb4,266112741,0,0x0,8
tick,0x7ffdb840feb4,266127724,0,0x0,8
tick,0x7ffdb840feb4,266143495,0,0x0,8
tick,0x7ffdb840feb4,266159262,0,0x0,8
tick,0x7ffdb840feb4,266175086,0,0x0,8
tick,0x7ffdb840feb4,266191062,0,0x0,8
tick,0x7ffdb840feb4,266207057,0,0x0,8
tick,0x7ffdb840feb4,266222870,0,0x0,8
tick,0x7ffdb840feb4,266238107,0,0x0,8
tick,0x7ffdb840feb4,266253697,0,0x0,8
tick,0x7ffdb840feb4,266269262,0,0x0,8
tick,0x7ffdb840feb4,266285102,0,0x0,8
tick,0x7ffdb840feb4,266300519,0,0x0,8
tick,0x7ffdb840feb4,266316099,0,0x0,8
tick,0x7ffdb840feb4,266331104,0,0x0,8
tick,0x7ffdb840feb4,266346289,0,0x0,8
tick,0x7ffdb840feb4,266362101,0,0x0,8
tick,0x7ffdb840feb4,266377116,0,0x0,8
tick,0x7ffdb840feb4,266393112,0,0x0,8
tick,0x7ffdb840feb4,266409116,0,0x0,8
tick,0x7ffdb840feb4,266425111,0,0x0,8
tick,0x7ffdb840feb4,266440903,0,0x0,8
tick,0x7ffdb840feb4,266456121,0,0x0,8
tick,0x7ffdb840feb4,266472107,0,0x0,8
tick,0x7ffdb840feb4,266487305,0,0x0,8
tick,0x7ffdb840feb4,266502935,0,0x0,8
tick,0x7ffdb840feb4,266518310,0,0x0,8
tick,0x7ffdb840feb4,266533855,0,0x0,8
tick,0x7ffdb840feb4,266549809,0,0x0,8
tick,0x7ffdb840feb4,266565139,0,0x0,8
tick,0x7ffdb840feb4,266580019,0,0x0,8
tick,0x7ffdb840feb4,266595133,0,0x0,8
tick,0x7ffdb840feb4,266610324,0,0x0,8
tick,0x7ffdb840feb4,266626133,0,0x0,8
tick,0x7ffdb840feb4,266641547,0,0x0,8
tick,0x7ffdb840feb4,266656523,0,0x0,8
tick,0x7ffdb840feb4,266672138,0,0x0,8
tick,0x7ffdb840feb4,266687322,0,0x0,8
tick,0x7ffdb840feb4,266702954,0,0x0,8
tick,0x7ffdb840feb4,266718884,0,0x0,8
tick,0x7ffdb840feb4,266734143,0,0x0,8
tick,0x7ffdb840feb4,266748892,0,0x0,8
tick,0x7ffdb840feb4,266764153,0,0x0,8
tick,0x7ffdb840feb4,266780158,0,0x0,8
tick,0x7ffdb840feb4,266795160,0,0x0,8
tick,0x7ffdb840feb4,266810584,0,0x0,8
tick,0x7ffdb840feb4,266826165,0,0x0,8
tick,0x7ffdb840feb4,266841600,0,0x0,8
tick,0x7ffdb840feb4,266857159,0,0x0,8
tick,0x7ffdb840feb4,266872133,0,0x0,8
tick,0x7ffdb840feb4,266887365,0,0x0,8
tick,0x7ffdb840feb4,266902969,0,0x0,8
tick,0x7ffdb840feb4,266918346,0,0x0,8
tick,0x7ffdb840feb4,266933857,0,0x0,8
tick,0x7ffdb840feb4,266949855,0,0x0,8
tick,0x7ffdb840feb4,266965175,0,0x0,8
tick,0x7ffdb840feb4,266980654,0,0x0,8
tick,0x7ffdb840feb4,266996193,0,0x0,8
tick,0x7ffdb840feb4,267011653,0,0x0,8
tick,0x7ffdb840feb4,267027371,0,0x0,8
tick,0x7ffdb840feb4,267042336,0,0x0,8
tick,0x7ffdb840feb4,267057632,0,0x0,8
tick,0x7ffdb840feb4,267073157,0,0x0,8
tick,0x7ffdb840feb4,267088368,0,0x0,8
tick,0x7ffdb840feb4,267103992,0,0x0,8
tick,0x7ffdb840feb4,267119667,0,0x0,8
tick,0x7ffdb840feb4,267135200,0,0x0,8
tick,0x7ffdb840feb4,267150679,0,0x0,8
tick,0x7ffdb840feb4,267165682,0,0x0,8
tick,0x7ffdb840feb4,267181272,0,0x0,8
tick,0x7ffdb840feb4,267196204,0,0x0,8
tick,0x7ffdb840feb4,267211690,0,0x0,8
tick,0x7ffdb840feb4,267227068,0,0x0,8
tick,0x7ffdb840feb4,267242406,0,0x0,8
tick,0x7ffdb840feb4,267258227,0,0x0,8
tick,0x7ffdb840feb4,267273398,0,0x0,8
tick,0x7ffdb840feb4,267288824,0,0x0,8
tick,0x7ffdb840feb4,267304008,0,0x0,8
tick,0x7ffdb840feb4,267319239,0,0x0,8
tick,0x7ffdb840feb4,267335229,0,0x0,8
tick,0x7ffdb840feb4,267350233,0,0x0,8
tick,0x7ffdb840feb4,267366235,0,0x0,8
tick,0x7ffdb840feb4,267381233,0,0x0,8
tick,0x7ffdb840feb4,267396241,0,0x0,8
tick,0x7ffdb840feb4,267412243,0,0x0,8
tick,0x7ffdb840feb4,267427427,0,0x0,8
tick,0x7ffdb840feb4,267442428,0,0x0,8
tick,0x7ffdb840feb4,267458119,0,0x0,8
tick,0x7ffdb840feb4,267474246,0,0x0,8
tick,0x7ffdb840feb4,267489415,0,0x0,8
tick,0x7ffdb840feb4,267505243,0,0x0,8
tick,0x7ffdb840feb4,267520426,0,0x0,8
tick,0x7ffdb840feb4,267536432,0,0x0,8
tick,0x7ffdb840feb4,267552249,0,0x0,8
tick,0x7ffdb840feb4,267567430,0,0x0,8
tick,0x7ffdb840feb4,267582861,0,0x0,8
tick,0x7ffdb840feb4,267598131,0,0x0,8
tick,0x7ffdb840feb4,267613450,0,0x0,8
tick,0x7ffdb840feb4,267628313,0,0x0,8
tick,0x7ffdb840feb4,267643568,0,0x0,8
tick,0x7ffdb840feb4,267659449,0,0x0,8
tick,0x7ffdb840feb4,267674257,0,0x0,8
tick,0x7ffdb840feb4,267689449,0,0x0,8
tick,0x7ffdb840feb4,267705264,0,0x0,8
tick,0x7ffdb840feb4,267720452,0,0x0,8
tick,0x7ffdb840feb4,267736274,0,0x0,8
tick,0x7ffdb840feb4,267751526,0,0x0,8
tick,0x7ffdb840feb4,267767449,0,0x0,8
tick,0x7ffdb840feb4,267782854,0,0x0,8
tick,0x7ffdb840feb4,267798286,0,0x0,8
tick,0x7ffdb840feb4,267813825,0,0x0,8
tick,0x7ffdb840feb4,267828659,0,0x0,8
tick,0x7ffdb840feb4,267843632,0,0x0,8
tick,0x7ffdb840feb4,267859312,0,0x0,8
tick,0x7ffdb840feb4,267874465,0,0x0,8
tick,0x7ffdb840feb4,267889995,0,0x0,8
tick,0x7ffdb840feb4,267905291,0,0x0,8
tick,0x7ffdb840feb4,267920467,0,0x0,8
tick,0x7ffdb840feb4,267936294,0,0x0,8
tick,0x7ffdb840feb4,267951497,0,0x0,8
tick,0x7ffdb840feb4,267966475,0,0x0,8
tick,0x7ffdb840feb4,267981860,0,0x0,8
tick,0x7ffdb840feb4,267997473,0,0x0,8
tick,0x7ffdb840feb4,268013035,0,0x0,8
tick,0x7ffdb840feb4,268028480,0,0x0,8
tick,0x7ffdb840feb4,268044309,0,0x0,8
tick,0x7ffdb840feb4,268059572,0,0x0,8
tick,0x7ffdb840feb4,268074736,0,0x0,8
tick,0x7ffdb840feb4,268090496,0,0x0,8
tick,0x7ffdb840feb4,268106317,0,0x0,8
tick,0x7ffdb840feb4,268121494,0,0x0,8
tick,0x7ffdb840feb4,268137075,0,0x0,8
tick,0x7ffdb840feb4,268152430,0,0x0,8
tick,0x7ffdb840feb4,268167494,0,0x0,8
tick,0x7ffdb840feb4,268182871,0,0x0,8
tick,0x7ffdb840feb4,268198503,0,0x0,8
tick,0x7ffdb840feb4,268213778,0,0x0,8
tick,0x7ffdb840feb4,268228829,0,0x0,8
tick,0x7ffdb840feb4,268244328,0,0x0,8
tick,0x7ffdb840feb4,268259640,0,0x0,8
tick,0x7ffdb840feb4,268274734,0,0x0,8
tick,0x7ffdb840feb4,268290008,0,0x0,8
tick,0x7ffdb840feb4,268305770,0,0x0,8
tick,0x7ffdb840feb4,268320779,0,0x0,8
tick,0x7ffdb840feb4,268336341,0,0x0,8
tick,0x7ffdb840feb4,268351523,0,0x0,8
tick,0x7ffdb840feb4,268367350,0,0x0,8
tick,0x7ffdb840feb4,268382373,0,0x0,8
tick,0x7ffdb840feb4,268398358,0,0x0,8
tick,0x7ffdb840feb4,268413359,0,0x0,8
tick,0x7ffdb840feb4,268428901,0,0x0,8
tick,0x7ffdb840feb4,268444362,0,0x0,8
tick,0x7ffdb840feb4,268460122,0,0x0,8
tick,0x7ffdb840feb4,268475349,0,0x0,8
tick,0x7ffdb840feb4,268491002,0,0x0,8
tick,0x7ffdb840feb4,268506380,0,0x0,8
tick,0x7ffdb840feb4,268522277,0,0x0,8
tick,0x7ffdb840feb4,268537357,0,0x0,8
tick,0x7ffdb840feb4,268552609,0,0x0,8
tick,0x7ffdb840feb4,268568048,0,0x0,8
tick,0x7ffdb840feb4,268583870,0,0x0,8
tick,0x7ffdb840feb4,268598535,0,0x0,8
tick,0x7ffdb840feb4,268613879,0,0x0,8
tick,0x7ffdb840feb4,268629878,0,0x0,8
tick,0x7ffdb840feb4,268645388,0,0x0,8
tick,0x7ffdb840feb4,268660715,0,0x0,8
tick,0x7ffdb840feb4,268676359,0,0x0,8
tick,0x7ffdb840feb4,268691562,0,0x0,8
tick,0x7ffdb840feb4,268707558,0,0x0,8
tick,0x7ffdb840feb4,268722315,0,0x0,8
tick,0x7ffdb840feb4,268737420,0,0x0,8
tick,0x7ffdb840feb4,268752707,0,0x0,8
tick,0x7ffdb840feb4,268768579,0,0x0,8
tick,0x7ffdb840feb4,268783872,0,0x0,8
tick,0x7ffdb840feb4,268799530,0,0x0,8
tick,0x7ffdb840feb4,268815398,0,0x0,8
tick,0x7ffdb840feb4,268830701,0,0x0,8
tick,0x7ffdb840feb4,268846408,0,0x0,8
tick,0x7ffdb840feb4,268861923,0,0x0,8
tick,0x7ffdb840feb4,268877368,0,0x0,8
tick,0x7ffdb840feb4,268892577,0,0x0,8
tick,0x7ffdb840feb4,268908416,0,0x0,8
tick,0x7ffdb840feb4,268924034,0,0x0,8
tick,0x7ffdb840feb4,268940053,0,0x0,8
tick,0x7ffdb840feb4,268955415,0,0x0,8
tick,0x7ffdb840feb4,268971426,0,0x0,8
tick,0x7ffdb840feb4,268986594,0,0x0,8
tick,0x7ffdb840feb4,269002160,0,0x0,8
tick,0x7ffdb840feb4,269018165,0,0x0,8
tick,0x7ffdb840feb4,269033864,0,0x0,8
tick,0x7ffdb840feb4,269049542,0,0x0,8
tick,0x7ffdb840feb4,269065436,0,0x0,8
tick,0x7ffdb840feb4,269081427,0,0x0,8
tick,0x7ffdb840feb4,269097430,0,0x0,8
tick,0x7ffdb840feb4,269112799,0,0x0,8
tick,0x7ffdb840feb4,269128097,0,0x0,8
tick,0x7ffdb840feb4,269143457,0,0x0,8
tick,0x7ffdb840feb4,269158641,0,0x0,8
tick,0x7ffdb840feb4,269174076,0,0x0,8
tick,0x7ffdb840feb4,269189619,0,0x0,8
tick,0x7ffdb840feb4,269205446,0,0x0,8
tick,0x7ffdb840feb4,269221489,0,0x0,8
tick,0x7ffdb840feb4,269236638,0,0x0,8
tick,0x7ffdb840feb4,269251706,0,0x0,8
tick,0x7ffdb840feb4,269267669,0,0x0,8
tick,0x7ffdb840feb4,269282711,0,0x0,8
tick,0x7ffdb840feb4,269297686,0,0x0,8
tick,0x7ffdb840feb4,269312901,0,0x0,8
tick,0x7ffdb840feb4,269328640,0,0x0,8
tick,0x7ffdb840feb4,269344053,0,0x0,8
tick,0x7ffdb840feb4,269359646,0,0x0,8
tick,0x7ffdb840feb4,269375474,0,0x0,8
tick,0x7ffdb840feb4,269391465,0,0x0,8
tick,0x7ffdb840feb4,269407469,0,0x0,8
tick,0x7ffdb840feb4,269423476,0,0x0,8
tick,0x7ffdb840feb4,269438651,0,0x0,8
tick,0x7ffdb840feb4,269453533,0,0x0,8
tick,0x7ffdb840feb4,269468649,0,0x0,8
tick,0x7ffdb840feb4,269484489,0,0x0,8
tick,0x7ffdb840feb4,269499536,0,0x0,8
tick,0x7ffdb840feb4,269515482,0,0x0,8
tick,0x7ffdb840feb4,269530667,0,0x0,8
tick,0x7ffdb840feb4,269545487,0,0x0,8
tick,0x7ffdb840feb4,269561487,0,0x0,8
tick,0x7ffdb840feb4,269576491,0,0x0,8
tick,0x7ffdb840feb4,269592017,0,0x0,8
tick,0x7ffdb840feb4,269607680,0,0x0,8
tick,0x7ffdb840feb4,269623249,0,0x0,8
tick,0x7ffdb840feb4,269638556,0,0x0,8
tick,0x7ffdb840feb4,269653537,0,0x0,8
tick,0x7ffdb840feb4,269668690,0,0x0,8
tick,0x7ffdb840feb4,269684314,0,0x0,8
tick,0x7ffdb840feb4,269699546,0,0x0,8
tick,0x7ffdb840feb4,269715509,0,0x0,8
tick,0x7ffdb840feb4,269730516,0,0x0,8
tick,0x7ffdb840feb4,269745514,0,0x0,8
tick,0x7ffdb840feb4,269760719,0,0x0,8
tick,0x7ffdb840feb4,269776518,0,0x0,8
tick,0x7ffdb840feb4,269792070,0,0x0,8
tick,0x7ffdb840feb4,269807368,0,0x0,8
tick,0x7ffdb840feb4,269822708,0,0x0,8
tick,0x7ffdb840feb4,269838527,0,0x0,8
tick,0x7ffdb840feb4,269854528,0,0x0,8
tick,0x7ffdb840feb4,269870535,0,0x0,8
tick,0x7ffdb840feb4,269886113,0,0x0,8
tick,0x7ffdb840feb4,269900549,0,0x0,8
tick,0x7ffdb840feb4,269916547,0,0x0,8
tick,0x7ffdb840feb4,269931871,0,0x0,8
tick,0x7ffdb840feb4,269947542,0,0x0,8
tick,0x7ffdb840feb4,269962807,0,0x0,8
tick,0x7ffdb840feb4,269977893,0,0x0,8
tick,0x7ffdb840feb4,269993126,0,0x0,8
tick,0x7ffdb840feb4,270008208,0,0x0,8
tick,0x7ffdb840feb4,270023724,0,0x0,8
tick,0x7ffdb840feb4,270039723,0,0x0,8
tick,0x7ffdb840feb4,270055729,0,0x0,8
tick,0x7ffdb840feb4,270070732,0,0x0,8
tick,0x7ffdb840feb4,270086551,0,0x0,8
tick,0x7ffdb840feb4,270101727,0,0x0,8
tick,0x7ffdb840feb4,270117732,0,0x0,8
tick,0x7ffdb840feb4,270132879,0,0x0,8
tick,0x7ffdb840feb4,270147736,0,0x0,8
tick,0x7ffdb840feb4,270163497,0,0x0,8
tick,0x7ffdb840feb4,270178737,0,0x0,8
tick,0x7ffdb840feb4,270194235,0,0x0,8
tick,0x7ffdb840feb4,270209743,0,0x0,8
tick,0x7ffdb840feb4,270225567,0,0x0,8
tick,0x7ffdb840feb4,270240741,0,0x0,8
tick,0x7ffdb840feb4,270256578,0,0x0,8
tick,0x7ffdb840feb4,270272236,0,0x0,8
tick,0x7ffdb840feb4,270287881,0,0x0,8
tick,0x7ffdb840feb4,270303288,0,0x0,8
tick,0x7ffdb840feb4,270318251,0,0x0,8
tick,0x7ffdb840feb4,270333870,0,0x0,8
tick,0x7ffdb840feb4,270349539,0,0x0,8
tick,0x7ffdb840feb4,270365586,0,0x0,8
tick,0x7ffdb840feb4,270380874,0,0x0,8
tick,0x7ffdb840feb4,270396396,0,0x0,8
tick,0x7ffdb840feb4,270412397,0,0x0,8
tick,0x7ffdb840feb4,270428398,0,0x0,8
tick,0x7ffdb840feb4,270443407,0,0x0,8
tick,0x7ffdb840feb4,270458776,0,0x0,8
tick,0x7ffdb840feb4,270473969,0,0x0,8
tick,0x7ffdb840feb4,270489780,0,0x0,8
tick,0x7ffdb840feb4,270505597,0,0x0,8
tick,0x7ffdb840feb4,270520785,0,0x0,8
tick,0x7ffdb840feb4,270536616,0,0x0,8
tick,0x7ffdb840feb4,270551371,0,0x0,8
tick,0x7ffdb840feb4,270566799,0,0x0,8
tick,0x7ffdb840feb4,270582874,0,0x0,8
tick,0x7ffdb840feb4,270598890,0,0x0,8
tick,0x7ffdb840feb4,270614212,0,0x0,8
tick,0x7ffdb840feb4,270629674,0,0x0,8
tick,0x7ffdb840feb4,270644801,0,0x0,8
tick,0x7ffdb840feb4,270660585,0,0x0,8
tick,0x7ffdb840feb4,270675629,0,0x0,8
tick,0x7ffdb840feb4,270691353,0,0x0,8
tick,0x7ffdb840feb4,270706029,0,0x0,8
tick,0x7ffdb840feb4,270721606,0,0x0,8
tick,0x7ffdb840feb4,270737628,0,0x0,8
tick,0x7ffdb840feb4,270753637,0,0x0,8
tick,0x7ffdb840feb4,270769645,0,0x0,8
tick,0x7ffdb840feb4,270785645,0,0x0,8
tick,0x7ffdb840feb4,270800837,0,0x0,8
tick,0x7ffdb840feb4,270815638,0,0x0,8
tick,0x7ffdb840feb4,270830825,0,0x0,8
tick,0x7ffdb840feb4,270846827,0,0x0,8
tick,0x7ffdb840feb4,270861833,0,0x0,8
tick,0x7ffdb840feb4,270877830,0,0x0,8
tick,0x7ffdb840feb4,270893838,0,0x0,8
tick,0x7ffdb840feb4,270909841,0,0x0,8
tick,0x7ffdb840feb4,270924837,0,0x0,8
tick,0x7ffdb840feb4,270939843,0,0x0,8
tick,0x7ffdb840feb4,270955657,0,0x0,8
tick,0x7ffdb840feb4,270971667,0,0x0,8
tick,0x7ffdb840feb4,270986659,0,0x0,8
tick,0x7ffdb840feb4,271001847,0,0x0,8
tick,0x7ffdb840feb4,271017665,0,0x0,8
tick,0x7ffdb840feb4,271032874,0,0x0,8
tick,0x7ffdb840feb4,271048358,0,0x0,8
tick,0x7ffdb840feb4,271063879,0,0x0,8
tick,0x7ffdb840feb4,271079330,0,0x0,8
tick,0x7ffdb840feb4,271094676,0,0x0,8
tick,0x7ffdb840feb4,271109868,0,0x0,8
tick,0x7ffdb840feb4,271124847,0,0x0,8
tick,0x7ffdb840feb4,271140337,0,0x0,8
tick,0x7ffdb840feb4,271155684,0,0x0,8
tick,0x7ffdb840feb4,271171689,0,0x0,8
tick,0x7ffdb840feb4,271186693,0,0x0,8
tick,0x7ffdb840feb4,271201622,0,0x0,8
tick,0x7ffdb840feb4,271217687,0,0x0,8
tick,0x7ffdb840feb4,271233698,0,0x0,8
tick,0x7ffdb840feb4,271248554,0,0x0,8
tick,0x7ffdb840feb4,271263854,0,0x0,8
tick,0x7ffdb840feb4,271278700,0,0x0,8
tick,0x7ffdb840feb4,271294699,0,0x0,8
tick,0x7ffdb840feb4,271309702,0,0x0,8
tick,0x7ffdb840feb4,271324935,0,0x0,8
tick,0x7ffdb840feb4,271340965,0,0x0,8
tick,0x7ffdb840feb4,271356712,0,0x0,8
tick,0x7ffdb840feb4,271371940,0,0x0,8
tick,0x7ffdb840feb4,271387880,0,0x0,8
tick,0x7ffdb840feb4,271402889,0,0x0,8
tick,0x7ffdb840feb4,271417903,0,0x0,8
tick,0x7ffdb840feb4,271433903,0,0x0,8
tick,0x7ffdb840feb4,271449543,0,0x0,8
tick,0x7ffdb840feb4,271464725,0,0x0,8
tick,0x7ffdb840feb4,271479727,0,0x0,8
tick,0x7ffdb840feb4,271495725,0,0x0,8
tick,0x7ffdb840feb4,271511720,0,0x0,8
tick,0x7ffdb840feb4,271526897,0,0x0,8
tick,0x7ffdb840feb4,271541908,0,0x0,8
tick,0x7ffdb840feb4,271557906,0,0x0,8
tick,0x7ffdb840feb4,271572735,0,0x0,8
tick,0x7ffdb840feb4,271587907,0,0x0,8
tick,0x7ffdb840feb4,271603376,0,0x0,8
tick,0x7ffdb840feb4,271618588,0,0x0,8
tick,0x7ffdb840feb4,271633683,0,0x0,8
tick,0x7ffdb840feb4,271649392,0,0x0,8
tick,0x7ffdb840feb4,271664728,0,0x0,8
tick,0x7ffdb840feb4,271679928,0,0x0,8
tick,0x7ffdb840feb4,271695283,0,0x0,8
tick,0x7ffdb840feb4,271711279,0,0x0,8
tick,0x7ffdb840feb4,271727290,0,0x0,8
tick,0x7ffdb840feb4,271742513,0,0x0,8
tick,0x7ffdb840feb4,271757766,0,0x0,8
tick,0x7ffdb840feb4,271772946,0,0x0,8
tick,0x7ffdb840feb4,271788935,0,0x0,8
tick,0x7ffdb840feb4,271803949,0,0x0,8
tick,0x7ffdb840feb4,271819764,0,0x0,8
tick,0x7ffdb840feb4,271835766,0,0x0,8
tick,0x7ffdb840feb4,271851549,0,0x0,8
tick,0x7ffdb840feb4,271866775,0,0x0,8
tick,0x7ffdb840feb4,271881785,0,0x0,8
tick,0x7ffdb840feb4,271896945,0,0x0,8
tick,0x7ffdb840feb4,271912967,0,0x0,8
tick,0x7ffdb840feb4,271927952,0,0x0,8
tick,0x7ffdb840feb4,271943959,0,0x0,8
tick,0x7ffdb840feb4,271959114,0,0x0,8
tick,0x7ffdb840feb4,271974215,0,0x0,8
tick,0x7ffdb840feb4,271989958,0,0x0,8
tick,0x7ffdb840feb4,272005516,0,0x0,8
tick,0x7ffdb840feb4,272021021,0,0x0,8
tick,0x7ffdb840feb4,272036043,0,0x0,8
tick,0x7ffdb840feb4,272051794,0,0x0,8
tick,0x7ffdb840feb4,272066789,0,0x0,8
tick,0x7ffdb840feb4,272081525,0,0x0,8
tick,0x7ffdb840feb4,272096795,0,0x0,8
tick,0x7ffdb840feb4,272111920,0,0x0,8
tick,0x7ffdb840feb4,272127974,0,0x0,8
tick,0x7ffdb840feb4,272143583,0,0x0,8
tick,0x7ffdb840feb4,272158982,0,0x0,8
tick,0x7ffdb840feb4,272174246,0,0x0,8
tick,0x7ffdb840feb4,272189471,0,0x0,8
tick,0x7ffdb840feb4,272204454,0,0x0,8
tick,0x7ffdb840feb4,272220081,0,0x0,8
tick,0x7ffdb840feb4,272235811,0,0x0,8
tick,0x7ffdb840feb4,272251713,0,0x0,8
tick,0x7ffdb840feb4,272267815,0,0x0,8
tick,0x7ffdb840feb4,272283551,0,0x0,8
tick,0x7ffdb840feb4,272298817,0,0x0,8
tick,0x7ffdb840feb4,272314016,0,0x0,8
tick,0x7ffdb840feb4,272329826,0,0x0,8
tick,0x7ffdb840feb4,272345822,0,0x0,8
tick,0x7ffdb840feb4,272360989,0,0x0,8
tick,0x7ffdb840feb4,272376827,0,0x0,8
tick,0x7ffdb840feb4,272391837,0,0x0,8
tick,0x7ffdb840feb4,272407849,0,0x0,8
tick,0x7ffdb840feb4,272423842,0,0x0,8
tick,0x7ffdb840feb4,272439845,0,0x0,8
tick,0x7ffdb840feb4,272454552,0,0x0,8
tick,0x7ffdb840feb4,272469470,0,0x0,8
tick,0x7ffdb840feb4,272484845,0,0x0,8
tick,0x7ffdb840feb4,272499838,0,0x0,8
tick,0x7ffdb840feb4,272515854,0,0x0,8
tick,0x7ffdb840feb4,272531021,0,0x0,8
tick,0x7ffdb840feb4,272545850,0,0x0,8
tick,0x7ffdb840feb4,272560855,0,0x0,8
tick,0x7ffdb840feb4,272575847,0,0x0,8
tick,0x7ffdb840feb4,272591858,0,0x0,8
tick,0x7ffdb840feb4,272606868,0,0x0,8
tick,0x7ffdb840feb4,272622207,0,0x0,8
tick,0x7ffdb840feb4,272638038,0,0x0,8
tick,0x7ffdb840feb4,272653553,0,0x0,8
tick,0x7ffdb840feb4,272669046,0,0x0,8
tick,0x7ffdb840feb4,272684435,0,0x0,8
tick,0x7ffdb840feb4,272699274,0,0x0,8
tick,0x7ffdb840feb4,272714874,0,0x0,8
tick,0x7ffdb840feb4,272730468,0,0x0,8
tick,0x7ffdb840feb4,272745871,0,0x0,8
tick,0x7ffdb840feb4,272761884,0,0x0,8
tick,0x7ffdb840feb4,272776873,0,0x0,8
tick,0x7ffdb840feb4,272792474,0,0x0,8
tick,0x7ffdb840feb4,272808456,0,0x0,8
tick,0x7ffdb840feb4,272823818,0,0x0,8
tick,0x7ffdb840feb4,272839121,0,0x0,8
tick,0x7ffdb840feb4,272854880,0,0x0,8
tick,0x7ffdb840feb4,272869833,0,0x0,8
tick,0x7ffdb840feb4,272885831,0,0x0,8
tick,0x7ffdb840feb4,272901279,0,0x0,8
tick,0x7ffdb840feb4,272916850,0,0x0,8
tick,0x7ffdb840feb4,272932886,0,0x0,8
tick,0x7ffdb840feb4,272948076,0,0x0,8
tick,0x7ffdb840feb4,272963531,0,0x0,8
tick,0x7ffdb840feb4,272979007,0,0x0,8
tick,0x7ffdb840feb4,272994898,0,0x0,8
tick,0x7ffdb840feb4,273010857,0,0x0,8
tick,0x7ffdb840feb4,273026078,0,0x0,8
tick,0x7ffdb840feb4,273041906,0,0x0,8
tick,0x7ffdb840feb4,273056917,0,0x0,8
tick,0x7ffdb840feb4,273072253,0,0x0,8
tick,0x7ffdb840feb4,273088087,0,0x0,8
tick,0x7ffdb840feb4,273103565,0,0x0,8
tick,0x7ffdb840feb4,273119594,0,0x0,8
tick,0x7ffdb840feb4,273134917,0,0x0,8
tick,0x7ffdb840feb4,273150562,0,0x0,8
tick,0x7ffdb840feb4,273165560,0,0x0,8
tick,0x7ffdb840feb4,273181016,0,0x0,8
tick,0x7ffdb840feb4,273196639,0,0x0,8
tick,0x7ffdb840feb4,273212607,0,0x0,8
tick,0x7ffdb840feb4,273227922,0,0x0,8
tick,0x7ffdb840feb4,273243946,0,0x0,8
tick,0x7ffdb840feb4,273259152,0,0x0,8
tick,0x7ffdb840feb4,273274396,0,0x0,8
tick,0x7ffdb840feb4,273289665,0,0x0,8
tick,0x7ffdb840feb4,273304869,0,0x0,8
tick,0x7ffdb840feb4,273320668,0,0x0,8
tick,0x7ffdb840feb4,273335933,0,0x0,8
tick,0x7ffdb840feb4,273351666,0,0x0,8
tick,0x7ffdb840feb4,273367116,0,0x0,8
tick,0x7ffdb840feb4,273381896,0,0x0,8
tick,0x7ffdb840feb4,273396954,0,0x0,8
tick,0x7ffdb840feb4,273412950,0,0x0,8
tick,0x7ffdb840feb4,273427959,0,0x0,8
tick,0x7ffdb840feb4,273443960,0,0x0,8
tick,0x7ffdb840feb4,273459967,0,0x0,8
tick,0x7ffdb840feb4,273475957,0,0x0,8
tick,0x7ffdb840feb4,273491745,0,0x0,8
tick,0x7ffdb840feb4,273506960,0,0x0,8
tick,0x7ffdb840feb4,273522967,0,0x0,8
tick,0x7ffdb840feb4,273538085,0,0x0,8
tick,0x7ffdb840feb4,273553466,0,0x0,8
tick,0x7ffdb840feb4,273569155,0,0x0,8
tick,0x7ffdb840feb4,273583892,0,0x0,8
tick,0x7ffdb840feb4,273599568,0,0x0,8
tick,0x7ffdb840feb4,273614979,0,0x0,8
tick,0x7ffdb840feb4,273630172,0,0x0,8
tick,0x7ffdb840feb4,273646170,0,0x0,8
tick,0x7ffdb840feb4,273661435,0,0x0,8
tick,0x7ffdb840feb4,273676984,0,0x0,8
tick,0x7ffdb840feb4,273692183,0,0x0,8
tick,0x7ffdb840feb4,273708005,0,0x0,8
tick,0x7ffdb840feb4,273723180,0,0x0,8
tick,0x7ffdb840feb4,273738984,0,0x0,8
tick,0x7ffdb840feb4,273754172,0,0x0,8
tick,0x7ffdb840feb4,273769660,0,0x0,8
tick,0x7ffdb840feb4,273784892,0,0x0,8
tick,0x7ffdb840feb4,273800561,0,0x0,8
tick,0x7ffdb840feb4,273816003,0,0x0,8
tick,0x7ffdb840feb4,273831863,0,0x0,8
tick,0x7ffdb840feb4,273847175,0,0x0,8
tick,0x7ffdb840feb4,273862663,0,0x0,8
tick,0x7ffdb840feb4,273878183,0,0x0,8
tick,0x7ffdb840feb4,273893885,0,0x0,8
tick,0x7ffdb840feb4,273909183,0,0x0,8
tick,0x7ffdb840feb4,273925025,0,0x0,8
tick,0x7ffdb840feb4,273940611,0,0x0,8
tick,0x7ffdb840feb4,273956014,0,0x0,8
tick,0x7ffdb840feb4,273971194,0,0x0,8
tick,0x7ffdb840feb4,273987014,0,0x0,8
tick,0x7ffdb840feb4,274002571,0,0x0,8
tick,0x7ffdb840feb4,274017910,0,0x0,8
tick,0x7ffdb840feb4,274033627,0,0x0,8
tick,0x7ffdb840feb4,274048555,0,0x0,8
tick,0x7ffdb840feb4,274064263,0,0x0,8
tick,0x7ffdb840feb4,274080209,0,0x0,8
tick,0x7ffdb840feb4,274096057,0,0x0,8
tick,0x7ffdb840feb4,274111038,0,0x0,8
tick,0x7ffdb840feb4,274126217,0,0x0,8
tick,0x7ffdb840feb4,274142224,0,0x0,8
tick,0x7ffdb840feb4,274158226,0,0x0,8
tick,0x7ffdb840feb4,274174231,0,0x0,8
tick,0x7ffdb840feb4,274190225,0,0x0,8
tick,0x7ffdb840feb4,274206231,0,0x0,8
tick,0x7ffdb840feb4,274222232,0,0x0,8
tick,0x7ffdb840feb4,274238240,0,0x0,8
tick,0x7ffdb840feb4,274254247,0,0x0,8
tick,0x7ffdb840feb4,274270239,0,0x0,8
tick,0x7ffdb840feb4,274286236,0,0x0,8
tick,0x7ffdb840feb4,274302248,0,0x0,8
tick,0x7ffdb840feb4,274318252,0,0x0,8
tick,0x7ffdb840feb4,274333902,0,0x0,8
tick,0x7ffdb840feb4,274349570,0,0x0,8
tick,0x7ffdb840feb4,274364259,0,0x0,8
tick,0x7ffdb840feb4,274379975,0,0x0,8
tick,0x7ffdb840feb4,274396080,0,0x0,8
tick,0x7ffdb840feb4,274411263,0,0x0,8
tick,0x7ffdb840feb4,274427280,0,0x0,8
tick,0x7ffdb840feb4,274442263,0,0x0,8
tick,0x7ffdb840feb4,274458295,0,0x0,8
tick,0x7ffdb840feb4,274474268,0,0x0,8
tick,0x7ffdb840feb4,274490267,0,0x0,8
tick,0x7ffdb840feb4,274505728,0,0x0,8
tick,0x7ffdb840feb4,274521276,0,0x0,8
tick,0x7ffdb840feb4,274537278,0,0x0,8
tick,0x7ffdb840feb4,274553285,0,0x0,8
tick,0x7ffdb840feb4,274568282,0,0x0,8
tick,0x7ffdb840feb4,274583909,0,0x0,8
tick,0x7ffdb840feb4,274599567,0,0x0,8
tick,0x7ffdb840feb4,274615105,0,0x0,8
tick,0x7ffdb840feb4,274630281,0,0x0,8
tick,0x7ffdb840feb4,274646305,0,0x0,8
tick,0x7ffdb840feb4,274662294,0,0x0,8
tick,0x7ffdb840feb4,274678305,0,0x0,8
tick,0x7ffdb840feb4,274693586,0,0x0,8
tick,0x7ffdb840feb4,274709286,0,0x0,8
tick,0x7ffdb840feb4,274725295,0,0x0,8
tick,0x7ffdb840feb4,274741288,0,0x0,8
tick,0x7ffdb840feb4,274757317,0,0x0,8
tick,0x7ffdb840feb4,274773305,0,0x0,8
tick,0x7ffdb840feb4,274789302,0,0x0,8
tick,0x7ffdb840feb4,274805316,0,0x0,8
tick,0x7ffdb840feb4,274821312,0,0x0,8
tick,0x7ffdb840feb4,274836133,0,0x0,8
tick,0x7ffdb840feb4,274851148,0,0x0,8
tick,0x7ffdb840feb4,274866293,0,0x0,8
tick,0x7ffdb840feb4,274881897,0,0x0,8
tick,0x7ffdb840feb4,274897130,0,0x0,8
tick,0x7ffdb840feb4,274912333,0,0x0,8
tick,0x7ffdb840feb4,274928319,0,0x0,8
tick,0x7ffdb840feb4,274944317,0,0x0,8
tick,0x7ffdb840feb4,274960332,0,0x0,8
tick,0x7ffdb840feb4,274976140,0,0x0,8
tick,0x7ffdb840feb4,274991348,0,0x0,8
tick,0x7ffdb840feb4,275007314,0,0x0,8
tick,0x7ffdb840feb4,275022203,0,0x0,8
tick,0x7ffdb840feb4,275037320,0,0x0,8
tick,0x7ffdb840feb4,275052562,0,0x0,8
tick,0x7ffdb840feb4,275068359,0,0x0,8
tick,0x7ffdb840feb4,275084347,0,0x0,8
tick,0x7ffdb840feb4,275100146,0,0x0,8
tick,0x7ffdb840feb4,275116164,0,0x0,8
tick,0x7ffdb840feb4,275131341,0,0x0,8
tick,0x7ffdb840feb4,275146168,0,0x0,8
tick,0x7ffdb840feb4,275161345,0,0x0,8
tick,0x7ffdb840feb4,275177162,0,0x0,8
tick,0x7ffdb840feb4,275192354,0,0x0,8
tick,0x7ffdb840feb4,275208348,0,0x0,8
tick,0x7ffdb840feb4,275224419,0,0x0,8
tick,0x7ffdb840feb4,275239397,0,0x0,8
tick,0x7ffdb840feb4,275254595,0,0x0,8
tick,0x7ffdb840feb4,275270177,0,0x0,8
tick,0x7ffdb840feb4,275286179,0,0x0,8
tick,0x7ffdb840feb4,275302212,0,0x0,8
tick,0x7ffdb840feb4,275317179,0,0x0,8
tick,0x7ffdb840feb4,275332896,0,0x0,8
tick,0x7ffdb840feb4,275348368,0,0x0,8
tick,0x7ffdb840feb4,275364192,0,0x0,8
tick,0x7ffdb840feb4,275379203,0,0x0,8
tick,0x7ffdb840feb4,275394285,0,0x0,8
tick,0x7ffdb840feb4,275409537,0,0x0,8
tick,0x7ffdb840feb4,275425199,0,0x0,8
tick,0x7ffdb840feb4,275440193,0,0x0,8
tick,0x7ffdb840feb4,275456204,0,0x0,8
tick,0x7ffdb840feb4,275472207,0,0x0,8
tick,0x7ffdb840feb4,275487346,0,0x0,8
tick,0x7ffdb840feb4,275502800,0,0x0,8
tick,0x7ffdb840feb4,275518383,0,0x0,8
tick,0x7ffdb840feb4,275533905,0,0x0,8
tick,0x7ffdb840feb4,275549566,0,0x0,8
tick,0x7ffdb840feb4,275564406,0,0x0,8
tick,0x7ffdb840feb4,275580495,0,0x0,8
tick,0x7ffdb840feb4,275596424,0,0x0,8
tick,0x7ffdb840feb4,275612443,0,0x0,8
tick,0x7ffdb840feb4,275628234,0,0x0,8
tick,0x7ffdb840feb4,275644226,0,0x0,8
tick,0x7ffdb840feb4,275660233,0,0x0,8
tick,0x7ffdb840feb4,275676226,0,0x0,8
tick,0x7ffdb840feb4,275691413,0,0x0,8
tick,0x7ffdb840feb4,275706400,0,0x0,8
tick,0x7ffdb840feb4,275721611,0,0x0,8
tick,0x7ffdb840feb4,275737235,0,0x0,8
tick,0x7ffdb840feb4,275753249,0,0x0,8
tick,0x7ffdb840feb4,275769251,0,0x0,8
tick,0x7ffdb840feb4,275785258,0,0x0,8
tick,0x7ffdb840feb4,275800452,0,0x0,8
tick,0x7ffdb840feb4,275815242,0,0x0,8
tick,0x7ffdb840feb4,275830436,0,0x0,8
tick,0x7ffdb840feb4,275846444,0,0x0,8
tick,0x7ffdb840feb4,275862439,0,0x0,8
tick,0x7ffdb840feb4,275878444,0,0x0,8
tick,0x7ffdb840feb4,275894445,0,0x0,8
tick,0x7ffdb840feb4,275910441,0,0x0,8
tick,0x7ffdb840feb4,275926277,0,0x0,8
tick,0x7ffdb840feb4,275942273,0,0x0,8
tick,0x7ffdb840feb4,275958274,0,0x0,8
tick,0x7ffdb840feb4,275973450,0,0x0,8
tick,0x7ffdb840feb4,275989441,0,0x0,8
tick,0x7ffdb840feb4,276004418,0,0x0,8
tick,0x7ffdb840feb4,276020243,0,0x0,8
tick,0x7ffdb840feb4,276036281,0,0x0,8
tick,0x7ffdb840feb4,276051454,0,0x0,8
tick,0x7ffdb840feb4,276067451,0,0x0,8
tick,0x7ffdb840feb4,276082452,0,0x0,8
tick,0x7ffdb840feb4,276098464,0,0x0,8
tick,0x7ffdb840feb4,276114475,0,0x0,8
tick,0x7ffdb840feb4,276130197,0,0x0,8
tick,0x7ffdb840feb4,276146290,0,0x0,8
tick,0x7ffdb840feb4,276161470,0,0x0,8
tick,0x7ffdb840feb4,276177470,0,0x0,8
tick,0x7ffdb840feb4,276192468,0,0x0,8
tick,0x7ffdb840feb4,276208427,0,0x0,8
tick,0x7ffdb840feb4,276224481,0,0x0,8
tick,0x7ffdb840feb4,276240486,0,0x0,8
tick,0x7ffdb840feb4,276256295,0,0x0,8
tick,0x7ffdb840feb4,276272304,0,0x0,8
tick,0x7ffdb840feb4,276288308,0,0x0,8
tick,0x7ffdb840feb4,276304307,0,0x0,8
tick,0x7ffdb840feb4,276320109,0,0x0,8
tick,0x7ffdb840feb4,276335309,0,0x0,8
tick,0x7ffdb840feb4,276350568,0,0x0,8
tick,0x7ffdb840feb4,276366303,0,0x0,8
tick,0x7ffdb840feb4,276381800,0,0x0,8
tick,0x7ffdb840feb4,276397312,0,0x0,8
tick,0x7ffdb840feb4,276412315,0,0x0,8
tick,0x7ffdb840feb4,276427490,0,0x0,8
tick,0x7ffdb840feb4,276443497,0,0x0,8
tick,0x7ffdb840feb4,276458496,0,0x0,8
tick,0x7ffdb840feb4,276474501,0,0x0,8
tick,0x7ffdb840feb4,276489906,0,0x0,8
tick,0x7ffdb840feb4,276505528,0,0x0,8
tick,0x7ffdb840feb4,276521360,0,0x0,8
tick,0x7ffdb840feb4,276536520,0,0x0,8
tick,0x7ffdb840feb4,276551889,0,0x0,8
tick,0x7ffdb840feb4,276567336,0,0x0,8
tick,0x7ffdb840feb4,276582910,0,0x0,8
tick,0x7ffdb840feb4,276598513,0,0x0,8
tick,0x7ffdb840feb4,276613535,0,0x0,8
tick,0x7ffdb840feb4,276629009,0,0x0,8
tick,0x7ffdb840feb4,276645107,0,0x0,8
tick,0x7ffdb840feb4,276660596,0,0x0,8
tick,0x7ffdb840feb4,276676342,0,0x0,8
tick,0x7ffdb840feb4,276691925,0,0x0,8
tick,0x7ffdb840feb4,276707348,0,0x0,8
tick,0x7ffdb840feb4,276722529,0,0x0,8
tick,0x7ffdb840feb4,276738520,0,0x0,8
tick,0x7ffdb840feb4,276753949,0,0x0,8
tick,0x7ffdb840feb4,276769359,0,0x0,8
tick,0x7ffdb840feb4,276784905,0,0x0,8
tick,0x7ffdb840feb4,276800574,0,0x0,8
tick,0x7ffdb840feb4,276816360,0,0x0,8
tick,0x7ffdb840feb4,276831767,0,0x0,8
tick,0x7ffdb840feb4,276847371,0,0x0,8
tick,0x7ffdb840feb4,276862860,0,0x0,8
tick,0x7ffdb840feb4,276877545,0,0x0,8
tick,0x7ffdb840feb4,276892930,0,0x0,8
tick,0x7ffdb840feb4,276908552,0,0x0,8
tick,0x7ffdb840feb4,276923564,0,0x0,8
tick,0x7ffdb840feb4,276939530,0,0x0,8
tick,0x7ffdb840feb4,276954759,0,0x0,8
tick,0x7ffdb840feb4,276969981,0,0x0,8
tick,0x7ffdb840feb4,276985392,0,0x0,8
tick,0x7ffdb840feb4,277000558,0,0x0,8
tick,0x7ffdb840feb4,277016379,0,0x0,8
tick,0x7ffdb840feb4,277031558,0,0x0,8
tick,0x7ffdb840feb4,277047389,0,0x0,8
tick,0x7ffdb840feb4,277062738,0,0x0,8
tick,0x7ffdb840feb4,277078569,0,0x0,8
tick,0x7ffdb840feb4,277093940,0,0x0,8
tick,0x7ffdb840feb4,277109811,0,0x0,8
tick,0x7ffdb840feb4,277125404,0,0x0,8
tick,0x7ffdb840feb4,277140589,0,0x0,8
tick,0x7ffdb840feb4,277156410,0,0x0,8
tick,0x7ffdb840feb4,277171416,0,0x0,8
tick,0x7ffdb840feb4,277187405,0,0x0,8
tick,0x7ffdb840feb4,277202632,0,0x0,8
tick,0x7ffdb840feb4,277217419,0,0x0,8
tick,0x7ffdb840feb4,277233416,0,0x0,8
tick,0x7ffdb840feb4,277248577,0,0x0,8
tick,0x7ffdb840feb4,277264237,0,0x0,8
tick,0x7ffdb840feb4,277279067,0,0x0,8
tick,0x7ffdb840feb4,277294594,0,0x0,8
tick,0x7ffdb840feb4,277310625,0,0x0,8
tick,0x7ffdb840feb4,277326426,0,0x0,8
tick,0x7ffdb840feb4,277341601,0,0x0,8
tick,0x7ffdb840feb4,277357279,0,0x0,8
tick,0x7ffdb840feb4,277372617,0,0x0,8
tick,0x7ffdb840feb4,277388622,0,0x0,8
tick,0x7ffdb840feb4,277404620,0,0x0,8
tick,0x7ffdb840feb4,277420643,0,0x0,8
tick,0x7ffdb840feb4,277436452,0,0x0,8
tick,0x7ffdb840feb4,277452444,0,0x0,8
tick,0x7ffdb840feb4,277468479,0,0x0,8
tick,0x7ffdb840feb4,277484452,0,0x0,8
tick,0x7ffdb840feb4,277500462,0,0x0,8
tick,0x7ffdb840feb4,277516452,0,0x0,8
tick,0x7ffdb840feb4,277531649,0,0x0,8
tick,0x7ffdb840feb4,277547463,0,0x0,8
tick,0x7ffdb840feb4,277562633,0,0x0,8
tick,0x7ffdb840feb4,277578635,0,0x0,8
tick,0x7ffdb840feb4,277594478,0,0x0,8
tick,0x7ffdb840feb4,277610468,0,0x0,8
tick,0x7ffdb840feb4,277626474,0,0x0,8
tick,0x7ffdb840feb4,277641659,0,0x0,8
tick,0x7ffdb840feb4,277657456,0,0x0,8
tick,0x7ffdb840feb4,277672473,0,0x0,8
tick,0x7ffdb840feb4,277688474,0,0x0,8
tick,0x7ffdb840feb4,277703647,0,0x0,8
tick,0x7ffdb840feb4,277718642,0,0x0,8
tick,0x7ffdb840feb4,277734341,0,0x0,8
tick,0x7ffdb840feb4,277749588,0,0x0,8
tick,0x7ffdb840feb4,277764661,0,0x0,8
tick,0x7ffdb840feb4,277780662,0,0x0,8
tick,0x7ffdb840feb4,277796481,0,0x0,8
tick,0x7ffdb840feb4,277811655,0,0x0,8
tick,0x7ffdb840feb4,277827483,0,0x0,8
tick,0x7ffdb840feb4,277843287,0,0x0,8
tick,0x7ffdb840feb4,277858670,0,0x0,8
tick,0x7ffdb840feb4,277874663,0,0x0,8
tick,0x7ffdb840feb4,277890669,0,0x0,8
tick,0x7ffdb840feb4,277906491,0,0x0,8
tick,0x7ffdb840feb4,277921680,0,0x0,8
tick,0x7ffdb840feb4,277937496,0,0x0,8
tick,0x7ffdb840feb4,277952511,0,0x0,8
tick,0x7ffdb840feb4,277968512,0,0x0,8
tick,0x7ffdb840feb4,277983678,0,0x0,8
tick,0x7ffdb840feb4,277998579,0,0x0,8
tick,0x7ffdb840feb4,278014685,0,0x0,8
tick,0x7ffdb840feb4,278030685,0,0x0,8
tick,0x7ffdb840feb4,278046513,0,0x0,8
tick,0x7ffdb840feb4,278061811,0,0x0,8
tick,0x7ffdb840feb4,278076695,0,0x0,8
tick,0x7ffdb840feb4,278092674,0,0x0,8
tick,0x7ffdb840feb4,278108693,0,0x0,8
tick,0x7ffdb840feb4,278124700,0,0x0,8
tick,0x7ffdb840feb4,278140588,0,0x0,8
tick,0x7ffdb840feb4,278156524,0,0x0,8
tick,0x7ffdb840feb4,278171709,0,0x0,8
tick,0x7ffdb840feb4,278186530,0,0x0,8
tick,0x7ffdb840feb4,278202079,0,0x0,8
tick,0x7ffdb840feb4,278217535,0,0x0,8
tick,0x7ffdb840feb4,278232563,0,0x0,8
tick,0x7ffdb840feb4,278248549,0,0x0,8
tick,0x7ffdb840feb4,278263716,0,0x0,8
tick,0x7ffdb840feb4,278278728,0,0x0,8
tick,0x7ffdb840feb4,278294062,0,0x0,8
tick,0x7ffdb840feb4,278309703,0,0x0,8
tick,0x7ffdb840feb4,278324712,0,0x0,8
tick,0x7ffdb840feb4,278340720,0,0x0,8
tick,0x7ffdb840feb4,278356548,0,0x0,8
tick,0x7ffdb840feb4,278371736,0,0x0,8
tick,0x7ffdb840feb4,278387557,0,0x0,8
tick,0x7ffdb840feb4,278402744,0,0x0,8
tick,0x7ffdb840feb4,278418562,0,0x0,8
tick,0x7ffdb840feb4,278434569,0,0x0,8
tick,0x7ffdb840feb4,278450590,0,0x0,8
tick,0x7ffdb840feb4,278465562,0,0x0,8
tick,0x7ffdb840feb4,278480573,0,0x0,8
tick,0x7ffdb840feb4,278496566,0,0x0,8
tick,0x7ffdb840feb4,278512585,0,0x0,8
tick,0x7ffdb840feb4,278528588,0,0x0,8
tick,0x7ffdb840feb4,278544588,0,0x0,8
tick,0x7ffdb840feb4,278559757,0,0x0,8
tick,0x7ffdb840feb4,278575755,0,0x0,8
tick,0x7ffdb840feb4,278590756,0,0x0,8
tick,0x7ffdb840feb4,278606476,0,0x0,8
tick,0x7ffdb840feb4,278621781,0,0x0,8
tick,0x7ffdb840feb4,278636767,0,0x0,8
tick,0x7ffdb840feb4,278652435,0,0x0,8
tick,0x7ffdb840feb4,278667599,0,0x0,8
tick,0x7ffdb840feb4,278682768,0,0x0,8
tick,0x7ffdb840feb4,278697787,0,0x0,8
tick,0x7ffdb840feb4,278713855,0,0x0,8
tick,0x7ffdb840feb4,278728970,0,0x0,8
tick,0x7ffdb840feb4,278744836,0,0x0,8
tick,0x7ffdb840feb4,278760377,0,0x0,8
tick,0x7ffdb840feb4,278775602,0,0x0,8
tick,0x7ffdb840feb4,278790499,0,0x0,8
tick,0x7ffdb840feb4,278805791,0,0x0,8
tick,0x7ffdb840feb4,278821791,0,0x0,8
tick,0x7ffdb840feb4,278837403,0,0x0,8
tick,0x7ffdb840feb4,278852805,0,0x0,8
tick,0x7ffdb840feb4,278867615,0,0x0,8
tick,0x7ffdb840feb4,278882816,0,0x0,8
tick,0x7ffdb840feb4,278898625,0,0x0,8
tick,0x7ffdb840feb4,278914643,0,0x0,8
tick,0x7ffdb840feb4,278930623,0,0x0,8
tick,0x7ffdb840feb4,278946642,0,0x0,8
tick,0x7ffdb840feb4,278962636,0,0x0,8
tick,0x7ffdb840feb4,278978646,0,0x0,8
tick,0x7ffdb840feb4,278994661,0,0x0,8
tick,0x7ffdb840feb4,279010639,0,0x0,8
tick,0x7ffdb840feb4,279026660,0,0x0,8
tick,0x7ffdb840feb4,279041815,0,0x0,8
tick,0x7ffdb840feb4,279056650,0,0x0,8
tick,0x7ffdb840feb4,279071818,0,0x0,8
tick,0x7ffdb840feb4,279087649,0,0x0,8
tick,0x7ffdb840feb4,279102647,0,0x0,8
tick,0x7ffdb840feb4,279117820,0,0x0,8
tick,0x7ffdb840feb4,279133658,0,0x0,8
tick,0x7ffdb840feb4,279148655,0,0x0,8
tick,0x7ffdb840feb4,279163848,0,0x0,8
tick,0x7ffdb840feb4,279179672,0,0x0,8
tick,0x7ffdb840feb4,279194665,0,0x0,8
tick,0x7ffdb840feb4,279210253,0,0x0,8
tick,0x7ffdb840feb4,279225656,0,0x0,8
tick,0x7ffdb840feb4,279240476,0,0x0,8
tick,0x7ffdb840feb4,279255672,0,0x0,8
tick,0x7ffdb840feb4,279270857,0,0x0,8
tick,0x7ffdb840feb4,279285672,0,0x0,8
tick,0x7ffdb840feb4,279301677,0,0x0,8
tick,0x7ffdb840feb4,279317685,0,0x0,8
tick,0x7ffdb840feb4,279332926,0,0x0,8
tick,0x7ffdb840feb4,279348676,0,0x0,8
tick,0x7ffdb840feb4,279363677,0,0x0,8
tick,0x7ffdb840feb4,279379641,0,0x0,8
tick,0x7ffdb840feb4,279395697,0,0x0,8
tick,0x7ffdb840feb4,279411178,0,0x0,8
tick,0x7ffdb840feb4,279426691,0,0x0,8
tick,0x7ffdb840feb4,279442494,0,0x0,8
tick,0x7ffdb840feb4,279457692,0,0x0,8
tick,0x7ffdb840feb4,279472692,0,0x0,8
tick,0x7ffdb840feb4,279488710,0,0x0,8
tick,0x7ffdb840feb4,279504709,0,0x0,8
tick,0x7ffdb840feb4,279520712,0,0x0,8
tick,0x7ffdb840feb4,279536693,0,0x0,8
tick,0x7ffdb840feb4,279551597,0,0x0,8
tick,0x7ffdb840feb4,279566697,0,0x0,8
tick,0x7ffdb840feb4,279581915,0,0x0,8
tick,0x7ffdb840feb4,279597710,0,0x0,8
tick,0x7ffdb840feb4,279612718,0,0x0,8
tick,0x7ffdb840feb4,279627882,0,0x0,8
tick,0x7ffdb840feb4,279643511,0,0x0,8
tick,0x7ffdb840feb4,279658712,0,0x0,8
tick,0x7ffdb840feb4,279674715,0,0x0,8
tick,0x7ffdb840feb4,279690722,0,0x0,8
tick,0x7ffdb840feb4,279706722,0,0x0,8
tick,0x7ffdb840feb4,279722720,0,0x0,8
tick,0x7ffdb840feb4,279737710,0,0x0,8
tick,0x7ffdb840feb4,279753727,0,0x0,8
tick,0x7ffdb840feb4,279768729,0,0x0,8
tick,0x7ffdb840feb4,279783972,0,0x0,8
tick,0x7ffdb840feb4,279798580,0,0x0,8
tick,0x7ffdb840feb4,279814719,0,0x0,8
tick,0x7ffdb840feb4,279829903,0,0x0,8
tick,0x7ffdb840feb4,279845537,0,0x0,8
tick,0x7ffdb840feb4,279860734,0,0x0,8
tick,0x7ffdb840feb4,279876731,0,0x0,8
tick,0x7ffdb840feb4,279891925,0,0x0,8
tick,0x7ffdb840feb4,279906707,0,0x0,8
tick,0x7ffdb840feb4,279921923,0,0x0,8
tick,0x7ffdb840feb4,279937738,0,0x0,8
tick,0x7ffdb840feb4,279952737,0,0x0,8
tick,0x7ffdb840feb4,279968143,0,0x0,8
tick,0x7ffdb840feb4,279984067,0,0x0,8
tick,0x7ffdb840feb4,279999780,0,0x0,8
tick,0x7ffdb840feb4,280015252,0,0x0,8
tick,0x7ffdb840feb4,280029927,0,0x0,8
tick,0x7ffdb840feb4,280045151,0,0x0,8
tick,0x7ffdb840feb4,280061146,0,0x0,8
tick,0x7ffdb840feb4,280076755,0,0x0,8
tick,0x7ffdb840feb4,280092191,0,0x0,8
tick,0x7ffdb840feb4,280107760,0,0x0,8
tick,0x7ffdb840feb4,280122769,0,0x0,8
tick,0x7ffdb840feb4,280137939,0,0x0,8
tick,0x7ffdb840feb4,280153733,0,0x0,8
tick,0x7ffdb840feb4,280168777,0,0x0,8
tick,0x7ffdb840feb4,280184005,0,0x0,8
tick,0x7ffdb840feb4,280199595,0,0x0,8
tick,0x7ffdb840feb4,280214741,0,0x0,8
tick,0x7ffdb840feb4,280229947,0,0x0,8
tick,0x7ffdb840feb4,280245800,0,0x0,8
tick,0x7ffdb840feb4,280260783,0,0x0,8
tick,0x7ffdb840feb4,280276777,0,0x0,8
tick,0x7ffdb840feb4,280292782,0,0x0,8
tick,0x7ffdb840feb4,280307951,0,0x0,8
tick,0x7ffdb840feb4,280323793,0,0x0,8
tick,0x7ffdb840feb4,280338786,0,0x0,8
tick,0x7ffdb840feb4,280354787,0,0x0,8
tick,0x7ffdb840feb4,280369970,0,0x0,8
tick,0x7ffdb840feb4,280384976,0,0x0,8
tick,0x7ffdb840feb4,280400691,0,0x0,8
tick,0x7ffdb840feb4,280416789,0,0x0,8
tick,0x7ffdb840feb4,280431925,0,0x0,8
tick,0x7ffdb840feb4,280447790,0,0x0,8
tick,0x7ffdb840feb4,280462796,0,0x0,8
tick,0x7ffdb840feb4,280478817,0,0x0,8
tick,0x7ffdb840feb4,280494810,0,0x0,8
tick,0x7ffdb840feb4,280510807,0,0x0,8
tick,0x7ffdb840feb4,280526815,0,0x0,8
tick,0x7ffdb840feb4,280542811,0,0x0,8
tick,0x7ffdb840feb4,280557988,0,0x0,8
tick,0x7ffdb840feb4,280572845,0,0x0,8
tick,0x7ffdb840feb4,280587985,0,0x0,8
tick,0x7ffdb840feb4,280603199,0,0x0,8
tick,0x7ffdb840feb4,280619223,0,0x0,8
tick,0x7ffdb840feb4,280635210,0,0x0,8
tick,0x7ffdb840feb4,280651211,0,0x0,8
tick,0x7ffdb840feb4,280666828,0,0x0,8
tick,0x7ffdb840feb4,280682931,0,0x0,8
tick,0x7ffdb840feb4,280699001,0,0x0,8
tick,0x7ffdb840feb4,280714818,0,0x0,8
tick,0x7ffdb840feb4,280730512,0,0x0,8
tick,0x7ffdb840feb4,280745826,0,0x0,8
tick,0x7ffdb840feb4,280760827,0,0x0,8
tick,0x7ffdb840feb4,280776832,0,0x0,8
tick,0x7ffdb840feb4,280792851,0,0x0,8
tick,0x7ffdb840feb4,280808020,0,0x0,8
tick,0x7ffdb840feb4,280823847,0,0x0,8
tick,0x7ffdb840feb4,280839020,0,0x0,8
tick,0x7ffdb840feb4,280854594,0,0x0,8
tick,0x7ffdb840feb4,280870022,0,0x0,8
tick,0x7ffdb840feb4,280885851,0,0x0,8
tick,0x7ffdb840feb4,280901829,0,0x0,8
tick,0x7ffdb840feb4,280917852,0,0x0,8
tick,0x7ffdb840feb4,280933924,0,0x0,8
tick,0x7ffdb840feb4,280949598,0,0x0,8
tick,0x7ffdb840feb4,280965187,0,0x0,8
tick,0x7ffdb840feb4,280980822,0,0x0,8
tick,0x7ffdb840feb4,280995789,0,0x0,8
tick,0x7ffdb840feb4,281010988,0,0x0,8
tick,0x7ffdb840feb4,281026868,0,0x0,8
tick,0x7ffdb840feb4,281041902,0,0x0,8
tick,0x7ffdb840feb4,281057873,0,0x0,8
tick,0x7ffdb840feb4,281072886,0,0x0,8
tick,0x7ffdb840feb4,281087878,0,0x0,8
tick,0x7ffdb840feb4,281103379,0,0x0,8
tick,0x7ffdb840feb4,281119061,0,0x0,8
tick,0x7ffdb840feb4,281133867,0,0x0,8
tick,0x7ffdb840feb4,281149595,0,0x0,8
tick,0x7ffdb840feb4,281165264,0,0x0,8
tick,0x7ffdb840feb4,281180521,0,0x0,8
tick,0x7ffdb840feb4,281195886,0,0x0,8
tick,0x7ffdb840feb4,281211889,0,0x0,8
tick,0x7ffdb840feb4,281227906,0,0x0,8
tick,0x7ffdb840feb4,281243746,0,0x0,8
tick,0x7ffdb840feb4,281258899,0,0x0,8
tick,0x7ffdb840feb4,281273726,0,0x0,8
tick,0x7ffdb840feb4,281288727,0,0x0,8
tick,0x7ffdb840feb4,281304397,0,0x0,8
tick,0x7ffdb840feb4,281319614,0,0x0,8
tick,0x7ffdb840feb4,281334627,0,0x0,8
tick,0x7ffdb840feb4,281350598,0,0x0,8
tick,0x7ffdb840feb4,281365103,0,0x0,8
tick,0x7ffdb840feb4,281380380,0,0x0,8
tick,0x7ffdb840feb4,281396408,0,0x0,8
tick,0x7ffdb840feb4,281411948,0,0x0,8
tick,0x7ffdb840feb4,281426910,0,0x0,8
tick,0x7ffdb840feb4,281442723,0,0x0,8
tick,0x7ffdb840feb4,281457931,0,0x0,8
tick,0x7ffdb840feb4,281473111,0,0x0,8
tick,0x7ffdb840feb4,281489125,0,0x0,8
tick,0x7ffdb840feb4,281504108,0,0x0,8
tick,0x7ffdb840feb4,281520106,0,0x0,8
tick,0x7ffdb840feb4,281535935,0,0x0,8
tick,0x7ffdb840feb4,281551605,0,0x0,8
tick,0x7ffdb840feb4,281566930,0,0x0,8
tick,0x7ffdb840feb4,281581936,0,0x0,8
tick,0x7ffdb840feb4,281597230,0,0x0,8
tick,0x7ffdb840feb4,281612373,0,0x0,8
tick,0x7ffdb840feb4,281627947,0,0x0,8
tick,0x7ffdb840feb4,281643951,0,0x0,8
tick,0x7ffdb840feb4,281659950,0,0x0,8
tick,0x7ffdb840feb4,281675956,0,0x0,8
tick,0x7ffdb840feb4,281691129,0,0x0,8
tick,0x7ffdb840feb4,281705941,0,0x0,8
tick,0x7ffdb840feb4,281721133,0,0x0,8
tick,0x7ffdb840feb4,281736958,0,0x0,8
tick,0x7ffdb840feb4,281751973,0,0x0,8
tick,0x7ffdb840feb4,281767983,0,0x0,8
tick,0x7ffdb840feb4,281783981,0,0x0,8
tick,0x7ffdb840feb4,281799135,0,0x0,8
tick,0x7ffdb840feb4,281814967,0,0x0,8
tick,0x7ffdb840feb4,281829621,0,0x0,8
tick,0x7ffdb840feb4,281844771,0,0x0,8
tick,0x7ffdb840feb4,281860147,0,0x0,8
tick,0x7ffdb840feb4,281876154,0,0x0,8
tick,0x7ffdb840feb4,281891640,0,0x0,8
tick,0x7ffdb840feb4,281906978,0,0x0,8
tick,0x7ffdb840feb4,281922159,0,0x0,8
tick,0x7ffdb840feb4,281938161,0,0x0,8
tick,0x7ffdb840feb4,281954174,0,0x0,8
tick,0x7ffdb840feb4,281969992,0,0x0,8
tick,0x7ffdb840feb4,281984995,0,0x0,8
tick,0x7ffdb840feb4,282000167,0,0x0,8
tick,0x7ffdb840feb4,282016166,0,0x0,8
tick,0x7ffdb840feb4,282031878,0,0x0,8
tick,0x7ffdb840feb4,282047887,0,0x0,8
tick,0x7ffdb840feb4,282063178,0,0x0,8
tick,0x7ffdb840feb4,282078990,0,0x0,8
tick,0x7ffdb840feb4,282094999,0,0x0,8
tick,0x7ffdb840feb4,282110186,0,0x0,8
tick,0x7ffdb840feb4,282126176,0,0x0,8
tick,0x7ffdb840feb4,282141181,0,0x0,8
tick,0x7ffdb840feb4,282157189,0,0x0,8
tick,0x7ffdb840feb4,282173189,0,0x0,8
tick,0x7ffdb840feb4,282189179,0,0x0,8
tick,0x7ffdb840feb4,282204483,0,0x0,8
tick,0x7ffdb840feb4,282220011,0,0x0,8
tick,0x7ffdb840feb4,282236029,0,0x0,8
tick,0x7ffdb840feb4,282251283,0,0x0,8
tick,0x7ffdb840feb4,282267027,0,0x0,8
tick,0x7ffdb840feb4,282281934,0,0x0,8
tick,0x7ffdb840feb4,282298022,0,0x0,8
tick,0x7ffdb840feb4,282313237,0,0x0,8
tick,0x7ffdb840feb4,282329201,0,0x0,8
tick,0x7ffdb840feb4,282345210,0,0x0,8
tick,0x7ffdb840feb4,282360700,0,0x0,8
tick,0x7ffdb840feb4,282376022,0,0x0,8
tick,0x7ffdb840feb4,282391214,0,0x0,8
tick,0x7ffdb840feb4,282407210,0,0x0,8
tick,0x7ffdb840feb4,282422581,0,0x0,8
tick,0x7ffdb840feb4,282438031,0,0x0,8
tick,0x7ffdb840feb4,282453606,0,0x0,8
tick,0x7ffdb840feb4,282469223,0,0x0,8
tick,0x7ffdb840feb4,282484057,0,0x0,8
tick,0x7ffdb840feb4,282499050,0,0x0,8
tick,0x7ffdb840feb4,282514060,0,0x0,8
tick,0x7ffdb840feb4,282530065,0,0x0,8
tick,0x7ffdb840feb4,282545046,0,0x0,8
tick,0x7ffdb840feb4,282560226,0,0x0,8
tick,0x7ffdb840feb4,282575234,0,0x0,8
tick,0x7ffdb840feb4,282590793,0,0x0,8
tick,0x7ffdb840feb4,282605524,0,0x0,8
tick,0x7ffdb840feb4,282620527,0,0x0,8
tick,0x7ffdb840feb4,282636094,0,0x0,8
tick,0x7ffdb840feb4,282652075,0,0x0,8
tick,0x7ffdb840feb4,282667246,0,0x0,8
tick,0x7ffdb840feb4,282682943,0,0x0,8
tick,0x7ffdb840feb4,282698084,0,0x0,8
tick,0x7ffdb840feb4,282713248,0,0x0,8
tick,0x7ffdb840feb4,282729246,0,0x0,8
tick,0x7ffdb840feb4,282744529,0,0x0,8
tick,0x7ffdb840feb4,282760247,0,0x0,8
tick,0x7ffdb840feb4,282776077,0,0x0,8
tick,0x7ffdb840feb4,282792086,0,0x0,8
tick,0x7ffdb840feb4,282807082,0,0x0,8
tick,0x7ffdb840feb4,282822074,0,0x0,8
tick,0x7ffdb840feb4,282837209,0,0x0,8
tick,0x7ffdb840feb4,282852700,0,0x0,8
tick,0x7ffdb840feb4,282868090,0,0x0,8
tick,0x7ffdb840feb4,282883091,0,0x0,8
tick,0x7ffdb840feb4,282898083,0,0x0,8
tick,0x7ffdb840feb4,282913266,0,0x0,8
tick,0x7ffdb840feb4,282929239,0,0x0,8
tick,0x7ffdb840feb4,282944925,0,0x0,8
tick,0x7ffdb840feb4,282960105,0,0x0,8
tick,0x7ffdb840feb4,282975269,0,0x0,8
tick,0x7ffdb840feb4,282990743,0,0x0,8
tick,0x7ffdb840feb4,283006106,0,0x0,8
tick,0x7ffdb840feb4,283022099,0,0x0,8
tick,0x7ffdb840feb4,283038104,0,0x0,8
tick,0x7ffdb840feb4,283054110,0,0x0,8
tick,0x7ffdb840feb4,283069285,0,0x0,8
tick,0x7ffdb840feb4,283084945,0,0x0,8
tick,0x7ffdb840feb4,283100091,0,0x0,8
tick,0x7ffdb840feb4,283115978,0,0x0,8
tick,0x7ffdb840feb4,283131928,0,0x0,8
tick,0x7ffdb840feb4,283147123,0,0x0,8
tick,0x7ffdb840feb4,283163123,0,0x0,8
tick,0x7ffdb840feb4,283178135,0,0x0,8
tick,0x7ffdb840feb4,283193124,0,0x0,8
tick,0x7ffdb840feb4,283209130,0,0x0,8
tick,0x7ffdb840feb4,283224126,0,0x0,8
tick,0x7ffdb840feb4,283239314,0,0x0,8
tick,0x7ffdb840feb4,283255281,0,0x0,8
tick,0x7ffdb840feb4,283270321,0,0x0,8
tick,0x7ffdb840feb4,283285944,0,0x0,8
tick,0x7ffdb840feb4,283301945,0,0x0,8
tick,0x7ffdb840feb4,283317137,0,0x0,8
tick,0x7ffdb840feb4,283332938,0,0x0,8
tick,0x7ffdb840feb4,283348148,0,0x0,8
tick,0x7ffdb840feb4,283363334,0,0x0,8
tick,0x7ffdb840feb4,283379319,0,0x0,8
tick,0x7ffdb840feb4,283394333,0,0x0,8
tick,0x7ffdb840feb4,283409675,0,0x0,8
tick,0x7ffdb840feb4,283424843,0,0x0,8
tick,0x7ffdb840feb4,283440334,0,0x0,8
tick,0x7ffdb840feb4,283455335,0,0x0,8
tick,0x7ffdb840feb4,283470499,0,0x0,8
tick,0x7ffdb840feb4,283486162,0,0x0,8
tick,0x7ffdb840feb4,283501183,0,0x0,8
tick,0x7ffdb840feb4,283517165,0,0x0,8
tick,0x7ffdb840feb4,283532164,0,0x0,8
tick,0x7ffdb840feb4,283548172,0,0x0,8
tick,0x7ffdb840feb4,283563346,0,0x0,8
tick,0x7ffdb840feb4,283578190,0,0x0,8
tick,0x7ffdb840feb4,283593365,0,0x0,8
tick,0x7ffdb840feb4,283609361,0,0x0,8
tick,0x7ffdb840feb4,283624117,0,0x0,8
tick,0x7ffdb840feb4,283639370,0,0x0,8
tick,0x7ffdb840feb4,283655122,0,0x0,8
tick,0x7ffdb840feb4,283670356,0,0x0,8
tick,0x7ffdb840feb4,283685945,0,0x0,8
tick,0x7ffdb840feb4,283701200,0,0x0,8
tick,0x7ffdb840feb4,283717199,0,0x0,8
tick,0x7ffdb840feb4,283732944,0,0x0,8
tick,0x7ffdb840feb4,283748193,0,0x0,8
tick,0x7ffdb840feb4,283763201,0,0x0,8
tick,0x7ffdb840feb4,283779227,0,0x0,8
tick,0x7ffdb840feb4,283794631,0,0x0,8
tick,0x7ffdb840feb4,283810571,0,0x0,8
tick,0x7ffdb840feb4,283826236,0,0x0,8
tick,0x7ffdb840feb4,283841268,0,0x0,8
tick,0x7ffdb840feb4,283857205,0,0x0,8
tick,0x7ffdb840feb4,283871863,0,0x0,8
tick,0x7ffdb840feb4,283887211,0,0x0,8
tick,0x7ffdb840feb4,283903269,0,0x0,8
tick,0x7ffdb840feb4,283919387,0,0x0,8
tick,0x7ffdb840feb4,283934976,0,0x0,8
tick,0x7ffdb840feb4,283950624,0,0x0,8
tick,0x7ffdb840feb4,283966230,0,0x0,8
tick,0x7ffdb840feb4,283980951,0,0x0,8
tick,0x7ffdb840feb4,283996223,0,0x0,8
tick,0x7ffdb840feb4,284011402,0,0x0,8
tick,0x7ffdb840feb4,284027227,0,0x0,8
tick,0x7ffdb840feb4,284042416,0,0x0,8
tick,0x7ffdb840feb4,284058227,0,0x0,8
tick,0x7ffdb840feb4,284074228,0,0x0,8
tick,0x7ffdb840feb4,284090238,0,0x0,8
tick,0x7ffdb840feb4,284105662,0,0x0,8
tick,0x7ffdb840feb4,284121598,0,0x0,8
tick,0x7ffdb840feb4,284137238,0,0x0,8
tick,0x7ffdb840feb4,284152522,0,0x0,8
tick,0x7ffdb840feb4,284168243,0,0x0,8
tick,0x7ffdb840feb4,284184156,0,0x0,8
tick,0x7ffdb840feb4,284199421,0,0x0,8
tick,0x7ffdb840feb4,284214253,0,0x0,8
tick,0x7ffdb840feb4,284229428,0,0x0,8
tick,0x7ffdb840feb4,284244876,0,0x0,8
tick,0x7ffdb840feb4,284260447,0,0x0,8
tick,0x7ffdb840feb4,284276262,0,0x0,8
tick,0x7ffdb840feb4,284291434,0,0x0,8
tick,0x7ffdb840feb4,284307258,0,0x0,8
tick,0x7ffdb840feb4,284322600,0,0x0,8
tick,0x7ffdb840feb4,284338270,0,0x0,8
tick,0x7ffdb840feb4,284353681,0,0x0,8
tick,0x7ffdb840feb4,284369270,0,0x0,8
tick,0x7ffdb840feb4,284385275,0,0x0,8
tick,0x7ffdb840feb4,284401276,0,0x0,8
tick,0x7ffdb840feb4,284417278,0,0x0,8
tick,0x7ffdb840feb4,284432958,0,0x0,8
tick,0x7ffdb840feb4,284448279,0,0x0,8
tick,0x7ffdb840feb4,284463464,0,0x0,8
tick,0x7ffdb840feb4,284479469,0,0x0,8
tick,0x7ffdb840feb4,284494712,0,0x0,8
tick,0x7ffdb840feb4,284509714,0,0x0,8
tick,0x7ffdb840feb4,284525721,0,0x0,8
tick,0x7ffdb840feb4,284540717,0,0x0,8
tick,0x7ffdb840feb4,284556479,0,0x0,8
tick,0x7ffdb840feb4,284572501,0,0x0,8
tick,0x7ffdb840feb4,284588494,0,0x0,8
tick,0x7ffdb840feb4,284604470,0,0x0,8
tick,0x7ffdb840feb4,284620472,0,0x0,8
tick,0x7ffdb840feb4,284636309,0,0x0,8
tick,0x7ffdb840feb4,284651488,0,0x0,8
tick,0x7ffdb840feb4,284667311,0,0x0,8
tick,0x7ffdb840feb4,284682478,0,0x0,8
tick,0x7ffdb840feb4,284698491,0,0x0,8
tick,0x7ffdb840feb4,284714485,0,0x0,8
tick,0x7ffdb840feb4,284730501,0,0x0,8
tick,0x7ffdb840feb4,284745492,0,0x0,8
tick,0x7ffdb840feb4,284760504,0,0x0,8
tick,0x7ffdb840feb4,284775757,0,0x0,8
tick,0x7ffdb840feb4,284791503,0,0x0,8
tick,0x7ffdb840feb4,284807330,0,0x0,8
tick,0x7ffdb840feb4,284823326,0,0x0,8
tick,0x7ffdb840feb4,284838496,0,0x0,8
tick,0x7ffdb840feb4,284853508,0,0x0,8
tick,0x7ffdb840feb4,284869502,0,0x0,8
tick,0x7ffdb840feb4,284885504,0,0x0,8
tick,0x7ffdb840feb4,284901519,0,0x0,8
tick,0x7ffdb840feb4,284917524,0,0x0,8
tick,0x7ffdb840feb4,284933513,0,0x0,8
tick,0x7ffdb840feb4,284949515,0,0x0,8
tick,0x7ffdb840feb4,284965524,0,0x0,8
tick,0x7ffdb840feb4,284981516,0,0x0,8
tick,0x7ffdb840feb4,284997526,0,0x0,8
tick,0x7ffdb840feb4,285013547,0,0x0,8
tick,0x7ffdb840feb4,285028536,0,0x0,8
tick,0x7ffdb840feb4,285044525,0,0x0,8
tick,0x7ffdb840feb4,285059536,0,0x0,8
tick,0x7ffdb840feb4,285075539,0,0x0,8
tick,0x7ffdb840feb4,285091541,0,0x0,8
tick,0x7ffdb840feb4,285107357,0,0x0,8
tick,0x7ffdb840feb4,285123362,0,0x0,8
tick,0x7ffdb840feb4,285138543,0,0x0,8
tick,0x7ffdb840feb4,285154564,0,0x0,8
tick,0x7ffdb840feb4,285169364,0,0x0,8
tick,0x7ffdb840feb4,285184555,0,0x0,8
tick,0x7ffdb840feb4,285199677,0,0x0,8
tick,0x7ffdb840feb4,285215285,0,0x0,8
tick,0x7ffdb840feb4,285230547,0,0x0,8
tick,0x7ffdb840feb4,285245877,0,0x0,8
tick,0x7ffdb840feb4,285261551,0,0x0,8
tick,0x7ffdb840feb4,285277560,0,0x0,8
tick,0x7ffdb840feb4,285293560,0,0x0,8
tick,0x7ffdb840feb4,285309553,0,0x0,8
tick,0x7ffdb840feb4,285325369,0,0x0,8
tick,0x7ffdb840feb4,285340560,0,0x0,8
tick,0x7ffdb840feb4,285356574,0,0x0,8
tick,0x7ffdb840feb4,285371566,0,0x0,8
tick,0x7ffdb840feb4,285387387,0,0x0,8
tick,0x7ffdb840feb4,285402581,0,0x0,8
tick,0x7ffdb840feb4,285418403,0,0x0,8
tick,0x7ffdb840feb4,285433589,0,0x0,8
tick,0x7ffdb840feb4,285449587,0,0x0,8
tick,0x7ffdb840feb4,285464590,0,0x0,8
tick,0x7ffdb840feb4,285479583,0,0x0,8
tick,0x7ffdb840feb4,285495588,0,0x0,8
tick,0x7ffdb840feb4,285510595,0,0x0,8
tick,0x7ffdb840feb4,285526591,0,0x0,8
tick,0x7ffdb840feb4,285542601,0,0x0,8
tick,0x7ffdb840feb4,285558604,0,0x0,8
tick,0x7ffdb840feb4,285574044,0,0x0,8
tick,0x7ffdb840feb4,285589605,0,0x0,8
tick,0x7ffdb840feb4,285605599,0,0x0,8
tick,0x7ffdb840feb4,285621431,0,0x0,8
tick,0x7ffdb840feb4,285636613,0,0x0,8
tick,0x7ffdb840feb4,285652144,0,0x0,8
tick,0x7ffdb840feb4,285667433,0,0x0,8
tick,0x7ffdb840feb4,285682967,0,0x0,8
tick,0x7ffdb840feb4,285698606,0,0x0,8
tick,0x7ffdb840feb4,285714613,0,0x0,8
tick,0x7ffdb840feb4,285730437,0,0x0,8
tick,0x7ffdb840feb4,285746211,0,0x0,8
tick,0x7ffdb840feb4,285761192,0,0x0,8
tick,0x7ffdb840feb4,285776444,0,0x0,8
tick,0x7ffdb840feb4,285791621,0,0x0,8
tick,0x7ffdb840feb4,285807442,0,0x0,8
tick,0x7ffdb840feb4,285822626,0,0x0,8
tick,0x7ffdb840feb4,285838630,0,0x0,8
tick,0x7ffdb840feb4,285854633,0,0x0,8
tick,0x7ffdb840feb4,285870152,0,0x0,8
tick,0x7ffdb840feb4,285885628,0,0x0,8
tick,0x7ffdb840feb4,285900638,0,0x0,8
tick,0x7ffdb840feb4,285916633,0,0x0,8
tick,0x7ffdb840feb4,285932648,0,0x0,8
tick,0x7ffdb840feb4,285947808,0,0x0,8
tick,0x7ffdb840feb4,285963650,0,0x0,8
tick,0x7ffdb840feb4,285979473,0,0x0,8
tick,0x7ffdb840feb4,285995475,0,0x0,8
tick,0x7ffdb840feb4,286010485,0,0x0,8
tick,0x7ffdb840feb4,286025453,0,0x0,8
tick,0x7ffdb840feb4,286040485,0,0x0,8
tick,0x7ffdb840feb4,286055657,0,0x0,8
tick,0x7ffdb840feb4,286071658,0,0x0,8
tick,0x7ffdb840feb4,286087476,0,0x0,8
tick,0x7ffdb840feb4,286102640,0,0x0,8
tick,0x7ffdb840feb4,286117643,0,0x0,8
tick,0x7ffdb840feb4,286132483,0,0x0,8
tick,0x7ffdb840feb4,286148482,0,0x0,8
tick,0x7ffdb840feb4,286163701,0,0x0,8
tick,0x7ffdb840feb4,286179663,0,0x0,8
tick,0x7ffdb840feb4,286195505,0,0x0,8
tick,0x7ffdb840feb4,286210760,0,0x0,8
tick,0x7ffdb840feb4,286226445,0,0x0,8
tick,0x7ffdb840feb4,286241495,0,0x0,8
tick,0x7ffdb840feb4,286257495,0,0x0,8
tick,0x7ffdb840feb4,286273497,0,0x0,8
tick,0x7ffdb840feb4,286289520,0,0x0,8
tick,0x7ffdb840feb4,286305517,0,0x0,8
tick,0x7ffdb840feb4,286320684,0,0x0,8
tick,0x7ffdb840feb4,286335700,0,0x0,8
tick,0x7ffdb840feb4,286351520,0,0x0,8
tick,0x7ffdb840feb4,286367514,0,0x0,8
tick,0x7ffdb840feb4,286382701,0,0x0,8
tick,0x7ffdb840feb4,286397706,0,0x0,8
tick,0x7ffdb840feb4,286413693,0,0x0,8
tick,0x7ffdb840feb4,286428703,0,0x0,8
tick,0x7ffdb840feb4,286443715,0,0x0,8
tick,0x7ffdb840feb4,286459529,0,0x0,8
tick,0x7ffdb840feb4,286474703,0,0x0,8
tick,0x7ffdb840feb4,286489716,0,0x0,8
tick,0x7ffdb840feb4,286505520,0,0x0,8
tick,0x7ffdb840feb4,286521528,0,0x0,8
tick,0x7ffdb840feb4,286537534,0,0x0,8
tick,0x7ffdb840feb4,286553531,0,0x0,8
tick,0x7ffdb840feb4,286569549,0,0x0,8
tick,0x7ffdb840feb4,286585546,0,0x0,8
tick,0x7ffdb840feb4,286600721,0,0x0,8
tick,0x7ffdb840feb4,286616722,0,0x0,8
tick,0x7ffdb840feb4,286631730,0,0x0,8
tick,0x7ffdb840feb4,286647547,0,0x0,8
tick,0x7ffdb840feb4,286662747,0,0x0,8
tick,0x7ffdb840feb4,286677744,0,0x0,8
tick,0x7ffdb840feb4,286693400,0,0x0,8
tick,0x7ffdb840feb4,286708732,0,0x0,8
tick,0x7ffdb840feb4,286723728,0,0x0,8
tick,0x7ffdb840feb4,286739739,0,0x0,8
tick,0x7ffdb840feb4,286755569,0,0x0,8
tick,0x7ffdb840feb4,286771065,0,0x0,8
tick,0x7ffdb840feb4,286786568,0,0x0,8
tick,0x7ffdb840feb4,286801733,0,0x0,8
tick,0x7ffdb840feb4,286817569,0,0x0,8
tick,0x7ffdb840feb4,286832961,0,0x0,8
tick,0x7ffdb840feb4,286847570,0,0x0,8
tick,0x7ffdb840feb4,286862774,0,0x0,8
tick,0x7ffdb840feb4,286878757,0,0x0,8
tick,0x7ffdb840feb4,286893758,0,0x0,8
tick,0x7ffdb840feb4,286909777,0,0x0,8
tick,0x7ffdb840feb4,286924774,0,0x0,8
tick,0x7ffdb840feb4,286939796,0,0x0,8
tick,0x7ffdb840feb4,286955793,0,0x0,8
tick,0x7ffdb840feb4,286971594,0,0x0,8
tick,0x7ffdb840feb4,286987601,0,0x0,8
tick,0x7ffdb840feb4,287002765,0,0x0,8
tick,0x7ffdb840feb4,287017597,0,0x0,8
tick,0x7ffdb840feb4,287032773,0,0x0,8
tick,0x7ffdb840feb4,287048785,0,0x0,8
tick,0x7ffdb840feb4,287063779,0,0x0,8
tick,0x7ffdb840feb4,287079783,0,0x0,8
tick,0x7ffdb840feb4,287095795,0,0x0,8
tick,0x7ffdb840feb4,287111076,0,0x0,8
tick,0x7ffdb840feb4,287126755,0,0x0,8
tick,0x7ffdb840feb4,287141780,0,0x0,8
tick,0x7ffdb840feb4,287157788,0,0x0,8
tick,0x7ffdb840feb4,287172766,0,0x0,8
tick,0x7ffdb840feb4,287187737,0,0x0,8
tick,0x7ffdb840feb4,287202788,0,0x0,8
tick,0x7ffdb840feb4,287218624,0,0x0,8
tick,0x7ffdb840feb4,287233795,0,0x0,8
tick,0x7ffdb840feb4,287249792,0,0x0,8
tick,0x7ffdb840feb4,287265805,0,0x0,8
tick,0x7ffdb840feb4,287281813,0,0x0,8
tick,0x7ffdb840feb4,287297636,0,0x0,8
tick,0x7ffdb840feb4,287312811,0,0x0,8
tick,0x7ffdb840feb4,287328784,0,0x0,8
tick,0x7ffdb840feb4,287343793,0,0x0,8
tick,0x7ffdb840feb4,287359808,0,0x0,8
tick,0x7ffdb840feb4,287375148,0,0x0,8
tick,0x7ffdb840feb4,287390821,0,0x0,8
tick,0x7ffdb840feb4,287406681,0,0x0,8
tick,0x7ffdb840feb4,287421775,0,0x0,8
tick,0x7ffdb840feb4,287437764,0,0x0,8
tick,0x7ffdb840feb4,287453081,0,0x0,8
tick,0x7ffdb840feb4,287468607,0,0x0,8
tick,0x7ffdb840feb4,287484602,0,0x0,8
tick,0x7ffdb840feb4,287500614,0,0x0,8
tick,0x7ffdb840feb4,287516627,0,0x0,8
tick,0x7ffdb840feb4,287532626,0,0x0,8
tick,0x7ffdb840feb4,287548608,0,0x0,8
tick,0x7ffdb840feb4,287564603,0,0x0,8
tick,0x7ffdb840feb4,287579833,0,0x0,8
tick,0x7ffdb840feb4,287594628,0,0x0,8
tick,0x7ffdb840feb4,287610633,0,0x0,8
tick,0x7ffdb840feb4,287625805,0,0x0,8
tick,0x7ffdb840feb4,287640842,0,0x0,8
tick,0x7ffdb840feb4,287656849,0,0x0,8
tick,0x7ffdb840feb4,287672849,0,0x0,8
tick,0x7ffdb840feb4,287688687,0,0x0,8
tick,0x7ffdb840feb4,287703882,0,0x0,8
tick,0x7ffdb840feb4,287718873,0,0x0,8
tick,0x7ffdb840feb4,287734878,0,0x0,8
tick,0x7ffdb840feb4,287750903,0,0x0,8
tick,0x7ffdb840feb4,287766891,0,0x0,8
tick,0x7ffdb840feb4,287783731,0,0x0,8
tick,0x7ffdb840feb4,287798908,0,0x0,8
tick,0x7ffdb840feb4,287814877,0,0x0,8
tick,0x7ffdb840feb4,287830024,0,0x0,8
tick,0x7ffdb840feb4,287845666,0,0x0,8
tick,0x7ffdb840feb4,287860876,0,0x0,8
tick,0x7ffdb840feb4,287876901,0,0x0,8
tick,0x7ffdb840feb4,287892837,0,0x0,8
tick,0x7ffdb840feb4,287908781,0,0x0,8
tick,0x7ffdb840feb4,287924732,0,0x0,8
tick,0x7ffdb840feb4,287939877,0,0x0,8
tick,0x7ffdb840feb4,287954882,0,0x0,8
tick,0x7ffdb840feb4,287970882,0,0x0,8
tick,0x7ffdb840feb4,287986878,0,0x0,8
tick,0x7ffdb840feb4,288002310,0,0x0,8
tick,0x7ffdb840feb4,288018323,0,0x0,8
tick,0x7ffdb840feb4,288034318,0,0x0,8
tick,0x7ffdb840feb4,288050325,0,0x0,8
tick,0x7ffdb840feb4,288066330,0,0x0,8
tick,0x7ffdb840feb4,288082350,0,0x0,8
tick,0x7ffdb840feb4,288098339,0,0x0,8
tick,0x7ffdb840feb4,288114345,0,0x0,8
tick,0x7ffdb840feb4,288130354,0,0x0,8
tick,0x7ffdb840feb4,288145354,0,0x0,8
tick,0x7ffdb840feb4,288161348,0,0x0,8
tick,0x7ffdb840feb4,288176695,0,0x0,8
tick,0x7ffdb840feb4,288191915,0,0x0,8
tick,0x7ffdb840feb4,288207327,0,0x0,8
tick,0x7ffdb840feb4,288222897,0,0x0,8
tick,0x7ffdb840feb4,288238910,0,0x0,8
tick,0x7ffdb840feb4,288253919,0,0x0,8
tick,0x7ffdb840feb4,288268784,0,0x0,8
tick,0x7ffdb840feb4,288284815,0,0x0,8
tick,0x7ffdb840feb4,288300076,0,0x0,8
tick,0x7ffdb840feb4,288314758,0,0x0,8
tick,0x7ffdb840feb4,288330351,0,0x0,8
tick,0x7ffdb840feb4,288346348,0,0x0,8
tick,0x7ffdb840feb4,288361933,0,0x0,8
tick,0x7ffdb840feb4,288377928,0,0x0,8
tick,0x7ffdb840feb4,288393931,0,0x0,8
tick,0x7ffdb840feb4,288409949,0,0x0,8
tick,0x7ffdb840feb4,288425934,0,0x0,8
tick,0x7ffdb840feb4,288441944,0,0x0,8
tick,0x7ffdb840feb4,288456940,0,0x0,8
tick,0x7ffdb840feb4,288472774,0,0x0,8
tick,0x7ffdb840feb4,288488769,0,0x0,8
tick,0x7ffdb840feb4,288503779,0,0x0,8
tick,0x7ffdb840feb4,288519777,0,0x0,8
tick,0x7ffdb840feb4,288534940,0,0x0,8
tick,0x7ffdb840feb4,288550120,0,0x0,8
tick,0x7ffdb840feb4,288565942,0,0x0,8
tick,0x7ffdb840feb4,288580950,0,0x0,8
tick,0x7ffdb840feb4,288596102,0,0x0,8
tick,0x7ffdb840feb4,288611571,0,0x0,8
tick,0x7ffdb840feb4,288626852,0,0x0,8
tick,0x7ffdb840feb4,288642869,0,0x0,8
tick,0x7ffdb840feb4,288658714,0,0x0,8
tick,0x7ffdb840feb4,288673963,0,0x0,8
tick,0x7ffdb840feb4,288689969,0,0x0,8
tick,0x7ffdb840feb4,288705966,0,0x0,8
tick,0x7ffdb840feb4,288720976,0,0x0,8
tick,0x7ffdb840feb4,288735863,0,0x0,8
tick,0x7ffdb840feb4,288751432,0,0x0,8
tick,0x7ffdb840feb4,288766811,0,0x0,8
tick,0x7ffdb840feb4,288781968,0,0x0,8
tick,0x7ffdb840feb4,288797803,0,0x0,8
tick,0x7ffdb840feb4,288813880,0,0x0,8
tick,0x7ffdb840feb4,288829794,0,0x0,8
tick,0x7ffdb840feb4,288845358,0,0x0,8
tick,0x7ffdb840feb4,288860987,0,0x0,8
tick,0x7ffdb840feb4,288877018,0,0x0,8
tick,0x7ffdb840feb4,288892208,0,0x0,8
tick,0x7ffdb840feb4,288907867,0,0x0,8
tick,0x7ffdb840feb4,288923170,0,0x0,8
tick,0x7ffdb840feb4,288939020,0,0x0,8
tick,0x7ffdb840feb4,288954012,0,0x0,8
tick,0x7ffdb840feb4,288969871,0,0x0,8
tick,0x7ffdb840feb4,288985853,0,0x0,8
tick,0x7ffdb840feb4,289001018,0,0x0,8
tick,0x7ffdb840feb4,289016022,0,0x0,8
tick,0x7ffdb840feb4,289031774,0,0x0,8
tick,0x7ffdb840feb4,289047843,0,0x0,8
tick,0x7ffdb840feb4,289063017,0,0x0,8
tick,0x7ffdb840feb4,289079009,0,0x0,8
tick,0x7ffdb840feb4,289093988,0,0x0,8
tick,0x7ffdb840feb4,289108746,0,0x0,8
tick,0x7ffdb840feb4,289124749,0,0x0,8
tick,0x7ffdb840feb4,289140017,0,0x0,8
tick,0x7ffdb840feb4,289155871,0,0x0,8
tick,0x7ffdb840feb4,289170855,0,0x0,8
tick,0x7ffdb840feb4,289186851,0,0x0,8
tick,0x7ffdb840feb4,289202028,0,0x0,8
tick,0x7ffdb840feb4,289217756,0,0x0,8
tick,0x7ffdb840feb4,289232862,0,0x0,8
tick,0x7ffdb840feb4,289248598,0,0x0,8
tick,0x7ffdb840feb4,289263929,0,0x0,8
tick,0x7ffdb840feb4,289279039,0,0x0,8
tick,0x7ffdb840feb4,289294772,0,0x0,8
tick,0x7ffdb840feb4,289310053,0,0x0,8
tick,0x7ffdb840feb4,289325256,0,0x0,8
tick,0x7ffdb840feb4,289341059,0,0x0,8
tick,0x7ffdb840feb4,289357050,0,0x0,8
tick,0x7ffdb840feb4,289372277,0,0x0,8
tick,0x7ffdb840feb4,289388086,0,0x0,8
tick,0x7ffdb840feb4,289402963,0,0x0,8
tick,0x7ffdb840feb4,289418871,0,0x0,8
tick,0x7ffdb840feb4,289434878,0,0x0,8
tick,0x7ffdb840feb4,289450056,0,0x0,8
tick,0x7ffdb840feb4,289465939,0,0x0,8
tick,0x7ffdb840feb4,289481708,0,0x0,8
tick,0x7ffdb840feb4,289497725,0,0x0,8
tick,0x7ffdb840feb4,289513727,0,0x0,8
tick,0x7ffdb840feb4,289528868,0,0x0,8
tick,0x7ffdb840feb4,289544875,0,0x0,8
tick,0x7ffdb840feb4,289559888,0,0x0,8
tick,0x7ffdb840feb4,289575905,0,0x0,8
tick,0x7ffdb840feb4,289591899,0,0x0,8
tick,0x7ffdb840feb4,289607928,0,0x0,8
tick,0x7ffdb840feb4,289623749,0,0x0,8
tick,0x7ffdb840feb4,289638677,0,0x0,8
tick,0x7ffdb840feb4,289654180,0,0x0,8
tick,0x7ffdb840feb4,289670094,0,0x0,8
tick,0x7ffdb840feb4,289685105,0,0x0,8
tick,0x7ffdb840feb4,289700543,0,0x0,8
tick,0x7ffdb840feb4,289716109,0,0x0,8
tick,0x7ffdb840feb4,289732099,0,0x0,8
tick,0x7ffdb840feb4,289747917,0,0x0,8
tick,0x7ffdb840feb4,289763109,0,0x0,8
tick,0x7ffdb840feb4,289778919,0,0x0,8
tick,0x7ffdb840feb4,289794093,0,0x0,8
tick,0x7ffdb840feb4,289810098,0,0x0,8
tick,0x7ffdb840feb4,289825809,0,0x0,8
tick,0x7ffdb840feb4,289841100,0,0x0,8
tick,0x7ffdb840feb4,289856930,0,0x0,8
tick,0x7ffdb840feb4,289872105,0,0x0,8
tick,0x7ffdb840feb4,289887738,0,0x0,8
tick,0x7ffdb840feb4,289903108,0,0x0,8
tick,0x7ffdb840feb4,289918950,0,0x0,8
tick,0x7ffdb840feb4,289934954,0,0x0,8
tick,0x7ffdb840feb4,289950123,0,0x0,8
tick,0x7ffdb840feb4,289965124,0,0x0,8
tick,0x7ffdb840feb4,289980575,0,0x0,8
tick,0x7ffdb840feb4,289995862,0,0x0,8
tick,0x7ffdb840feb4,290011855,0,0x0,8
tick,0x7ffdb840feb4,290027854,0,0x0,8
tick,0x7ffdb840feb4,290042958,0,0x0,8
tick,0x7ffdb840feb4,290058256,0,0x0,8
tick,0x7ffdb840feb4,290074256,0,0x0,8
tick,0x7ffdb840feb4,290089882,0,0x0,8
tick,0x7ffdb840feb4,290105237,0,0x0,8
tick,0x7ffdb840feb4,290120536,0,0x0,8
tick,0x7ffdb840feb4,290135950,0,0x0,8
tick,0x7ffdb840feb4,290151323,0,0x0,8
tick,0x7ffdb840feb4,290167154,0,0x0,8
tick,0x7ffdb840feb4,290181990,0,0x0,8
tick,0x7ffdb840feb4,290197998,0,0x0,8
tick,0x7ffdb840feb4,290213999,0,0x0,8
tick,0x7ffdb840feb4,290228983,0,0x0,8
tick,0x7ffdb840feb4,290244079,0,0x0,8
tick,0x7ffdb840feb4,290260157,0,0x0,8
tick,0x7ffdb840feb4,290275991,0,0x0,8
tick,0x7ffdb840feb4,290291992,0,0x0,8
tick,0x7ffdb840feb4,290306977,0,0x0,8
tick,0x7ffdb840feb4,290322014,0,0x0,8
tick,0x7ffdb840feb4,290337984,0,0x0,8
tick,0x7ffdb840feb4,290354003,0,0x0,8
tick,0x7ffdb840feb4,290369676,0,0x0,8
tick,0x7ffdb840feb4,290385051,0,0x0,8
tick,0x7ffdb840feb4,290400586,0,0x0,8
tick,0x7ffdb840feb4,290415981,0,0x0,8
tick,0x7ffdb840feb4,290431176,0,0x0,8
tick,0x7ffdb840feb4,290446713,0,0x0,8
tick,0x7ffdb840feb4,290462212,0,0x0,8
tick,0x7ffdb840feb4,290477723,0,0x0,8
tick,0x7ffdb840feb4,290493719,0,0x0,8
tick,0x7ffdb840feb4,290509740,0,0x0,8
tick,0x7ffdb840feb4,290525194,0,0x0,8
tick,0x7ffdb840feb4,290541186,0,0x0,8
tick,0x7ffdb840feb4,290557204,0,0x0,8
tick,0x7ffdb840feb4,290573206,0,0x0,8
tick,0x7ffdb840feb4,290589208,0,0x0,8
tick,0x7ffdb840feb4,290605203,0,0x0,8
tick,0x7ffdb840feb4,290621198,0,0x0,8
tick,0x7ffdb840feb4,290637236,0,0x0,8
tick,0x7ffdb840feb4,290653233,0,0x0,8
tick,0x7ffdb840feb4,290669204,0,0x0,8
tick,0x7ffdb840feb4,290685224,0,0x0,8
tick,0x7ffdb840feb4,290700738,0,0x0,8
tick,0x7ffdb840feb4,290715990,0,0x0,8
tick,0x7ffdb840feb4,290732002,0,0x0,8
tick,0x7ffdb840feb4,290747227,0,0x0,8
tick,0x7ffdb840feb4,290763213,0,0x0,8
tick,0x7ffdb840feb4,290778217,0,0x0,8
tick,0x7ffdb840feb4,290794233,0,0x0,8
tick,0x7ffdb840feb4,290810047,0,0x0,8
tick,0x7ffdb840feb4,290826061,0,0x0,8
tick,0x7ffdb840feb4,290841232,0,0x0,8
tick,0x7ffdb840feb4,290856225,0,0x0,8
tick,0x7ffdb840feb4,290872229,0,0x0,8
tick,0x7ffdb840feb4,290888055,0,0x0,8
tick,0x7ffdb840feb4,290903239,0,0x0,8
tick,0x7ffdb840feb4,290919248,0,0x0,8
tick,0x7ffdb840feb4,290934542,0,0x0,8
tick,0x7ffdb840feb4,290950236,0,0x0,8
tick,0x7ffdb840feb4,290966316,0,0x0,8
tick,0x7ffdb840feb4,290981752,0,0x0,8
tick,0x7ffdb840feb4,290997249,0,0x0,8
tick,0x7ffdb840feb4,291012256,0,0x0,8
tick,0x7ffdb840feb4,291028078,0,0x0,8
tick,0x7ffdb840feb4,291043266,0,0x0,8
tick,0x7ffdb840feb4,291059078,0,0x0,8
tick,0x7ffdb840feb4,291074266,0,0x0,8
tick,0x7ffdb840feb4,291090246,0,0x0,8
tick,0x7ffdb840feb4,291105267,0,0x0,8
tick,0x7ffdb840feb4,291121266,0,0x0,8
tick,0x7ffdb840feb4,291137282,0,0x0,8
tick,0x7ffdb840feb4,291152609,0,0x0,8
tick,0x7ffdb840feb4,291168270,0,0x0,8
tick,0x7ffdb840feb4,291183285,0,0x0,8
tick,0x7ffdb840feb4,291198293,0,0x0,8
tick,0x7ffdb840feb4,291214282,0,0x0,8
tick,0x7ffdb840feb4,291229281,0,0x0,8
tick,0x7ffdb840feb4,291245296,0,0x0,8
tick,0x7ffdb840feb4,291260290,0,0x0,8
tick,0x7ffdb840feb4,291275296,0,0x0,8
tick,0x7ffdb840feb4,291290282,0,0x0,8
tick,0x7ffdb840feb4,291306314,0,0x0,8
tick,0x7ffdb840feb4,291321290,0,0x0,8
tick,0x7ffdb840feb4,291337115,0,0x0,8
tick,0x7ffdb840feb4,291352307,0,0x0,8
tick,0x7ffdb840feb4,291368108,0,0x0,8
tick,0x7ffdb840feb4,291383301,0,0x0,8
tick,0x7ffdb840feb4,291398956,0,0x0,8
tick,0x7ffdb840feb4,291413976,0,0x0,8
tick,0x7ffdb840feb4,291428957,0,0x0,8
tick,0x7ffdb840feb4,291444758,0,0x0,8
tick,0x7ffdb840feb4,291460309,0,0x0,8
tick,0x7ffdb840feb4,291475618,0,0x0,8
tick,0x7ffdb840feb4,291490990,0,0x0,8
tick,0x7ffdb840feb4,291506987,0,0x0,8
tick,0x7ffdb840feb4,291522620,0,0x0,8
tick,0x7ffdb840feb4,291538145,0,0x0,8
tick,0x7ffdb840feb4,291553145,0,0x0,8
tick,0x7ffdb840feb4,291569164,0,0x0,8
tick,0x7ffdb840feb4,291585163,0,0x0,8
tick,0x7ffdb840feb4,291601177,0,0x0,8
tick,0x7ffdb840feb4,291616298,0,0x0,8
tick,0x7ffdb840feb4,291631328,0,0x0,8
tick,0x7ffdb840feb4,291646802,0,0x0,8
tick,0x7ffdb840feb4,291662330,0,0x0,8
tick,0x7ffdb840feb4,291678181,0,0x0,8
tick,0x7ffdb840feb4,291694174,0,0x0,8
tick,0x7ffdb840feb4,291709333,0,0x0,8
tick,0x7ffdb840feb4,291724166,0,0x0,8
tick,0x7ffdb840feb4,291740150,0,0x0,8
tick,0x7ffdb840feb4,291755344,0,0x0,8
tick,0x7ffdb840feb4,291770288,0,0x0,8
tick,0x7ffdb840feb4,291786304,0,0x0,8
tick,0x7ffdb840feb4,291801874,0,0x0,8
tick,0x7ffdb840feb4,291817174,0,0x0,8
tick,0x7ffdb840feb4,291832984,0,0x0,8
tick,0x7ffdb840feb4,291848170,0,0x0,8
tick,0x7ffdb840feb4,291863349,0,0x0,8
tick,0x7ffdb840feb4,291879176,0,0x0,8
tick,0x7ffdb840feb4,291894757,0,0x0,8
tick,0x7ffdb840feb4,291910354,0,0x0,8
tick,0x7ffdb840feb4,291926369,0,0x0,8
tick,0x7ffdb840feb4,291942316,0,0x0,8
tick,0x7ffdb840feb4,291958193,0,0x0,8
tick,0x7ffdb840feb4,291974065,0,0x0,8
tick,0x7ffdb840feb4,291989199,0,0x0,8
tick,0x7ffdb840feb4,292004389,0,0x0,8
tick,0x7ffdb840feb4,292020200,0,0x0,8
tick,0x7ffdb840feb4,292035382,0,0x0,8
tick,0x7ffdb840feb4,292050396,0,0x0,8
tick,0x7ffdb840feb4,292066397,0,0x0,8
tick,0x7ffdb840feb4,292082397,0,0x0,8
tick,0x7ffdb840feb4,292098405,0,0x0,8
tick,0x7ffdb840feb4,292114422,0,0x0,8
tick,0x7ffdb840feb4,292130418,0,0x0,8
tick,0x7ffdb840feb4,292145444,0,0x0,8
tick,0x7ffdb840feb4,292160418,0,0x0,8
tick,0x7ffdb840feb4,292176415,0,0x0,8
tick,0x7ffdb840feb4,292192427,0,0x0,8
tick,0x7ffdb840feb4,292208427,0,0x0,8
tick,0x7ffdb840feb4,292224429,0,0x0,8
tick,0x7ffdb840feb4,292239248,0,0x0,8
tick,0x7ffdb840feb4,292255236,0,0x0,8
tick,0x7ffdb840feb4,292271243,0,0x0,8
tick,0x7ffdb840feb4,292287249,0,0x0,8
tick,0x7ffdb840feb4,292302421,0,0x0,8
tick,0x7ffdb840feb4,292317270,0,0x0,8
tick,0x7ffdb840feb4,292333276,0,0x0,8
tick,0x7ffdb840feb4,292349259,0,0x0,8
tick,0x7ffdb840feb4,292365265,0,0x0,8
tick,0x7ffdb840feb4,292381264,0,0x0,8
tick,0x7ffdb840feb4,292396968,0,0x0,8
tick,0x7ffdb840feb4,292411981,0,0x0,8
tick,0x7ffdb840feb4,292427997,0,0x0,8
tick,0x7ffdb840feb4,292443991,0,0x0,8
tick,0x7ffdb840feb4,292459982,0,0x0,8
tick,0x7ffdb840feb4,292475430,0,0x0,8
tick,0x7ffdb840feb4,292491454,0,0x0,8
tick,0x7ffdb840feb4,292507437,0,0x0,8
tick,0x7ffdb840feb4,292522892,0,0x0,8
tick,0x7ffdb840feb4,292538267,0,0x0,8
tick,0x7ffdb840feb4,292553880,0,0x0,8
tick,0x7ffdb840feb4,292569265,0,0x0,8
tick,0x7ffdb840feb4,292584499,0,0x0,8
tick,0x7ffdb840feb4,292600456,0,0x0,8
tick,0x7ffdb840feb4,292615463,0,0x0,8
tick,0x7ffdb840feb4,292630924,0,0x0,8
tick,0x7ffdb840feb4,292646444,0,0x0,8
tick,0x7ffdb840feb4,292661464,0,0x0,8
tick,0x7ffdb840feb4,292676460,0,0x0,8
tick,0x7ffdb840feb4,292692467,0,0x0,8
tick,0x7ffdb840feb4,292707471,0,0x0,8
tick,0x7ffdb840feb4,292722458,0,0x0,8
tick,0x7ffdb840feb4,292738286,0,0x0,8
tick,0x7ffdb840feb4,292754288,0,0x0,8
tick,0x7ffdb840feb4,292769470,0,0x0,8
tick,0x7ffdb840feb4,292785461,0,0x0,8
tick,0x7ffdb840feb4,292800469,0,0x0,8
tick,0x7ffdb840feb4,292816331,0,0x0,8
tick,0x7ffdb840feb4,292831480,0,0x0,8
tick,0x7ffdb840feb4,292847315,0,0x0,8
tick,0x7ffdb840feb4,292862482,0,0x0,8
tick,0x7ffdb840feb4,292878310,0,0x0,8
tick,0x7ffdb840feb4,292893495,0,0x0,8
tick,0x7ffdb840feb4,292908485,0,0x0,8
tick,0x7ffdb840feb4,292924187,0,0x0,8
tick,0x7ffdb840feb4,292939476,0,0x0,8
tick,0x7ffdb840feb4,292954913,0,0x0,8
tick,0x7ffdb840feb4,292970315,0,0x0,8
tick,0x7ffdb840feb4,292986330,0,0x0,8
tick,0x7ffdb840feb4,293001483,0,0x0,8
tick,0x7ffdb840feb4,293017311,0,0x0,8
tick,0x7ffdb840feb4,293032998,0,0x0,8
tick,0x7ffdb840feb4,293048314,0,0x0,8
tick,0x7ffdb840feb4,293064328,0,0x0,8
tick,0x7ffdb840feb4,293080322,0,0x0,8
tick,0x7ffdb840feb4,293096006,0,0x0,8
tick,0x7ffdb840feb4,293110955,0,0x0,8
tick,0x7ffdb840feb4,293126527,0,0x0,8
tick,0x7ffdb840feb4,293141991,0,0x0,8
tick,0x7ffdb840feb4,293157328,0,0x0,8
tick,0x7ffdb840feb4,293172353,0,0x0,8
tick,0x7ffdb840feb4,293188350,0,0x0,8
tick,0x7ffdb840feb4,293203578,0,0x0,8
tick,0x7ffdb840feb4,293219341,0,0x0,8
tick,0x7ffdb840feb4,293234346,0,0x0,8
tick,0x7ffdb840feb4,293250348,0,0x0,8
tick,0x7ffdb840feb4,293266370,0,0x0,8
tick,0x7ffdb840feb4,293282350,0,0x0,8
tick,0x7ffdb840feb4,293298370,0,0x0,8
tick,0x7ffdb840feb4,293313578,0,0x0,8
tick,0x7ffdb840feb4,293329366,0,0x0,8
tick,0x7ffdb840feb4,293344362,0,0x0,8
tick,0x7ffdb840feb4,293359540,0,0x0,8
tick,0x7ffdb840feb4,293375539,0,0x0,8
tick,0x7ffdb840feb4,293390266,0,0x0,8
tick,0x7ffdb840feb4,293405586,0,0x0,8
tick,0x7ffdb840feb4,293421537,0,0x0,8
tick,0x7ffdb840feb4,293436671,0,0x0,8
tick,0x7ffdb840feb4,293452556,0,0x0,8
tick,0x7ffdb840feb4,293467978,0,0x0,8
tick,0x7ffdb840feb4,293484001,0,0x0,8
tick,0x7ffdb840feb4,293499377,0,0x0,8
tick,0x7ffdb840feb4,293514547,0,0x0,8
tick,0x7ffdb840feb4,293530551,0,0x0,8
tick,0x7ffdb840feb4,293545571,0,0x0,8
tick,0x7ffdb840feb4,293561403,0,0x0,8
tick,0x7ffdb840feb4,293577390,0,0x0,8
tick,0x7ffdb840feb4,293593405,0,0x0,8
tick,0x7ffdb840feb4,293609409,0,0x0,8
tick,0x7ffdb840feb4,293624408,0,0x0,8
tick,0x7ffdb840feb4,293640396,0,0x0,8
tick,0x7ffdb840feb4,293655327,0,0x0,8
tick,0x7ffdb840feb4,293670560,0,0x0,8
tick,0x7ffdb840feb4,293686008,0,0x0,8
tick,0x7ffdb840feb4,293701566,0,0x0,8
tick,0x7ffdb840feb4,293717399,0,0x0,8
tick,0x7ffdb840feb4,293733407,0,0x0,8
tick,0x7ffdb840feb4,293749414,0,0x0,8
tick,0x7ffdb840feb4,293764815,0,0x0,8
tick,0x7ffdb840feb4,293780043,0,0x0,8
tick,0x7ffdb840feb4,293796092,0,0x0,8
tick,0x7ffdb840feb4,293811402,0,0x0,8
tick,0x7ffdb840feb4,293826609,0,0x0,8
tick,0x7ffdb840feb4,293842024,0,0x0,8
tick,0x7ffdb840feb4,293857400,0,0x0,8
tick,0x7ffdb840feb4,293872612,0,0x0,8
tick,0x7ffdb840feb4,293887420,0,0x0,8
tick,0x7ffdb840feb4,293902590,0,0x0,8
tick,0x7ffdb840feb4,293918429,0,0x0,8
tick,0x7ffdb840feb4,293933419,0,0x0,8
tick,0x7ffdb840feb4,293949416,0,0x0,8
tick,0x7ffdb840feb4,293965109,0,0x0,8
tick,0x7ffdb840feb4,293980600,0,0x0,8
tick,0x7ffdb840feb4,293996442,0,0x0,8
tick,0x7ffdb840feb4,294011602,0,0x0,8
tick,0x7ffdb840feb4,294027428,0,0x0,8
tick,0x7ffdb840feb4,294042608,0,0x0,8
tick,0x7ffdb840feb4,294058432,0,0x0,8
tick,0x7ffdb840feb4,294073982,0,0x0,8
tick,0x7ffdb840feb4,294089440,0,0x0,8
tick,0x7ffdb840feb4,294104651,0,0x0,8
tick,0x7ffdb840feb4,294120640,0,0x0,8
tick,0x7ffdb840feb4,294136647,0,0x0,8
tick,0x7ffdb840feb4,294152722,0,0x0,8
tick,0x7ffdb840feb4,294167084,0,0x0,8
tick,0x7ffdb840feb4,294182995,0,0x0,8
tick,0x7ffdb840feb4,294198453,0,0x0,8
tick,0x7ffdb840feb4,294213625,0,0x0,8
tick,0x7ffdb840feb4,294228663,0,0x0,8
tick,0x7ffdb840feb4,294244640,0,0x0,8
tick,0x7ffdb840feb4,294260633,0,0x0,8
tick,0x7ffdb840feb4,294276134,0,0x0,8
tick,0x7ffdb840feb4,294291814,0,0x0,8
tick,0x7ffdb840feb4,294307141,0,0x0,8
tick,0x7ffdb840feb4,294322812,0,0x0,8
tick,0x7ffdb840feb4,294338268,0,0x0,8
tick,0x7ffdb840feb4,294353813,0,0x0,8
tick,0x7ffdb840feb4,294368810,0,0x0,8
tick,0x7ffdb840feb4,294384000,0,0x0,8
tick,0x7ffdb840feb4,294399826,0,0x0,8
tick,0x7ffdb840feb4,294414814,0,0x0,8
tick,0x7ffdb840feb4,294430821,0,0x0,8
tick,0x7ffdb840feb4,294446645,0,0x0,8
tick,0x7ffdb840feb4,294462653,0,0x0,8
tick,0x7ffdb840feb4,294478491,0,0x0,8
tick,0x7ffdb840feb4,294494542,0,0x0,8
tick,0x7ffdb840feb4,294509656,0,0x0,8
tick,0x7ffdb840feb4,294524821,0,0x0,8
tick,0x7ffdb840feb4,294540489,0,0x0,8
tick,0x7ffdb840feb4,294555660,0,0x0,8
tick,0x7ffdb840feb4,294571667,0,0x0,8
tick,0x7ffdb840feb4,294587675,0,0x0,8
tick,0x7ffdb840feb4,294603696,0,0x0,8
tick,0x7ffdb840feb4,294619710,0,0x0,8
tick,0x7ffdb840feb4,294635685,0,0x0,8
tick,0x7ffdb840feb4,294651192,0,0x0,8
tick,0x7ffdb840feb4,294666934,0,0x0,8
tick,0x7ffdb840feb4,294682994,0,0x0,8
tick,0x7ffdb840feb4,294698505,0,0x0,8
tick,0x7ffdb840feb4,294713944,0,0x0,8
tick,0x7ffdb840feb4,294729507,0,0x0,8
tick,0x7ffdb840feb4,294744659,0,0x0,8
tick,0x7ffdb840feb4,294760661,0,0x0,8
tick,0x7ffdb840feb4,294776148,0,0x0,8
tick,0x7ffdb840feb4,294791520,0,0x0,8
tick,0x7ffdb840feb4,294807519,0,0x0,8
tick,0x7ffdb840feb4,294822375,0,0x0,8
tick,0x7ffdb840feb4,294837533,0,0x0,8
tick,0x7ffdb840feb4,294852525,0,0x0,8
tick,0x7ffdb840feb4,294868016,0,0x0,8
tick,0x7ffdb840feb4,294883996,0,0x0,8
tick,0x7ffdb840feb4,294899531,0,0x0,8
tick,0x7ffdb840feb4,294914694,0,0x0,8
tick,0x7ffdb840feb4,294930713,0,0x0,8
tick,0x7ffdb840feb4,294946719,0,0x0,8
tick,0x7ffdb840feb4,294961995,0,0x0,8
tick,0x7ffdb840feb4,294977673,0,0x0,8
tick,0x7ffdb840feb4,294993554,0,0x0,8
tick,0x7ffdb840feb4,295008665,0,0x0,8
tick,0x7ffdb840feb4,295023900,0,0x0,8
tick,0x7ffdb840feb4,295039545,0,0x0,8
tick,0x7ffdb840feb4,295054726,0,0x0,8
tick,0x7ffdb840feb4,295070731,0,0x0,8
tick,0x7ffdb840feb4,295085735,0,0x0,8
tick,0x7ffdb840feb4,295101674,0,0x0,8
tick,0x7ffdb840feb4,295117680,0,0x0,8
tick,0x7ffdb840feb4,295133678,0,0x0,8
tick,0x7ffdb840feb4,295149558,0,0x0,8
tick,0x7ffdb840feb4,295165241,0,0x0,8
tick,0x7ffdb840feb4,295180746,0,0x0,8
tick,0x7ffdb840feb4,295195753,0,0x0,8
tick,0x7ffdb840feb4,295211674,0,0x0,8
tick,0x7ffdb840feb4,295227678,0,0x0,8
tick,0x7ffdb840feb4,295243580,0,0x0,8
tick,0x7ffdb840feb4,295258752,0,0x0,8
tick,0x7ffdb840feb4,295274112,0,0x0,8
tick,0x7ffdb840feb4,295289575,0,0x0,8
tick,0x7ffdb840feb4,295304753,0,0x0,8
tick,0x7ffdb840feb4,295320682,0,0x0,8
tick,0x7ffdb840feb4,295335385,0,0x0,8
tick,0x7ffdb840feb4,295350755,0,0x0,8
tick,0x7ffdb840feb4,295366766,0,0x0,8
tick,0x7ffdb840feb4,295382768,0,0x0,8
tick,0x7ffdb840feb4,295398818,0,0x0,8
tick,0x7ffdb840feb4,295414822,0,0x0,8
tick,0x7ffdb840feb4,295430818,0,0x0,8
tick,0x7ffdb840feb4,295446824,0,0x0,8
tick,0x7ffdb840feb4,295462254,0,0x0,8
tick,0x7ffdb840feb4,295477602,0,0x0,8
tick,0x7ffdb840feb4,295493253,0,0x0,8
tick,0x7ffdb840feb4,295508607,0,0x0,8
tick,0x7ffdb840feb4,295524605,0,0x0,8
tick,0x7ffdb840feb4,295539599,0,0x0,8
tick,0x7ffdb840feb4,295554615,0,0x0,8
tick,0x7ffdb840feb4,295569787,0,0x0,8
tick,0x7ffdb840feb4,295585619,0,0x0,8
tick,0x7ffdb840feb4,295600633,0,0x0,8
tick,0x7ffdb840feb4,295615637,0,0x0,8
tick,0x7ffdb840feb4,295631625,0,0x0,8
tick,0x7ffdb840feb4,295646646,0,0x0,8
tick,0x7ffdb840feb4,295662280,0,0x0,8
tick,0x7ffdb840feb4,295677218,0,0x0,8
tick,0x7ffdb840feb4,295692801,0,0x0,8
tick,0x7ffdb840feb4,295708623,0,0x0,8
tick,0x7ffdb840feb4,295724629,0,0x0,8
tick,0x7ffdb840feb4,295739803,0,0x0,8
tick,0x7ffdb840feb4,295755410,0,0x0,8
tick,0x7ffdb840feb4,295770813,0,0x0,8
tick,0x7ffdb840feb4,295786016,0,0x0,8
tick,0x7ffdb840feb4,295801202,0,0x0,8
tick,0x7ffdb840feb4,295817020,0,0x0,8
tick,0x7ffdb840feb4,295832004,0,0x0,8
tick,0x7ffdb840feb4,295847640,0,0x0,8
tick,0x7ffdb840feb4,295862823,0,0x0,8
tick,0x7ffdb840feb4,295878649,0,0x0,8
tick,0x7ffdb840feb4,295894648,0,0x0,8
tick,0x7ffdb840feb4,295909827,0,0x0,8
tick,0x7ffdb840feb4,295925649,0,0x0,8
tick,0x7ffdb840feb4,295940832,0,0x0,8
tick,0x7ffdb840feb4,295956121,0,0x0,8
tick,0x7ffdb840feb4,295971292,0,0x0,8
tick,0x7ffdb840feb4,295986768,0,0x0,8
tick,0x7ffdb840feb4,296002784,0,0x0,8
tick,0x7ffdb840feb4,296018664,0,0x0,8
tick,0x7ffdb840feb4,296034010,0,0x0,8
tick,0x7ffdb840feb4,296049661,0,0x0,8
tick,0x7ffdb840feb4,296064844,0,0x0,8
tick,0x7ffdb840feb4,296079796,0,0x0,8
tick,0x7ffdb840feb4,296095712,0,0x0,8
tick,0x7ffdb840feb4,296110855,0,0x0,8
tick,0x7ffdb840feb4,296126658,0,0x0,8
tick,0x7ffdb840feb4,296141861,0,0x0,8
tick,0x7ffdb840feb4,296157682,0,0x0,8
tick,0x7ffdb840feb4,296172865,0,0x0,8
tick,0x7ffdb840feb4,296188623,0,0x0,8
tick,0x7ffdb840feb4,296203849,0,0x0,8
tick,0x7ffdb840feb4,296219694,0,0x0,8
tick,0x7ffdb840feb4,296235695,0,0x0,8
tick,0x7ffdb840feb4,296250698,0,0x0,8
tick,0x7ffdb840feb4,296265870,0,0x0,8
tick,0x7ffdb840feb4,296281876,0,0x0,8
tick,0x7ffdb840feb4,296296557,0,0x0,8
tick,0x7ffdb840feb4,296312128,0,0x0,8
tick,0x7ffdb840feb4,296327880,0,0x0,8
tick,0x7ffdb840feb4,296343337,0,0x0,8
tick,0x7ffdb840feb4,296358911,0,0x0,8
tick,0x7ffdb840feb4,296373911,0,0x0,8
tick,0x7ffdb840feb4,296389582,0,0x0,8
tick,0x7ffdb840feb4,296404834,0,0x0,8
tick,0x7ffdb840feb4,296419886,0,0x0,8
tick,0x7ffdb840feb4,296435037,0,0x0,8
tick,0x7ffdb840feb4,296450694,0,0x0,8
tick,0x7ffdb840feb4,296465992,0,0x0,8
tick,0x7ffdb840feb4,296481521,0,0x0,8
tick,0x7ffdb840feb4,296496741,0,0x0,8
tick,0x7ffdb840feb4,296512150,0,0x0,8
tick,0x7ffdb840feb4,296527669,0,0x0,8
tick,0x7ffdb840feb4,296542905,0,0x0,8
tick,0x7ffdb840feb4,296558729,0,0x0,8
tick,0x7ffdb840feb4,296573917,0,0x0,8
tick,0x7ffdb840feb4,296589730,0,0x0,8
tick,0x7ffdb840feb4,296604750,0,0x0,8
tick,0x7ffdb840feb4,296619744,0,0x0,8
tick,0x7ffdb840feb4,296635747,0,0x0,8
tick,0x7ffdb840feb4,296650742,0,0x0,8
tick,0x7ffdb840feb4,296666024,0,0x0,8
tick,0x7ffdb840feb4,296681921,0,0x0,8
tick,0x7ffdb840feb4,296696874,0,0x0,8
tick,0x7ffdb840feb4,296711936,0,0x0,8
tick,0x7ffdb840feb4,296727747,0,0x0,8
tick,0x7ffdb840feb4,296743743,0,0x0,8
tick,0x7ffdb840feb4,296759423,0,0x0,8
tick,0x7ffdb840feb4,296774931,0,0x0,8
tick,0x7ffdb840feb4,296789773,0,0x0,8
tick,0x7ffdb840feb4,296804916,0,0x0,8
tick,0x7ffdb840feb4,296820895,0,0x0,8
tick,0x7ffdb840feb4,296835901,0,0x0,8
tick,0x7ffdb840feb4,296851763,0,0x0,8
tick,0x7ffdb840feb4,296866909,0,0x0,8
tick,0x7ffdb840feb4,296881910,0,0x0,8
tick,0x7ffdb840feb4,296897932,0,0x0,8
tick,0x7ffdb840feb4,296913994,0,0x0,8
tick,0x7ffdb840feb4,296928775,0,0x0,8
tick,0x7ffdb840feb4,296943963,0,0x0,8
tick,0x7ffdb840feb4,296959781,0,0x0,8
tick,0x7ffdb840feb4,296974913,0,0x0,8
tick,0x7ffdb840feb4,296990956,0,0x0,8
tick,0x7ffdb840feb4,297005926,0,0x0,8
tick,0x7ffdb840feb4,297021100,0,0x0,8
tick,0x7ffdb840feb4,297037015,0,0x0,8
tick,0x7ffdb840feb4,297051801,0,0x0,8
tick,0x7ffdb840feb4,297067170,0,0x0,8
tick,0x7ffdb840feb4,297082968,0,0x0,8
tick,0x7ffdb840feb4,297097790,0,0x0,8
tick,0x7ffdb840feb4,297113252,0,0x0,8
tick,0x7ffdb840feb4,297128836,0,0x0,8
tick,0x7ffdb840feb4,297144131,0,0x0,8
tick,0x7ffdb840feb4,297159805,0,0x0,8
tick,0x7ffdb840feb4,297174986,0,0x0,8
tick,0x7ffdb840feb4,297190973,0,0x0,8
tick,0x7ffdb840feb4,297205940,0,0x0,8
tick,0x7ffdb840feb4,297221441,0,0x0,8
tick,0x7ffdb840feb4,297237013,0,0x0,8
tick,0x7ffdb840feb4,297253019,0,0x0,8
tick,0x7ffdb840feb4,297269018,0,0x0,8
tick,0x7ffdb840feb4,297284016,0,0x0,8
tick,0x7ffdb840feb4,297299827,0,0x0,8
tick,0x7ffdb840feb4,297315180,0,0x0,8
tick,0x7ffdb840feb4,297331014,0,0x0,8
tick,0x7ffdb840feb4,297345997,0,0x0,8
tick,0x7ffdb840feb4,297362003,0,0x0,8
tick,0x7ffdb840feb4,297378000,0,0x0,8
tick,0x7ffdb840feb4,297393165,0,0x0,8
tick,0x7ffdb840feb4,297408838,0,0x0,8
tick,0x7ffdb840feb4,297424775,0,0x0,8
tick,0x7ffdb840feb4,297440014,0,0x0,8
tick,0x7ffdb840feb4,297454821,0,0x0,8
tick,0x7ffdb840feb4,297470853,0,0x0,8
tick,0x7ffdb840feb4,297486016,0,0x0,8
tick,0x7ffdb840feb4,297501018,0,0x0,8
tick,0x7ffdb840feb4,297516344,0,0x0,8
tick,0x7ffdb840feb4,297532005,0,0x0,8
tick,0x7ffdb840feb4,297547024,0,0x0,8
tick,0x7ffdb840feb4,297563020,0,0x0,8
tick,0x7ffdb840feb4,297579035,0,0x0,8
tick,0x7ffdb840feb4,297594188,0,0x0,8
tick,0x7ffdb840feb4,297610196,0,0x0,8
tick,0x7ffdb840feb4,297625196,0,0x0,8
tick,0x7ffdb840feb4,297641197,0,0x0,8
tick,0x7ffdb840feb4,297656432,0,0x0,8
tick,0x7ffdb840feb4,297671196,0,0x0,8
tick,0x7ffdb840feb4,297686036,0,0x0,8
tick,0x7ffdb840feb4,297701188,0,0x0,8
tick,0x7ffdb840feb4,297716350,0,0x0,8
tick,0x7ffdb840feb4,297731515,0,0x0,8
tick,0x7ffdb840feb4,297747087,0,0x0,8
tick,0x7ffdb840feb4,297763055,0,0x0,8
tick,0x7ffdb840feb4,297778888,0,0x0,8
tick,0x7ffdb840feb4,297794199,0,0x0,8
tick,0x7ffdb840feb4,297809053,0,0x0,8
tick,0x7ffdb840feb4,297824200,0,0x0,8
tick,0x7ffdb840feb4,297839884,0,0x0,8
tick,0x7ffdb840feb4,297854952,0,0x0,8
tick,0x7ffdb840feb4,297871068,0,0x0,8
tick,0x7ffdb840feb4,297886206,0,0x0,8
tick,0x7ffdb840feb4,297901520,0,0x0,8
tick,0x7ffdb840feb4,297917022,0,0x0,8
tick,0x7ffdb840feb4,297933016,0,0x0,8
tick,0x7ffdb840feb4,297948023,0,0x0,8
tick,0x7ffdb840feb4,297963597,0,0x0,8
tick,0x7ffdb840feb4,297978900,0,0x0,8
tick,0x7ffdb840feb4,297994899,0,0x0,8
tick,0x7ffdb840feb4,298010073,0,0x0,8
tick,0x7ffdb840feb4,298025049,0,0x0,8
tick,0x7ffdb840feb4,298041045,0,0x0,8
tick,0x7ffdb840feb4,298056318,0,0x0,8
tick,0x7ffdb840feb4,298072093,0,0x0,8
tick,0x7ffdb840feb4,298088107,0,0x0,8
tick,0x7ffdb840feb4,298103382,0,0x0,8
tick,0x7ffdb840feb4,298118919,0,0x0,8
tick,0x7ffdb840feb4,298134095,0,0x0,8
tick,0x7ffdb840feb4,298150100,0,0x0,8
tick,0x7ffdb840feb4,298165355,0,0x0,8
tick,0x7ffdb840feb4,298181030,0,0x0,8
tick,0x7ffdb840feb4,298196939,0,0x0,8
tick,0x7ffdb840feb4,298212109,0,0x0,8
tick,0x7ffdb840feb4,298228023,0,0x0,8
tick,0x7ffdb840feb4,298243120,0,0x0,8
tick,0x7ffdb840feb4,298259032,0,0x0,8
tick,0x7ffdb840feb4,298274943,0,0x0,8
tick,0x7ffdb840feb4,298290117,0,0x0,8
tick,0x7ffdb840feb4,298306065,0,0x0,8
tick,0x7ffdb840feb4,298321066,0,0x0,8
tick,0x7ffdb840feb4,298337035,0,0x0,8
tick,0x7ffdb840feb4,298353128,0,0x0,8
tick,0x7ffdb840feb4,298369034,0,0x0,8
tick,0x7ffdb840feb4,298384354,0,0x0,8
tick,0x7ffdb840feb4,298399840,0,0x0,8
tick,0x7ffdb840feb4,298415145,0,0x0,8
tick,0x7ffdb840feb4,298431145,0,0x0,8
tick,0x7ffdb840feb4,298447135,0,0x0,8
tick,0x7ffdb840feb4,298463140,0,0x0,8
tick,0x7ffdb840feb4,298478961,0,0x0,8
tick,0x7ffdb840feb4,298494155,0,0x0,8
tick,0x7ffdb840feb4,298509434,0,0x0,8
tick,0x7ffdb840feb4,298525153,0,0x0,8
tick,0x7ffdb840feb4,298541146,0,0x0,8
tick,0x7ffdb840feb4,298557021,0,0x0,8
tick,0x7ffdb840feb4,298572150,0,0x0,8
tick,0x7ffdb840feb4,298587163,0,0x0,8
tick,0x7ffdb840feb4,298603160,0,0x0,8
tick,0x7ffdb840feb4,298619159,0,0x0,8
tick,0x7ffdb840feb4,298634165,0,0x0,8
tick,0x7ffdb840feb4,298650161,0,0x0,8
tick,0x7ffdb840feb4,298665163,0,0x0,8
tick,0x7ffdb840feb4,298680991,0,0x0,8
tick,0x7ffdb840feb4,298696165,0,0x0,8
tick,0x7ffdb840feb4,298711155,0,0x0,8
tick,0x7ffdb840feb4,298726164,0,0x0,8
tick,0x7ffdb840feb4,298742176,0,0x0,8
tick,0x7ffdb840feb4,298757182,0,0x0,8
tick,0x7ffdb840feb4,298773171,0,0x0,8
tick,0x7ffdb840feb4,298789201,0,0x0,8
tick,0x7ffdb840feb4,298805172,0,0x0,8
tick,0x7ffdb840feb4,298821182,0,0x0,8
tick,0x7ffdb840feb4,298837207,0,0x0,8
tick,0x7ffdb840feb4,298853210,0,0x0,8
tick,0x7ffdb840feb4,298869220,0,0x0,8
tick,0x7ffdb840feb4,298885205,0,0x0,8
tick,0x7ffdb840feb4,298901201,0,0x0,8
tick,0x7ffdb840feb4,298916465,0,0x0,8
tick,0x7ffdb840feb4,298932027,0,0x0,8
tick,0x7ffdb840feb4,298947228,0,0x0,8
tick,0x7ffdb840feb4,298963206,0,0x0,8
tick,0x7ffdb840feb4,298979038,0,0x0,8
tick,0x7ffdb840feb4,298994215,0,0x0,8
tick,0x7ffdb840feb4,299009213,0,0x0,8
tick,0x7ffdb840feb4,299025216,0,0x0,8
tick,0x7ffdb840feb4,299041043,0,0x0,8
tick,0x7ffdb840feb4,299057043,0,0x0,8
tick,0x7ffdb840feb4,299072224,0,0x0,8
tick,0x7ffdb840feb4,299087221,0,0x0,8
tick,0x7ffdb840feb4,299102680,0,0x0,8
tick,0x7ffdb840feb4,299118045,0,0x0,8
tick,0x7ffdb840feb4,299133696,0,0x0,8
tick,0x7ffdb840feb4,299150164,0,0x0,8
tick,0x7ffdb840feb4,299165687,0,0x0,8
tick,0x7ffdb840feb4,299181041,0,0x0,8
tick,0x7ffdb840feb4,299196271,0,0x0,8
tick,0x7ffdb840feb4,299211703,0,0x0,8
tick,0x7ffdb840feb4,299226988,0,0x0,8
tick,0x7ffdb840feb4,299242213,0,0x0,8
tick,0x7ffdb840feb4,299258213,0,0x0,8
tick,0x7ffdb840feb4,299274236,0,0x0,8
tick,0x7ffdb840feb4,299289067,0,0x0,8
tick,0x7ffdb840feb4,299304185,0,0x0,8
tick,0x7ffdb840feb4,299320069,0,0x0,8
tick,0x7ffdb840feb4,299336070,0,0x0,8
tick,0x7ffdb840feb4,299351072,0,0x0,8
tick,0x7ffdb840feb4,299366359,0,0x0,8
tick,0x7ffdb840feb4,299381709,0,0x0,8
tick,0x7ffdb840feb4,299396847,0,0x0,8
tick,0x7ffdb840feb4,299412249,0,0x0,8
tick,0x7ffdb840feb4,299427848,0,0x0,8
tick,0x7ffdb840feb4,299443171,0,0x0,8
tick,0x7ffdb840feb4,299459098,0,0x0,8
tick,0x7ffdb840feb4,299474541,0,0x0,8
tick,0x7ffdb840feb4,299489083,0,0x0,8
tick,0x7ffdb840feb4,299504269,0,0x0,8
tick,0x7ffdb840feb4,299519860,0,0x0,8
tick,0x7ffdb840feb4,299535233,0,0x0,8
tick,0x7ffdb840feb4,299550756,0,0x0,8
tick,0x7ffdb840feb4,299566330,0,0x0,8
tick,0x7ffdb840feb4,299581275,0,0x0,8
tick,0x7ffdb840feb4,299596276,0,0x0,8
tick,0x7ffdb840feb4,299611799,0,0x0,8
tick,0x7ffdb840feb4,299626795,0,0x0,8
tick,0x7ffdb840feb4,299642791,0,0x0,8
tick,0x7ffdb840feb4,299657907,0,0x0,8
tick,0x7ffdb840feb4,299672902,0,0x0,8
tick,0x7ffdb840feb4,299688109,0,0x0,8
tick,0x7ffdb840feb4,299703310,0,0x0,8
tick,0x7ffdb840feb4,299719113,0,0x0,8
tick,0x7ffdb840feb4,299734781,0,0x0,8
tick,0x7ffdb840feb4,299750780,0,0x0,8
tick,0x7ffdb840feb4,299766368,0,0x0,8
tick,0x7ffdb840feb4,299782022,0,0x0,8
tick,0x7ffdb840feb4,299797665,0,0x0,8
tick,0x7ffdb840feb4,299813303,0,0x0,8
tick,0x7ffdb840feb4,299828341,0,0x0,8
tick,0x7ffdb840feb4,299843329,0,0x0,8
tick,0x7ffdb840feb4,299858926,0,0x0,8
tick,0x7ffdb840feb4,299873726,0,0x0,8
tick,0x7ffdb840feb4,299889148,0,0x0,8
tick,0x7ffdb840feb4,299904300,0,0x0,8
tick,0x7ffdb840feb4,299920342,0,0x0,8
tick,0x7ffdb840feb4,299935785,0,0x0,8
tick,0x7ffdb840feb4,299951779,0,0x0,8
tick,0x7ffdb840feb4,299967304,0,0x0,8
tick,0x7ffdb840feb4,299983282,0,0x0,8
tick,0x7ffdb840feb4,299999155,0,0x0,8
tick,0x7ffdb840feb4,300014298,0,0x0,8
tick,0x7ffdb840feb4,300030295,0,0x0,8
tick,0x7ffdb840feb4,300045428,0,0x0,8
tick,0x7ffdb840feb4,300060334,0,0x0,8
tick,0x7ffdb840feb4,300076165,0,0x0,8
tick,0x7ffdb840feb4,300091327,0,0x0,8
tick,0x7ffdb840feb4,300107169,0,0x0,8
tick,0x7ffdb840feb4,300122924,0,0x0,8
tick,0x7ffdb840feb4,300138160,0,0x0,8
tick,0x7ffdb840feb4,300153716,0,0x0,8
tick,0x7ffdb840feb4,300169170,0,0x0,8
tick,0x7ffdb840feb4,300184030,0,0x0,8
tick,0x7ffdb840feb4,300199171,0,0x0,8
tick,0x7ffdb840feb4,300214669,0,0x0,8
tick,0x7ffdb840feb4,300230342,0,0x0,8
tick,0x7ffdb840feb4,300245498,0,0x0,8
tick,0x7ffdb840feb4,300260684,0,0x0,8
tick,0x7ffdb840feb4,300276541,0,0x0,8
tick,0x7ffdb840feb4,300291883,0,0x0,8
tick,0x7ffdb840feb4,300307039,0,0x0,8
tick,0x7ffdb840feb4,300323048,0,0x0,8
tick,0x7ffdb840feb4,300338185,0,0x0,8
tick,0x7ffdb840feb4,300353363,0,0x0,8
tick,0x7ffdb840feb4,300369191,0,0x0,8
tick,0x7ffdb840feb4,300385033,0,0x0,8
tick,0x7ffdb840feb4,300399843,0,0x0,8
tick,0x7ffdb840feb4,300414846,0,0x0,8
tick,0x7ffdb840feb4,300430372,0,0x0,8
tick,0x7ffdb840feb4,300445865,0,0x0,8
tick,0x7ffdb840feb4,300461686,0,0x0,8
tick,0x7ffdb840feb4,300477399,0,0x0,8
tick,0x7ffdb840feb4,300493382,0,0x0,8
tick,0x7ffdb840feb4,300509390,0,0x0,8
tick,0x7ffdb840feb4,300525390,0,0x0,8
tick,0x7ffdb840feb4,300541383,0,0x0,8
tick,0x7ffdb840feb4,300557391,0,0x0,8
tick,0x7ffdb840feb4,300573389,0,0x0,8
tick,0x7ffdb840feb4,300589417,0,0x0,8
tick,0x7ffdb840feb4,300605395,0,0x0,8
tick,0x7ffdb840feb4,300621408,0,0x0,8
tick,0x7ffdb840feb4,300637397,0,0x0,8
tick,0x7ffdb840feb4,300653007,0,0x0,8
tick,0x7ffdb840feb4,300669033,0,0x0,8
tick,0x7ffdb840feb4,300684414,0,0x0,8
tick,0x7ffdb840feb4,300700418,0,0x0,8
tick,0x7ffdb840feb4,300716414,0,0x0,8
tick,0x7ffdb840feb4,300732408,0,0x0,8
tick,0x7ffdb840feb4,300748037,0,0x0,8
tick,0x7ffdb840feb4,300763418,0,0x0,8
tick,0x7ffdb840feb4,300779246,0,0x0,8
tick,0x7ffdb840feb4,300794418,0,0x0,8
tick,0x7ffdb840feb4,300810421,0,0x0,8
tick,0x7ffdb840feb4,300826021,0,0x0,8
tick,0x7ffdb840feb4,300842036,0,0x0,8
tick,0x7ffdb840feb4,300858027,0,0x0,8
tick,0x7ffdb840feb4,300873387,0,0x0,8
tick,0x7ffdb840feb4,300888241,0,0x0,8
tick,0x7ffdb840feb4,300903432,0,0x0,8
tick,0x7ffdb840feb4,300919259,0,0x0,8
tick,0x7ffdb840feb4,300934440,0,0x0,8
tick,0x7ffdb840feb4,300950290,0,0x0,8
tick,0x7ffdb840feb4,300965366,0,0x0,8
tick,0x7ffdb840feb4,300981438,0,0x0,8
tick,0x7ffdb840feb4,300996345,0,0x0,8
tick,0x7ffdb840feb4,301011980,0,0x0,8
tick,0x7ffdb840feb4,301027280,0,0x0,8
tick,0x7ffdb840feb4,301042283,0,0x0,8
tick,0x7ffdb840feb4,301057799,0,0x0,8
tick,0x7ffdb840feb4,301073300,0,0x0,8
tick,0x7ffdb840feb4,301088276,0,0x0,8
tick,0x7ffdb840feb4,301104308,0,0x0,8
tick,0x7ffdb840feb4,301119278,0,0x0,8
tick,0x7ffdb840feb4,301134286,0,0x0,8
tick,0x7ffdb840feb4,301150293,0,0x0,8
tick,0x7ffdb840feb4,301166387,0,0x0,8
tick,0x7ffdb840feb4,301181461,0,0x0,8
tick,0x7ffdb840feb4,301196342,0,0x0,8
tick,0x7ffdb840feb4,301212355,0,0x0,8
tick,0x7ffdb840feb4,301228369,0,0x0,8
tick,0x7ffdb840feb4,301243827,0,0x0,8
tick,0x7ffdb840feb4,301259370,0,0x0,8
tick,0x7ffdb840feb4,301275319,0,0x0,8
tick,0x7ffdb840feb4,301290311,0,0x0,8
tick,0x7ffdb840feb4,301306362,0,0x0,8
tick,0x7ffdb840feb4,301321753,0,0x0,8
tick,0x7ffdb840feb4,301337748,0,0x0,8
tick,0x7ffdb840feb4,301352771,0,0x0,8
tick,0x7ffdb840feb4,301368373,0,0x0,8
tick,0x7ffdb840feb4,301384035,0,0x0,8
tick,0x7ffdb840feb4,301399848,0,0x0,8
tick,0x7ffdb840feb4,301415871,0,0x0,8
tick,0x7ffdb840feb4,301430492,0,0x0,8
tick,0x7ffdb840feb4,301445856,0,0x0,8
tick,0x7ffdb840feb4,301461876,0,0x0,8
tick,0x7ffdb840feb4,301477503,0,0x0,8
tick,0x7ffdb840feb4,301492501,0,0x0,8
tick,0x7ffdb840feb4,301507865,0,0x0,8
tick,0x7ffdb840feb4,301523045,0,0x0,8
tick,0x7ffdb840feb4,301538758,0,0x0,8
tick,0x7ffdb840feb4,301554863,0,0x0,8
tick,0x7ffdb840feb4,301570867,0,0x0,8
tick,0x7ffdb840feb4,301586518,0,0x0,8
tick,0x7ffdb840feb4,301602541,0,0x0,8
tick,0x7ffdb840feb4,301618562,0,0x0,8
tick,0x7ffdb840feb4,301634592,0,0x0,8
tick,0x7ffdb840feb4,301650554,0,0x0,8
tick,0x7ffdb840feb4,301666634,0,0x0,8
tick,0x7ffdb840feb4,301682568,0,0x0,8
tick,0x7ffdb840feb4,301698565,0,0x0,8
tick,0x7ffdb840feb4,301714560,0,0x0,8
tick,0x7ffdb840feb4,301730557,0,0x0,8
tick,0x7ffdb840feb4,301746574,0,0x0,8
tick,0x7ffdb840feb4,301761579,0,0x0,8
tick,0x7ffdb840feb4,301776579,0,0x0,8
tick,0x7ffdb840feb4,301792580,0,0x0,8
tick,0x7ffdb840feb4,301808552,0,0x0,8
tick,0x7ffdb840feb4,301823542,0,0x0,8
tick,0x7ffdb840feb4,301839389,0,0x0,8
tick,0x7ffdb840feb4,301855395,0,0x0,8
tick,0x7ffdb840feb4,301871386,0,0x0,8
tick,0x7ffdb840feb4,301887414,0,0x0,8
tick,0x7ffdb840feb4,301903415,0,0x0,8
tick,0x7ffdb840feb4,301919412,0,0x0,8
tick,0x7ffdb840feb4,301935406,0,0x0,8
tick,0x7ffdb840feb4,301951398,0,0x0,8
tick,0x7ffdb840feb4,301967405,0,0x0,8
tick,0x7ffdb840feb4,301982566,0,0x0,8
tick,0x7ffdb840feb4,301998397,0,0x0,8
tick,0x7ffdb840feb4,302013576,0,0x0,8
tick,0x7ffdb840feb4,302029595,0,0x0,8
tick,0x7ffdb840feb4,302045580,0,0x0,8
tick,0x7ffdb840feb4,302061571,0,0x0,8
tick,0x7ffdb840feb4,302077585,0,0x0,8
tick,0x7ffdb840feb4,302093574,0,0x0,8
tick,0x7ffdb840feb4,302109594,0,0x0,8
tick,0x7ffdb840feb4,302125611,0,0x0,8
tick,0x7ffdb840feb4,302141598,0,0x0,8
tick,0x7ffdb840feb4,302157610,0,0x0,8
tick,0x7ffdb840feb4,302172591,0,0x0,8
tick,0x7ffdb840feb4,302187607,0,0x0,8
tick,0x7ffdb840feb4,302203597,0,0x0,8
tick,0x7ffdb840feb4,302219600,0,0x0,8
tick,0x7ffdb840feb4,302235489,0,0x0,8
tick,0x7ffdb840feb4,302250420,0,0x0,8
tick,0x7ffdb840feb4,302266383,0,0x0,8
tick,0x7ffdb840feb4,302281449,0,0x0,8
tick,0x7ffdb840feb4,302297424,0,0x0,8
tick,0x7ffdb840feb4,302312409,0,0x0,8
tick,0x7ffdb840feb4,302327600,0,0x0,8
tick,0x7ffdb840feb4,302343448,0,0x0,8
tick,0x7ffdb840feb4,302358449,0,0x0,8
tick,0x7ffdb840feb4,302373601,0,0x0,8
tick,0x7ffdb840feb4,302389607,0,0x0,8
tick,0x7ffdb840feb4,302404406,0,0x0,8
tick,0x7ffdb840feb4,302419640,0,0x0,8
tick,0x7ffdb840feb4,302435637,0,0x0,8
tick,0x7ffdb840feb4,302450653,0,0x0,8
tick,0x7ffdb840feb4,302466650,0,0x0,8
tick,0x7ffdb840feb4,302481651,0,0x0,8
tick,0x7ffdb840feb4,302496634,0,0x0,8
tick,0x7ffdb840feb4,302512640,0,0x0,8
tick,0x7ffdb840feb4,302527809,0,0x0,8
tick,0x7ffdb840feb4,302542644,0,0x0,8
tick,0x7ffdb840feb4,302557882,0,0x0,8
tick,0x7ffdb840feb4,302572638,0,0x0,8
tick,0x7ffdb840feb4,302588050,0,0x0,8
tick,0x7ffdb840feb4,302603048,0,0x0,8
tick,0x7ffdb840feb4,302617914,0,0x0,8
tick,0x7ffdb840feb4,302633172,0,0x0,8
tick,0x7ffdb840feb4,302648652,0,0x0,8
tick,0x7ffdb840feb4,302664670,0,0x0,8
tick,0x7ffdb840feb4,302679971,0,0x0,8
tick,0x7ffdb840feb4,302695661,0,0x0,8
tick,0x7ffdb840feb4,302710974,0,0x0,8
tick,0x7ffdb840feb4,302725963,0,0x0,8
tick,0x7ffdb840feb4,302741625,0,0x0,8
tick,0x7ffdb840feb4,302757432,0,0x0,8
tick,0x7ffdb840feb4,302773438,0,0x0,8
tick,0x7ffdb840feb4,302789479,0,0x0,8
tick,0x7ffdb840feb4,302805304,0,0x0,8
tick,0x7ffdb840feb4,302820482,0,0x0,8
tick,0x7ffdb840feb4,302835491,0,0x0,8
tick,0x7ffdb840feb4,302851432,0,0x0,8
tick,0x7ffdb840feb4,302866672,0,0x0,8
tick,0x7ffdb840feb4,302881629,0,0x0,8
tick,0x7ffdb840feb4,302897627,0,0x0,8
tick,0x7ffdb840feb4,302912671,0,0x0,8
tick,0x7ffdb840feb4,302927635,0,0x0,8
tick,0x7ffdb840feb4,302943674,0,0x0,8
tick,0x7ffdb840feb4,302959518,0,0x0,8
tick,0x7ffdb840feb4,302974679,0,0x0,8
tick,0x7ffdb840feb4,302990520,0,0x0,8
tick,0x7ffdb840feb4,303005566,0,0x0,8
tick,0x7ffdb840feb4,303021680,0,0x0,8
tick,0x7ffdb840feb4,303037688,0,0x0,8
tick,0x7ffdb840feb4,303053264,0,0x0,8
tick,0x7ffdb840feb4,303069290,0,0x0,8
tick,0x7ffdb840feb4,303084400,0,0x0,8
tick,0x7ffdb840feb4,303099700,0,0x0,8
tick,0x7ffdb840feb4,303115374,0,0x0,8
tick,0x7ffdb840feb4,303130519,0,0x0,8
tick,0x7ffdb840feb4,303145701,0,0x0,8
tick,0x7ffdb840feb4,303161712,0,0x0,8
tick,0x7ffdb840feb4,303177704,0,0x0,8
tick,0x7ffdb840feb4,303193203,0,0x0,8
tick,0x7ffdb840feb4,303208537,0,0x0,8
tick,0x7ffdb840feb4,303223708,0,0x0,8
tick,0x7ffdb840feb4,303239536,0,0x0,8
tick,0x7ffdb840feb4,303255236,0,0x0,8
tick,0x7ffdb840feb4,303271243,0,0x0,8
tick,0x7ffdb840feb4,303286720,0,0x0,8
tick,0x7ffdb840feb4,303301945,0,0x0,8
tick,0x7ffdb840feb4,303317727,0,0x0,8
tick,0x7ffdb840feb4,303333050,0,0x0,8
tick,0x7ffdb840feb4,303348726,0,0x0,8
tick,0x7ffdb840feb4,303363732,0,0x0,8
tick,0x7ffdb840feb4,303379551,0,0x0,8
tick,0x7ffdb840feb4,303394450,0,0x0,8
tick,0x7ffdb840feb4,303409736,0,0x0,8
tick,0x7ffdb840feb4,303424937,0,0x0,8
tick,0x7ffdb840feb4,303440733,0,0x0,8
tick,0x7ffdb840feb4,303455752,0,0x0,8
tick,0x7ffdb840feb4,303471642,0,0x0,8
tick,0x7ffdb840feb4,303487599,0,0x0,8
tick,0x7ffdb840feb4,303503576,0,0x0,8
tick,0x7ffdb840feb4,303518590,0,0x0,8
tick,0x7ffdb840feb4,303533610,0,0x0,8
tick,0x7ffdb840feb4,303549609,0,0x0,8
tick,0x7ffdb840feb4,303565623,0,0x0,8
tick,0x7ffdb840feb4,303581599,0,0x0,8
tick,0x7ffdb840feb4,303597606,0,0x0,8
tick,0x7ffdb840feb4,303613577,0,0x0,8
tick,0x7ffdb840feb4,303629608,0,0x0,8
tick,0x7ffdb840feb4,303645095,0,0x0,8
tick,0x7ffdb840feb4,303660596,0,0x0,8
tick,0x7ffdb840feb4,303675593,0,0x0,8
tick,0x7ffdb840feb4,303691600,0,0x0,8
tick,0x7ffdb840feb4,303707604,0,0x0,8
tick,0x7ffdb840feb4,303723595,0,0x0,8
tick,0x7ffdb840feb4,303739596,0,0x0,8
tick,0x7ffdb840feb4,303755623,0,0x0,8
tick,0x7ffdb840feb4,303770776,0,0x0,8
tick,0x7ffdb840feb4,303786052,0,0x0,8
tick,0x7ffdb840feb4,303801789,0,0x0,8
tick,0x7ffdb840feb4,303816803,0,0x0,8
tick,0x7ffdb840feb4,303832021,0,0x0,8
tick,0x7ffdb840feb4,303847412,0,0x0,8
tick,0x7ffdb840feb4,303862789,0,0x0,8
tick,0x7ffdb840feb4,303878482,0,0x0,8
tick,0x7ffdb840feb4,303893793,0,0x0,8
tick,0x7ffdb840feb4,303909621,0,0x0,8
tick,0x7ffdb840feb4,303924623,0,0x0,8
tick,0x7ffdb840feb4,303939795,0,0x0,8
tick,0x7ffdb840feb4,303955486,0,0x0,8
tick,0x7ffdb840feb4,303970631,0,0x0,8
tick,0x7ffdb840feb4,303986634,0,0x0,8
tick,0x7ffdb840feb4,304001801,0,0x0,8
tick,0x7ffdb840feb4,304016629,0,0x0,8
tick,0x7ffdb840feb4,304031805,0,0x0,8
tick,0x7ffdb840feb4,304047815,0,0x0,8
tick,0x7ffdb840feb4,304062817,0,0x0,8
tick,0x7ffdb840feb4,304078840,0,0x0,8
tick,0x7ffdb840feb4,304094829,0,0x0,8
tick,0x7ffdb840feb4,304110639,0,0x0,8
tick,0x7ffdb840feb4,304125823,0,0x0,8
tick,0x7ffdb840feb4,304140825,0,0x0,8
tick,0x7ffdb840feb4,304155837,0,0x0,8
tick,0x7ffdb840feb4,304171828,0,0x0,8
tick,0x7ffdb840feb4,304186829,0,0x0,8
tick,0x7ffdb840feb4,304202846,0,0x0,8
tick,0x7ffdb840feb4,304218841,0,0x0,8
tick,0x7ffdb840feb4,304233827,0,0x0,8
tick,0x7ffdb840feb4,304249831,0,0x0,8
tick,0x7ffdb840feb4,304264802,0,0x0,8
tick,0x7ffdb840feb4,304280840,0,0x0,8
tick,0x7ffdb840feb4,304296682,0,0x0,8
tick,0x7ffdb840feb4,304311853,0,0x0,8
tick,0x7ffdb840feb4,304327859,0,0x0,8
tick,0x7ffdb840feb4,304342702,0,0x0,8
tick,0x7ffdb840feb4,304357861,0,0x0,8
tick,0x7ffdb840feb4,304372853,0,0x0,8
tick,0x7ffdb840feb4,304388862,0,0x0,8
tick,0x7ffdb840feb4,304404877,0,0x0,8
tick,0x7ffdb840feb4,304420864,0,0x0,8
tick,0x7ffdb840feb4,304436074,0,0x0,8
tick,0x7ffdb840feb4,304451864,0,0x0,8
tick,0x7ffdb840feb4,304466862,0,0x0,8
tick,0x7ffdb840feb4,304482875,0,0x0,8
tick,0x7ffdb840feb4,304498881,0,0x0,8
tick,0x7ffdb840feb4,304513532,0,0x0,8
tick,0x7ffdb840feb4,304528704,0,0x0,8
tick,0x7ffdb840feb4,304543863,0,0x0,8
tick,0x7ffdb840feb4,304559685,0,0x0,8
tick,0x7ffdb840feb4,304574887,0,0x0,8
tick,0x7ffdb840feb4,304589901,0,0x0,8
tick,0x7ffdb840feb4,304605890,0,0x0,8
tick,0x7ffdb840feb4,304620908,0,0x0,8
tick,0x7ffdb840feb4,304635808,0,0x0,8
tick,0x7ffdb840feb4,304651892,0,0x0,8
tick,0x7ffdb840feb4,304667893,0,0x0,8
tick,0x7ffdb840feb4,304683907,0,0x0,8
tick,0x7ffdb840feb4,304699899,0,0x0,8
tick,0x7ffdb840feb4,304715903,0,0x0,8
tick,0x7ffdb840feb4,304731906,0,0x0,8
tick,0x7ffdb840feb4,304747523,0,0x0,8
tick,0x7ffdb840feb4,304762904,0,0x0,8
tick,0x7ffdb840feb4,304777906,0,0x0,8
tick,0x7ffdb840feb4,304793145,0,0x0,8
tick,0x7ffdb840feb4,304808725,0,0x0,8
tick,0x7ffdb840feb4,304823921,0,0x0,8
tick,0x7ffdb840feb4,304839736,0,0x0,8
tick,0x7ffdb840feb4,304854910,0,0x0,8
tick,0x7ffdb840feb4,304869753,0,0x0,8
tick,0x7ffdb840feb4,304884917,0,0x0,8
tick,0x7ffdb840feb4,304900917,0,0x0,8
tick,0x7ffdb840feb4,304916396,0,0x0,8
tick,0x7ffdb840feb4,304931913,0,0x0,8
tick,0x7ffdb840feb4,304947734,0,0x0,8
tick,0x7ffdb840feb4,304962929,0,0x0,8
tick,0x7ffdb840feb4,304978925,0,0x0,8
tick,0x7ffdb840feb4,304994523,0,0x0,8
tick,0x7ffdb840feb4,305009743,0,0x0,8
tick,0x7ffdb840feb4,305024926,0,0x0,8
tick,0x7ffdb840feb4,305040716,0,0x0,8
tick,0x7ffdb840feb4,305056767,0,0x0,8
tick,0x7ffdb840feb4,305072770,0,0x0,8
tick,0x7ffdb840feb4,305088751,0,0x0,8
tick,0x7ffdb840feb4,305103936,0,0x0,8
tick,0x7ffdb840feb4,305118772,0,0x0,8
tick,0x7ffdb840feb4,305133952,0,0x0,8
tick,0x7ffdb840feb4,305149959,0,0x0,8
tick,0x7ffdb840feb4,305165000,0,0x0,8
tick,0x7ffdb840feb4,305180771,0,0x0,8
tick,0x7ffdb840feb4,305196528,0,0x0,8
tick,0x7ffdb840feb4,305211962,0,0x0,8
tick,0x7ffdb840feb4,305227967,0,0x0,8
tick,0x7ffdb840feb4,305243984,0,0x0,8
tick,0x7ffdb840feb4,305259270,0,0x0,8
tick,0x7ffdb840feb4,305274565,0,0x0,8
tick,0x7ffdb840feb4,305289781,0,0x0,8
tick,0x7ffdb840feb4,305304958,0,0x0,8
tick,0x7ffdb840feb4,305319789,0,0x0,8
tick,0x7ffdb840feb4,305334965,0,0x0,8
tick,0x7ffdb840feb4,305350983,0,0x0,8
tick,0x7ffdb840feb4,305366959,0,0x0,8
tick,0x7ffdb840feb4,305383065,0,0x0,8
tick,0x7ffdb840feb4,305398883,0,0x0,8
tick,0x7ffdb840feb4,305414857,0,0x0,8
tick,0x7ffdb840feb4,305430288,0,0x0,8
tick,0x7ffdb840feb4,305445892,0,0x0,8
tick,0x7ffdb840feb4,305460808,0,0x0,8
tick,0x7ffdb840feb4,305475600,0,0x0,8
tick,0x7ffdb840feb4,305490811,0,0x0,8
tick,0x7ffdb840feb4,305505979,0,0x0,8
tick,0x7ffdb840feb4,305521555,0,0x0,8
tick,0x7ffdb840feb4,305537311,0,0x0,8
tick,0x7ffdb840feb4,305552986,0,0x0,8
tick,0x7ffdb840feb4,305568970,0,0x0,8
tick,0x7ffdb840feb4,305585056,0,0x0,8
tick,0x7ffdb840feb4,305600836,0,0x0,8
tick,0x7ffdb840feb4,305616019,0,0x0,8
tick,0x7ffdb840feb4,305631357,0,0x0,8
tick,0x7ffdb840feb4,305646914,0,0x0,8
tick,0x7ffdb840feb4,305662194,0,0x0,8
tick,0x7ffdb840feb4,305677837,0,0x0,8
tick,0x7ffdb840feb4,305693001,0,0x0,8
tick,0x7ffdb840feb4,305708007,0,0x0,8
tick,0x7ffdb840feb4,305724006,0,0x0,8
tick,0x7ffdb840feb4,305739020,0,0x0,8
tick,0x7ffdb840feb4,305754607,0,0x0,8
tick,0x7ffdb840feb4,305769836,0,0x0,8
tick,0x7ffdb840feb4,305785053,0,0x0,8
tick,0x7ffdb840feb4,305800844,0,0x0,8
tick,0x7ffdb840feb4,305815851,0,0x0,8
tick,0x7ffdb840feb4,305831847,0,0x0,8
tick,0x7ffdb840feb4,305847018,0,0x0,8
tick,0x7ffdb840feb4,305862551,0,0x0,8
tick,0x7ffdb840feb4,305878562,0,0x0,8
tick,0x7ffdb840feb4,305893027,0,0x0,8
tick,0x7ffdb840feb4,305908852,0,0x0,8
tick,0x7ffdb840feb4,305924865,0,0x0,8
tick,0x7ffdb840feb4,305940627,0,0x0,8
tick,0x7ffdb840feb4,305955552,0,0x0,8
tick,0x7ffdb840feb4,305971033,0,0x0,8
tick,0x7ffdb840feb4,305986565,0,0x0,8
tick,0x7ffdb840feb4,306001838,0,0x0,8
tick,0x7ffdb840feb4,306017844,0,0x0,8
tick,0x7ffdb840feb4,306033072,0,0x0,8
tick,0x7ffdb840feb4,306048725,0,0x0,8
tick,0x7ffdb840feb4,306064057,0,0x0,8
tick,0x7ffdb840feb4,306079884,0,0x0,8
tick,0x7ffdb840feb4,306094622,0,0x0,8
tick,0x7ffdb840feb4,306109895,0,0x0,8
tick,0x7ffdb840feb4,306125886,0,0x0,8
tick,0x7ffdb840feb4,306141061,0,0x0,8
tick,0x7ffdb840feb4,306156580,0,0x0,8
tick,0x7ffdb840feb4,306172058,0,0x0,8
tick,0x7ffdb840feb4,306187198,0,0x0,8
tick,0x7ffdb840feb4,306202066,0,0x0,8
tick,0x7ffdb840feb4,306218069,0,0x0,8
tick,0x7ffdb840feb4,306233611,0,0x0,8
tick,0x7ffdb840feb4,306249731,0,0x0,8
tick,0x7ffdb840feb4,306265083,0,0x0,8
tick,0x7ffdb840feb4,306280903,0,0x0,8
tick,0x7ffdb840feb4,306296905,0,0x0,8
tick,0x7ffdb840feb4,306312080,0,0x0,8
tick,0x7ffdb840feb4,306328133,0,0x0,8
tick,0x7ffdb840feb4,306343081,0,0x0,8
tick,0x7ffdb840feb4,306358924,0,0x0,8
tick,0x7ffdb840feb4,306374100,0,0x0,8
tick,0x7ffdb840feb4,306389919,0,0x0,8
tick,0x7ffdb840feb4,306405097,0,0x0,8
tick,0x7ffdb840feb4,306421095,0,0x0,8
tick,0x7ffdb840feb4,306436097,0,0x0,8
tick,0x7ffdb840feb4,306452096,0,0x0,8
tick,0x7ffdb840feb4,306467932,0,0x0,8
tick,0x7ffdb840feb4,306483934,0,0x0,8
tick,0x7ffdb840feb4,306499931,0,0x0,8
tick,0x7ffdb840feb4,306515110,0,0x0,8
tick,0x7ffdb840feb4,306531107,0,0x0,8
tick,0x7ffdb840feb4,306546118,0,0x0,8
tick,0x7ffdb840feb4,306562119,0,0x0,8
tick,0x7ffdb840feb4,306577950,0,0x0,8
tick,0x7ffdb840feb4,306593113,0,0x0,8
tick,0x7ffdb840feb4,306609117,0,0x0,8
tick,0x7ffdb840feb4,306624118,0,0x0,8
tick,0x7ffdb840feb4,306639747,0,0x0,8
tick,0x7ffdb840feb4,306655121,0,0x0,8
tick,0x7ffdb840feb4,306670927,0,0x0,8
tick,0x7ffdb840feb4,306686138,0,0x0,8
tick,0x7ffdb840feb4,306702127,0,0x0,8
tick,0x7ffdb840feb4,306717134,0,0x0,8
tick,0x7ffdb840feb4,306733141,0,0x0,8
tick,0x7ffdb840feb4,306749114,0,0x0,8
tick,0x7ffdb840feb4,306765115,0,0x0,8
tick,0x7ffdb840feb4,306781142,0,0x0,8
tick,0x7ffdb840feb4,306796161,0,0x0,8
tick,0x7ffdb840feb4,306812130,0,0x0,8
tick,0x7ffdb840feb4,306827143,0,0x0,8
tick,0x7ffdb840feb4,306843149,0,0x0,8
tick,0x7ffdb840feb4,306859152,0,0x0,8
tick,0x7ffdb840feb4,306874379,0,0x0,8
tick,0x7ffdb840feb4,306889968,0,0x0,8
tick,0x7ffdb840feb4,306905961,0,0x0,8
tick,0x7ffdb840feb4,306921152,0,0x0,8
tick,0x7ffdb840feb4,306936306,0,0x0,8
tick,0x7ffdb840feb4,306952304,0,0x0,8
tick,0x7ffdb840feb4,306968133,0,0x0,8
tick,0x7ffdb840feb4,306983066,0,0x0,8
tick,0x7ffdb840feb4,306998617,0,0x0,8
tick,0x7ffdb840feb4,307013907,0,0x0,8
tick,0x7ffdb840feb4,307029984,0,0x0,8
tick,0x7ffdb840feb4,307045153,0,0x0,8
tick,0x7ffdb840feb4,307060993,0,0x0,8
tick,0x7ffdb840feb4,307076610,0,0x0,8
tick,0x7ffdb840feb4,307092167,0,0x0,8
tick,0x7ffdb840feb4,307107398,0,0x0,8
tick,0x7ffdb840feb4,307123111,0,0x0,8
tick,0x7ffdb840feb4,307138568,0,0x0,8
tick,0x7ffdb840feb4,307154262,0,0x0,8
tick,0x7ffdb840feb4,307169170,0,0x0,8
tick,0x7ffdb840feb4,307184186,0,0x0,8
tick,0x7ffdb840feb4,307200012,0,0x0,8
tick,0x7ffdb840feb4,307215191,0,0x0,8
tick,0x7ffdb840feb4,307231015,0,0x0,8
tick,0x7ffdb840feb4,307247018,0,0x0,8
tick,0x7ffdb840feb4,307262191,0,0x0,8
tick,0x7ffdb840feb4,307277964,0,0x0,8
tick,0x7ffdb840feb4,307293190,0,0x0,8
tick,0x7ffdb840feb4,307309020,0,0x0,8
tick,0x7ffdb840feb4,307325020,0,0x0,8
tick,0x7ffdb840feb4,307340347,0,0x0,8
tick,0x7ffdb840feb4,307355633,0,0x0,8
tick,0x7ffdb840feb4,307371145,0,0x0,8
tick,0x7ffdb840feb4,307387068,0,0x0,8
tick,0x7ffdb840feb4,307402208,0,0x0,8
tick,0x7ffdb840feb4,307417880,0,0x0,8
tick,0x7ffdb840feb4,307433073,0,0x0,8
tick,0x7ffdb840feb4,307449032,0,0x0,8
tick,0x7ffdb840feb4,307463672,0,0x0,8
tick,0x7ffdb840feb4,307479043,0,0x0,8
tick,0x7ffdb840feb4,307494218,0,0x0,8
tick,0x7ffdb840feb4,307510044,0,0x0,8
tick,0x7ffdb840feb4,307526055,0,0x0,8
tick,0x7ffdb840feb4,307541214,0,0x0,8
tick,0x7ffdb840feb4,307556652,0,0x0,8
tick,0x7ffdb840feb4,307571147,0,0x0,8
tick,0x7ffdb840feb4,307587154,0,0x0,8
tick,0x7ffdb840feb4,307603247,0,0x0,8
tick,0x7ffdb840feb4,307619252,0,0x0,8
tick,0x7ffdb840feb4,307634670,0,0x0,8
tick,0x7ffdb840feb4,307650032,0,0x0,8
tick,0x7ffdb840feb4,307665254,0,0x0,8
tick,0x7ffdb840feb4,307681091,0,0x0,8
tick,0x7ffdb840feb4,307696281,0,0x0,8
tick,0x7ffdb840feb4,307712320,0,0x0,8
tick,0x7ffdb840feb4,307727284,0,0x0,8
tick,0x7ffdb840feb4,307743284,0,0x0,8
tick,0x7ffdb840feb4,307759293,0,0x0,8
tick,0x7ffdb840feb4,307774437,0,0x0,8
tick,0x7ffdb840feb4,307790071,0,0x0,8
tick,0x7ffdb840feb4,307806044,0,0x0,8
tick,0x7ffdb840feb4,307821254,0,0x0,8
tick,0x7ffdb840feb4,307836654,0,0x0,8
tick,0x7ffdb840feb4,307852299,0,0x0,8
tick,0x7ffdb840feb4,307867853,0,0x0,8
tick,0x7ffdb840feb4,307883076,0,0x0,8
tick,0x7ffdb840feb4,307899072,0,0x0,8
tick,0x7ffdb840feb4,307914663,0,0x0,8
tick,0x7ffdb840feb4,307930081,0,0x0,8
tick,0x7ffdb840feb4,307945087,0,0x0,8
tick,0x7ffdb840feb4,307961102,0,0x0,8
tick,0x7ffdb840feb4,307975770,0,0x0,8
tick,0x7ffdb840feb4,307991903,0,0x0,8
tick,0x7ffdb840feb4,308007064,0,0x0,8
tick,0x7ffdb840feb4,308022275,0,0x0,8
tick,0x7ffdb840feb4,308037651,0,0x0,8
tick,0x7ffdb840feb4,308053285,0,0x0,8
tick,0x7ffdb840feb4,308068463,0,0x0,8
tick,0x7ffdb840feb4,308084453,0,0x0,8
tick,0x7ffdb840feb4,308100123,0,0x0,8
tick,0x7ffdb840feb4,308115282,0,0x0,8
tick,0x7ffdb840feb4,308130118,0,0x0,8
tick,0x7ffdb840feb4,308146124,0,0x0,8
tick,0x7ffdb840feb4,308161126,0,0x0,8
tick,0x7ffdb840feb4,308176135,0,0x0,8
tick,0x7ffdb840feb4,308191298,0,0x0,8
tick,0x7ffdb840feb4,308206662,0,0x0,8
tick,0x7ffdb840feb4,308222307,0,0x0,8
tick,0x7ffdb840feb4,308237654,0,0x0,8
tick,0x7ffdb840feb4,308252796,0,0x0,8
tick,0x7ffdb840feb4,308268670,0,0x0,8
tick,0x7ffdb840feb4,308284670,0,0x0,8
tick,0x7ffdb840feb4,308300137,0,0x0,8
tick,0x7ffdb840feb4,308315408,0,0x0,8
tick,0x7ffdb840feb4,308331146,0,0x0,8
tick,0x7ffdb840feb4,308346149,0,0x0,8
tick,0x7ffdb840feb4,308361330,0,0x0,8
tick,0x7ffdb840feb4,308377075,0,0x0,8
tick,0x7ffdb840feb4,308392708,0,0x0,8
tick,0x7ffdb840feb4,308407883,0,0x0,8
tick,0x7ffdb840feb4,308423337,0,0x0,8
tick,0x7ffdb840feb4,308438496,0,0x0,8
tick,0x7ffdb840feb4,308454336,0,0x0,8
tick,0x7ffdb840feb4,308470160,0,0x0,8
tick,0x7ffdb840feb4,308486169,0,0x0,8
tick,0x7ffdb840feb4,308501331,0,0x0,8
tick,0x7ffdb840feb4,308516407,0,0x0,8
tick,0x7ffdb840feb4,308531351,0,0x0,8
tick,0x7ffdb840feb4,308546487,0,0x0,8
tick,0x7ffdb840feb4,308562339,0,0x0,8
tick,0x7ffdb840feb4,308578361,0,0x0,8
tick,0x7ffdb840feb4,308594168,0,0x0,8
tick,0x7ffdb840feb4,308609373,0,0x0,8
tick,0x7ffdb840feb4,308624820,0,0x0,8
tick,0x7ffdb840feb4,308640585,0,0x0,8
tick,0x7ffdb840feb4,308656083,0,0x0,8
tick,0x7ffdb840feb4,308672086,0,0x0,8
tick,0x7ffdb840feb4,308687096,0,0x0,8
tick,0x7ffdb840feb4,308702370,0,0x0,8
tick,0x7ffdb840feb4,308718369,0,0x0,8
tick,0x7ffdb840feb4,308734372,0,0x0,8
tick,0x7ffdb840feb4,308750387,0,0x0,8
tick,0x7ffdb840feb4,308766406,0,0x0,8
tick,0x7ffdb840feb4,308782067,0,0x0,8
tick,0x7ffdb840feb4,308797695,0,0x0,8
tick,0x7ffdb840feb4,308812843,0,0x0,8
tick,0x7ffdb840feb4,308828216,0,0x0,8
tick,0x7ffdb840feb4,308843379,0,0x0,8
tick,0x7ffdb840feb4,308859448,0,0x0,8
tick,0x7ffdb840feb4,308874430,0,0x0,8
tick,0x7ffdb840feb4,308890420,0,0x0,8
tick,0x7ffdb840feb4,308906420,0,0x0,8
tick,0x7ffdb840feb4,308922435,0,0x0,8
tick,0x7ffdb840feb4,308938815,0,0x0,8
tick,0x7ffdb840feb4,308954438,0,0x0,8
tick,0x7ffdb840feb4,308970451,0,0x0,8
tick,0x7ffdb840feb4,308986434,0,0x0,8
tick,0x7ffdb840feb4,309002453,0,0x0,8
tick,0x7ffdb840feb4,309018445,0,0x0,8
tick,0x7ffdb840feb4,309034456,0,0x0,8
tick,0x7ffdb840feb4,309050463,0,0x0,8
tick,0x7ffdb840feb4,309066461,0,0x0,8
tick,0x7ffdb840feb4,309082455,0,0x0,8
tick,0x7ffdb840feb4,309098419,0,0x0,8
tick,0x7ffdb840feb4,309114422,0,0x0,8
tick,0x7ffdb840feb4,309130248,0,0x0,8
tick,0x7ffdb840feb4,309145427,0,0x0,8
tick,0x7ffdb840feb4,309161444,0,0x0,8
tick,0x7ffdb840feb4,309176438,0,0x0,8
tick,0x7ffdb840feb4,309192454,0,0x0,8
tick,0x7ffdb840feb4,309208437,0,0x0,8
tick,0x7ffdb840feb4,309224426,0,0x0,8
tick,0x7ffdb840feb4,309240223,0,0x0,8
tick,0x7ffdb840feb4,309255447,0,0x0,8
tick,0x7ffdb840feb4,309271273,0,0x0,8
tick,0x7ffdb840feb4,309286267,0,0x0,8
tick,0x7ffdb840feb4,309302298,0,0x0,8
tick,0x7ffdb840feb4,309317448,0,0x0,8
tick,0x7ffdb840feb4,309332286,0,0x0,8
tick,0x7ffdb840feb4,309348296,0,0x0,8
tick,0x7ffdb840feb4,309363466,0,0x0,8
tick,0x7ffdb840feb4,309378295,0,0x0,8
tick,0x7ffdb840feb4,309394295,0,0x0,8
tick,0x7ffdb840feb4,309410297,0,0x0,8
tick,0x7ffdb840feb4,309426296,0,0x0,8
tick,0x7ffdb840feb4,309441461,0,0x0,8
tick,0x7ffdb840feb4,309456470,0,0x0,8
tick,0x7ffdb840feb4,309472297,0,0x0,8
tick,0x7ffdb840feb4,309488015,0,0x0,8
tick,0x7ffdb840feb4,309502625,0,0x0,8
tick,0x7ffdb840feb4,309518714,0,0x0,8
tick,0x7ffdb840feb4,309534079,0,0x0,8
tick,0x7ffdb840feb4,309549302,0,0x0,8
tick,0x7ffdb840feb4,309565307,0,0x0,8
tick,0x7ffdb840feb4,309580305,0,0x0,8
tick,0x7ffdb840feb4,309595698,0,0x0,8
tick,0x7ffdb840feb4,309611309,0,0x0,8
tick,0x7ffdb840feb4,309626335,0,0x0,8
tick,0x7ffdb840feb4,309642315,0,0x0,8
tick,0x7ffdb840feb4,309658328,0,0x0,8
tick,0x7ffdb840feb4,309674335,0,0x0,8
tick,0x7ffdb840feb4,309690336,0,0x0,8
tick,0x7ffdb840feb4,309705494,0,0x0,8
tick,0x7ffdb840feb4,309721504,0,0x0,8
tick,0x7ffdb840feb4,309736517,0,0x0,8
tick,0x7ffdb840feb4,309752495,0,0x0,8
tick,0x7ffdb840feb4,309768506,0,0x0,8
tick,0x7ffdb840feb4,309784092,0,0x0,8
tick,0x7ffdb840feb4,309799319,0,0x0,8
tick,0x7ffdb840feb4,309814417,0,0x0,8
tick,0x7ffdb840feb4,309830324,0,0x0,8
tick,0x7ffdb840feb4,309846352,0,0x0,8
tick,0x7ffdb840feb4,309861518,0,0x0,8
tick,0x7ffdb840feb4,309876710,0,0x0,8
tick,0x7ffdb840feb4,309892509,0,0x0,8
tick,0x7ffdb840feb4,309908269,0,0x0,8
tick,0x7ffdb840feb4,309923510,0,0x0,8
tick,0x7ffdb840feb4,309938516,0,0x0,8
tick,0x7ffdb840feb4,309953939,0,0x0,8
tick,0x7ffdb840feb4,309969061,0,0x0,8
tick,0x7ffdb840feb4,309984087,0,0x0,8
tick,0x7ffdb840feb4,309999348,0,0x0,8
tick,0x7ffdb840feb4,310014525,0,0x0,8
tick,0x7ffdb840feb4,310030350,0,0x0,8
tick,0x7ffdb840feb4,310046354,0,0x0,8
tick,0x7ffdb840feb4,310061540,0,0x0,8
tick,0x7ffdb840feb4,310076349,0,0x0,8
tick,0x7ffdb840feb4,310091364,0,0x0,8
tick,0x7ffdb840feb4,310107275,0,0x0,8
tick,0x7ffdb840feb4,310122365,0,0x0,8
tick,0x7ffdb840feb4,310138381,0,0x0,8
tick,0x7ffdb840feb4,310154367,0,0x0,8
tick,0x7ffdb840feb4,310170375,0,0x0,8
tick,0x7ffdb840feb4,310185577,0,0x0,8
tick,0x7ffdb840feb4,310200565,0,0x0,8
tick,0x7ffdb840feb4,310216585,0,0x0,8
tick,0x7ffdb840feb4,310232562,0,0x0,8
tick,0x7ffdb840feb4,310248611,0,0x0,8
tick,0x7ffdb840feb4,310262983,0,0x0,8
tick,0x7ffdb840feb4,310278578,0,0x0,8
tick,0x7ffdb840feb4,310293814,0,0x0,8
tick,0x7ffdb840feb4,310309362,0,0x0,8
tick,0x7ffdb840feb4,310324904,0,0x0,8
tick,0x7ffdb840feb4,310340898,0,0x0,8
tick,0x7ffdb840feb4,310356514,0,0x0,8
tick,0x7ffdb840feb4,310372560,0,0x0,8
tick,0x7ffdb840feb4,310388577,0,0x0,8
tick,0x7ffdb840feb4,310403825,0,0x0,8
tick,0x7ffdb840feb4,310419831,0,0x0,8
tick,0x7ffdb840feb4,310435576,0,0x0,8
tick,0x7ffdb840feb4,310451399,0,0x0,8
tick,0x7ffdb840feb4,310467428,0,0x0,8
tick,0x7ffdb840feb4,310482572,0,0x0,8
tick,0x7ffdb840feb4,310497415,0,0x0,8
tick,0x7ffdb840feb4,310513428,0,0x0,8
tick,0x7ffdb840feb4,310528690,0,0x0,8
tick,0x7ffdb840feb4,310543809,0,0x0,8
tick,0x7ffdb840feb4,310559437,0,0x0,8
tick,0x7ffdb840feb4,310574586,0,0x0,8
tick,0x7ffdb840feb4,310590419,0,0x0,8
tick,0x7ffdb840feb4,310605602,0,0x0,8
tick,0x7ffdb840feb4,310620606,0,0x0,8
tick,0x7ffdb840feb4,310636215,0,0x0,8
tick,0x7ffdb840feb4,310651221,0,0x0,8
tick,0x7ffdb840feb4,310667221,0,0x0,8
tick,0x7ffdb840feb4,310682084,0,0x0,8
tick,0x7ffdb840feb4,310698099,0,0x0,8
tick,0x7ffdb840feb4,310713596,0,0x0,8
tick,0x7ffdb840feb4,310729587,0,0x0,8
tick,0x7ffdb840feb4,310745591,0,0x0,8
tick,0x7ffdb840feb4,310761592,0,0x0,8
tick,0x7ffdb840feb4,310776602,0,0x0,8
tick,0x7ffdb840feb4,310791626,0,0x0,8
tick,0x7ffdb840feb4,310807619,0,0x0,8
tick,0x7ffdb840feb4,310823631,0,0x0,8
tick,0x7ffdb840feb4,310839630,0,0x0,8
tick,0x7ffdb840feb4,310855588,0,0x0,8
tick,0x7ffdb840feb4,310871641,0,0x0,8
tick,0x7ffdb840feb4,310887635,0,0x0,8
tick,0x7ffdb840feb4,310903630,0,0x0,8
tick,0x7ffdb840feb4,310919646,0,0x0,8
tick,0x7ffdb840feb4,310935649,0,0x0,8
tick,0x7ffdb840feb4,310951471,0,0x0,8
tick,0x7ffdb840feb4,310967468,0,0x0,8
tick,0x7ffdb840feb4,310983286,0,0x0,8
tick,0x7ffdb840feb4,310998473,0,0x0,8
tick,0x7ffdb840feb4,311013632,0,0x0,8
tick,0x7ffdb840feb4,311029667,0,0x0,8
tick,0x7ffdb840feb4,311045495,0,0x0,8
tick,0x7ffdb840feb4,311060807,0,0x0,8
tick,0x7ffdb840feb4,311076472,0,0x0,8
tick,0x7ffdb840feb4,311091472,0,0x0,8
tick,0x7ffdb840feb4,311106652,0,0x0,8
tick,0x7ffdb840feb4,311122384,0,0x0,8
tick,0x7ffdb840feb4,311138386,0,0x0,8
tick,0x7ffdb840feb4,311154402,0,0x0,8
tick,0x7ffdb840feb4,311170489,0,0x0,8
tick,0x7ffdb840feb4,311185673,0,0x0,8
tick,0x7ffdb840feb4,311201493,0,0x0,8
tick,0x7ffdb840feb4,311216608,0,0x0,8
tick,0x7ffdb840feb4,311231427,0,0x0,8
tick,0x7ffdb840feb4,311246430,0,0x0,8
tick,0x7ffdb840feb4,311261724,0,0x0,8
tick,0x7ffdb840feb4,311276443,0,0x0,8
tick,0x7ffdb840feb4,311291666,0,0x0,8
tick,0x7ffdb840feb4,311306305,0,0x0,8
tick,0x7ffdb840feb4,311321509,0,0x0,8
tick,0x7ffdb840feb4,311337387,0,0x0,8
tick,0x7ffdb840feb4,311353389,0,0x0,8
tick,0x7ffdb840feb4,311369502,0,0x0,8
tick,0x7ffdb840feb4,311384873,0,0x0,8
tick,0x7ffdb840feb4,311400517,0,0x0,8
tick,0x7ffdb840feb4,311416402,0,0x0,8
tick,0x7ffdb840feb4,311432512,0,0x0,8
tick,0x7ffdb840feb4,311447288,0,0x0,8
tick,0x7ffdb840feb4,311462295,0,0x0,8
tick,0x7ffdb840feb4,311478313,0,0x0,8
tick,0x7ffdb840feb4,311493704,0,0x0,8
tick,0x7ffdb840feb4,311509293,0,0x0,8
tick,0x7ffdb840feb4,311525299,0,0x0,8
tick,0x7ffdb840feb4,311541306,0,0x0,8
tick,0x7ffdb840feb4,311557310,0,0x0,8
tick,0x7ffdb840feb4,311572704,0,0x0,8
tick,0x7ffdb840feb4,311588099,0,0x0,8
tick,0x7ffdb840feb4,311603229,0,0x0,8
tick,0x7ffdb840feb4,311618907,0,0x0,8
tick,0x7ffdb840feb4,311634718,0,0x0,8
tick,0x7ffdb840feb4,311650542,0,0x0,8
tick,0x7ffdb840feb4,311666430,0,0x0,8
tick,0x7ffdb840feb4,311681426,0,0x0,8
tick,0x7ffdb840feb4,311696563,0,0x0,8
tick,0x7ffdb840feb4,311711722,0,0x0,8
tick,0x7ffdb840feb4,311727738,0,0x0,8
tick,0x7ffdb840feb4,311743734,0,0x0,8
tick,0x7ffdb840feb4,311759742,0,0x0,8
tick,0x7ffdb840feb4,311775746,0,0x0,8
tick,0x7ffdb840feb4,311791742,0,0x0,8
tick,0x7ffdb840feb4,311807747,0,0x0,8
tick,0x7ffdb840feb4,311822930,0,0x0,8
tick,0x7ffdb840feb4,311838741,0,0x0,8
tick,0x7ffdb840feb4,311853746,0,0x0,8
tick,0x7ffdb840feb4,311869574,0,0x0,8
tick,0x7ffdb840feb4,311885013,0,0x0,8
tick,0x7ffdb840feb4,311900569,0,0x0,8
tick,0x7ffdb840feb4,311916430,0,0x0,8
tick,0x7ffdb840feb4,311931748,0,0x0,8
tick,0x7ffdb840feb4,311947758,0,0x0,8
tick,0x7ffdb840feb4,311962995,0,0x0,8
tick,0x7ffdb840feb4,311978380,0,0x0,8
tick,0x7ffdb840feb4,311993432,0,0x0,8
tick,0x7ffdb840feb4,312009349,0,0x0,8
tick,0x7ffdb840feb4,312024601,0,0x0,8
tick,0x7ffdb840feb4,312039604,0,0x0,8
tick,0x7ffdb840feb4,312054756,0,0x0,8
tick,0x7ffdb840feb4,312070589,0,0x0,8
tick,0x7ffdb840feb4,312086088,0,0x0,8
tick,0x7ffdb840feb4,312101799,0,0x0,8
tick,0x7ffdb840feb4,312116839,0,0x0,8
tick,0x7ffdb840feb4,312132830,0,0x0,8
tick,0x7ffdb840feb4,312148837,0,0x0,8
tick,0x7ffdb840feb4,312163828,0,0x0,8
tick,0x7ffdb840feb4,312178939,0,0x0,8
tick,0x7ffdb840feb4,312194827,0,0x0,8
tick,0x7ffdb840feb4,312210827,0,0x0,8
tick,0x7ffdb840feb4,312226815,0,0x0,8
tick,0x7ffdb840feb4,312242824,0,0x0,8
tick,0x7ffdb840feb4,312258823,0,0x0,8
tick,0x7ffdb840feb4,312274629,0,0x0,8
tick,0x7ffdb840feb4,312290168,0,0x0,8
tick,0x7ffdb840feb4,312305806,0,0x0,8
tick,0x7ffdb840feb4,312320627,0,0x0,8
tick,0x7ffdb840feb4,312336632,0,0x0,8
tick,0x7ffdb840feb4,312352666,0,0x0,8
tick,0x7ffdb840feb4,312368656,0,0x0,8
tick,0x7ffdb840feb4,312384660,0,0x0,8
tick,0x7ffdb840feb4,312400647,0,0x0,8
tick,0x7ffdb840feb4,312416437,0,0x0,8
tick,0x7ffdb840feb4,312431831,0,0x0,8
tick,0x7ffdb840feb4,312447830,0,0x0,8
tick,0x7ffdb840feb4,312463848,0,0x0,8
tick,0x7ffdb840feb4,312478661,0,0x0,8
tick,0x7ffdb840feb4,312493835,0,0x0,8
tick,0x7ffdb840feb4,312509448,0,0x0,8
tick,0x7ffdb840feb4,312524848,0,0x0,8
tick,0x7ffdb840feb4,312539844,0,0x0,8
tick,0x7ffdb840feb4,312555837,0,0x0,8
tick,0x7ffdb840feb4,312571856,0,0x0,8
tick,0x7ffdb840feb4,312587836,0,0x0,8
tick,0x7ffdb840feb4,312602997,0,0x0,8
tick,0x7ffdb840feb4,312618014,0,0x0,8
tick,0x7ffdb840feb4,312633682,0,0x0,8
tick,0x7ffdb840feb4,312649669,0,0x0,8
tick,0x7ffdb840feb4,312664679,0,0x0,8
tick,0x7ffdb840feb4,312680674,0,0x0,8
tick,0x7ffdb840feb4,312695844,0,0x0,8
tick,0x7ffdb840feb4,312711692,0,0x0,8
tick,0x7ffdb840feb4,312727700,0,0x0,8
tick,0x7ffdb840feb4,312742855,0,0x0,8
tick,0x7ffdb840feb4,312757864,0,0x0,8
tick,0x7ffdb840feb4,312772860,0,0x0,8
tick,0x7ffdb840feb4,312788876,0,0x0,8
tick,0x7ffdb840feb4,312803720,0,0x0,8
tick,0x7ffdb840feb4,312818872,0,0x0,8
tick,0x7ffdb840feb4,312834925,0,0x0,8
tick,0x7ffdb840feb4,312850694,0,0x0,8
tick,0x7ffdb840feb4,312866697,0,0x0,8
tick,0x7ffdb840feb4,312881695,0,0x0,8
tick,0x7ffdb840feb4,312896888,0,0x0,8
tick,0x7ffdb840feb4,312912728,0,0x0,8
tick,0x7ffdb840feb4,312927734,0,0x0,8
tick,0x7ffdb840feb4,312942878,0,0x0,8
tick,0x7ffdb840feb4,312958848,0,0x0,8
tick,0x7ffdb840feb4,312973376,0,0x0,8
tick,0x7ffdb840feb4,312988879,0,0x0,8
tick,0x7ffdb840feb4,313004741,0,0x0,8
tick,0x7ffdb840feb4,313020734,0,0x0,8
tick,0x7ffdb840feb4,313036746,0,0x0,8
tick,0x7ffdb840feb4,313051710,0,0x0,8
tick,0x7ffdb840feb4,313066742,0,0x0,8
tick,0x7ffdb840feb4,313082717,0,0x0,8
tick,0x7ffdb840feb4,313098723,0,0x0,8
tick,0x7ffdb840feb4,313113896,0,0x0,8
tick,0x7ffdb840feb4,313129728,0,0x0,8
tick,0x7ffdb840feb4,313144897,0,0x0,8
tick,0x7ffdb840feb4,313160724,0,0x0,8
tick,0x7ffdb840feb4,313175911,0,0x0,8
tick,0x7ffdb840feb4,313191735,0,0x0,8
tick,0x7ffdb840feb4,313206743,0,0x0,8
tick,0x7ffdb840feb4,313222760,0,0x0,8
tick,0x7ffdb840feb4,313237866,0,0x0,8
tick,0x7ffdb840feb4,313253077,0,0x0,8
tick,0x7ffdb840feb4,313268392,0,0x0,8
tick,0x7ffdb840feb4,313283874,0,0x0,8
tick,0x7ffdb840feb4,313299899,0,0x0,8
tick,0x7ffdb840feb4,313315903,0,0x0,8
tick,0x7ffdb840feb4,313331766,0,0x0,8
tick,0x7ffdb840feb4,313346901,0,0x0,8
tick,0x7ffdb840feb4,313362746,0,0x0,8
tick,0x7ffdb840feb4,313378769,0,0x0,8
tick,0x7ffdb840feb4,313394795,0,0x0,8
tick,0x7ffdb840feb4,313410783,0,0x0,8
tick,0x7ffdb840feb4,313426767,0,0x0,8
tick,0x7ffdb840feb4,313441762,0,0x0,8
tick,0x7ffdb840feb4,313457256,0,0x0,8
tick,0x7ffdb840feb4,313472759,0,0x0,8
tick,0x7ffdb840feb4,313488764,0,0x0,8
tick,0x7ffdb840feb4,313503944,0,0x0,8
tick,0x7ffdb840feb4,313518771,0,0x0,8
tick,0x7ffdb840feb4,313533944,0,0x0,8
tick,0x7ffdb840feb4,313549777,0,0x0,8
tick,0x7ffdb840feb4,313564746,0,0x0,8
tick,0x7ffdb840feb4,313580634,0,0x0,8
tick,0x7ffdb840feb4,313596047,0,0x0,8
tick,0x7ffdb840feb4,313611328,0,0x0,8
tick,0x7ffdb840feb4,313626790,0,0x0,8
tick,0x7ffdb840feb4,313641965,0,0x0,8
tick,0x7ffdb840feb4,313657794,0,0x0,8
tick,0x7ffdb840feb4,313672342,0,0x0,8
tick,0x7ffdb840feb4,313688346,0,0x0,8
tick,0x7ffdb840feb4,313703964,0,0x0,8
tick,0x7ffdb840feb4,313718938,0,0x0,8
tick,0x7ffdb840feb4,313734463,0,0x0,8
tick,0x7ffdb840feb4,313749769,0,0x0,8
tick,0x7ffdb840feb4,313765781,0,0x0,8
tick,0x7ffdb840feb4,313781770,0,0x0,8
tick,0x7ffdb840feb4,313797781,0,0x0,8
tick,0x7ffdb840feb4,313813901,0,0x0,8
tick,0x7ffdb840feb4,313828997,0,0x0,8
tick,0x7ffdb840feb4,313843861,0,0x0,8
tick,0x7ffdb840feb4,313860003,0,0x0,8
tick,0x7ffdb840feb4,313875998,0,0x0,8
tick,0x7ffdb840feb4,313891004,0,0x0,8
tick,0x7ffdb840feb4,313907013,0,0x0,8
tick,0x7ffdb840feb4,313922010,0,0x0,8
tick,0x7ffdb840feb4,313937006,0,0x0,8
tick,0x7ffdb840feb4,313953022,0,0x0,8
tick,0x7ffdb840feb4,313968799,0,0x0,8
tick,0x7ffdb840feb4,313984018,0,0x0,8
tick,0x7ffdb840feb4,314000008,0,0x0,8
tick,0x7ffdb840feb4,314015010,0,0x0,8
tick,0x7ffdb840feb4,314030831,0,0x0,8
tick,0x7ffdb840feb4,314046788,0,0x0,8
tick,0x7ffdb840feb4,314062020,0,0x0,8
tick,0x7ffdb840feb4,314078013,0,0x0,8
tick,0x7ffdb840feb4,314093012,0,0x0,8
tick,0x7ffdb840feb4,314109030,0,0x0,8
tick,0x7ffdb840feb4,314125036,0,0x0,8
tick,0x7ffdb840feb4,314141035,0,0x0,8
tick,0x7ffdb840feb4,314157053,0,0x0,8
tick,0x7ffdb840feb4,314173038,0,0x0,8
tick,0x7ffdb840feb4,314188044,0,0x0,8
tick,0x7ffdb840feb4,314203066,0,0x0,8
tick,0x7ffdb840feb4,314219065,0,0x0,8
tick,0x7ffdb840feb4,314235054,0,0x0,8
tick,0x7ffdb840feb4,314251063,0,0x0,8
tick,0x7ffdb840feb4,314267051,0,0x0,8
tick,0x7ffdb840feb4,314283035,0,0x0,8
tick,0x7ffdb840feb4,314298768,0,0x0,8
tick,0x7ffdb840feb4,314314793,0,0x0,8
tick,0x7ffdb840feb4,314329774,0,0x0,8
tick,0x7ffdb840feb4,314344700,0,0x0,8
tick,0x7ffdb840feb4,314359876,0,0x0,8
tick,0x7ffdb840feb4,314375049,0,0x0,8
tick,0x7ffdb840feb4,314390875,0,0x0,8
tick,0x7ffdb840feb4,314405884,0,0x0,8
tick,0x7ffdb840feb4,314421952,0,0x0,8
tick,0x7ffdb840feb4,314436956,0,0x0,8
tick,0x7ffdb840feb4,314452069,0,0x0,8
tick,0x7ffdb840feb4,314467439,0,0x0,8
tick,0x7ffdb840feb4,314483060,0,0x0,8
tick,0x7ffdb840feb4,314498764,0,0x0,8
tick,0x7ffdb840feb4,314514771,0,0x0,8
tick,0x7ffdb840feb4,314530895,0,0x0,8
tick,0x7ffdb840feb4,314546314,0,0x0,8
tick,0x7ffdb840feb4,314561896,0,0x0,8
tick,0x7ffdb840feb4,314577913,0,0x0,8
tick,0x7ffdb840feb4,314593074,0,0x0,8
tick,0x7ffdb840feb4,314608355,0,0x0,8
tick,0x7ffdb840feb4,314624103,0,0x0,8
tick,0x7ffdb840feb4,314639005,0,0x0,8
tick,0x7ffdb840feb4,314654234,0,0x0,8
tick,0x7ffdb840feb4,314669441,0,0x0,8
tick,0x7ffdb840feb4,314685088,0,0x0,8
tick,0x7ffdb840feb4,314701047,0,0x0,8
tick,0x7ffdb840feb4,314716439,0,0x0,8
tick,0x7ffdb840feb4,314731928,0,0x0,8
tick,0x7ffdb840feb4,314747080,0,0x0,8
tick,0x7ffdb840feb4,314763087,0,0x0,8
tick,0x7ffdb840feb4,314779083,0,0x0,8
tick,0x7ffdb840feb4,314795081,0,0x0,8
tick,0x7ffdb840feb4,314811096,0,0x0,8
tick,0x7ffdb840feb4,314827150,0,0x0,8
tick,0x7ffdb840feb4,314843095,0,0x0,8
tick,0x7ffdb840feb4,314858615,0,0x0,8
tick,0x7ffdb840feb4,314874453,0,0x0,8
tick,0x7ffdb840feb4,314889934,0,0x0,8
tick,0x7ffdb840feb4,314905106,0,0x0,8
tick,0x7ffdb840feb4,314921102,0,0x0,8
tick,0x7ffdb840feb4,314937120,0,0x0,8
tick,0x7ffdb840feb4,314953210,0,0x0,8
tick,0x7ffdb840feb4,314969205,0,0x0,8
tick,0x7ffdb840feb4,314984124,0,0x0,8
tick,0x7ffdb840feb4,314999793,0,0x0,8
tick,0x7ffdb840feb4,315015140,0,0x0,8
tick,0x7ffdb840feb4,315030949,0,0x0,8
tick,0x7ffdb840feb4,315046139,0,0x0,8
tick,0x7ffdb840feb4,315061152,0,0x0,8
tick,0x7ffdb840feb4,315077148,0,0x0,8
tick,0x7ffdb840feb4,315092134,0,0x0,8
tick,0x7ffdb840feb4,315108142,0,0x0,8
tick,0x7ffdb840feb4,315124149,0,0x0,8
tick,0x7ffdb840feb4,315139905,0,0x0,8
tick,0x7ffdb840feb4,315155979,0,0x0,8
tick,0x7ffdb840feb4,315171150,0,0x0,8
tick,0x7ffdb840feb4,315187142,0,0x0,8
tick,0x7ffdb840feb4,315201975,0,0x0,8
tick,0x7ffdb840feb4,315217918,0,0x0,8
tick,0x7ffdb840feb4,315232979,0,0x0,8
tick,0x7ffdb840feb4,315247986,0,0x0,8
tick,0x7ffdb840feb4,315263152,0,0x0,8
tick,0x7ffdb840feb4,315278989,0,0x0,8
tick,0x7ffdb840feb4,315294158,0,0x0,8
tick,0x7ffdb840feb4,315309735,0,0x0,8
tick,0x7ffdb840feb4,315325262,0,0x0,8
tick,0x7ffdb840feb4,315340265,0,0x0,8
tick,0x7ffdb840feb4,315356069,0,0x0,8
tick,0x7ffdb840feb4,315371985,0,0x0,8
tick,0x7ffdb840feb4,315387988,0,0x0,8
tick,0x7ffdb840feb4,315403171,0,0x0,8
tick,0x7ffdb840feb4,315418108,0,0x0,8
tick,0x7ffdb840feb4,315433655,0,0x0,8
tick,0x7ffdb840feb4,315448779,0,0x0,8
tick,0x7ffdb840feb4,315464005,0,0x0,8
tick,0x7ffdb840feb4,315480011,0,0x0,8
tick,0x7ffdb840feb4,315496021,0,0x0,8
tick,0x7ffdb840feb4,315511346,0,0x0,8
tick,0x7ffdb840feb4,315527346,0,0x0,8
tick,0x7ffdb840feb4,315543182,0,0x0,8
tick,0x7ffdb840feb4,315559048,0,0x0,8
tick,0x7ffdb840feb4,315573667,0,0x0,8
tick,0x7ffdb840feb4,315589356,0,0x0,8
tick,0x7ffdb840feb4,315605030,0,0x0,8
tick,0x7ffdb840feb4,315619773,0,0x0,8
tick,0x7ffdb840feb4,315635016,0,0x0,8
tick,0x7ffdb840feb4,315651024,0,0x0,8
tick,0x7ffdb840feb4,315667026,0,0x0,8
tick,0x7ffdb840feb4,315682204,0,0x0,8
tick,0x7ffdb840feb4,315697202,0,0x0,8
tick,0x7ffdb840feb4,315713200,0,0x0,8
tick,0x7ffdb840feb4,315729216,0,0x0,8
tick,0x7ffdb840feb4,315745039,0,0x0,8
tick,0x7ffdb840feb4,315760038,0,0x0,8
tick,0x7ffdb840feb4,315775213,0,0x0,8
tick,0x7ffdb840feb4,315791224,0,0x0,8
tick,0x7ffdb840feb4,315807225,0,0x0,8
tick,0x7ffdb840feb4,315823052,0,0x0,8
tick,0x7ffdb840feb4,315837891,0,0x0,8
tick,0x7ffdb840feb4,315853222,0,0x0,8
tick,0x7ffdb840feb4,315869019,0,0x0,8
tick,0x7ffdb840feb4,315884245,0,0x0,8
tick,0x7ffdb840feb4,315899227,0,0x0,8
tick,0x7ffdb840feb4,315915162,0,0x0,8
tick,0x7ffdb840feb4,315931058,0,0x0,8
tick,0x7ffdb840feb4,315946238,0,0x0,8
tick,0x7ffdb840feb4,315962178,0,0x0,8
tick,0x7ffdb840feb4,315977178,0,0x0,8
tick,0x7ffdb840feb4,315993058,0,0x0,8
tick,0x7ffdb840feb4,316009178,0,0x0,8
tick,0x7ffdb840feb4,316025179,0,0x0,8
tick,0x7ffdb840feb4,316041067,0,0x0,8
tick,0x7ffdb840feb4,316056199,0,0x0,8
tick,0x7ffdb840feb4,316072201,0,0x0,8
tick,0x7ffdb840feb4,316087199,0,0x0,8
tick,0x7ffdb840feb4,316103241,0,0x0,8
tick,0x7ffdb840feb4,316119055,0,0x0,8
tick,0x7ffdb840feb4,316134255,0,0x0,8
tick,0x7ffdb840feb4,316149777,0,0x0,8
tick,0x7ffdb840feb4,316165030,0,0x0,8
tick,0x7ffdb840feb4,316181086,0,0x0,8
tick,0x7ffdb840feb4,316196085,0,0x0,8
tick,0x7ffdb840feb4,316211086,0,0x0,8
tick,0x7ffdb840feb4,316227093,0,0x0,8
tick,0x7ffdb840feb4,316242269,0,0x0,8
tick,0x7ffdb840feb4,316257824,0,0x0,8
tick,0x7ffdb840feb4,316273309,0,0x0,8
tick,0x7ffdb840feb4,316288274,0,0x0,8
tick,0x7ffdb840feb4,316304276,0,0x0,8
tick,0x7ffdb840feb4,316320047,0,0x0,8
tick,0x7ffdb840feb4,316336042,0,0x0,8
tick,0x7ffdb840feb4,316351379,0,0x0,8
tick,0x7ffdb840feb4,316367341,0,0x0,8
tick,0x7ffdb840feb4,316382644,0,0x0,8
tick,0x7ffdb840feb4,316398682,0,0x0,8
tick,0x7ffdb840feb4,316414049,0,0x0,8
tick,0x7ffdb840feb4,316429653,0,0x0,8
tick,0x7ffdb840feb4,316445058,0,0x0,8
tick,0x7ffdb840feb4,316461054,0,0x0,8
tick,0x7ffdb840feb4,316477062,0,0x0,8
tick,0x7ffdb840feb4,316492291,0,0x0,8
tick,0x7ffdb840feb4,316508287,0,0x0,8
tick,0x7ffdb840feb4,316523061,0,0x0,8
tick,0x7ffdb840feb4,316539071,0,0x0,8
tick,0x7ffdb840feb4,316554450,0,0x0,8
tick,0x7ffdb840feb4,316570138,0,0x0,8
tick,0x7ffdb840feb4,316585548,0,0x0,8
tick,0x7ffdb840feb4,316601141,0,0x0,8
tick,0x7ffdb840feb4,316617136,0,0x0,8
tick,0x7ffdb840feb4,316632310,0,0x0,8
tick,0x7ffdb840feb4,316647313,0,0x0,8
tick,0x7ffdb840feb4,316663338,0,0x0,8
tick,0x7ffdb840feb4,316679333,0,0x0,8
tick,0x7ffdb840feb4,316695340,0,0x0,8
tick,0x7ffdb840feb4,316711168,0,0x0,8
tick,0x7ffdb840feb4,316727164,0,0x0,8
tick,0x7ffdb840feb4,316742285,0,0x0,8
tick,0x7ffdb840feb4,316757159,0,0x0,8
tick,0x7ffdb840feb4,316772335,0,0x0,8
tick,0x7ffdb840feb4,316788156,0,0x0,8
tick,0x7ffdb840feb4,316803154,0,0x0,8
tick,0x7ffdb840feb4,316819172,0,0x0,8
tick,0x7ffdb840feb4,316835177,0,0x0,8
tick,0x7ffdb840feb4,316851184,0,0x0,8
tick,0x7ffdb840feb4,316866180,0,0x0,8
tick,0x7ffdb840feb4,316881182,0,0x0,8
tick,0x7ffdb840feb4,316896345,0,0x0,8
tick,0x7ffdb840feb4,316912179,0,0x0,8
tick,0x7ffdb840feb4,316927189,0,0x0,8
tick,0x7ffdb840feb4,316942351,0,0x0,8
tick,0x7ffdb840feb4,316958306,0,0x0,8
tick,0x7ffdb840feb4,316973363,0,0x0,8
tick,0x7ffdb840feb4,316988769,0,0x0,8
tick,0x7ffdb840feb4,317004362,0,0x0,8
tick,0x7ffdb840feb4,317019446,0,0x0,8
tick,0x7ffdb840feb4,317034930,0,0x0,8
tick,0x7ffdb840feb4,317050188,0,0x0,8
tick,0x7ffdb840feb4,317065447,0,0x0,8
tick,0x7ffdb840feb4,317081188,0,0x0,8
tick,0x7ffdb840feb4,317097206,0,0x0,8
tick,0x7ffdb840feb4,317112195,0,0x0,8
tick,0x7ffdb840feb4,317127371,0,0x0,8
tick,0x7ffdb840feb4,317143389,0,0x0,8
tick,0x7ffdb840feb4,317158984,0,0x0,8
tick,0x7ffdb840feb4,317174388,0,0x0,8
tick,0x7ffdb840feb4,317190214,0,0x0,8
tick,0x7ffdb840feb4,317206207,0,0x0,8
tick,0x7ffdb840feb4,317222205,0,0x0,8
tick,0x7ffdb840feb4,317238084,0,0x0,8
tick,0x7ffdb840feb4,317253398,0,0x0,8
tick,0x7ffdb840feb4,317268225,0,0x0,8
tick,0x7ffdb840feb4,317283405,0,0x0,8
tick,0x7ffdb840feb4,317298692,0,0x0,8
tick,0x7ffdb840feb4,317313882,0,0x0,8
tick,0x7ffdb840feb4,317329703,0,0x0,8
tick,0x7ffdb840feb4,317345573,0,0x0,8
tick,0x7ffdb840feb4,317360104,0,0x0,8
tick,0x7ffdb840feb4,317375409,0,0x0,8
tick,0x7ffdb840feb4,317391243,0,0x0,8
tick,0x7ffdb840feb4,317406407,0,0x0,8
tick,0x7ffdb840feb4,317422232,0,0x0,8
tick,0x7ffdb840feb4,317437529,0,0x0,8
tick,0x7ffdb840feb4,317453406,0,0x0,8
tick,0x7ffdb840feb4,317469250,0,0x0,8
tick,0x7ffdb840feb4,317484440,0,0x0,8
tick,0x7ffdb840feb4,317499777,0,0x0,8
tick,0x7ffdb840feb4,317515768,0,0x0,8
tick,0x7ffdb840feb4,317531254,0,0x0,8
tick,0x7ffdb840feb4,317547256,0,0x0,8
tick,0x7ffdb840feb4,317562429,0,0x0,8
tick,0x7ffdb840feb4,317578266,0,0x0,8
tick,0x7ffdb840feb4,317593427,0,0x0,8
tick,0x7ffdb840feb4,317609284,0,0x0,8
tick,0x7ffdb840feb4,317624727,0,0x0,8
tick,0x7ffdb840feb4,317640106,0,0x0,8
tick,0x7ffdb840feb4,317655446,0,0x0,8
tick,0x7ffdb840feb4,317670494,0,0x0,8
tick,0x7ffdb840feb4,317686282,0,0x0,8
tick,0x7ffdb840feb4,317702272,0,0x0,8
tick,0x7ffdb840feb4,317718278,0,0x0,8
tick,0x7ffdb840feb4,317733446,0,0x0,8
tick,0x7ffdb840feb4,317748281,0,0x0,8
tick,0x7ffdb840feb4,317763453,0,0x0,8
tick,0x7ffdb840feb4,317778869,0,0x0,8
tick,0x7ffdb840feb4,317794292,0,0x0,8
tick,0x7ffdb840feb4,317810296,0,0x0,8
tick,0x7ffdb840feb4,317826284,0,0x0,8
tick,0x7ffdb840feb4,317842295,0,0x0,8
tick,0x7ffdb840feb4,317857461,0,0x0,8
tick,0x7ffdb840feb4,317872287,0,0x0,8
tick,0x7ffdb840feb4,317888295,0,0x0,8
tick,0x7ffdb840feb4,317903773,0,0x0,8
tick,0x7ffdb840feb4,317918908,0,0x0,8
tick,0x7ffdb840feb4,317934474,0,0x0,8
tick,0x7ffdb840feb4,317949783,0,0x0,8
tick,0x7ffdb840feb4,317964952,0,0x0,8
tick,0x7ffdb840feb4,317980301,0,0x0,8
tick,0x7ffdb840feb4,317995698,0,0x0,8
tick,0x7ffdb840feb4,318011311,0,0x0,8
tick,0x7ffdb840feb4,318027315,0,0x0,8
tick,0x7ffdb840feb4,318042478,0,0x0,8
tick,0x7ffdb840feb4,318057990,0,0x0,8
tick,0x7ffdb840feb4,318073308,0,0x0,8
tick,0x7ffdb840feb4,318088973,0,0x0,8
tick,0x7ffdb840feb4,318104504,0,0x0,8
tick,0x7ffdb840feb4,318120131,0,0x0,8
tick,0x7ffdb840feb4,318135307,0,0x0,8
tick,0x7ffdb840feb4,318151324,0,0x0,8
tick,0x7ffdb840feb4,318166332,0,0x0,8
tick,0x7ffdb840feb4,318182310,0,0x0,8
tick,0x7ffdb840feb4,318198336,0,0x0,8
tick,0x7ffdb840feb4,318213504,0,0x0,8
tick,0x7ffdb840feb4,318228716,0,0x0,8
tick,0x7ffdb840feb4,318244340,0,0x0,8
tick,0x7ffdb840feb4,318260047,0,0x0,8
tick,0x7ffdb840feb4,318276051,0,0x0,8
tick,0x7ffdb840feb4,318291335,0,0x0,8
tick,0x7ffdb840feb4,318307073,0,0x0,8
tick,0x7ffdb840feb4,318322342,0,0x0,8
tick,0x7ffdb840feb4,318337522,0,0x0,8
tick,0x7ffdb840feb4,318353520,0,0x0,8
tick,0x7ffdb840feb4,318369082,0,0x0,8
tick,0x7ffdb840feb4,318384430,0,0x0,8
tick,0x7ffdb840feb4,318400130,0,0x0,8
tick,0x7ffdb840feb4,318415093,0,0x0,8
tick,0x7ffdb840feb4,318430349,0,0x0,8
tick,0x7ffdb840feb4,318445546,0,0x0,8
tick,0x7ffdb840feb4,318461360,0,0x0,8
tick,0x7ffdb840feb4,318477361,0,0x0,8
tick,0x7ffdb840feb4,318492540,0,0x0,8
tick,0x7ffdb840feb4,318507360,0,0x0,8
tick,0x7ffdb840feb4,318523373,0,0x0,8
tick,0x7ffdb840feb4,318539382,0,0x0,8
tick,0x7ffdb840feb4,318555387,0,0x0,8
tick,0x7ffdb840feb4,318571383,0,0x0,8
tick,0x7ffdb840feb4,318586834,0,0x0,8
tick,0x7ffdb840feb4,318602379,0,0x0,8
tick,0x7ffdb840feb4,318618179,0,0x0,8
tick,0x7ffdb840feb4,318634199,0,0x0,8
tick,0x7ffdb840feb4,318649791,0,0x0,8
tick,0x7ffdb840feb4,318665098,0,0x0,8
tick,0x7ffdb840feb4,318680094,0,0x0,8
tick,0x7ffdb840feb4,318695562,0,0x0,8
tick,0x7ffdb840feb4,318711392,0,0x0,8
tick,0x7ffdb840feb4,318727188,0,0x0,8
tick,0x7ffdb840feb4,318742387,0,0x0,8
tick,0x7ffdb840feb4,318757907,0,0x0,8
tick,0x7ffdb840feb4,318773406,0,0x0,8
tick,0x7ffdb840feb4,318789393,0,0x0,8
tick,0x7ffdb840feb4,318804577,0,0x0,8
tick,0x7ffdb840feb4,318819580,0,0x0,8
tick,0x7ffdb840feb4,318835582,0,0x0,8
tick,0x7ffdb840feb4,318851584,0,0x0,8
tick,0x7ffdb840feb4,318867596,0,0x0,8
tick,0x7ffdb840feb4,318883592,0,0x0,8
tick,0x7ffdb840feb4,318898799,0,0x0,8
tick,0x7ffdb840feb4,318914062,0,0x0,8
tick,0x7ffdb840feb4,318929702,0,0x0,8
tick,0x7ffdb840feb4,318945591,0,0x0,8
tick,0x7ffdb840feb4,318961421,0,0x0,8
tick,0x7ffdb840feb4,318977433,0,0x0,8
tick,0x7ffdb840feb4,318993431,0,0x0,8
tick,0x7ffdb840feb4,319009425,0,0x0,8
tick,0x7ffdb840feb4,319025115,0,0x0,8
tick,0x7ffdb840feb4,319040092,0,0x0,8
tick,0x7ffdb840feb4,319055438,0,0x0,8
tick,0x7ffdb840feb4,319071437,0,0x0,8
tick,0x7ffdb840feb4,319086609,0,0x0,8
tick,0x7ffdb840feb4,319102438,0,0x0,8
tick,0x7ffdb840feb4,319117461,0,0x0,8
tick,0x7ffdb840feb4,319132123,0,0x0,8
tick,0x7ffdb840feb4,319147807,0,0x0,8
tick,0x7ffdb840feb4,319163451,0,0x0,8
tick,0x7ffdb840feb4,319179443,0,0x0,8
tick,0x7ffdb840feb4,319194631,0,0x0,8
tick,0x7ffdb840feb4,319209628,0,0x0,8
tick,0x7ffdb840feb4,319225329,0,0x0,8
tick,0x7ffdb840feb4,319240105,0,0x0,8
tick,0x7ffdb840feb4,319255825,0,0x0,8
tick,0x7ffdb840feb4,319271465,0,0x0,8
tick,0x7ffdb840feb4,319287458,0,0x0,8
tick,0x7ffdb840feb4,319302475,0,0x0,8
tick,0x7ffdb840feb4,319318323,0,0x0,8
tick,0x7ffdb840feb4,319333643,0,0x0,8
tick,0x7ffdb840feb4,319348797,0,0x0,8
tick,0x7ffdb840feb4,319364505,0,0x0,8
tick,0x7ffdb840feb4,319379537,0,0x0,8
tick,0x7ffdb840feb4,319394788,0,0x0,8
tick,0x7ffdb840feb4,319410794,0,0x0,8
tick,0x7ffdb840feb4,319426806,0,0x0,8
tick,0x7ffdb840feb4,319442473,0,0x0,8
tick,0x7ffdb840feb4,319457798,0,0x0,8
tick,0x7ffdb840feb4,319473460,0,0x0,8
tick,0x7ffdb840feb4,319488503,0,0x0,8
tick,0x7ffdb840feb4,319504512,0,0x0,8
tick,0x7ffdb840feb4,319519525,0,0x0,8
tick,0x7ffdb840feb4,319534669,0,0x0,8
tick,0x7ffdb840feb4,319550182,0,0x0,8
tick,0x7ffdb840feb4,319565462,0,0x0,8
tick,0x7ffdb840feb4,319581491,0,0x0,8
tick,0x7ffdb840feb4,319597301,0,0x0,8
tick,0x7ffdb840feb4,319612545,0,0x0,8
tick,0x7ffdb840feb4,319628148,0,0x0,8
tick,0x7ffdb840feb4,319643685,0,0x0,8
tick,0x7ffdb840feb4,319659434,0,0x0,8
tick,0x7ffdb840feb4,319675430,0,0x0,8
tick,0x7ffdb840feb4,319690502,0,0x0,8
tick,0x7ffdb840feb4,319705515,0,0x0,8
tick,0x7ffdb840feb4,319721509,0,0x0,8
tick,0x7ffdb840feb4,319737504,0,0x0,8
tick,0x7ffdb840feb4,319752691,0,0x0,8
tick,0x7ffdb840feb4,319768221,0,0x0,8
tick,0x7ffdb840feb4,319783397,0,0x0,8
tick,0x7ffdb840feb4,319798803,0,0x0,8
tick,0x7ffdb840feb4,319814463,0,0x0,8
tick,0x7ffdb840feb4,319829702,0,0x0,8
tick,0x7ffdb840feb4,319845710,0,0x0,8
tick,0x7ffdb840feb4,319861727,0,0x0,8
tick,0x7ffdb840feb4,319877710,0,0x0,8
tick,0x7ffdb840feb4,319893505,0,0x0,8
tick,0x7ffdb840feb4,319909332,0,0x0,8
tick,0x7ffdb840feb4,319924711,0,0x0,8
tick,0x7ffdb840feb4,319939442,0,0x0,8
tick,0x7ffdb840feb4,319954637,0,0x0,8
tick,0x7ffdb840feb4,319970545,0,0x0,8
tick,0x7ffdb840feb4,319985547,0,0x0,8
tick,0x7ffdb840feb4,320001542,0,0x0,8
tick,0x7ffdb840feb4,320017470,0,0x0,8
tick,0x7ffdb840feb4,320032728,0,0x0,8
tick,0x7ffdb840feb4,320048557,0,0x0,8
tick,0x7ffdb840feb4,320063548,0,0x0,8
tick,0x7ffdb840feb4,320079523,0,0x0,8
tick,0x7ffdb840feb4,320094547,0,0x0,8
tick,0x7ffdb840feb4,320110358,0,0x0,8
tick,0x7ffdb840feb4,320125736,0,0x0,8
tick,0x7ffdb840feb4,320141769,0,0x0,8
tick,0x7ffdb840feb4,320157779,0,0x0,8
tick,0x7ffdb840feb4,320172781,0,0x0,8
tick,0x7ffdb840feb4,320187802,0,0x0,8
tick,0x7ffdb840feb4,320202583,0,0x0,8
tick,0x7ffdb840feb4,320218104,0,0x0,8
tick,0x7ffdb840feb4,320233749,0,0x0,8
tick,0x7ffdb840feb4,320249788,0,0x0,8
tick,0x7ffdb840feb4,320265487,0,0x0,8
tick,0x7ffdb840feb4,320281576,0,0x0,8
tick,0x7ffdb840feb4,320296808,0,0x0,8
tick,0x7ffdb840feb4,320312490,0,0x0,8
tick,0x7ffdb840feb4,320328155,0,0x0,8
tick,0x7ffdb840feb4,320343578,0,0x0,8
tick,0x7ffdb840feb4,320358759,0,0x0,8
tick,0x7ffdb840feb4,320374470,0,0x0,8
tick,0x7ffdb840feb4,320390174,0,0x0,8
tick,0x7ffdb840feb4,320405609,0,0x0,8
tick,0x7ffdb840feb4,320420591,0,0x0,8
tick,0x7ffdb840feb4,320436518,0,0x0,8
tick,0x7ffdb840feb4,320451598,0,0x0,8
tick,0x7ffdb840feb4,320466486,0,0x0,8
tick,0x7ffdb840feb4,320482129,0,0x0,8
tick,0x7ffdb840feb4,320497474,0,0x0,8
tick,0x7ffdb840feb4,320512656,0,0x0,8
tick,0x7ffdb840feb4,320528271,0,0x0,8
tick,0x7ffdb840feb4,320543419,0,0x0,8
tick,0x7ffdb840feb4,320558629,0,0x0,8
tick,0x7ffdb840feb4,320574489,0,0x0,8
tick,0x7ffdb840feb4,320589614,0,0x0,8
tick,0x7ffdb840feb4,320604796,0,0x0,8
tick,0x7ffdb840feb4,320620590,0,0x0,8
tick,0x7ffdb840feb4,320636594,0,0x0,8
tick,0x7ffdb840feb4,320652623,0,0x0,8
tick,0x7ffdb840feb4,320667469,0,0x0,8
tick,0x7ffdb840feb4,320682136,0,0x0,8
tick,0x7ffdb840feb4,320697621,0,0x0,8
tick,0x7ffdb840feb4,320712801,0,0x0,8
tick,0x7ffdb840feb4,320728824,0,0x0,8
tick,0x7ffdb840feb4,320744905,0,0x0,8
tick,0x7ffdb840feb4,320760201,0,0x0,8
tick,0x7ffdb840feb4,320775497,0,0x0,8
tick,0x7ffdb840feb4,320790641,0,0x0,8
tick,0x7ffdb840feb4,320805820,0,0x0,8
tick,0x7ffdb840feb4,320821822,0,0x0,8
tick,0x7ffdb840feb4,320837824,0,0x0,8
tick,0x7ffdb840feb4,320853820,0,0x0,8
tick,0x7ffdb840feb4,320869830,0,0x0,8
tick,0x7ffdb840feb4,320885306,0,0x0,8
tick,0x7ffdb840feb4,320900655,0,0x0,8
tick,0x7ffdb840feb4,320915327,0,0x0,8
tick,0x7ffdb840feb4,320930466,0,0x0,8
tick,0x7ffdb840feb4,320945918,0,0x0,8
tick,0x7ffdb840feb4,320960921,0,0x0,8
tick,0x7ffdb840feb4,320976474,0,0x0,8
tick,0x7ffdb840feb4,320991660,0,0x0,8
tick,0x7ffdb840feb4,321006315,0,0x0,8
tick,0x7ffdb840feb4,321021669,0,0x0,8
tick,0x7ffdb840feb4,321036803,0,0x0,8
tick,0x7ffdb840feb4,321052675,0,0x0,8
tick,0x7ffdb840feb4,321068468,0,0x0,8
tick,0x7ffdb840feb4,321083853,0,0x0,8
tick,0x7ffdb840feb4,321098641,0,0x0,8
tick,0x7ffdb840feb4,321113855,0,0x0,8
tick,0x7ffdb840feb4,321129109,0,0x0,8
tick,0x7ffdb840feb4,321143767,0,0x0,8
tick,0x7ffdb840feb4,321159750,0,0x0,8
tick,0x7ffdb840feb4,321174855,0,0x0,8
tick,0x7ffdb840feb4,321190132,0,0x0,8
tick,0x7ffdb840feb4,321205017,0,0x0,8
tick,0x7ffdb840feb4,321220466,0,0x0,8
tick,0x7ffdb840feb4,321235162,0,0x0,8
tick,0x7ffdb840feb4,321250695,0,0x0,8
tick,0x7ffdb840feb4,321266671,0,0x0,8
tick,0x7ffdb840feb4,321281705,0,0x0,8
tick,0x7ffdb840feb4,321297639,0,0x0,8
tick,0x7ffdb840feb4,321312711,0,0x0,8
tick,0x7ffdb840feb4,321327722,0,0x0,8
tick,0x7ffdb840feb4,321343524,0,0x0,8
tick,0x7ffdb840feb4,321358940,0,0x0,8
tick,0x7ffdb840feb4,321374382,0,0x0,8
tick,0x7ffdb840feb4,321390292,0,0x0,8
tick,0x7ffdb840feb4,321405765,0,0x0,8
tick,0x7ffdb840feb4,321421720,0,0x0,8
tick,0x7ffdb840feb4,321437730,0,0x0,8
tick,0x7ffdb840feb4,321452721,0,0x0,8
tick,0x7ffdb840feb4,321467724,0,0x0,8
tick,0x7ffdb840feb4,321482907,0,0x0,8
tick,0x7ffdb840feb4,321498597,0,0x0,8
tick,0x7ffdb840feb4,321514590,0,0x0,8
tick,0x7ffdb840feb4,321530598,0,0x0,8
tick,0x7ffdb840feb4,321546122,0,0x0,8
tick,0x7ffdb840feb4,321561740,0,0x0,8
tick,0x7ffdb840feb4,321576383,0,0x0,8
tick,0x7ffdb840feb4,321591745,0,0x0,8
tick,0x7ffdb840feb4,321607466,0,0x0,8
tick,0x7ffdb840feb4,321622744,0,0x0,8
tick,0x7ffdb840feb4,321638009,0,0x0,8
tick,0x7ffdb840feb4,321653923,0,0x0,8
tick,0x7ffdb840feb4,321669472,0,0x0,8
tick,0x7ffdb840feb4,321684930,0,0x0,8
tick,0x7ffdb840feb4,321700759,0,0x0,8
tick,0x7ffdb840feb4,321716335,0,0x0,8
tick,0x7ffdb840feb4,321731749,0,0x0,8
tick,0x7ffdb840feb4,321747349,0,0x0,8
tick,0x7ffdb840feb4,321762756,0,0x0,8
tick,0x7ffdb840feb4,321778401,0,0x0,8
tick,0x7ffdb840feb4,321793933,0,0x0,8
tick,0x7ffdb840feb4,321809942,0,0x0,8
tick,0x7ffdb840feb4,321825174,0,0x0,8
tick,0x7ffdb840feb4,321840172,0,0x0,8
tick,0x7ffdb840feb4,321856176,0,0x0,8
tick,0x7ffdb840feb4,321872176,0,0x0,8
tick,0x7ffdb840feb4,321888182,0,0x0,8
tick,0x7ffdb840feb4,321903770,0,0x0,8
tick,0x7ffdb840feb4,321919188,0,0x0,8
tick,0x7ffdb840feb4,321934410,0,0x0,8
tick,0x7ffdb840feb4,321949887,0,0x0,8
tick,0x7ffdb840feb4,321965102,0,0x0,8
tick,0x7ffdb840feb4,321980406,0,0x0,8
tick,0x7ffdb840feb4,321996403,0,0x0,8
tick,0x7ffdb840feb4,322011920,0,0x0,8
tick,0x7ffdb840feb4,322027364,0,0x0,8
tick,0x7ffdb840feb4,322042793,0,0x0,8
tick,0x7ffdb840feb4,322058798,0,0x0,8
tick,0x7ffdb840feb4,322074805,0,0x0,8
tick,0x7ffdb840feb4,322089804,0,0x0,8
tick,0x7ffdb840feb4,322105811,0,0x0,8
tick,0x7ffdb840feb4,322120449,0,0x0,8
tick,0x7ffdb840feb4,322135834,0,0x0,8
tick,0x7ffdb840feb4,322151805,0,0x0,8
tick,0x7ffdb840feb4,322167493,0,0x0,8
tick,0x7ffdb840feb4,322182816,0,0x0,8
tick,0x7ffdb840feb4,322197811,0,0x0,8
tick,0x7ffdb840feb4,322212984,0,0x0,8
tick,0x7ffdb840feb4,322228835,0,0x0,8
tick,0x7ffdb840feb4,322243994,0,0x0,8
tick,0x7ffdb840feb4,322259657,0,0x0,8
tick,0x7ffdb840feb4,322275543,0,0x0,8
tick,0x7ffdb840feb4,322291661,0,0x0,8
tick,0x7ffdb840feb4,322306999,0,0x0,8
tick,0x7ffdb840feb4,322322569,0,0x0,8
tick,0x7ffdb840feb4,322338563,0,0x0,8
tick,0x7ffdb840feb4,322354017,0,0x0,8
tick,0x7ffdb840feb4,322369572,0,0x0,8
tick,0x7ffdb840feb4,322385022,0,0x0,8
tick,0x7ffdb840feb4,322399923,0,0x0,8
tick,0x7ffdb840feb4,322415170,0,0x0,8
tick,0x7ffdb840feb4,322430833,0,0x0,8
tick,0x7ffdb840feb4,322446014,0,0x0,8
tick,0x7ffdb840feb4,322461841,0,0x0,8
tick,0x7ffdb840feb4,322477383,0,0x0,8
tick,0x7ffdb840feb4,322492844,0,0x0,8
tick,0x7ffdb840feb4,322508548,0,0x0,8
tick,0x7ffdb840feb4,322524022,0,0x0,8
tick,0x7ffdb840feb4,322540033,0,0x0,8
tick,0x7ffdb840feb4,322555685,0,0x0,8
tick,0x7ffdb840feb4,322571651,0,0x0,8
tick,0x7ffdb840feb4,322587659,0,0x0,8
tick,0x7ffdb840feb4,322603038,0,0x0,8
tick,0x7ffdb840feb4,322618496,0,0x0,8
tick,0x7ffdb840feb4,322634000,0,0x0,8
tick,0x7ffdb840feb4,322650010,0,0x0,8
tick,0x7ffdb840feb4,322665473,0,0x0,8
tick,0x7ffdb840feb4,322680874,0,0x0,8
tick,0x7ffdb840feb4,322695983,0,0x0,8
tick,0x7ffdb840feb4,322710978,0,0x0,8
tick,0x7ffdb840feb4,322726223,0,0x0,8
tick,0x7ffdb840feb4,322741876,0,0x0,8
tick,0x7ffdb840feb4,322757051,0,0x0,8
tick,0x7ffdb840feb4,322772872,0,0x0,8
tick,0x7ffdb840feb4,322788079,0,0x0,8
tick,0x7ffdb840feb4,322802884,0,0x0,8
tick,0x7ffdb840feb4,322818887,0,0x0,8
tick,0x7ffdb840feb4,322834055,0,0x0,8
tick,0x7ffdb840feb4,322849052,0,0x0,8
tick,0x7ffdb840feb4,322865054,0,0x0,8
tick,0x7ffdb840feb4,322881064,0,0x0,8
tick,0x7ffdb840feb4,322896994,0,0x0,8
tick,0x7ffdb840feb4,322913064,0,0x0,8
tick,0x7ffdb840feb4,322927921,0,0x0,8
tick,0x7ffdb840feb4,322943889,0,0x0,8
tick,0x7ffdb840feb4,322959541,0,0x0,8
tick,0x7ffdb840feb4,322974799,0,0x0,8
tick,0x7ffdb840feb4,322990602,0,0x0,8
tick,0x7ffdb840feb4,323005565,0,0x0,8
tick,0x7ffdb840feb4,323020477,0,0x0,8
tick,0x7ffdb840feb4,323035831,0,0x0,8
tick,0x7ffdb840feb4,323051910,0,0x0,8
tick,0x7ffdb840feb4,323067482,0,0x0,8
tick,0x7ffdb840feb4,323083086,0,0x0,8
tick,0x7ffdb840feb4,323097992,0,0x0,8
tick,0x7ffdb840feb4,323113096,0,0x0,8
tick,0x7ffdb840feb4,323128923,0,0x0,8
tick,0x7ffdb840feb4,323144093,0,0x0,8
tick,0x7ffdb840feb4,323160108,0,0x0,8
tick,0x7ffdb840feb4,323175259,0,0x0,8
tick,0x7ffdb840feb4,323190182,0,0x0,8
tick,0x7ffdb840feb4,323205889,0,0x0,8
tick,0x7ffdb840feb4,323220937,0,0x0,8
tick,0x7ffdb840feb4,323236898,0,0x0,8
tick,0x7ffdb840feb4,323252931,0,0x0,8
tick,0x7ffdb840feb4,323268901,0,0x0,8
tick,0x7ffdb840feb4,323284118,0,0x0,8
tick,0x7ffdb840feb4,323299812,0,0x0,8
tick,0x7ffdb840feb4,323315114,0,0x0,8
tick,0x7ffdb840feb4,323331127,0,0x0,8
tick,0x7ffdb840feb4,323346701,0,0x0,8
tick,0x7ffdb840feb4,323361942,0,0x0,8
tick,0x7ffdb840feb4,323376944,0,0x0,8
tick,0x7ffdb840feb4,323392126,0,0x0,8
tick,0x7ffdb840feb4,323407922,0,0x0,8
tick,0x7ffdb840feb4,323423932,0,0x0,8
tick,0x7ffdb840feb4,323439725,0,0x0,8
tick,0x7ffdb840feb4,323455131,0,0x0,8
tick,0x7ffdb840feb4,323470479,0,0x0,8
tick,0x7ffdb840feb4,323485138,0,0x0,8
tick,0x7ffdb840feb4,323500811,0,0x0,8
tick,0x7ffdb840feb4,323516351,0,0x0,8
tick,0x7ffdb840feb4,323532004,0,0x0,8
tick,0x7ffdb840feb4,323547820,0,0x0,8
tick,0x7ffdb840feb4,323562973,0,0x0,8
tick,0x7ffdb840feb4,323578150,0,0x0,8
tick,0x7ffdb840feb4,323594158,0,0x0,8
tick,0x7ffdb840feb4,323609163,0,0x0,8
tick,0x7ffdb840feb4,323625149,0,0x0,8
tick,0x7ffdb840feb4,323640374,0,0x0,8
tick,0x7ffdb840feb4,323655656,0,0x0,8
tick,0x7ffdb840feb4,323670979,0,0x0,8
tick,0x7ffdb840feb4,323686030,0,0x0,8
tick,0x7ffdb840feb4,323701984,0,0x0,8
tick,0x7ffdb840feb4,323717985,0,0x0,8
tick,0x7ffdb840feb4,323733168,0,0x0,8
tick,0x7ffdb840feb4,323748823,0,0x0,8
tick,0x7ffdb840feb4,323764175,0,0x0,8
tick,0x7ffdb840feb4,323779151,0,0x0,8
tick,0x7ffdb840feb4,323795158,0,0x0,8
tick,0x7ffdb840feb4,323810163,0,0x0,8
tick,0x7ffdb840feb4,323826172,0,0x0,8
tick,0x7ffdb840feb4,323841998,0,0x0,8
tick,0x7ffdb840feb4,323857003,0,0x0,8
tick,0x7ffdb840feb4,323873009,0,0x0,8
tick,0x7ffdb840feb4,323888015,0,0x0,8
tick,0x7ffdb840feb4,323903173,0,0x0,8
tick,0x7ffdb840feb4,323918840,0,0x0,8
tick,0x7ffdb840feb4,323934191,0,0x0,8
tick,0x7ffdb840feb4,323949814,0,0x0,8
tick,0x7ffdb840feb4,323965198,0,0x0,8
tick,0x7ffdb840feb4,323981020,0,0x0,8
tick,0x7ffdb840feb4,323996209,0,0x0,8
tick,0x7ffdb840feb4,324012177,0,0x0,8
tick,0x7ffdb840feb4,324027601,0,0x0,8
tick,0x7ffdb840feb4,324043612,0,0x0,8
tick,0x7ffdb840feb4,324059606,0,0x0,8
tick,0x7ffdb840feb4,324075623,0,0x0,8
tick,0x7ffdb840feb4,324091621,0,0x0,8
tick,0x7ffdb840feb4,324107618,0,0x0,8
tick,0x7ffdb840feb4,324123046,0,0x0,8
tick,0x7ffdb840feb4,324138610,0,0x0,8
tick,0x7ffdb840feb4,324154220,0,0x0,8
tick,0x7ffdb840feb4,324169931,0,0x0,8
tick,0x7ffdb840feb4,324185117,0,0x0,8
tick,0x7ffdb840feb4,324200406,0,0x0,8
tick,0x7ffdb840feb4,324216487,0,0x0,8
tick,0x7ffdb840feb4,324232049,0,0x0,8
tick,0x7ffdb840feb4,324248058,0,0x0,8
tick,0x7ffdb840feb4,324262922,0,0x0,8
tick,0x7ffdb840feb4,324278944,0,0x0,8
tick,0x7ffdb840feb4,324294923,0,0x0,8
tick,0x7ffdb840feb4,324310721,0,0x0,8
tick,0x7ffdb840feb4,324326063,0,0x0,8
tick,0x7ffdb840feb4,324341062,0,0x0,8
tick,0x7ffdb840feb4,324357068,0,0x0,8
tick,0x7ffdb840feb4,324373072,0,0x0,8
tick,0x7ffdb840feb4,324388934,0,0x0,8
tick,0x7ffdb840feb4,324404261,0,0x0,8
tick,0x7ffdb840feb4,324419093,0,0x0,8
tick,0x7ffdb840feb4,324434252,0,0x0,8
tick,0x7ffdb840feb4,324449910,0,0x0,8
tick,0x7ffdb840feb4,324465007,0,0x0,8
tick,0x7ffdb840feb4,324481012,0,0x0,8
tick,0x7ffdb840feb4,324495926,0,0x0,8
tick,0x7ffdb840feb4,324511227,0,0x0,8
tick,0x7ffdb840feb4,324526932,0,0x0,8
tick,0x7ffdb840feb4,324542089,0,0x0,8
tick,0x7ffdb840feb4,324557712,0,0x0,8
tick,0x7ffdb840feb4,324572721,0,0x0,8
tick,0x7ffdb840feb4,324588731,0,0x0,8
tick,0x7ffdb840feb4,324604276,0,0x0,8
tick,0x7ffdb840feb4,324619409,0,0x0,8
tick,0x7ffdb840feb4,324635283,0,0x0,8
tick,0x7ffdb840feb4,324651100,0,0x0,8
tick,0x7ffdb840feb4,324666496,0,0x0,8
tick,0x7ffdb840feb4,324682493,0,0x0,8
tick,0x7ffdb840feb4,324697931,0,0x0,8
tick,0x7ffdb840feb4,324713284,0,0x0,8
tick,0x7ffdb840feb4,324728755,0,0x0,8
tick,0x7ffdb840feb4,324744294,0,0x0,8
tick,0x7ffdb840feb4,324760295,0,0x0,8
tick,0x7ffdb840feb4,324775462,0,0x0,8
tick,0x7ffdb840feb4,324791116,0,0x0,8
tick,0x7ffdb840feb4,324806296,0,0x0,8
tick,0x7ffdb840feb4,324822124,0,0x0,8
tick,0x7ffdb840feb4,324837301,0,0x0,8
tick,0x7ffdb840feb4,324852308,0,0x0,8
tick,0x7ffdb840feb4,324868312,0,0x0,8
tick,0x7ffdb840feb4,324884316,0,0x0,8
tick,0x7ffdb840feb4,324900313,0,0x0,8
tick,0x7ffdb840feb4,324915477,0,0x0,8
tick,0x7ffdb840feb4,324930471,0,0x0,8
tick,0x7ffdb840feb4,324946428,0,0x0,8
tick,0x7ffdb840feb4,324962313,0,0x0,8
tick,0x7ffdb840feb4,324977881,0,0x0,8
tick,0x7ffdb840feb4,324993137,0,0x0,8
tick,0x7ffdb840feb4,325008883,0,0x0,8
tick,0x7ffdb840feb4,325024904,0,0x0,8
tick,0x7ffdb840feb4,325040294,0,0x0,8
tick,0x7ffdb840feb4,325056233,0,0x0,8
tick,0x7ffdb840feb4,325072163,0,0x0,8
tick,0x7ffdb840feb4,325087329,0,0x0,8
tick,0x7ffdb840feb4,325103335,0,0x0,8
tick,0x7ffdb840feb4,325118339,0,0x0,8
tick,0x7ffdb840feb4,325134320,0,0x0,8
tick,0x7ffdb840feb4,325149826,0,0x0,8
tick,0x7ffdb840feb4,325164807,0,0x0,8
tick,0x7ffdb840feb4,325180163,0,0x0,8
tick,0x7ffdb840feb4,325196170,0,0x0,8
tick,0x7ffdb840feb4,325212173,0,0x0,8
tick,0x7ffdb840feb4,325228189,0,0x0,8
tick,0x7ffdb840feb4,325243364,0,0x0,8
tick,0x7ffdb840feb4,325258617,0,0x0,8
tick,0x7ffdb840feb4,325273347,0,0x0,8
tick,0x7ffdb840feb4,325289177,0,0x0,8
tick,0x7ffdb840feb4,325305172,0,0x0,8
tick,0x7ffdb840feb4,325321174,0,0x0,8
tick,0x7ffdb840feb4,325337173,0,0x0,8
tick,0x7ffdb840feb4,325353192,0,0x0,8
tick,0x7ffdb840feb4,325368368,0,0x0,8
tick,0x7ffdb840feb4,325383192,0,0x0,8
tick,0x7ffdb840feb4,325398940,0,0x0,8
tick,0x7ffdb840feb4,325414445,0,0x0,8
tick,0x7ffdb840feb4,325430387,0,0x0,8
tick,0x7ffdb840feb4,325446389,0,0x0,8
tick,0x7ffdb840feb4,325461211,0,0x0,8
tick,0x7ffdb840feb4,325476392,0,0x0,8
tick,0x7ffdb840feb4,325492390,0,0x0,8
tick,0x7ffdb840feb4,325508420,0,0x0,8
tick,0x7ffdb840feb4,325524422,0,0x0,8
tick,0x7ffdb840feb4,325540401,0,0x0,8
tick,0x7ffdb840feb4,325556407,0,0x0,8
tick,0x7ffdb840feb4,325572412,0,0x0,8
tick,0x7ffdb840feb4,325588478,0,0x0,8
tick,0x7ffdb840feb4,325603412,0,0x0,8
tick,0x7ffdb840feb4,325618426,0,0x0,8
tick,0x7ffdb840feb4,325634219,0,0x0,8
tick,0x7ffdb840feb4,325650240,0,0x0,8
tick,0x7ffdb840feb4,325665414,0,0x0,8
tick,0x7ffdb840feb4,325680415,0,0x0,8
tick,0x7ffdb840feb4,325696416,0,0x0,8
tick,0x7ffdb840feb4,325712245,0,0x0,8
tick,0x7ffdb840feb4,325727246,0,0x0,8
tick,0x7ffdb840feb4,325743232,0,0x0,8
tick,0x7ffdb840feb4,325758433,0,0x0,8
tick,0x7ffdb840feb4,325774426,0,0x0,8
tick,0x7ffdb840feb4,325790252,0,0x0,8
tick,0x7ffdb840feb4,325805418,0,0x0,8
tick,0x7ffdb840feb4,325820423,0,0x0,8
tick,0x7ffdb840feb4,325836238,0,0x0,8
tick,0x7ffdb840feb4,325851396,0,0x0,8
tick,0x7ffdb840feb4,325866952,0,0x0,8
tick,0x7ffdb840feb4,325882960,0,0x0,8
tick,0x7ffdb840feb4,325898963,0,0x0,8
tick,0x7ffdb840feb4,325914940,0,0x0,8
tick,0x7ffdb840feb4,325930933,0,0x0,8
tick,0x7ffdb840feb4,325946955,0,0x0,8
tick,0x7ffdb840feb4,325962257,0,0x0,8
tick,0x7ffdb840feb4,325977447,0,0x0,8
tick,0x7ffdb840feb4,325993277,0,0x0,8
tick,0x7ffdb840feb4,326008449,0,0x0,8
tick,0x7ffdb840feb4,326024470,0,0x0,8
tick,0x7ffdb840feb4,326039455,0,0x0,8
tick,0x7ffdb840feb4,326055466,0,0x0,8
tick,0x7ffdb840feb4,326071288,0,0x0,8
tick,0x7ffdb840feb4,326087286,0,0x0,8
tick,0x7ffdb840feb4,326103274,0,0x0,8
tick,0x7ffdb840feb4,326118773,0,0x0,8
tick,0x7ffdb840feb4,326134466,0,0x0,8
tick,0x7ffdb840feb4,326149467,0,0x0,8
tick,0x7ffdb840feb4,326165474,0,0x0,8
tick,0x7ffdb840feb4,326181292,0,0x0,8
tick,0x7ffdb840feb4,326196465,0,0x0,8
tick,0x7ffdb840feb4,326212497,0,0x0,8
tick,0x7ffdb840feb4,326227308,0,0x0,8
tick,0x7ffdb840feb4,326243301,0,0x0,8
tick,0x7ffdb840feb4,326257678,0,0x0,8
tick,0x7ffdb840feb4,326273461,0,0x0,8
tick,0x7ffdb840feb4,326289465,0,0x0,8
tick,0x7ffdb840feb4,326305308,0,0x0,8
tick,0x7ffdb840feb4,326320466,0,0x0,8
tick,0x7ffdb840feb4,326335658,0,0x0,8
tick,0x7ffdb840feb4,326350831,0,0x0,8
tick,0x7ffdb840feb4,326366501,0,0x0,8
tick,0x7ffdb840feb4,326382317,0,0x0,8
tick,0x7ffdb840feb4,326397940,0,0x0,8
tick,0x7ffdb840feb4,326413086,0,0x0,8
tick,0x7ffdb840feb4,326428922,0,0x0,8
tick,0x7ffdb840feb4,326444487,0,0x0,8
tick,0x7ffdb840feb4,326459635,0,0x0,8
tick,0x7ffdb840feb4,326475333,0,0x0,8
tick,0x7ffdb840feb4,326491118,0,0x0,8
tick,0x7ffdb840feb4,326506496,0,0x0,8
tick,0x7ffdb840feb4,326521334,0,0x0,8
tick,0x7ffdb840feb4,326537121,0,0x0,8
tick,0x7ffdb840feb4,326552330,0,0x0,8
tick,0x7ffdb840feb4,326567330,0,0x0,8
tick,0x7ffdb840feb4,326582506,0,0x0,8
tick,0x7ffdb840feb4,326598525,0,0x0,8
tick,0x7ffdb840feb4,326613696,0,0x0,8
tick,0x7ffdb840feb4,326628516,0,0x0,8
tick,0x7ffdb840feb4,326643506,0,0x0,8
tick,0x7ffdb840feb4,326659505,0,0x0,8
tick,0x7ffdb840feb4,326675004,0,0x0,8
tick,0x7ffdb840feb4,326690438,0,0x0,8
tick,0x7ffdb840feb4,326705434,0,0x0,8
tick,0x7ffdb840feb4,326720955,0,0x0,8
tick,0x7ffdb840feb4,326736534,0,0x0,8
tick,0x7ffdb840feb4,326751353,0,0x0,8
tick,0x7ffdb840feb4,326766508,0,0x0,8
tick,0x7ffdb840feb4,326781360,0,0x0,8
tick,0x7ffdb840feb4,326796361,0,0x0,8
tick,0x7ffdb840feb4,326812236,0,0x0,8
tick,0x7ffdb840feb4,326827571,0,0x0,8
tick,0x7ffdb840feb4,326842365,0,0x0,8
tick,0x7ffdb840feb4,326857548,0,0x0,8
tick,0x7ffdb840feb4,326873377,0,0x0,8
tick,0x7ffdb840feb4,326888378,0,0x0,8
tick,0x7ffdb840feb4,326904383,0,0x0,8
tick,0x7ffdb840feb4,326919898,0,0x0,8
tick,0x7ffdb840feb4,326935558,0,0x0,8
tick,0x7ffdb840feb4,326950942,0,0x0,8
tick,0x7ffdb840feb4,326966508,0,0x0,8
tick,0x7ffdb840feb4,326981383,0,0x0,8
tick,0x7ffdb840feb4,326996565,0,0x0,8
tick,0x7ffdb840feb4,327012568,0,0x0,8
tick,0x7ffdb840feb4,327028327,0,0x0,8
tick,0x7ffdb840feb4,327043526,0,0x0,8
tick,0x7ffdb840feb4,327058644,0,0x0,8
tick,0x7ffdb840feb4,327074562,0,0x0,8
tick,0x7ffdb840feb4,327089928,0,0x0,8
tick,0x7ffdb840feb4,327105922,0,0x0,8
tick,0x7ffdb840feb4,327121229,0,0x0,8
tick,0x7ffdb840feb4,327136588,0,0x0,8
tick,0x7ffdb840feb4,327152405,0,0x0,8
tick,0x7ffdb840feb4,327167618,0,0x0,8
tick,0x7ffdb840feb4,327183411,0,0x0,8
tick,0x7ffdb840feb4,327198413,0,0x0,8
tick,0x7ffdb840feb4,327214183,0,0x0,8
tick,0x7ffdb840feb4,327229458,0,0x0,8
tick,0x7ffdb840feb4,327245539,0,0x0,8
tick,0x7ffdb840feb4,327261281,0,0x0,8
tick,0x7ffdb840feb4,327276491,0,0x0,8
tick,0x7ffdb840feb4,327291786,0,0x0,8
tick,0x7ffdb840feb4,327307321,0,0x0,8
tick,0x7ffdb840feb4,327322794,0,0x0,8
tick,0x7ffdb840feb4,327337767,0,0x0,8
tick,0x7ffdb840feb4,327353428,0,0x0,8
tick,0x7ffdb840feb4,327368680,0,0x0,8
tick,0x7ffdb840feb4,327384601,0,0x0,8
tick,0x7ffdb840feb4,327400187,0,0x0,8
tick,0x7ffdb840feb4,327415503,0,0x0,8
tick,0x7ffdb840feb4,327430615,0,0x0,8
tick,0x7ffdb840feb4,327446472,0,0x0,8
tick,0x7ffdb840feb4,327462445,0,0x0,8
tick,0x7ffdb840feb4,327478449,0,0x0,8
tick,0x7ffdb840feb4,327493625,0,0x0,8
tick,0x7ffdb840feb4,327508444,0,0x0,8
tick,0x7ffdb840feb4,327523577,0,0x0,8
tick,0x7ffdb840feb4,327539622,0,0x0,8
tick,0x7ffdb840feb4,327554626,0,0x0,8
tick,0x7ffdb840feb4,327570455,0,0x0,8
tick,0x7ffdb840feb4,327586449,0,0x0,8
tick,0x7ffdb840feb4,327602452,0,0x0,8
tick,0x7ffdb840feb4,327617468,0,0x0,8
tick,0x7ffdb840feb4,327632455,0,0x0,8
tick,0x7ffdb840feb4,327647460,0,0x0,8
tick,0x7ffdb840feb4,327663465,0,0x0,8
tick,0x7ffdb840feb4,327678466,0,0x0,8
tick,0x7ffdb840feb4,327693635,0,0x0,8
tick,0x7ffdb840feb4,327709068,0,0x0,8
tick,0x7ffdb840feb4,327724655,0,0x0,8
tick,0x7ffdb840feb4,327739917,0,0x0,8
tick,0x7ffdb840feb4,327755651,0,0x0,8
tick,0x7ffdb840feb4,327770554,0,0x0,8
tick,0x7ffdb840feb4,327786560,0,0x0,8
tick,0x7ffdb840feb4,327802457,0,0x0,8
tick,0x7ffdb840feb4,327817507,0,0x0,8
tick,0x7ffdb840feb4,327833482,0,0x0,8
tick,0x7ffdb840feb4,327847810,0,0x0,8
tick,0x7ffdb840feb4,327863487,0,0x0,8
tick,0x7ffdb840feb4,327878624,0,0x0,8
tick,0x7ffdb840feb4,327894630,0,0x0,8
tick,0x7ffdb840feb4,327910634,0,0x0,8
tick,0x7ffdb840feb4,327926638,0,0x0,8
tick,0x7ffdb840feb4,327942491,0,0x0,8
tick,0x7ffdb840feb4,327958502,0,0x0,8
tick,0x7ffdb840feb4,327973672,0,0x0,8
tick,0x7ffdb840feb4,327989637,0,0x0,8
tick,0x7ffdb840feb4,328004680,0,0x0,8
tick,0x7ffdb840feb4,328020509,0,0x0,8
tick,0x7ffdb840feb4,328035688,0,0x0,8
tick,0x7ffdb840feb4,328050839,0,0x0,8
tick,0x7ffdb840feb4,328065840,0,0x0,8
tick,0x7ffdb840feb4,328081177,0,0x0,8
tick,0x7ffdb840feb4,328097045,0,0x0,8
tick,0x7ffdb840feb4,328112524,0,0x0,8
tick,0x7ffdb840feb4,328128051,0,0x0,8
tick,0x7ffdb840feb4,328143518,0,0x0,8
tick,0x7ffdb840feb4,328159530,0,0x0,8
tick,0x7ffdb840feb4,328174697,0,0x0,8
tick,0x7ffdb840feb4,328189492,0,0x0,8
tick,0x7ffdb840feb4,328204705,0,0x0,8
tick,0x7ffdb840feb4,328220089,0,0x0,8
tick,0x7ffdb840feb4,328235535,0,0x0,8
tick,0x7ffdb840feb4,328250341,0,0x0,8
tick,0x7ffdb840feb4,328266347,0,0x0,8
tick,0x7ffdb840feb4,328281517,0,0x0,8
tick,0x7ffdb840feb4,328297177,0,0x0,8
tick,0x7ffdb840feb4,328312541,0,0x0,8
tick,0x7ffdb840feb4,328327724,0,0x0,8
tick,0x7ffdb840feb4,328343538,0,0x0,8
tick,0x7ffdb840feb4,328359464,0,0x0,8
tick,0x7ffdb840feb4,328374719,0,0x0,8
tick,0x7ffdb840feb4,328390516,0,0x0,8
tick,0x7ffdb840feb4,328405732,0,0x0,8
tick,0x7ffdb840feb4,328420944,0,0x0,8
tick,0x7ffdb840feb4,328436190,0,0x0,8
tick,0x7ffdb840feb4,328451552,0,0x0,8
tick,0x7ffdb840feb4,328467659,0,0x0,8
tick,0x7ffdb840feb4,328483554,0,0x0,8
tick,0x7ffdb840feb4,328498839,0,0x0,8
tick,0x7ffdb840feb4,328514150,0,0x0,8
tick,0x7ffdb840feb4,328529567,0,0x0,8
tick,0x7ffdb840feb4,328545570,0,0x0,8
tick,0x7ffdb840feb4,328560718,0,0x0,8
tick,0x7ffdb840feb4,328575756,0,0x0,8
tick,0x7ffdb840feb4,328591518,0,0x0,8
tick,0x7ffdb840feb4,328606761,0,0x0,8
tick,0x7ffdb840feb4,328622579,0,0x0,8
tick,0x7ffdb840feb4,328637917,0,0x0,8
tick,0x7ffdb840feb4,328653589,0,0x0,8
tick,0x7ffdb840feb4,328668610,0,0x0,8
tick,0x7ffdb840feb4,328683758,0,0x0,8
tick,0x7ffdb840feb4,328699841,0,0x0,8
tick,0x7ffdb840feb4,328715088,0,0x0,8
tick,0x7ffdb840feb4,328730523,0,0x0,8
tick,0x7ffdb840feb4,328746519,0,0x0,8
tick,0x7ffdb840feb4,328762598,0,0x0,8
tick,0x7ffdb840feb4,328777600,0,0x0,8
tick,0x7ffdb840feb4,328792597,0,0x0,8
tick,0x7ffdb840feb4,328807774,0,0x0,8
tick,0x7ffdb840feb4,328823604,0,0x0,8
tick,0x7ffdb840feb4,328838488,0,0x0,8
tick,0x7ffdb840feb4,328853781,0,0x0,8
tick,0x7ffdb840feb4,328869841,0,0x0,8
tick,0x7ffdb840feb4,328885787,0,0x0,8
tick,0x7ffdb840feb4,328900784,0,0x0,8
tick,0x7ffdb840feb4,328915784,0,0x0,8
tick,0x7ffdb840feb4,328931798,0,0x0,8
tick,0x7ffdb840feb4,328947890,0,0x0,8
tick,0x7ffdb840feb4,328963607,0,0x0,8
tick,0x7ffdb840feb4,328979398,0,0x0,8
tick,0x7ffdb840feb4,328994804,0,0x0,8
tick,0x7ffdb840feb4,329010812,0,0x0,8
tick,0x7ffdb840feb4,329026798,0,0x0,8
tick,0x7ffdb840feb4,329042628,0,0x0,8
tick,0x7ffdb840feb4,329057638,0,0x0,8
tick,0x7ffdb840feb4,329072629,0,0x0,8
tick,0x7ffdb840feb4,329088651,0,0x0,8
tick,0x7ffdb840feb4,329103795,0,0x0,8
tick,0x7ffdb840feb4,329119815,0,0x0,8
tick,0x7ffdb840feb4,329134810,0,0x0,8
tick,0x7ffdb840feb4,329150844,0,0x0,8
tick,0x7ffdb840feb4,329166510,0,0x0,8
tick,0x7ffdb840feb4,329181174,0,0x0,8
tick,0x7ffdb840feb4,329196830,0,0x0,8
tick,0x7ffdb840feb4,329212646,0,0x0,8
tick,0x7ffdb840feb4,329228648,0,0x0,8
tick,0x7ffdb840feb4,329243829,0,0x0,8
tick,0x7ffdb840feb4,329258680,0,0x0,8
tick,0x7ffdb840feb4,329273828,0,0x0,8
tick,0x7ffdb840feb4,329289664,0,0x0,8
tick,0x7ffdb840feb4,329304661,0,0x0,8
tick,0x7ffdb840feb4,329319895,0,0x0,8
tick,0x7ffdb840feb4,329335651,0,0x0,8
tick,0x7ffdb840feb4,329350649,0,0x0,8
tick,0x7ffdb840feb4,329366518,0,0x0,8
tick,0x7ffdb840feb4,329381666,0,0x0,8
tick,0x7ffdb840feb4,329396939,0,0x0,8
tick,0x7ffdb840feb4,329412680,0,0x0,8
tick,0x7ffdb840feb4,329428071,0,0x0,8
tick,0x7ffdb840feb4,329443631,0,0x0,8
tick,0x7ffdb840feb4,329459296,0,0x0,8
tick,0x7ffdb840feb4,329474886,0,0x0,8
tick,0x7ffdb840feb4,329489687,0,0x0,8
tick,0x7ffdb840feb4,329505659,0,0x0,8
tick,0x7ffdb840feb4,329520934,0,0x0,8
tick,0x7ffdb840feb4,329535902,0,0x0,8
tick,0x7ffdb840feb4,329551110,0,0x0,8
tick,0x7ffdb840feb4,329567115,0,0x0,8
tick,0x7ffdb840feb4,329582693,0,0x0,8
tick,0x7ffdb840feb4,329597880,0,0x0,8
tick,0x7ffdb840feb4,329613698,0,0x0,8
tick,0x7ffdb840feb4,329628890,0,0x0,8
tick,0x7ffdb840feb4,329644875,0,0x0,8
tick,0x7ffdb840feb4,329660281,0,0x0,8
tick,0x7ffdb840feb4,329675331,0,0x0,8
tick,0x7ffdb840feb4,329690649,0,0x0,8
tick,0x7ffdb840feb4,329706643,0,0x0,8
tick,0x7ffdb840feb4,329722709,0,0x0,8
tick,0x7ffdb840feb4,329738728,0,0x0,8
tick,0x7ffdb840feb4,329753706,0,0x0,8
tick,0x7ffdb840feb4,329769328,0,0x0,8
tick,0x7ffdb840feb4,329784890,0,0x0,8
tick,0x7ffdb840feb4,329800071,0,0x0,8
tick,0x7ffdb840feb4,329815512,0,0x0,8
tick,0x7ffdb840feb4,329831125,0,0x0,8
tick,0x7ffdb840feb4,329845917,0,0x0,8
tick,0x7ffdb840feb4,329861729,0,0x0,8
tick,0x7ffdb840feb4,329876905,0,0x0,8
tick,0x7ffdb840feb4,329892647,0,0x0,8
tick,0x7ffdb840feb4,329908658,0,0x0,8
tick,0x7ffdb840feb4,329924658,0,0x0,8
tick,0x7ffdb840feb4,329940660,0,0x0,8
tick,0x7ffdb840feb4,329955937,0,0x0,8
tick,0x7ffdb840feb4,329971745,0,0x0,8
tick,0x7ffdb840feb4,329986742,0,0x0,8
tick,0x7ffdb840feb4,330002741,0,0x0,8
tick,0x7ffdb840feb4,330018749,0,0x0,8
tick,0x7ffdb840feb4,330033915,0,0x0,8
tick,0x7ffdb840feb4,330049929,0,0x0,8
tick,0x7ffdb840feb4,330064931,0,0x0,8
tick,0x7ffdb840feb4,330080767,0,0x0,8
tick,0x7ffdb840feb4,330096476,0,0x0,8
tick,0x7ffdb840feb4,330111766,0,0x0,8
tick,0x7ffdb840feb4,330126940,0,0x0,8
tick,0x7ffdb840feb4,330142758,0,0x0,8
tick,0x7ffdb840feb4,330158462,0,0x0,8
tick,0x7ffdb840feb4,330173773,0,0x0,8
tick,0x7ffdb840feb4,330189251,0,0x0,8
tick,0x7ffdb840feb4,330203946,0,0x0,8
tick,0x7ffdb840feb4,330219517,0,0x0,8
tick,0x7ffdb840feb4,330234943,0,0x0,8
tick,0x7ffdb840feb4,330250850,0,0x0,8
tick,0x7ffdb840feb4,330266958,0,0x0,8
tick,0x7ffdb840feb4,330282977,0,0x0,8
tick,0x7ffdb840feb4,330298209,0,0x0,8
tick,0x7ffdb840feb4,330313794,0,0x0,8
tick,0x7ffdb840feb4,330329788,0,0x0,8
tick,0x7ffdb840feb4,330344345,0,0x0,8
tick,0x7ffdb840feb4,330359553,0,0x0,8
tick,0x7ffdb840feb4,330374980,0,0x0,8
tick,0x7ffdb840feb4,330390439,0,0x0,8
tick,0x7ffdb840feb4,330405465,0,0x0,8
tick,0x7ffdb840feb4,330420976,0,0x0,8
tick,0x7ffdb840feb4,330436243,0,0x0,8
tick,0x7ffdb840feb4,330451799,0,0x0,8
tick,0x7ffdb840feb4,330466797,0,0x0,8
tick,0x7ffdb840feb4,330482591,0,0x0,8
tick,0x7ffdb840feb4,330497599,0,0x0,8
tick,0x7ffdb840feb4,330512804,0,0x0,8
tick,0x7ffdb840feb4,330528604,0,0x0,8
tick,0x7ffdb840feb4,330543829,0,0x0,8
tick,0x7ffdb840feb4,330559019,0,0x0,8
tick,0x7ffdb840feb4,330574984,0,0x0,8
tick,0x7ffdb840feb4,330589828,0,0x0,8
tick,0x7ffdb840feb4,330605010,0,0x0,8
tick,0x7ffdb840feb4,330620828,0,0x0,8
tick,0x7ffdb840feb4,330635999,0,0x0,8
tick,0x7ffdb840feb4,330651819,0,0x0,8
tick,0x7ffdb840feb4,330667129,0,0x0,8
tick,0x7ffdb840feb4,330682831,0,0x0,8
tick,0x7ffdb840feb4,330698830,0,0x0,8
tick,0x7ffdb840feb4,330714009,0,0x0,8
tick,0x7ffdb840feb4,330729289,0,0x0,8
tick,0x7ffdb840feb4,330744282,0,0x0,8
tick,0x7ffdb840feb4,330760303,0,0x0,8
tick,0x7ffdb840feb4,330775850,0,0x0,8
tick,0x7ffdb840feb4,330791676,0,0x0,8
tick,0x7ffdb840feb4,330807680,0,0x0,8
tick,0x7ffdb840feb4,330822848,0,0x0,8
tick,0x7ffdb840feb4,330838495,0,0x0,8
tick,0x7ffdb840feb4,330853851,0,0x0,8
tick,0x7ffdb840feb4,330869860,0,0x0,8
tick,0x7ffdb840feb4,330885873,0,0x0,8
tick,0x7ffdb840feb4,330901879,0,0x0,8
tick,0x7ffdb840feb4,330917882,0,0x0,8
tick,0x7ffdb840feb4,330933882,0,0x0,8
tick,0x7ffdb840feb4,330949870,0,0x0,8
tick,0x7ffdb840feb4,330965537,0,0x0,8
tick,0x7ffdb840feb4,330980672,0,0x0,8
tick,0x7ffdb840feb4,330995864,0,0x0,8
tick,0x7ffdb840feb4,331011867,0,0x0,8
tick,0x7ffdb840feb4,331027428,0,0x0,8
tick,0x7ffdb840feb4,331042884,0,0x0,8
tick,0x7ffdb840feb4,331058884,0,0x0,8
tick,0x7ffdb840feb4,331074049,0,0x0,8
tick,0x7ffdb840feb4,331089863,0,0x0,8
tick,0x7ffdb840feb4,331105060,0,0x0,8
tick,0x7ffdb840feb4,331121056,0,0x0,8
tick,0x7ffdb840feb4,331136564,0,0x0,8
tick,0x7ffdb840feb4,331151897,0,0x0,8
tick,0x7ffdb840feb4,331167526,0,0x0,8
tick,0x7ffdb840feb4,331182886,0,0x0,8
tick,0x7ffdb840feb4,331198859,0,0x0,8
tick,0x7ffdb840feb4,331213991,0,0x0,8
tick,0x7ffdb840feb4,331229702,0,0x0,8
tick,0x7ffdb840feb4,331245073,0,0x0,8
tick,0x7ffdb840feb4,331260700,0,0x0,8
tick,0x7ffdb840feb4,331276076,0,0x0,8
tick,0x7ffdb840feb4,331291088,0,0x0,8
tick,0x7ffdb840feb4,331307078,0,0x0,8
tick,0x7ffdb840feb4,331322086,0,0x0,8
tick,0x7ffdb840feb4,331338084,0,0x0,8
tick,0x7ffdb840feb4,331354074,0,0x0,8
tick,0x7ffdb840feb4,331370092,0,0x0,8
tick,0x7ffdb840feb4,331385858,0,0x0,8
tick,0x7ffdb840feb4,331401113,0,0x0,8
tick,0x7ffdb840feb4,331417110,0,0x0,8
tick,0x7ffdb840feb4,331431930,0,0x0,8
tick,0x7ffdb840feb4,331447098,0,0x0,8
tick,0x7ffdb840feb4,331461912,0,0x0,8
tick,0x7ffdb840feb4,331477103,0,0x0,8
tick,0x7ffdb840feb4,331492936,0,0x0,8
tick,0x7ffdb840feb4,331508928,0,0x0,8
tick,0x7ffdb840feb4,331524103,0,0x0,8
tick,0x7ffdb840feb4,331539935,0,0x0,8
tick,0x7ffdb840feb4,331555131,0,0x0,8
tick,0x7ffdb840feb4,331570533,0,0x0,8
tick,0x7ffdb840feb4,331585675,0,0x0,8
tick,0x7ffdb840feb4,331600944,0,0x0,8
tick,0x7ffdb840feb4,331615619,0,0x0,8
tick,0x7ffdb840feb4,331631126,0,0x0,8
tick,0x7ffdb840feb4,331646724,0,0x0,8
tick,0x7ffdb840feb4,331661946,0,0x0,8
tick,0x7ffdb840feb4,331677132,0,0x0,8
tick,0x7ffdb840feb4,331692887,0,0x0,8
tick,0x7ffdb840feb4,331708969,0,0x0,8
tick,0x7ffdb840feb4,331723967,0,0x0,8
tick,0x7ffdb840feb4,331739142,0,0x0,8
tick,0x7ffdb840feb4,331755147,0,0x0,8
tick,0x7ffdb840feb4,331771141,0,0x0,8
tick,0x7ffdb840feb4,331787143,0,0x0,8
tick,0x7ffdb840feb4,331802966,0,0x0,8
tick,0x7ffdb840feb4,331818144,0,0x0,8
tick,0x7ffdb840feb4,331832960,0,0x0,8
tick,0x7ffdb840feb4,331848144,0,0x0,8
tick,0x7ffdb840feb4,331863963,0,0x0,8
tick,0x7ffdb840feb4,331879982,0,0x0,8
tick,0x7ffdb840feb4,331895979,0,0x0,8
tick,0x7ffdb840feb4,331911572,0,0x0,8
tick,0x7ffdb840feb4,331927570,0,0x0,8
tick,0x7ffdb840feb4,331943567,0,0x0,8
tick,0x7ffdb840feb4,331959577,0,0x0,8
tick,0x7ffdb840feb4,331975006,0,0x0,8
tick,0x7ffdb840feb4,331990168,0,0x0,8
tick,0x7ffdb840feb4,332005713,0,0x0,8
tick,0x7ffdb840feb4,332021182,0,0x0,8
tick,0x7ffdb840feb4,332036676,0,0x0,8
tick,0x7ffdb840feb4,332051864,0,0x0,8
tick,0x7ffdb840feb4,332067886,0,0x0,8
tick,0x7ffdb840feb4,332083173,0,0x0,8
tick,0x7ffdb840feb4,332098854,0,0x0,8
tick,0x7ffdb840feb4,332114010,0,0x0,8
tick,0x7ffdb840feb4,332129200,0,0x0,8
tick,0x7ffdb840feb4,332145179,0,0x0,8
tick,0x7ffdb840feb4,332160185,0,0x0,8
tick,0x7ffdb840feb4,332176005,0,0x0,8
tick,0x7ffdb840feb4,332191449,0,0x0,8
tick,0x7ffdb840feb4,332207019,0,0x0,8
tick,0x7ffdb840feb4,332223011,0,0x0,8
tick,0x7ffdb840feb4,332238794,0,0x0,8
tick,0x7ffdb840feb4,332254012,0,0x0,8
tick,0x7ffdb840feb4,332269210,0,0x0,8
tick,0x7ffdb840feb4,332284187,0,0x0,8
tick,0x7ffdb840feb4,332299857,0,0x0,8
tick,0x7ffdb840feb4,332315204,0,0x0,8
tick,0x7ffdb840feb4,332330100,0,0x0,8
tick,0x7ffdb840feb4,332346231,0,0x0,8
tick,0x7ffdb840feb4,332362238,0,0x0,8
tick,0x7ffdb840feb4,332378234,0,0x0,8
tick,0x7ffdb840feb4,332394235,0,0x0,8
tick,0x7ffdb840feb4,332410257,0,0x0,8
tick,0x7ffdb840feb4,332426268,0,0x0,8
tick,0x7ffdb840feb4,332442244,0,0x0,8
tick,0x7ffdb840feb4,332458258,0,0x0,8
tick,0x7ffdb840feb4,332474248,0,0x0,8
tick,0x7ffdb840feb4,332490254,0,0x0,8
tick,0x7ffdb840feb4,332506305,0,0x0,8
tick,0x7ffdb840feb4,332522265,0,0x0,8
tick,0x7ffdb840feb4,332538261,0,0x0,8
tick,0x7ffdb840feb4,332554243,0,0x0,8
tick,0x7ffdb840feb4,332570239,0,0x0,8
tick,0x7ffdb840feb4,332585213,0,0x0,8
tick,0x7ffdb840feb4,332600086,0,0x0,8
tick,0x7ffdb840feb4,332615248,0,0x0,8
tick,0x7ffdb840feb4,332631066,0,0x0,8
tick,0x7ffdb840feb4,332646066,0,0x0,8
tick,0x7ffdb840feb4,332661256,0,0x0,8
tick,0x7ffdb840feb4,332677251,0,0x0,8
tick,0x7ffdb840feb4,332692075,0,0x0,8
tick,0x7ffdb840feb4,332707089,0,0x0,8
tick,0x7ffdb840feb4,332722266,0,0x0,8
tick,0x7ffdb840feb4,332738091,0,0x0,8
tick,0x7ffdb840feb4,332753260,0,0x0,8
tick,0x7ffdb840feb4,332768272,0,0x0,8
tick,0x7ffdb840feb4,332784268,0,0x0,8
tick,0x7ffdb840feb4,332800280,0,0x0,8
tick,0x7ffdb840feb4,332816102,0,0x0,8
tick,0x7ffdb840feb4,332831284,0,0x0,8
tick,0x7ffdb840feb4,332847304,0,0x0,8
tick,0x7ffdb840feb4,332862094,0,0x0,8
tick,0x7ffdb840feb4,332877280,0,0x0,8
tick,0x7ffdb840feb4,332893116,0,0x0,8
tick,0x7ffdb840feb4,332908342,0,0x0,8
tick,0x7ffdb840feb4,332924286,0,0x0,8
tick,0x7ffdb840feb4,332940295,0,0x0,8
tick,0x7ffdb840feb4,332956296,0,0x0,8
tick,0x7ffdb840feb4,332972296,0,0x0,8
tick,0x7ffdb840feb4,332987305,0,0x0,8
tick,0x7ffdb840feb4,333003314,0,0x0,8
tick,0x7ffdb840feb4,333018119,0,0x0,8
tick,0x7ffdb840feb4,333033127,0,0x0,8
tick,0x7ffdb840feb4,333048883,0,0x0,8
tick,0x7ffdb840feb4,333064122,0,0x0,8
tick,0x7ffdb840feb4,333078879,0,0x0,8
tick,0x7ffdb840feb4,333094887,0,0x0,8
tick,0x7ffdb840feb4,333110105,0,0x0,8
tick,0x7ffdb840feb4,333125306,0,0x0,8
tick,0x7ffdb840feb4,333141319,0,0x0,8
tick,0x7ffdb840feb4,333156310,0,0x0,8
tick,0x7ffdb840feb4,333171472,0,0x0,8
tick,0x7ffdb840feb4,333187473,0,0x0,8
tick,0x7ffdb840feb4,333202322,0,0x0,8
tick,0x7ffdb840feb4,333218147,0,0x0,8
tick,0x7ffdb840feb4,333233305,0,0x0,8
tick,0x7ffdb840feb4,333248315,0,0x0,8
tick,0x7ffdb840feb4,333264146,0,0x0,8
tick,0x7ffdb840feb4,333280159,0,0x0,8
tick,0x7ffdb840feb4,333296161,0,0x0,8
tick,0x7ffdb840feb4,333312084,0,0x0,8
tick,0x7ffdb840feb4,333327345,0,0x0,8
tick,0x7ffdb840feb4,333343147,0,0x0,8
tick,0x7ffdb840feb4,333358334,0,0x0,8
tick,0x7ffdb840feb4,333374152,0,0x0,8
tick,0x7ffdb840feb4,333390172,0,0x0,8
tick,0x7ffdb840feb4,333405334,0,0x0,8
tick,0x7ffdb840feb4,333421341,0,0x0,8
tick,0x7ffdb840feb4,333436187,0,0x0,8
tick,0x7ffdb840feb4,333451883,0,0x0,8
tick,0x7ffdb840feb4,333467869,0,0x0,8
tick,0x7ffdb840feb4,333483880,0,0x0,8
tick,0x7ffdb840feb4,333499874,0,0x0,8
tick,0x7ffdb840feb4,333514344,0,0x0,8
tick,0x7ffdb840feb4,333530349,0,0x0,8
tick,0x7ffdb840feb4,333546131,0,0x0,8
tick,0x7ffdb840feb4,333562126,0,0x0,8
tick,0x7ffdb840feb4,333578138,0,0x0,8
tick,0x7ffdb840feb4,333594182,0,0x0,8
tick,0x7ffdb840feb4,333608633,0,0x0,8
tick,0x7ffdb840feb4,333624184,0,0x0,8
tick,0x7ffdb840feb4,333640070,0,0x0,8
tick,0x7ffdb840feb4,333656125,0,0x0,8
tick,0x7ffdb840feb4,333671316,0,0x0,8
tick,0x7ffdb840feb4,333686360,0,0x0,8
tick,0x7ffdb840feb4,333701146,0,0x0,8
tick,0x7ffdb840feb4,333716539,0,0x0,8
tick,0x7ffdb840feb4,333732159,0,0x0,8
tick,0x7ffdb840feb4,333747143,0,0x0,8
tick,0x7ffdb840feb4,333763212,0,0x0,8
tick,0x7ffdb840feb4,333778854,0,0x0,8
tick,0x7ffdb840feb4,333794207,0,0x0,8
tick,0x7ffdb840feb4,333809653,0,0x0,8
tick,0x7ffdb840feb4,333825372,0,0x0,8
tick,0x7ffdb840feb4,333841379,0,0x0,8
tick,0x7ffdb840feb4,333857382,0,0x0,8
tick,0x7ffdb840feb4,333873214,0,0x0,8
tick,0x7ffdb840feb4,333888864,0,0x0,8
tick,0x7ffdb840feb4,333904143,0,0x0,8
tick,0x7ffdb840feb4,333919885,0,0x0,8
tick,0x7ffdb840feb4,333935209,0,0x0,8
tick,0x7ffdb840feb4,333951202,0,0x0,8
tick,0x7ffdb840feb4,333967213,0,0x0,8
tick,0x7ffdb840feb4,333983220,0,0x0,8
tick,0x7ffdb840feb4,333998395,0,0x0,8
tick,0x7ffdb840feb4,334013663,0,0x0,8
tick,0x7ffdb840feb4,334029685,0,0x0,8
tick,0x7ffdb840feb4,334045798,0,0x0,8
tick,0x7ffdb840feb4,334061239,0,0x0,8
tick,0x7ffdb840feb4,334076409,0,0x0,8
tick,0x7ffdb840feb4,334092253,0,0x0,8
tick,0x7ffdb840feb4,334108241,0,0x0,8
tick,0x7ffdb840feb4,334124240,0,0x0,8
tick,0x7ffdb840feb4,334138587,0,0x0,8
tick,0x7ffdb840feb4,334154242,0,0x0,8
tick,0x7ffdb840feb4,334169969,0,0x0,8
tick,0x7ffdb840feb4,334185439,0,0x0,8
tick,0x7ffdb840feb4,334200876,0,0x0,8
tick,0x7ffdb840feb4,334216318,0,0x0,8
tick,0x7ffdb840feb4,334231211,0,0x0,8
tick,0x7ffdb840feb4,334246328,0,0x0,8
tick,0x7ffdb840feb4,334261637,0,0x0,8
tick,0x7ffdb840feb4,334277671,0,0x0,8
tick,0x7ffdb840feb4,334293266,0,0x0,8
tick,0x7ffdb840feb4,334308537,0,0x0,8
tick,0x7ffdb840feb4,334324261,0,0x0,8
tick,0x7ffdb840feb4,334340059,0,0x0,8
tick,0x7ffdb840feb4,334355442,0,0x0,8
tick,0x7ffdb840feb4,334371048,0,0x0,8
tick,0x7ffdb840feb4,334386040,0,0x0,8
tick,0x7ffdb840feb4,334402047,0,0x0,8
tick,0x7ffdb840feb4,334418057,0,0x0,8
tick,0x7ffdb840feb4,334433286,0,0x0,8
tick,0x7ffdb840feb4,334448814,0,0x0,8
tick,0x7ffdb840feb4,334464287,0,0x0,8
tick,0x7ffdb840feb4,334480049,0,0x0,8
tick,0x7ffdb840feb4,334495937,0,0x0,8
tick,0x7ffdb840feb4,334511168,0,0x0,8
tick,0x7ffdb840feb4,334526852,0,0x0,8
tick,0x7ffdb840feb4,334542056,0,0x0,8
tick,0x7ffdb840feb4,334557464,0,0x0,8
tick,0x7ffdb840feb4,334573288,0,0x0,8
tick,0x7ffdb840feb4,334588291,0,0x0,8
tick,0x7ffdb840feb4,334603798,0,0x0,8
tick,0x7ffdb840feb4,334619189,0,0x0,8
tick,0x7ffdb840feb4,334634311,0,0x0,8
tick,0x7ffdb840feb4,334649881,0,0x0,8
tick,0x7ffdb840feb4,334665015,0,0x0,8
tick,0x7ffdb840feb4,334680159,0,0x0,8
tick,0x7ffdb840feb4,334696206,0,0x0,8
tick,0x7ffdb840feb4,334712208,0,0x0,8
tick,0x7ffdb840feb4,334728181,0,0x0,8
tick,0x7ffdb840feb4,334743321,0,0x0,8
tick,0x7ffdb840feb4,334758482,0,0x0,8
tick,0x7ffdb840feb4,334774312,0,0x0,8
tick,0x7ffdb840feb4,334790003,0,0x0,8
tick,0x7ffdb840feb4,334805323,0,0x0,8
tick,0x7ffdb840feb4,334821327,0,0x0,8
tick,0x7ffdb840feb4,334837154,0,0x0,8
tick,0x7ffdb840feb4,334852330,0,0x0,8
tick,0x7ffdb840feb4,334867270,0,0x0,8
tick,0x7ffdb840feb4,334883208,0,0x0,8
tick,0x7ffdb840feb4,334898867,0,0x0,8
tick,0x7ffdb840feb4,334914222,0,0x0,8
tick,0x7ffdb840feb4,334929878,0,0x0,8
tick,0x7ffdb840feb4,334945514,0,0x0,8
tick,0x7ffdb840feb4,334961517,0,0x0,8
tick,0x7ffdb840feb4,334977523,0,0x0,8
tick,0x7ffdb840feb4,334993530,0,0x0,8
tick,0x7ffdb840feb4,335008761,0,0x0,8
tick,0x7ffdb840feb4,335023525,0,0x0,8
tick,0x7ffdb840feb4,335039331,0,0x0,8
tick,0x7ffdb840feb4,335054293,0,0x0,8
tick,0x7ffdb840feb4,335069666,0,0x0,8
tick,0x7ffdb840feb4,335085528,0,0x0,8
tick,0x7ffdb840feb4,335100885,0,0x0,8
tick,0x7ffdb840feb4,335115531,0,0x0,8
tick,0x7ffdb840feb4,335131373,0,0x0,8
tick,0x7ffdb840feb4,335146538,0,0x0,8
tick,0x7ffdb840feb4,335162369,0,0x0,8
tick,0x7ffdb840feb4,335178377,0,0x0,8
tick,0x7ffdb840feb4,335194370,0,0x0,8
tick,0x7ffdb840feb4,335209341,0,0x0,8
tick,0x7ffdb840feb4,335224858,0,0x0,8
tick,0x7ffdb840feb4,335240356,0,0x0,8
tick,0x7ffdb840feb4,335255530,0,0x0,8
tick,0x7ffdb840feb4,335270794,0,0x0,8
tick,0x7ffdb840feb4,335286024,0,0x0,8
tick,0x7ffdb840feb4,335301881,0,0x0,8
tick,0x7ffdb840feb4,335317545,0,0x0,8
tick,0x7ffdb840feb4,335333376,0,0x0,8
tick,0x7ffdb840feb4,335349395,0,0x0,8
tick,0x7ffdb840feb4,335364560,0,0x0,8
tick,0x7ffdb840feb4,335379906,0,0x0,8
tick,0x7ffdb840feb4,335395573,0,0x0,8
tick,0x7ffdb840feb4,335410798,0,0x0,8
tick,0x7ffdb840feb4,335426032,0,0x0,8
tick,0x7ffdb840feb4,335442099,0,0x0,8
tick,0x7ffdb840feb4,335457955,0,0x0,8
tick,0x7ffdb840feb4,335473406,0,0x0,8
tick,0x7ffdb840feb4,335488736,0,0x0,8
tick,0x7ffdb840feb4,335504413,0,0x0,8
tick,0x7ffdb840feb4,335519546,0,0x0,8
tick,0x7ffdb840feb4,335535549,0,0x0,8
tick,0x7ffdb840feb4,335551256,0,0x0,8
tick,0x7ffdb840feb4,335566416,0,0x0,8
tick,0x7ffdb840feb4,335582000,0,0x0,8
tick,0x7ffdb840feb4,335597589,0,0x0,8
tick,0x7ffdb840feb4,335612824,0,0x0,8
tick,0x7ffdb840feb4,335628612,0,0x0,8
tick,0x7ffdb840feb4,335643611,0,0x0,8
tick,0x7ffdb840feb4,335659433,0,0x0,8
tick,0x7ffdb840feb4,335674610,0,0x0,8
tick,0x7ffdb840feb4,335689613,0,0x0,8
tick,0x7ffdb840feb4,335705619,0,0x0,8
tick,0x7ffdb840feb4,335721641,0,0x0,8
tick,0x7ffdb840feb4,335737445,0,0x0,8
tick,0x7ffdb840feb4,335753444,0,0x0,8
tick,0x7ffdb840feb4,335768636,0,0x0,8
tick,0x7ffdb840feb4,335784633,0,0x0,8
tick,0x7ffdb840feb4,335799459,0,0x0,8
tick,0x7ffdb840feb4,335815454,0,0x0,8
tick,0x7ffdb840feb4,335830635,0,0x0,8
tick,0x7ffdb840feb4,335845629,0,0x0,8
tick,0x7ffdb840feb4,335860839,0,0x0,8
tick,0x7ffdb840feb4,335876621,0,0x0,8
tick,0x7ffdb840feb4,335891643,0,0x0,8
tick,0x7ffdb840feb4,335907657,0,0x0,8
tick,0x7ffdb840feb4,335923595,0,0x0,8
tick,0x7ffdb840feb4,335938309,0,0x0,8
tick,0x7ffdb840feb4,335953465,0,0x0,8
tick,0x7ffdb840feb4,335969462,0,0x0,8
tick,0x7ffdb840feb4,335985474,0,0x0,8
tick,0x7ffdb840feb4,336001477,0,0x0,8
tick,0x7ffdb840feb4,336017466,0,0x0,8
tick,0x7ffdb840feb4,336033470,0,0x0,8
tick,0x7ffdb840feb4,336048686,0,0x0,8
tick,0x7ffdb840feb4,336064470,0,0x0,8
tick,0x7ffdb840feb4,336079483,0,0x0,8
tick,0x7ffdb840feb4,336094646,0,0x0,8
tick,0x7ffdb840feb4,336110659,0,0x0,8
tick,0x7ffdb840feb4,336125655,0,0x0,8
tick,0x7ffdb840feb4,336141659,0,0x0,8
tick,0x7ffdb840feb4,336156817,0,0x0,8
tick,0x7ffdb840feb4,336171826,0,0x0,8
tick,0x7ffdb840feb4,336187411,0,0x0,8
tick,0x7ffdb840feb4,336202614,0,0x0,8
tick,0x7ffdb840feb4,336218246,0,0x0,8
tick,0x7ffdb840feb4,336233488,0,0x0,8
tick,0x7ffdb840feb4,336248883,0,0x0,8
tick,0x7ffdb840feb4,336264506,0,0x0,8
tick,0x7ffdb840feb4,336279673,0,0x0,8
tick,0x7ffdb840feb4,336295259,0,0x0,8
tick,0x7ffdb840feb4,336310613,0,0x0,8
tick,0x7ffdb840feb4,336325827,0,0x0,8
tick,0x7ffdb840feb4,336341513,0,0x0,8
tick,0x7ffdb840feb4,336356685,0,0x0,8
tick,0x7ffdb840feb4,336371690,0,0x0,8
tick,0x7ffdb840feb4,336386835,0,0x0,8
tick,0x7ffdb840feb4,336402835,0,0x0,8
tick,0x7ffdb840feb4,336418597,0,0x0,8
tick,0x7ffdb840feb4,336434525,0,0x0,8
tick,0x7ffdb840feb4,336449880,0,0x0,8
tick,0x7ffdb840feb4,336465705,0,0x0,8
tick,0x7ffdb840feb4,336480542,0,0x0,8
tick,0x7ffdb840feb4,336496534,0,0x0,8
tick,0x7ffdb840feb4,336512589,0,0x0,8
tick,0x7ffdb840feb4,336527540,0,0x0,8
tick,0x7ffdb840feb4,336543530,0,0x0,8
tick,0x7ffdb840feb4,336558719,0,0x0,8
tick,0x7ffdb840feb4,336574539,0,0x0,8
tick,0x7ffdb840feb4,336589716,0,0x0,8
tick,0x7ffdb840feb4,336604709,0,0x0,8
tick,0x7ffdb840feb4,336620717,0,0x0,8
tick,0x7ffdb840feb4,336636727,0,0x0,8
tick,0x7ffdb840feb4,336652714,0,0x0,8
tick,0x7ffdb840feb4,336668552,0,0x0,8
tick,0x7ffdb840feb4,336684558,0,0x0,8
tick,0x7ffdb840feb4,336699746,0,0x0,8
tick,0x7ffdb840feb4,336714562,0,0x0,8
tick,0x7ffdb840feb4,336729754,0,0x0,8
tick,0x7ffdb840feb4,336745330,0,0x0,8
tick,0x7ffdb840feb4,336760749,0,0x0,8
tick,0x7ffdb840feb4,336776568,0,0x0,8
tick,0x7ffdb840feb4,336792664,0,0x0,8
tick,0x7ffdb840feb4,336807761,0,0x0,8
tick,0x7ffdb840feb4,336823568,0,0x0,8
tick,0x7ffdb840feb4,336838757,0,0x0,8
tick,0x7ffdb840feb4,336854765,0,0x0,8
tick,0x7ffdb840feb4,336870767,0,0x0,8
tick,0x7ffdb840feb4,336886752,0,0x0,8
tick,0x7ffdb840feb4,336901994,0,0x0,8
tick,0x7ffdb840feb4,336916767,0,0x0,8
tick,0x7ffdb840feb4,336932764,0,0x0,8
tick,0x7ffdb840feb4,336948768,0,0x0,8
tick,0x7ffdb840feb4,336964777,0,0x0,8
tick,0x7ffdb840feb4,336980773,0,0x0,8
tick,0x7ffdb840feb4,336995780,0,0x0,8
tick,0x7ffdb840feb4,337011783,0,0x0,8
tick,0x7ffdb840feb4,337026796,0,0x0,8
tick,0x7ffdb840feb4,337042777,0,0x0,8
tick,0x7ffdb840feb4,337058728,0,0x0,8
tick,0x7ffdb840feb4,337074292,0,0x0,8
tick,0x7ffdb840feb4,337089778,0,0x0,8
tick,0x7ffdb840feb4,337105349,0,0x0,8
tick,0x7ffdb840feb4,337120623,0,0x0,8
tick,0x7ffdb840feb4,337135795,0,0x0,8
tick,0x7ffdb840feb4,337151300,0,0x0,8
tick,0x7ffdb840feb4,337166563,0,0x0,8
tick,0x7ffdb840feb4,337181796,0,0x0,8
tick,0x7ffdb840feb4,337197050,0,0x0,8
tick,0x7ffdb840feb4,337212617,0,0x0,8
tick,0x7ffdb840feb4,337228070,0,0x0,8
tick,0x7ffdb840feb4,337243815,0,0x0,8
tick,0x7ffdb840feb4,337259085,0,0x0,8
tick,0x7ffdb840feb4,337274812,0,0x0,8
tick,0x7ffdb840feb4,337290627,0,0x0,8
tick,0x7ffdb840feb4,337305798,0,0x0,8
tick,0x7ffdb840feb4,337321798,0,0x0,8
tick,0x7ffdb840feb4,337336672,0,0x0,8
tick,0x7ffdb840feb4,337351966,0,0x0,8
tick,0x7ffdb840feb4,337367810,0,0x0,8
tick,0x7ffdb840feb4,337382635,0,0x0,8
tick,0x7ffdb840feb4,337398584,0,0x0,8
tick,0x7ffdb840feb4,337414638,0,0x0,8
tick,0x7ffdb840feb4,337429820,0,0x0,8
tick,0x7ffdb840feb4,337445640,0,0x0,8
tick,0x7ffdb840feb4,337460848,0,0x0,8
tick,0x7ffdb840feb4,337476020,0,0x0,8
tick,0x7ffdb840feb4,337491861,0,0x0,8
tick,0x7ffdb840feb4,337506818,0,0x0,8
tick,0x7ffdb840feb4,337522844,0,0x0,8
tick,0x7ffdb840feb4,337538834,0,0x0,8
tick,0x7ffdb840feb4,337554656,0,0x0,8
tick,0x7ffdb840feb4,337570664,0,0x0,8
tick,0x7ffdb840feb4,337585836,0,0x0,8
tick,0x7ffdb840feb4,337601912,0,0x0,8
tick,0x7ffdb840feb4,337616764,0,0x0,8
tick,0x7ffdb840feb4,337632224,0,0x0,8
tick,0x7ffdb840feb4,337647673,0,0x0,8
tick,0x7ffdb840feb4,337663668,0,0x0,8
tick,0x7ffdb840feb4,337678851,0,0x0,8
tick,0x7ffdb840feb4,337693669,0,0x0,8
tick,0x7ffdb840feb4,337708848,0,0x0,8
tick,0x7ffdb840feb4,337724855,0,0x0,8
tick,0x7ffdb840feb4,337739824,0,0x0,8
tick,0x7ffdb840feb4,337754671,0,0x0,8
tick,0x7ffdb840feb4,337769563,0,0x0,8
tick,0x7ffdb840feb4,337784705,0,0x0,8
tick,0x7ffdb840feb4,337799886,0,0x0,8
tick,0x7ffdb840feb4,337815686,0,0x0,8
tick,0x7ffdb840feb4,337830736,0,0x0,8
tick,0x7ffdb840feb4,337845862,0,0x0,8
tick,0x7ffdb840feb4,337861905,0,0x0,8
tick,0x7ffdb840feb4,337876873,0,0x0,8
tick,0x7ffdb840feb4,337892696,0,0x0,8
tick,0x7ffdb840feb4,337907868,0,0x0,8
tick,0x7ffdb840feb4,337922887,0,0x0,8
tick,0x7ffdb840feb4,337938879,0,0x0,8
tick,0x7ffdb840feb4,337954887,0,0x0,8
tick,0x7ffdb840feb4,337970092,0,0x0,8
tick,0x7ffdb840feb4,337986092,0,0x0,8
tick,0x7ffdb840feb4,338001103,0,0x0,8
tick,0x7ffdb840feb4,338017094,0,0x0,8
tick,0x7ffdb840feb4,338033225,0,0x0,8
tick,0x7ffdb840feb4,338048710,0,0x0,8
tick,0x7ffdb840feb4,338064726,0,0x0,8
tick,0x7ffdb840feb4,338079887,0,0x0,8
tick,0x7ffdb840feb4,338095713,0,0x0,8
tick,0x7ffdb840feb4,338110853,0,0x0,8
tick,0x7ffdb840feb4,338126046,0,0x0,8
tick,0x7ffdb840feb4,338141920,0,0x0,8
tick,0x7ffdb840feb4,338156897,0,0x0,8
tick,0x7ffdb840feb4,338172556,0,0x0,8
tick,0x7ffdb840feb4,338187907,0,0x0,8
tick,0x7ffdb840feb4,338203128,0,0x0,8
tick,0x7ffdb840feb4,338218958,0,0x0,8
tick,0x7ffdb840feb4,338234912,0,0x0,8
tick,0x7ffdb840feb4,338249893,0,0x0,8
tick,0x7ffdb840feb4,338264911,0,0x0,8
tick,0x7ffdb840feb4,338280083,0,0x0,8
tick,0x7ffdb840feb4,338295621,0,0x0,8
tick,0x7ffdb840feb4,338310912,0,0x0,8
tick,0x7ffdb840feb4,338326927,0,0x0,8
tick,0x7ffdb840feb4,338342113,0,0x0,8
tick,0x7ffdb840feb4,338357927,0,0x0,8
tick,0x7ffdb840feb4,338373749,0,0x0,8
tick,0x7ffdb840feb4,338388937,0,0x0,8
tick,0x7ffdb840feb4,338404927,0,0x0,8
tick,0x7ffdb840feb4,338419900,0,0x0,8
tick,0x7ffdb840feb4,338434940,0,0x0,8
tick,0x7ffdb840feb4,338449937,0,0x0,8
tick,0x7ffdb840feb4,338465935,0,0x0,8
tick,0x7ffdb840feb4,338481157,0,0x0,8
tick,0x7ffdb840feb4,338496940,0,0x0,8
tick,0x7ffdb840feb4,338512168,0,0x0,8
tick,0x7ffdb840feb4,338527944,0,0x0,8
tick,0x7ffdb840feb4,338543777,0,0x0,8
tick,0x7ffdb840feb4,338558942,0,0x0,8
tick,0x7ffdb840feb4,338574772,0,0x0,8
tick,0x7ffdb840feb4,338590270,0,0x0,8
tick,0x7ffdb840feb4,338606279,0,0x0,8
tick,0x7ffdb840feb4,338621099,0,0x0,8
tick,0x7ffdb840feb4,338636963,0,0x0,8
tick,0x7ffdb840feb4,338652787,0,0x0,8
tick,0x7ffdb840feb4,338667975,0,0x0,8
tick,0x7ffdb840feb4,338682959,0,0x0,8
tick,0x7ffdb840feb4,338698101,0,0x0,8
tick,0x7ffdb840feb4,338713792,0,0x0,8
tick,0x7ffdb840feb4,338729114,0,0x0,8
tick,0x7ffdb840feb4,338744326,0,0x0,8
tick,0x7ffdb840feb4,338760127,0,0x0,8
tick,0x7ffdb840feb4,338775968,0,0x0,8
tick,0x7ffdb840feb4,338791152,0,0x0,8
tick,0x7ffdb840feb4,338806348,0,0x0,8
tick,0x7ffdb840feb4,338822155,0,0x0,8
tick,0x7ffdb840feb4,338838007,0,0x0,8
tick,0x7ffdb840feb4,338853809,0,0x0,8
tick,0x7ffdb840feb4,338869050,0,0x0,8
tick,0x7ffdb840feb4,338884982,0,0x0,8
tick,0x7ffdb840feb4,338900018,0,0x0,8
tick,0x7ffdb840feb4,338916019,0,0x0,8
tick,0x7ffdb840feb4,338931028,0,0x0,8
tick,0x7ffdb840feb4,338946001,0,0x0,8
tick,0x7ffdb840feb4,338961131,0,0x0,8
tick,0x7ffdb840feb4,338976838,0,0x0,8
tick,0x7ffdb840feb4,338992841,0,0x0,8
tick,0x7ffdb840feb4,339008832,0,0x0,8
tick,0x7ffdb840feb4,339024848,0,0x0,8
tick,0x7ffdb840feb4,339040836,0,0x0,8
tick,0x7ffdb840feb4,339056836,0,0x0,8
tick,0x7ffdb840feb4,339072837,0,0x0,8
tick,0x7ffdb840feb4,339088851,0,0x0,8
tick,0x7ffdb840feb4,339104009,0,0x0,8
tick,0x7ffdb840feb4,339119650,0,0x0,8
tick,0x7ffdb840feb4,339134810,0,0x0,8
tick,0x7ffdb840feb4,339150211,0,0x0,8
tick,0x7ffdb840feb4,339166018,0,0x0,8
tick,0x7ffdb840feb4,339180857,0,0x0,8
tick,0x7ffdb840feb4,339195867,0,0x0,8
tick,0x7ffdb840feb4,339211205,0,0x0,8
tick,0x7ffdb840feb4,339226473,0,0x0,8
tick,0x7ffdb840feb4,339242519,0,0x0,8
tick,0x7ffdb840feb4,339257521,0,0x0,8
tick,0x7ffdb840feb4,339272390,0,0x0,8
tick,0x7ffdb840feb4,339287531,0,0x0,8
tick,0x7ffdb840feb4,339302869,0,0x0,8
tick,0x7ffdb840feb4,339318255,0,0x0,8
tick,0x7ffdb840feb4,339333866,0,0x0,8
tick,0x7ffdb840feb4,339349278,0,0x0,8
tick,0x7ffdb840feb4,339365048,0,0x0,8
tick,0x7ffdb840feb4,339381046,0,0x0,8
tick,0x7ffdb840feb4,339396601,0,0x0,8
tick,0x7ffdb840feb4,339412073,0,0x0,8
tick,0x7ffdb840feb4,339428055,0,0x0,8
tick,0x7ffdb840feb4,339444068,0,0x0,8
tick,0x7ffdb840feb4,339460063,0,0x0,8
tick,0x7ffdb840feb4,339476058,0,0x0,8
tick,0x7ffdb840feb4,339492063,0,0x0,8
tick,0x7ffdb840feb4,339508084,0,0x0,8
tick,0x7ffdb840feb4,339524085,0,0x0,8
tick,0x7ffdb840feb4,339540076,0,0x0,8
tick,0x7ffdb840feb4,339556058,0,0x0,8
tick,0x7ffdb840feb4,339572081,0,0x0,8
tick,0x7ffdb840feb4,339588067,0,0x0,8
tick,0x7ffdb840feb4,339604069,0,0x0,8
tick,0x7ffdb840feb4,339620066,0,0x0,8
tick,0x7ffdb840feb4,339635108,0,0x0,8
tick,0x7ffdb840feb4,339650897,0,0x0,8
tick,0x7ffdb840feb4,339666569,0,0x0,8
tick,0x7ffdb840feb4,339681909,0,0x0,8
tick,0x7ffdb840feb4,339697912,0,0x0,8
tick,0x7ffdb840feb4,339713909,0,0x0,8
tick,0x7ffdb840feb4,339729083,0,0x0,8
tick,0x7ffdb840feb4,339743919,0,0x0,8
tick,0x7ffdb840feb4,339759120,0,0x0,8
tick,0x7ffdb840feb4,339774919,0,0x0,8
tick,0x7ffdb840feb4,339789917,0,0x0,8
tick,0x7ffdb840feb4,339805090,0,0x0,8
tick,0x7ffdb840feb4,339820431,0,0x0,8
tick,0x7ffdb840feb4,339836090,0,0x0,8
tick,0x7ffdb840feb4,339852092,0,0x0,8
tick,0x7ffdb840feb4,339868122,0,0x0,8
tick,0x7ffdb840feb4,339884106,0,0x0,8
tick,0x7ffdb840feb4,339899910,0,0x0,8
tick,0x7ffdb840feb4,339914913,0,0x0,8
tick,0x7ffdb840feb4,339930108,0,0x0,8
tick,0x7ffdb840feb4,339946090,0,0x0,8
tick,0x7ffdb840feb4,339961794,0,0x0,8
tick,0x7ffdb840feb4,339977782,0,0x0,8
tick,0x7ffdb840feb4,339993790,0,0x0,8
tick,0x7ffdb840feb4,340009793,0,0x0,8
tick,0x7ffdb840feb4,340025797,0,0x0,8
tick,0x7ffdb840feb4,340041809,0,0x0,8
tick,0x7ffdb840feb4,340057802,0,0x0,8
tick,0x7ffdb840feb4,340072821,0,0x0,8
tick,0x7ffdb840feb4,340087819,0,0x0,8
tick,0x7ffdb840feb4,340102953,0,0x0,8
tick,0x7ffdb840feb4,340118605,0,0x0,8
tick,0x7ffdb840feb4,340134605,0,0x0,8
tick,0x7ffdb840feb4,340149514,0,0x0,8
tick,0x7ffdb840feb4,340164958,0,0x0,8
tick,0x7ffdb840feb4,340180989,0,0x0,8
tick,0x7ffdb840feb4,340196551,0,0x0,8
tick,0x7ffdb840feb4,340212292,0,0x0,8
tick,0x7ffdb840feb4,340228191,0,0x0,8
tick,0x7ffdb840feb4,340243903,0,0x0,8
tick,0x7ffdb840feb4,340259188,0,0x0,8
tick,0x7ffdb840feb4,340275110,0,0x0,8
tick,0x7ffdb840feb4,340290010,0,0x0,8
tick,0x7ffdb840feb4,340305153,0,0x0,8
tick,0x7ffdb840feb4,340320614,0,0x0,8
tick,0x7ffdb840feb4,340336164,0,0x0,8
tick,0x7ffdb840feb4,340352174,0,0x0,8
tick,0x7ffdb840feb4,340368194,0,0x0,8
tick,0x7ffdb840feb4,340384201,0,0x0,8
tick,0x7ffdb840feb4,340400193,0,0x0,8
tick,0x7ffdb840feb4,340416181,0,0x0,8
tick,0x7ffdb840feb4,340432188,0,0x0,8
tick,0x7ffdb840feb4,340447617,0,0x0,8
tick,0x7ffdb840feb4,340463007,0,0x0,8
tick,0x7ffdb840feb4,340478613,0,0x0,8
tick,0x7ffdb840feb4,340494022,0,0x0,8
tick,0x7ffdb840feb4,340509193,0,0x0,8
tick,0x7ffdb840feb4,340524979,0,0x0,8
tick,0x7ffdb840feb4,340540189,0,0x0,8
tick,0x7ffdb840feb4,340556185,0,0x0,8
tick,0x7ffdb840feb4,340571635,0,0x0,8
tick,0x7ffdb840feb4,340587201,0,0x0,8
tick,0x7ffdb840feb4,340603000,0,0x0,8
tick,0x7ffdb840feb4,340618231,0,0x0,8
tick,0x7ffdb840feb4,340634049,0,0x0,8
tick,0x7ffdb840feb4,340648939,0,0x0,8
tick,0x7ffdb840feb4,340665038,0,0x0,8
tick,0x7ffdb840feb4,340680220,0,0x0,8
tick,0x7ffdb840feb4,340696213,0,0x0,8
tick,0x7ffdb840feb4,340712027,0,0x0,8
tick,0x7ffdb840feb4,340727206,0,0x0,8
tick,0x7ffdb840feb4,340743214,0,0x0,8
tick,0x7ffdb840feb4,340758215,0,0x0,8
tick,0x7ffdb840feb4,340774043,0,0x0,8
tick,0x7ffdb840feb4,340790061,0,0x0,8
tick,0x7ffdb840feb4,340805633,0,0x0,8
tick,0x7ffdb840feb4,340821216,0,0x0,8
tick,0x7ffdb840feb4,340836217,0,0x0,8
tick,0x7ffdb840feb4,340851907,0,0x0,8
tick,0x7ffdb840feb4,340867572,0,0x0,8
tick,0x7ffdb840feb4,340883579,0,0x0,8
tick,0x7ffdb840feb4,340898905,0,0x0,8
tick,0x7ffdb840feb4,340914053,0,0x0,8
tick,0x7ffdb840feb4,340930037,0,0x0,8
tick,0x7ffdb840feb4,340945043,0,0x0,8
tick,0x7ffdb840feb4,340961072,0,0x0,8
tick,0x7ffdb840feb4,340976247,0,0x0,8
tick,0x7ffdb840feb4,340991046,0,0x0,8
tick,0x7ffdb840feb4,341007057,0,0x0,8
tick,0x7ffdb840feb4,341023059,0,0x0,8
tick,0x7ffdb840feb4,341038069,0,0x0,8
tick,0x7ffdb840feb4,341054098,0,0x0,8
tick,0x7ffdb840feb4,341069082,0,0x0,8
tick,0x7ffdb840feb4,341085097,0,0x0,8
tick,0x7ffdb840feb4,341100250,0,0x0,8
tick,0x7ffdb840feb4,341115203,0,0x0,8
tick,0x7ffdb840feb4,341131071,0,0x0,8
tick,0x7ffdb840feb4,341147090,0,0x0,8
tick,0x7ffdb840feb4,341163099,0,0x0,8
tick,0x7ffdb840feb4,341178244,0,0x0,8
tick,0x7ffdb840feb4,341193091,0,0x0,8
tick,0x7ffdb840feb4,341208268,0,0x0,8
tick,0x7ffdb840feb4,341224090,0,0x0,8
tick,0x7ffdb840feb4,341239008,0,0x0,8
tick,0x7ffdb840feb4,341255097,0,0x0,8
tick,0x7ffdb840feb4,341270110,0,0x0,8
tick,0x7ffdb840feb4,341285062,0,0x0,8
tick,0x7ffdb840feb4,341299914,0,0x0,8
tick,0x7ffdb840feb4,341315105,0,0x0,8
tick,0x7ffdb840feb4,341330000,0,0x0,8
tick,0x7ffdb840feb4,341345125,0,0x0,8
tick,0x7ffdb840feb4,341361179,0,0x0,8
tick,0x7ffdb840feb4,341376014,0,0x0,8
tick,0x7ffdb840feb4,341392066,0,0x0,8
tick,0x7ffdb840feb4,341408189,0,0x0,8
tick,0x7ffdb840feb4,341422923,0,0x0,8
tick,0x7ffdb840feb4,341438293,0,0x0,8
tick,0x7ffdb840feb4,341454161,0,0x0,8
tick,0x7ffdb840feb4,341469154,0,0x0,8
tick,0x7ffdb840feb4,341485142,0,0x0,8
tick,0x7ffdb840feb4,341499908,0,0x0,8
tick,0x7ffdb840feb4,341515139,0,0x0,8
tick,0x7ffdb840feb4,341530932,0,0x0,8
tick,0x7ffdb840feb4,341546309,0,0x0,8
tick,0x7ffdb840feb4,341561662,0,0x0,8
tick,0x7ffdb840feb4,341577672,0,0x0,8
tick,0x7ffdb840feb4,341593581,0,0x0,8
tick,0x7ffdb840feb4,341608790,0,0x0,8
tick,0x7ffdb840feb4,341624172,0,0x0,8
tick,0x7ffdb840feb4,341639329,0,0x0,8
tick,0x7ffdb840feb4,341655142,0,0x0,8
tick,0x7ffdb840feb4,341670590,0,0x0,8
tick,0x7ffdb840feb4,341686323,0,0x0,8
tick,0x7ffdb840feb4,341701916,0,0x0,8
tick,0x7ffdb840feb4,341717108,0,0x0,8
tick,0x7ffdb840feb4,341732234,0,0x0,8
tick,0x7ffdb840feb4,341748173,0,0x0,8
tick,0x7ffdb840feb4,341764159,0,0x0,8
tick,0x7ffdb840feb4,341779348,0,0x0,8
tick,0x7ffdb840feb4,341794161,0,0x0,8
tick,0x7ffdb840feb4,341808849,0,0x0,8
tick,0x7ffdb840feb4,341824172,0,0x0,8
tick,0x7ffdb840feb4,341840230,0,0x0,8
tick,0x7ffdb840feb4,341856337,0,0x0,8
tick,0x7ffdb840feb4,341872362,0,0x0,8
tick,0x7ffdb840feb4,341887479,0,0x0,8
tick,0x7ffdb840feb4,341902908,0,0x0,8
tick,0x7ffdb840feb4,341918630,0,0x0,8
tick,0x7ffdb840feb4,341934177,0,0x0,8
tick,0x7ffdb840feb4,341949585,0,0x0,8
tick,0x7ffdb840feb4,341965240,0,0x0,8
tick,0x7ffdb840feb4,341980423,0,0x0,8
tick,0x7ffdb840feb4,341996365,0,0x0,8
tick,0x7ffdb840feb4,342011360,0,0x0,8
tick,0x7ffdb840feb4,342027370,0,0x0,8
tick,0x7ffdb840feb4,342043371,0,0x0,8
tick,0x7ffdb840feb4,342059376,0,0x0,8
tick,0x7ffdb840feb4,342075168,0,0x0,8
tick,0x7ffdb840feb4,342091180,0,0x0,8
tick,0x7ffdb840feb4,342106378,0,0x0,8
tick,0x7ffdb840feb4,342121175,0,0x0,8
tick,0x7ffdb840feb4,342136297,0,0x0,8
tick,0x7ffdb840feb4,342152306,0,0x0,8
tick,0x7ffdb840feb4,342167381,0,0x0,8
tick,0x7ffdb840feb4,342183205,0,0x0,8
tick,0x7ffdb840feb4,342198386,0,0x0,8
tick,0x7ffdb840feb4,342214209,0,0x0,8
tick,0x7ffdb840feb4,342229670,0,0x0,8
tick,0x7ffdb840feb4,342245384,0,0x0,8
tick,0x7ffdb840feb4,342260299,0,0x0,8
tick,0x7ffdb840feb4,342276390,0,0x0,8
tick,0x7ffdb840feb4,342292398,0,0x0,8
tick,0x7ffdb840feb4,342307573,0,0x0,8
tick,0x7ffdb840feb4,342323069,0,0x0,8
tick,0x7ffdb840feb4,342339018,0,0x0,8
tick,0x7ffdb840feb4,342354231,0,0x0,8
tick,0x7ffdb840feb4,342369354,0,0x0,8
tick,0x7ffdb840feb4,342385232,0,0x0,8
tick,0x7ffdb840feb4,342401181,0,0x0,8
tick,0x7ffdb840feb4,342416365,0,0x0,8
tick,0x7ffdb840feb4,342431413,0,0x0,8
tick,0x7ffdb840feb4,342446542,0,0x0,8
tick,0x7ffdb840feb4,342462360,0,0x0,8
tick,0x7ffdb840feb4,342477367,0,0x0,8
tick,0x7ffdb840feb4,342493139,0,0x0,8
tick,0x7ffdb840feb4,342508421,0,0x0,8
tick,0x7ffdb840feb4,342523357,0,0x0,8
tick,0x7ffdb840feb4,342539361,0,0x0,8
tick,0x7ffdb840feb4,342555247,0,0x0,8
tick,0x7ffdb840feb4,342571374,0,0x0,8
tick,0x7ffdb840feb4,342587087,0,0x0,8
tick,0x7ffdb840feb4,342602915,0,0x0,8
tick,0x7ffdb840feb4,342617765,0,0x0,8
tick,0x7ffdb840feb4,342633422,0,0x0,8
tick,0x7ffdb840feb4,342648912,0,0x0,8
tick,0x7ffdb840feb4,342664571,0,0x0,8
tick,0x7ffdb840feb4,342680115,0,0x0,8
tick,0x7ffdb840feb4,342696114,0,0x0,8
tick,0x7ffdb840feb4,342712129,0,0x0,8
tick,0x7ffdb840feb4,342727443,0,0x0,8
tick,0x7ffdb840feb4,342743281,0,0x0,8
tick,0x7ffdb840feb4,342758450,0,0x0,8
tick,0x7ffdb840feb4,342774279,0,0x0,8
tick,0x7ffdb840feb4,342790121,0,0x0,8
tick,0x7ffdb840feb4,342805454,0,0x0,8
tick,0x7ffdb840feb4,342820391,0,0x0,8
tick,0x7ffdb840feb4,342836460,0,0x0,8
tick,0x7ffdb840feb4,342852471,0,0x0,8
tick,0x7ffdb840feb4,342867628,0,0x0,8
tick,0x7ffdb840feb4,342883131,0,0x0,8
tick,0x7ffdb840feb4,342899173,0,0x0,8
tick,0x7ffdb840feb4,342914135,0,0x0,8
tick,0x7ffdb840feb4,342929134,0,0x0,8
tick,0x7ffdb840feb4,342944298,0,0x0,8
tick,0x7ffdb840feb4,342959493,0,0x0,8
tick,0x7ffdb840feb4,342974476,0,0x0,8
tick,0x7ffdb840feb4,342990321,0,0x0,8
tick,0x7ffdb840feb4,343006327,0,0x0,8
tick,0x7ffdb840feb4,343022472,0,0x0,8
tick,0x7ffdb840feb4,343037352,0,0x0,8
tick,0x7ffdb840feb4,343052345,0,0x0,8
tick,0x7ffdb840feb4,343068334,0,0x0,8
tick,0x7ffdb840feb4,343083256,0,0x0,8
tick,0x7ffdb840feb4,343098334,0,0x0,8
tick,0x7ffdb840feb4,343114329,0,0x0,8
tick,0x7ffdb840feb4,343129499,0,0x0,8
tick,0x7ffdb840feb4,343144321,0,0x0,8
tick,0x7ffdb840feb4,343160331,0,0x0,8
tick,0x7ffdb840feb4,343175510,0,0x0,8
tick,0x7ffdb840feb4,343190324,0,0x0,8
tick,0x7ffdb840feb4,343205503,0,0x0,8
tick,0x7ffdb840feb4,343221140,0,0x0,8
tick,0x7ffdb840feb4,343236506,0,0x0,8
tick,0x7ffdb840feb4,343251916,0,0x0,8
tick,0x7ffdb840feb4,343266668,0,0x0,8
tick,0x7ffdb840feb4,343282024,0,0x0,8
tick,0x7ffdb840feb4,343297343,0,0x0,8
tick,0x7ffdb840feb4,343312757,0,0x0,8
tick,0x7ffdb840feb4,343328511,0,0x0,8
tick,0x7ffdb840feb4,343344346,0,0x0,8
tick,0x7ffdb840feb4,343359505,0,0x0,8
tick,0x7ffdb840feb4,343375352,0,0x0,8
tick,0x7ffdb840feb4,343389998,0,0x0,8
tick,0x7ffdb840feb4,343405354,0,0x0,8
tick,0x7ffdb840feb4,343421024,0,0x0,8
tick,0x7ffdb840feb4,343436535,0,0x0,8
tick,0x7ffdb840feb4,343452366,0,0x0,8
tick,0x7ffdb840feb4,343467532,0,0x0,8
tick,0x7ffdb840feb4,343483258,0,0x0,8
tick,0x7ffdb840feb4,343498267,0,0x0,8
tick,0x7ffdb840feb4,343514363,0,0x0,8
tick,0x7ffdb840feb4,343530024,0,0x0,8
tick,0x7ffdb840feb4,343545378,0,0x0,8
tick,0x7ffdb840feb4,343560552,0,0x0,8
tick,0x7ffdb840feb4,343576555,0,0x0,8
tick,0x7ffdb840feb4,343591821,0,0x0,8
tick,0x7ffdb840feb4,343607831,0,0x0,8
tick,0x7ffdb840feb4,343622926,0,0x0,8
tick,0x7ffdb840feb4,343638160,0,0x0,8
tick,0x7ffdb840feb4,343653388,0,0x0,8
tick,0x7ffdb840feb4,343668852,0,0x0,8
tick,0x7ffdb840feb4,343684388,0,0x0,8
tick,0x7ffdb840feb4,343700097,0,0x0,8
tick,0x7ffdb840feb4,343715244,0,0x0,8
tick,0x7ffdb840feb4,343730578,0,0x0,8
tick,0x7ffdb840feb4,343746401,0,0x0,8
tick,0x7ffdb840feb4,343761602,0,0x0,8
tick,0x7ffdb840feb4,343776730,0,0x0,8
tick,0x7ffdb840feb4,343791737,0,0x0,8
tick,0x7ffdb840feb4,343806987,0,0x0,8
tick,0x7ffdb840feb4,343822409,0,0x0,8
tick,0x7ffdb840feb4,343838490,0,0x0,8
tick,0x7ffdb840feb4,343854405,0,0x0,8
tick,0x7ffdb840feb4,343869597,0,0x0,8
tick,0x7ffdb840feb4,343884392,0,0x0,8
tick,0x7ffdb840feb4,343900403,0,0x0,8
tick,0x7ffdb840feb4,343915603,0,0x0,8
tick,0x7ffdb840feb4,343930599,0,0x0,8
tick,0x7ffdb840feb4,343945597,0,0x0,8
tick,0x7ffdb840feb4,343961613,0,0x0,8
tick,0x7ffdb840feb4,343976628,0,0x0,8
tick,0x7ffdb840feb4,343991619,0,0x0,8
tick,0x7ffdb840feb4,344007621,0,0x0,8
tick,0x7ffdb840feb4,344022624,0,0x0,8
tick,0x7ffdb840feb4,344038637,0,0x0,8
tick,0x7ffdb840feb4,344054617,0,0x0,8
tick,0x7ffdb840feb4,344070625,0,0x0,8
tick,0x7ffdb840feb4,344086445,0,0x0,8
tick,0x7ffdb840feb4,344102456,0,0x0,8
tick,0x7ffdb840feb4,344118443,0,0x0,8
tick,0x7ffdb840feb4,344133624,0,0x0,8
tick,0x7ffdb840feb4,344149633,0,0x0,8
tick,0x7ffdb840feb4,344164455,0,0x0,8
tick,0x7ffdb840feb4,344180478,0,0x0,8
tick,0x7ffdb840feb4,344195646,0,0x0,8
tick,0x7ffdb840feb4,344210456,0,0x0,8
tick,0x7ffdb840feb4,344225474,0,0x0,8
tick,0x7ffdb840feb4,344240645,0,0x0,8
tick,0x7ffdb840feb4,344256634,0,0x0,8
tick,0x7ffdb840feb4,344272650,0,0x0,8
tick,0x7ffdb840feb4,344288377,0,0x0,8
tick,0x7ffdb840feb4,344304487,0,0x0,8
tick,0x7ffdb840feb4,344320481,0,0x0,8
tick,0x7ffdb840feb4,344336469,0,0x0,8
tick,0x7ffdb840feb4,344352491,0,0x0,8
tick,0x7ffdb840feb4,344368498,0,0x0,8
tick,0x7ffdb840feb4,344383268,0,0x0,8
tick,0x7ffdb840feb4,344399027,0,0x0,8
tick,0x7ffdb840feb4,344414486,0,0x0,8
tick,0x7ffdb840feb4,344429635,0,0x0,8
tick,0x7ffdb840feb4,344445494,0,0x0,8
tick,0x7ffdb840feb4,344460483,0,0x0,8
tick,0x7ffdb840feb4,344476495,0,0x0,8
tick,0x7ffdb840feb4,344491498,0,0x0,8
tick,0x7ffdb840feb4,344506493,0,0x0,8
tick,0x7ffdb840feb4,344521312,0,0x0,8
tick,0x7ffdb840feb4,344536501,0,0x0,8
tick,0x7ffdb840feb4,344552507,0,0x0,8
tick,0x7ffdb840feb4,344568493,0,0x0,8
tick,0x7ffdb840feb4,344584507,0,0x0,8
tick,0x7ffdb840feb4,344599936,0,0x0,8
tick,0x7ffdb840feb4,344615513,0,0x0,8
tick,0x7ffdb840feb4,344631528,0,0x0,8
tick,0x7ffdb840feb4,344647511,0,0x0,8
tick,0x7ffdb840feb4,344662699,0,0x0,8
tick,0x7ffdb840feb4,344677689,0,0x0,8
tick,0x7ffdb840feb4,344693712,0,0x0,8
tick,0x7ffdb840feb4,344709704,0,0x0,8
tick,0x7ffdb840feb4,344725730,0,0x0,8
tick,0x7ffdb840feb4,344741715,0,0x0,8
tick,0x7ffdb840feb4,344757693,0,0x0,8
tick,0x7ffdb840feb4,344772699,0,0x0,8
tick,0x7ffdb840feb4,344787713,0,0x0,8
tick,0x7ffdb840feb4,344802711,0,0x0,8
tick,0x7ffdb840feb4,344818713,0,0x0,8
tick,0x7ffdb840feb4,344833656,0,0x0,8
tick,0x7ffdb840feb4,344848954,0,0x0,8
tick,0x7ffdb840feb4,344864539,0,0x0,8
tick,0x7ffdb840feb4,344879569,0,0x0,8
tick,0x7ffdb840feb4,344895536,0,0x0,8
tick,0x7ffdb840feb4,344911536,0,0x0,8
tick,0x7ffdb840feb4,344927540,0,0x0,8
tick,0x7ffdb840feb4,344942720,0,0x0,8
tick,0x7ffdb840feb4,344957724,0,0x0,8
tick,0x7ffdb840feb4,344972726,0,0x0,8
tick,0x7ffdb840feb4,344988728,0,0x0,8
tick,0x7ffdb840feb4,345004556,0,0x0,8
tick,0x7ffdb840feb4,345019730,0,0x0,8
tick,0x7ffdb840feb4,345035736,0,0x0,8
tick,0x7ffdb840feb4,345050731,0,0x0,8
tick,0x7ffdb840feb4,345066744,0,0x0,8
tick,0x7ffdb840feb4,345082734,0,0x0,8
tick,0x7ffdb840feb4,345098738,0,0x0,8
tick,0x7ffdb840feb4,345114557,0,0x0,8
tick,0x7ffdb840feb4,345129737,0,0x0,8
tick,0x7ffdb840feb4,345145751,0,0x0,8
tick,0x7ffdb840feb4,345160761,0,0x0,8
tick,0x7ffdb840feb4,345176744,0,0x0,8
tick,0x7ffdb840feb4,345192742,0,0x0,8
tick,0x7ffdb840feb4,345208206,0,0x0,8
tick,0x7ffdb840feb4,345223592,0,0x0,8
tick,0x7ffdb840feb4,345239320,0,0x0,8
tick,0x7ffdb840feb4,345254576,0,0x0,8
tick,0x7ffdb840feb4,345270579,0,0x0,8
tick,0x7ffdb840feb4,345285581,0,0x0,8
tick,0x7ffdb840feb4,345300738,0,0x0,8
tick,0x7ffdb840feb4,345316760,0,0x0,8
tick,0x7ffdb840feb4,345332269,0,0x0,8
tick,0x7ffdb840feb4,345347924,0,0x0,8
tick,0x7ffdb840feb4,345363321,0,0x0,8
tick,0x7ffdb840feb4,345379121,0,0x0,8
tick,0x7ffdb840feb4,345394592,0,0x0,8
tick,0x7ffdb840feb4,345409837,0,0x0,8
tick,0x7ffdb840feb4,345425602,0,0x0,8
tick,0x7ffdb840feb4,345440759,0,0x0,8
tick,0x7ffdb840feb4,345456777,0,0x0,8
tick,0x7ffdb840feb4,345472798,0,0x0,8
tick,0x7ffdb840feb4,345488784,0,0x0,8
tick,0x7ffdb840feb4,345504608,0,0x0,8
tick,0x7ffdb840feb4,345519786,0,0x0,8
tick,0x7ffdb840feb4,345535740,0,0x0,8
tick,0x7ffdb840feb4,345550799,0,0x0,8
tick,0x7ffdb840feb4,345566807,0,0x0,8
tick,0x7ffdb840feb4,345582809,0,0x0,8
tick,0x7ffdb840feb4,345597945,0,0x0,8
tick,0x7ffdb840feb4,345613163,0,0x0,8
tick,0x7ffdb840feb4,345628825,0,0x0,8
tick,0x7ffdb840feb4,345644814,0,0x0,8
tick,0x7ffdb840feb4,345660763,0,0x0,8
tick,0x7ffdb840feb4,345676757,0,0x0,8
tick,0x7ffdb840feb4,345692645,0,0x0,8
tick,0x7ffdb840feb4,345708645,0,0x0,8
tick,0x7ffdb840feb4,345724650,0,0x0,8
tick,0x7ffdb840feb4,345739852,0,0x0,8
tick,0x7ffdb840feb4,345755655,0,0x0,8
tick,0x7ffdb840feb4,345770640,0,0x0,8
tick,0x7ffdb840feb4,345785814,0,0x0,8
tick,0x7ffdb840feb4,345800952,0,0x0,8
tick,0x7ffdb840feb4,345816648,0,0x0,8
tick,0x7ffdb840feb4,345831815,0,0x0,8
tick,0x7ffdb840feb4,345846997,0,0x0,8
tick,0x7ffdb840feb4,345862823,0,0x0,8
tick,0x7ffdb840feb4,345878347,0,0x0,8
tick,0x7ffdb840feb4,345893664,0,0x0,8
tick,0x7ffdb840feb4,345908841,0,0x0,8
tick,0x7ffdb840feb4,345924676,0,0x0,8
tick,0x7ffdb840feb4,345939870,0,0x0,8
tick,0x7ffdb840feb4,345955659,0,0x0,8
tick,0x7ffdb840feb4,345970666,0,0x0,8
tick,0x7ffdb840feb4,345985838,0,0x0,8
tick,0x7ffdb840feb4,346001938,0,0x0,8
tick,0x7ffdb840feb4,346016842,0,0x0,8
tick,0x7ffdb840feb4,346032821,0,0x0,8
tick,0x7ffdb840feb4,346047823,0,0x0,8
tick,0x7ffdb840feb4,346063824,0,0x0,8
tick,0x7ffdb840feb4,346078822,0,0x0,8
tick,0x7ffdb840feb4,346094680,0,0x0,8
tick,0x7ffdb840feb4,346109877,0,0x0,8
tick,0x7ffdb840feb4,346125690,0,0x0,8
tick,0x7ffdb840feb4,346140876,0,0x0,8
tick,0x7ffdb840feb4,346155878,0,0x0,8
tick,0x7ffdb840feb4,346171165,0,0x0,8
tick,0x7ffdb840feb4,346186872,0,0x0,8
tick,0x7ffdb840feb4,346202174,0,0x0,8
tick,0x7ffdb840feb4,346217697,0,0x0,8
tick,0x7ffdb840feb4,346232824,0,0x0,8
tick,0x7ffdb840feb4,346247844,0,0x0,8
tick,0x7ffdb840feb4,346262653,0,0x0,8
tick,0x7ffdb840feb4,346277834,0,0x0,8
tick,0x7ffdb840feb4,346293880,0,0x0,8
tick,0x7ffdb840feb4,346309880,0,0x0,8
tick,0x7ffdb840feb4,346325715,0,0x0,8
tick,0x7ffdb840feb4,346340843,0,0x0,8
tick,0x7ffdb840feb4,346355896,0,0x0,8
tick,0x7ffdb840feb4,346371896,0,0x0,8
tick,0x7ffdb840feb4,346387905,0,0x0,8
tick,0x7ffdb840feb4,346403895,0,0x0,8
tick,0x7ffdb840feb4,346419892,0,0x0,8
tick,0x7ffdb840feb4,346435905,0,0x0,8
tick,0x7ffdb840feb4,346451112,0,0x0,8
tick,0x7ffdb840feb4,346465888,0,0x0,8
tick,0x7ffdb840feb4,346481126,0,0x0,8
tick,0x7ffdb840feb4,346496610,0,0x0,8
tick,0x7ffdb840feb4,346512609,0,0x0,8
tick,0x7ffdb840feb4,346527424,0,0x0,8
tick,0x7ffdb840feb4,346542904,0,0x0,8
tick,0x7ffdb840feb4,346558929,0,0x0,8
tick,0x7ffdb840feb4,346574742,0,0x0,8
tick,0x7ffdb840feb4,346589924,0,0x0,8
tick,0x7ffdb840feb4,346605740,0,0x0,8
tick,0x7ffdb840feb4,346620920,0,0x0,8
tick,0x7ffdb840feb4,346635924,0,0x0,8
tick,0x7ffdb840feb4,346650954,0,0x0,8
tick,0x7ffdb840feb4,346666926,0,0x0,8
tick,0x7ffdb840feb4,346682287,0,0x0,8
tick,0x7ffdb840feb4,346698297,0,0x0,8
tick,0x7ffdb840feb4,346713766,0,0x0,8
tick,0x7ffdb840feb4,346729134,0,0x0,8
tick,0x7ffdb840feb4,346744755,0,0x0,8
tick,0x7ffdb840feb4,346759774,0,0x0,8
tick,0x7ffdb840feb4,346775773,0,0x0,8
tick,0x7ffdb840feb4,346790128,0,0x0,8
tick,0x7ffdb840feb4,346806136,0,0x0,8
tick,0x7ffdb840feb4,346822154,0,0x0,8
tick,0x7ffdb840feb4,346837758,0,0x0,8
tick,0x7ffdb840feb4,346853155,0,0x0,8
tick,0x7ffdb840feb4,346869162,0,0x0,8
tick,0x7ffdb840feb4,346884775,0,0x0,8
tick,0x7ffdb840feb4,346900075,0,0x0,8
tick,0x7ffdb840feb4,346915608,0,0x0,8
tick,0x7ffdb840feb4,346931140,0,0x0,8
tick,0x7ffdb840feb4,346947150,0,0x0,8
tick,0x7ffdb840feb4,346963157,0,0x0,8
tick,0x7ffdb840feb4,346978392,0,0x0,8
tick,0x7ffdb840feb4,346993405,0,0x0,8
tick,0x7ffdb840feb4,347009013,0,0x0,8
tick,0x7ffdb840feb4,347024798,0,0x0,8
tick,0x7ffdb840feb4,347040779,0,0x0,8
tick,0x7ffdb840feb4,347055773,0,0x0,8
tick,0x7ffdb840feb4,347070781,0,0x0,8
tick,0x7ffdb840feb4,347086786,0,0x0,8
tick,0x7ffdb840feb4,347102793,0,0x0,8
tick,0x7ffdb840feb4,347117791,0,0x0,8
tick,0x7ffdb840feb4,347133276,0,0x0,8
tick,0x7ffdb840feb4,347148790,0,0x0,8
tick,0x7ffdb840feb4,347164794,0,0x0,8
tick,0x7ffdb840feb4,347180039,0,0x0,8
tick,0x7ffdb840feb4,347194803,0,0x0,8
tick,0x7ffdb840feb4,347210019,0,0x0,8
tick,0x7ffdb840feb4,347225817,0,0x0,8
tick,0x7ffdb840feb4,347241498,0,0x0,8
tick,0x7ffdb840feb4,347256793,0,0x0,8
tick,0x7ffdb840feb4,347272849,0,0x0,8
tick,0x7ffdb840feb4,347288512,0,0x0,8
tick,0x7ffdb840feb4,347303823,0,0x0,8
tick,0x7ffdb840feb4,347319407,0,0x0,8
tick,0x7ffdb840feb4,347334828,0,0x0,8
tick,0x7ffdb840feb4,347349994,0,0x0,8
tick,0x7ffdb840feb4,347365537,0,0x0,8
tick,0x7ffdb840feb4,347381342,0,0x0,8
tick,0x7ffdb840feb4,347396889,0,0x0,8
tick,0x7ffdb840feb4,347412055,0,0x0,8
tick,0x7ffdb840feb4,347427504,0,0x0,8
tick,0x7ffdb840feb4,347442854,0,0x0,8
tick,0x7ffdb840feb4,347458026,0,0x0,8
tick,0x7ffdb840feb4,347473286,0,0x0,8
tick,0x7ffdb840feb4,347488575,0,0x0,8
tick,0x7ffdb840feb4,347503848,0,0x0,8
tick,0x7ffdb840feb4,347519419,0,0x0,8
tick,0x7ffdb840feb4,347534846,0,0x0,8
tick,0x7ffdb840feb4,347550003,0,0x0,8
tick,0x7ffdb840feb4,347565610,0,0x0,8
tick,0x7ffdb840feb4,347581274,0,0x0,8
tick,0x7ffdb840feb4,347596035,0,0x0,8
tick,0x7ffdb840feb4,347611067,0,0x0,8
tick,0x7ffdb840feb4,347626685,0,0x0,8
tick,0x7ffdb840feb4,347641880,0,0x0,8
tick,0x7ffdb840feb4,347657685,0,0x0,8
tick,0x7ffdb840feb4,347672660,0,0x0,8
tick,0x7ffdb840feb4,347687865,0,0x0,8
tick,0x7ffdb840feb4,347703610,0,0x0,8
tick,0x7ffdb840feb4,347718679,0,0x0,8
tick,0x7ffdb840feb4,347733873,0,0x0,8
tick,0x7ffdb840feb4,347749940,0,0x0,8
tick,0x7ffdb840feb4,347765609,0,0x0,8
tick,0x7ffdb840feb4,347781284,0,0x0,8
tick,0x7ffdb840feb4,347796423,0,0x0,8
tick,0x7ffdb840feb4,347811241,0,0x0,8
tick,0x7ffdb840feb4,347827079,0,0x0,8
tick,0x7ffdb840feb4,347841898,0,0x0,8
tick,0x7ffdb840feb4,347857072,0,0x0,8
tick,0x7ffdb840feb4,347871727,0,0x0,8
tick,0x7ffdb840feb4,347886901,0,0x0,8
tick,0x7ffdb840feb4,347902851,0,0x0,8
tick,0x7ffdb840feb4,347918459,0,0x0,8
tick,0x7ffdb840feb4,347933901,0,0x0,8
tick,0x7ffdb840feb4,347949942,0,0x0,8
tick,0x7ffdb840feb4,347964901,0,0x0,8
tick,0x7ffdb840feb4,347980280,0,0x0,8
tick,0x7ffdb840feb4,347995780,0,0x0,8
tick,0x7ffdb840feb4,348011110,0,0x0,8
tick,0x7ffdb840feb4,348026084,0,0x0,8
tick,0x7ffdb840feb4,348041901,0,0x0,8
tick,0x7ffdb840feb4,348057906,0,0x0,8
tick,0x7ffdb840feb4,348072903,0,0x0,8
tick,0x7ffdb840feb4,348087917,0,0x0,8
tick,0x7ffdb840feb4,348103620,0,0x0,8
tick,0x7ffdb840feb4,348118453,0,0x0,8
tick,0x7ffdb840feb4,348133911,0,0x0,8
tick,0x7ffdb840feb4,348149924,0,0x0,8
tick,0x7ffdb840feb4,348165938,0,0x0,8
tick,0x7ffdb840feb4,348181110,0,0x0,8
tick,0x7ffdb840feb4,348195942,0,0x0,8
tick,0x7ffdb840feb4,348211132,0,0x0,8
tick,0x7ffdb840feb4,348227106,0,0x0,8
tick,0x7ffdb840feb4,348242352,0,0x0,8
tick,0x7ffdb840feb4,348257942,0,0x0,8
tick,0x7ffdb840feb4,348273939,0,0x0,8
tick,0x7ffdb840feb4,348289945,0,0x0,8
tick,0x7ffdb840feb4,348305942,0,0x0,8
tick,0x7ffdb840feb4,348321957,0,0x0,8
tick,0x7ffdb840feb4,348337951,0,0x0,8
tick,0x7ffdb840feb4,348353955,0,0x0,8
tick,0x7ffdb840feb4,348369957,0,0x0,8
tick,0x7ffdb840feb4,348385123,0,0x0,8
tick,0x7ffdb840feb4,348399891,0,0x0,8
tick,0x7ffdb840feb4,348415609,0,0x0,8
tick,0x7ffdb840feb4,348431207,0,0x0,8
tick,0x7ffdb840feb4,348447137,0,0x0,8
tick,0x7ffdb840feb4,348463148,0,0x0,8
tick,0x7ffdb840feb4,348478465,0,0x0,8
tick,0x7ffdb840feb4,348493972,0,0x0,8
tick,0x7ffdb840feb4,348509142,0,0x0,8
tick,0x7ffdb840feb4,348524969,0,0x0,8
tick,0x7ffdb840feb4,348540919,0,0x0,8
tick,0x7ffdb840feb4,348555924,0,0x0,8
tick,0x7ffdb840feb4,348571986,0,0x0,8
tick,0x7ffdb840feb4,348586979,0,0x0,8
tick,0x7ffdb840feb4,348602982,0,0x0,8
tick,0x7ffdb840feb4,348618985,0,0x0,8
tick,0x7ffdb840feb4,348634216,0,0x0,8
tick,0x7ffdb840feb4,348649988,0,0x0,8
tick,0x7ffdb840feb4,348664984,0,0x0,8
tick,0x7ffdb840feb4,348680372,0,0x0,8
tick,0x7ffdb840feb4,348695988,0,0x0,8
tick,0x7ffdb840feb4,348710985,0,0x0,8
tick,0x7ffdb840feb4,348726183,0,0x0,8
tick,0x7ffdb840feb4,348741911,0,0x0,8
tick,0x7ffdb840feb4,348757183,0,0x0,8
tick,0x7ffdb840feb4,348773064,0,0x0,8
tick,0x7ffdb840feb4,348788319,0,0x0,8
tick,0x7ffdb840feb4,348803951,0,0x0,8
tick,0x7ffdb840feb4,348818332,0,0x0,8
tick,0x7ffdb840feb4,348833957,0,0x0,8
tick,0x7ffdb840feb4,348849947,0,0x0,8
tick,0x7ffdb840feb4,348865013,0,0x0,8
tick,0x7ffdb840feb4,348880469,0,0x0,8
tick,0x7ffdb840feb4,348896011,0,0x0,8
tick,0x7ffdb840feb4,348911201,0,0x0,8
tick,0x7ffdb840feb4,348926597,0,0x0,8
tick,0x7ffdb840feb4,348942204,0,0x0,8
tick,0x7ffdb840feb4,348957345,0,0x0,8
tick,0x7ffdb840feb4,348973214,0,0x0,8
tick,0x7ffdb840feb4,348988201,0,0x0,8
tick,0x7ffdb840feb4,349004023,0,0x0,8
tick,0x7ffdb840feb4,349018811,0,0x0,8
tick,0x7ffdb840feb4,349034935,0,0x0,8
tick,0x7ffdb840feb4,349050950,0,0x0,8
tick,0x7ffdb840feb4,349065958,0,0x0,8
tick,0x7ffdb840feb4,349080965,0,0x0,8
tick,0x7ffdb840feb4,349096953,0,0x0,8
tick,0x7ffdb840feb4,349112263,0,0x0,8
tick,0x7ffdb840feb4,349128052,0,0x0,8
tick,0x7ffdb840feb4,349144041,0,0x0,8
tick,0x7ffdb840feb4,349158795,0,0x0,8
tick,0x7ffdb840feb4,349174224,0,0x0,8
tick,0x7ffdb840feb4,349190256,0,0x0,8
tick,0x7ffdb840feb4,349206239,0,0x0,8
tick,0x7ffdb840feb4,349222246,0,0x0,8
tick,0x7ffdb840feb4,349237246,0,0x0,8
tick,0x7ffdb840feb4,349252949,0,0x0,8
tick,0x7ffdb840feb4,349268242,0,0x0,8
tick,0x7ffdb840feb4,349284065,0,0x0,8
tick,0x7ffdb840feb4,349298838,0,0x0,8
tick,0x7ffdb840feb4,349314844,0,0x0,8
tick,0x7ffdb840feb4,349330516,0,0x0,8
tick,0x7ffdb840feb4,349346070,0,0x0,8
tick,0x7ffdb840feb4,349361502,0,0x0,8
tick,0x7ffdb840feb4,349376062,0,0x0,8
tick,0x7ffdb840feb4,349391933,0,0x0,8
tick,0x7ffdb840feb4,349407078,0,0x0,8
tick,0x7ffdb840feb4,349422821,0,0x0,8
tick,0x7ffdb840feb4,349438238,0,0x0,8
tick,0x7ffdb840feb4,349453090,0,0x0,8
tick,0x7ffdb840feb4,349468261,0,0x0,8
tick,0x7ffdb840feb4,349484084,0,0x0,8
tick,0x7ffdb840feb4,349499953,0,0x0,8
tick,0x7ffdb840feb4,349515970,0,0x0,8
tick,0x7ffdb840feb4,349531959,0,0x0,8
tick,0x7ffdb840feb4,349547974,0,0x0,8
tick,0x7ffdb840feb4,349563506,0,0x0,8
tick,0x7ffdb840feb4,349579642,0,0x0,8
tick,0x7ffdb840feb4,349594966,0,0x0,8
tick,0x7ffdb840feb4,349610677,0,0x0,8
tick,0x7ffdb840feb4,349625273,0,0x0,8
tick,0x7ffdb840feb4,349640221,0,0x0,8
tick,0x7ffdb840feb4,349656029,0,0x0,8
tick,0x7ffdb840feb4,349672006,0,0x0,8
tick,0x7ffdb840feb4,349688028,0,0x0,8
tick,0x7ffdb840feb4,349703788,0,0x0,8
tick,0x7ffdb840feb4,349719294,0,0x0,8
tick,0x7ffdb840feb4,349735114,0,0x0,8
tick,0x7ffdb840feb4,349750293,0,0x0,8
tick,0x7ffdb840feb4,349765611,0,0x0,8
tick,0x7ffdb840feb4,349781295,0,0x0,8
tick,0x7ffdb840feb4,349797289,0,0x0,8
tick,0x7ffdb840feb4,349812310,0,0x0,8
tick,0x7ffdb840feb4,349827309,0,0x0,8
tick,0x7ffdb840feb4,349843217,0,0x0,8
tick,0x7ffdb840feb4,349858465,0,0x0,8
tick,0x7ffdb840feb4,349873317,0,0x0,8
tick,0x7ffdb840feb4,349888312,0,0x0,8
tick,0x7ffdb840feb4,349904122,0,0x0,8
tick,0x7ffdb840feb4,349919315,0,0x0,8
tick,0x7ffdb840feb4,349935137,0,0x0,8
tick,0x7ffdb840feb4,349950329,0,0x0,8
tick,0x7ffdb840feb4,349965615,0,0x0,8
tick,0x7ffdb840feb4,349981325,0,0x0,8
tick,0x7ffdb840feb4,349997315,0,0x0,8
tick,0x7ffdb840feb4,350013330,0,0x0,8
tick,0x7ffdb840feb4,350029318,0,0x0,8
tick,0x7ffdb840feb4,350045148,0,0x0,8
tick,0x7ffdb840feb4,350061176,0,0x0,8
tick,0x7ffdb840feb4,350077164,0,0x0,8
tick,0x7ffdb840feb4,350093163,0,0x0,8
tick,0x7ffdb840feb4,350109165,0,0x0,8
tick,0x7ffdb840feb4,350125170,0,0x0,8
tick,0x7ffdb840feb4,350141179,0,0x0,8
tick,0x7ffdb840feb4,350156359,0,0x0,8
tick,0x7ffdb840feb4,350171183,0,0x0,8
tick,0x7ffdb840feb4,350186353,0,0x0,8
tick,0x7ffdb840feb4,350202364,0,0x0,8
tick,0x7ffdb840feb4,350217940,0,0x0,8
tick,0x7ffdb840feb4,350233965,0,0x0,8
tick,0x7ffdb840feb4,350249188,0,0x0,8
tick,0x7ffdb840feb4,350264178,0,0x0,8
tick,0x7ffdb840feb4,350279387,0,0x0,8
tick,0x7ffdb840feb4,350295190,0,0x0,8
tick,0x7ffdb840feb4,350310340,0,0x0,8
tick,0x7ffdb840feb4,350326198,0,0x0,8
tick,0x7ffdb840feb4,350342192,0,0x0,8
tick,0x7ffdb840feb4,350357488,0,0x0,8
tick,0x7ffdb840feb4,350372643,0,0x0,8
tick,0x7ffdb840feb4,350388200,0,0x0,8
tick,0x7ffdb840feb4,350403929,0,0x0,8
tick,0x7ffdb840feb4,350419923,0,0x0,8
tick,0x7ffdb840feb4,350435927,0,0x0,8
tick,0x7ffdb840feb4,350451956,0,0x0,8
tick,0x7ffdb840feb4,350466368,0,0x0,8
tick,0x7ffdb840feb4,350481555,0,0x0,8
tick,0x7ffdb840feb4,350497380,0,0x0,8
tick,0x7ffdb840feb4,350513396,0,0x0,8
tick,0x7ffdb840feb4,350529391,0,0x0,8
tick,0x7ffdb840feb4,350545198,0,0x0,8
tick,0x7ffdb840feb4,350560395,0,0x0,8
tick,0x7ffdb840feb4,350576208,0,0x0,8
tick,0x7ffdb840feb4,350591396,0,0x0,8
tick,0x7ffdb840feb4,350607232,0,0x0,8
tick,0x7ffdb840feb4,350622410,0,0x0,8
tick,0x7ffdb840feb4,350638169,0,0x0,8
tick,0x7ffdb840feb4,350653957,0,0x0,8
tick,0x7ffdb840feb4,350669403,0,0x0,8
tick,0x7ffdb840feb4,350685222,0,0x0,8
tick,0x7ffdb840feb4,350701232,0,0x0,8
tick,0x7ffdb840feb4,350717238,0,0x0,8
tick,0x7ffdb840feb4,350732289,0,0x0,8
tick,0x7ffdb840feb4,350747995,0,0x0,8
tick,0x7ffdb840feb4,350763377,0,0x0,8
tick,0x7ffdb840feb4,350779414,0,0x0,8
tick,0x7ffdb840feb4,350794807,0,0x0,8
tick,0x7ffdb840feb4,350810833,0,0x0,8
tick,0x7ffdb840feb4,350826437,0,0x0,8
tick,0x7ffdb840feb4,350842408,0,0x0,8
tick,0x7ffdb840feb4,350857611,0,0x0,8
tick,0x7ffdb840feb4,350872421,0,0x0,8
tick,0x7ffdb840feb4,350887427,0,0x0,8
tick,0x7ffdb840feb4,350903434,0,0x0,8
tick,0x7ffdb840feb4,350919178,0,0x0,8
tick,0x7ffdb840feb4,350934262,0,0x0,8
tick,0x7ffdb840feb4,350948956,0,0x0,8
tick,0x7ffdb840feb4,350964268,0,0x0,8
tick,0x7ffdb840feb4,350979441,0,0x0,8
tick,0x7ffdb840feb4,350995442,0,0x0,8
tick,0x7ffdb840feb4,351010400,0,0x0,8
tick,0x7ffdb840feb4,351026267,0,0x0,8
tick,0x7ffdb840feb4,351041444,0,0x0,8
tick,0x7ffdb840feb4,351056439,0,0x0,8
tick,0x7ffdb840feb4,351072450,0,0x0,8
tick,0x7ffdb840feb4,351088464,0,0x0,8
tick,0x7ffdb840feb4,351104461,0,0x0,8
tick,0x7ffdb840feb4,351119460,0,0x0,8
tick,0x7ffdb840feb4,351135281,0,0x0,8
tick,0x7ffdb840feb4,351151290,0,0x0,8
tick,0x7ffdb840feb4,351166952,0,0x0,8
tick,0x7ffdb840feb4,351182249,0,0x0,8
tick,0x7ffdb840feb4,351198290,0,0x0,8
tick,0x7ffdb840feb4,351213424,0,0x0,8
tick,0x7ffdb840feb4,351229298,0,0x0,8
tick,0x7ffdb840feb4,351244424,0,0x0,8
tick,0x7ffdb840feb4,351260185,0,0x0,8
tick,0x7ffdb840feb4,351275183,0,0x0,8
tick,0x7ffdb840feb4,351290308,0,0x0,8
tick,0x7ffdb840feb4,351305304,0,0x0,8
tick,0x7ffdb840feb4,351321097,0,0x0,8
tick,0x7ffdb840feb4,351336307,0,0x0,8
tick,0x7ffdb840feb4,351351430,0,0x0,8
tick,0x7ffdb840feb4,351367495,0,0x0,8
tick,0x7ffdb840feb4,351382302,0,0x0,8
tick,0x7ffdb840feb4,351398381,0,0x0,8
tick,0x7ffdb840feb4,351414315,0,0x0,8
tick,0x7ffdb840feb4,351430306,0,0x0,8
tick,0x7ffdb840feb4,351445434,0,0x0,8
tick,0x7ffdb840feb4,351460495,0,0x0,8
tick,0x7ffdb840feb4,351476059,0,0x0,8
tick,0x7ffdb840feb4,351491073,0,0x0,8
tick,0x7ffdb840feb4,351506325,0,0x0,8
tick,0x7ffdb840feb4,351522190,0,0x0,8
tick,0x7ffdb840feb4,351537497,0,0x0,8
tick,0x7ffdb840feb4,351552961,0,0x0,8
tick,0x7ffdb840feb4,351568505,0,0x0,8
tick,0x7ffdb840feb4,351584304,0,0x0,8
tick,0x7ffdb840feb4,351599980,0,0x0,8
tick,0x7ffdb840feb4,351615335,0,0x0,8
tick,0x7ffdb840feb4,351630517,0,0x0,8
tick,0x7ffdb840feb4,351646445,0,0x0,8
tick,0x7ffdb840feb4,351662548,0,0x0,8
tick,0x7ffdb840feb4,351678215,0,0x0,8
tick,0x7ffdb840feb4,351694156,0,0x0,8
tick,0x7ffdb840feb4,351709328,0,0x0,8
tick,0x7ffdb840feb4,351725354,0,0x0,8
tick,0x7ffdb840feb4,351740488,0,0x0,8
tick,0x7ffdb840feb4,351755828,0,0x0,8
tick,0x7ffdb840feb4,351771531,0,0x0,8
tick,0x7ffdb840feb4,351786533,0,0x0,8
tick,0x7ffdb840feb4,351801965,0,0x0,8
tick,0x7ffdb840feb4,351817551,0,0x0,8
tick,0x7ffdb840feb4,351833199,0,0x0,8
tick,0x7ffdb840feb4,351848293,0,0x0,8
tick,0x7ffdb840feb4,351863538,0,0x0,8
tick,0x7ffdb840feb4,351879228,0,0x0,8
tick,0x7ffdb840feb4,351894234,0,0x0,8
tick,0x7ffdb840feb4,351909484,0,0x0,8
tick,0x7ffdb840feb4,351925380,0,0x0,8
tick,0x7ffdb840feb4,351940548,0,0x0,8
tick,0x7ffdb840feb4,351956546,0,0x0,8
tick,0x7ffdb840feb4,351972251,0,0x0,8
tick,0x7ffdb840feb4,351987557,0,0x0,8
tick,0x7ffdb840feb4,352003400,0,0x0,8
tick,0x7ffdb840feb4,352018571,0,0x0,8
tick,0x7ffdb840feb4,352033938,0,0x0,8
tick,0x7ffdb840feb4,352049968,0,0x0,8
tick,0x7ffdb840feb4,352065391,0,0x0,8
tick,0x7ffdb840feb4,352081457,0,0x0,8
tick,0x7ffdb840feb4,352096456,0,0x0,8
tick,0x7ffdb840feb4,352112468,0,0x0,8
tick,0x7ffdb840feb4,352127473,0,0x0,8
tick,0x7ffdb840feb4,352143564,0,0x0,8
tick,0x7ffdb840feb4,352159326,0,0x0,8
tick,0x7ffdb840feb4,352175405,0,0x0,8
tick,0x7ffdb840feb4,352191329,0,0x0,8
tick,0x7ffdb840feb4,352206582,0,0x0,8
tick,0x7ffdb840feb4,352222589,0,0x0,8
tick,0x7ffdb840feb4,352238255,0,0x0,8
tick,0x7ffdb840feb4,352252985,0,0x0,8
tick,0x7ffdb840feb4,352268597,0,0x0,8
tick,0x7ffdb840feb4,352284294,0,0x0,8
tick,0x7ffdb840feb4,352299968,0,0x0,8
tick,0x7ffdb840feb4,352315596,0,0x0,8
tick,0x7ffdb840feb4,352331290,0,0x0,8
tick,0x7ffdb840feb4,352346583,0,0x0,8
tick,0x7ffdb840feb4,352362253,0,0x0,8
tick,0x7ffdb840feb4,352377599,0,0x0,8
tick,0x7ffdb840feb4,352392561,0,0x0,8
tick,0x7ffdb840feb4,352408585,0,0x0,8
tick,0x7ffdb840feb4,352424356,0,0x0,8
tick,0x7ffdb840feb4,352439268,0,0x0,8
tick,0x7ffdb840feb4,352454452,0,0x0,8
tick,0x7ffdb840feb4,352469610,0,0x0,8
tick,0x7ffdb840feb4,352485443,0,0x0,8
tick,0x7ffdb840feb4,352501448,0,0x0,8
tick,0x7ffdb840feb4,352517447,0,0x0,8
tick,0x7ffdb840feb4,352532304,0,0x0,8
tick,0x7ffdb840feb4,352547975,0,0x0,8
tick,0x7ffdb840feb4,352563467,0,0x0,8
tick,0x7ffdb840feb4,352579463,0,0x0,8
tick,0x7ffdb840feb4,352595487,0,0x0,8
tick,0x7ffdb840feb4,352611536,0,0x0,8
tick,0x7ffdb840feb4,352627631,0,0x0,8
tick,0x7ffdb840feb4,352643272,0,0x0,8
tick,0x7ffdb840feb4,352658635,0,0x0,8
tick,0x7ffdb840feb4,352674177,0,0x0,8
tick,0x7ffdb840feb4,352689476,0,0x0,8
tick,0x7ffdb840feb4,352704648,0,0x0,8
tick,0x7ffdb840feb4,352720679,0,0x0,8
tick,0x7ffdb840feb4,352735659,0,0x0,8
tick,0x7ffdb840feb4,352751715,0,0x0,8
tick,0x7ffdb840feb4,352767675,0,0x0,8
tick,0x7ffdb840feb4,352783666,0,0x0,8
tick,0x7ffdb840feb4,352798975,0,0x0,8
tick,0x7ffdb840feb4,352814490,0,0x0,8
tick,0x7ffdb840feb4,352829677,0,0x0,8
tick,0x7ffdb840feb4,352845493,0,0x0,8
tick,0x7ffdb840feb4,352861495,0,0x0,8
tick,0x7ffdb840feb4,352876249,0,0x0,8
tick,0x7ffdb840feb4,352891593,0,0x0,8
tick,0x7ffdb840feb4,352907253,0,0x0,8
tick,0x7ffdb840feb4,352922286,0,0x0,8
tick,0x7ffdb840feb4,352937494,0,0x0,8
tick,0x7ffdb840feb4,352952995,0,0x0,8
tick,0x7ffdb840feb4,352968504,0,0x0,8
tick,0x7ffdb840feb4,352984298,0,0x0,8
tick,0x7ffdb840feb4,352999975,0,0x0,8
tick,0x7ffdb840feb4,353015502,0,0x0,8
tick,0x7ffdb840feb4,353030519,0,0x0,8
tick,0x7ffdb840feb4,353045687,0,0x0,8
tick,0x7ffdb840feb4,353060986,0,0x0,8
tick,0x7ffdb840feb4,353076323,0,0x0,8
tick,0x7ffdb840feb4,353091143,0,0x0,8
tick,0x7ffdb840feb4,353107142,0,0x0,8
tick,0x7ffdb840feb4,353123143,0,0x0,8
tick,0x7ffdb840feb4,353138653,0,0x0,8
tick,0x7ffdb840feb4,353154660,0,0x0,8
tick,0x7ffdb840feb4,353170335,0,0x0,8
tick,0x7ffdb840feb4,353185529,0,0x0,8
tick,0x7ffdb840feb4,353200387,0,0x0,8
tick,0x7ffdb840feb4,353215534,0,0x0,8
tick,0x7ffdb840feb4,353231317,0,0x0,8
tick,0x7ffdb840feb4,353246657,0,0x0,8
tick,0x7ffdb840feb4,353262176,0,0x0,8
tick,0x7ffdb840feb4,353278311,0,0x0,8
tick,0x7ffdb840feb4,353293740,0,0x0,8
tick,0x7ffdb840feb4,353309198,0,0x0,8
tick,0x7ffdb840feb4,353324555,0,0x0,8
tick,0x7ffdb840feb4,353339740,0,0x0,8
tick,0x7ffdb840feb4,353355137,0,0x0,8
tick,0x7ffdb840feb4,353371170,0,0x0,8
tick,0x7ffdb840feb4,353386548,0,0x0,8
tick,0x7ffdb840feb4,353401927,0,0x0,8
tick,0x7ffdb840feb4,353417555,0,0x0,8
tick,0x7ffdb840feb4,353433309,0,0x0,8
tick,0x7ffdb840feb4,353448556,0,0x0,8
tick,0x7ffdb840feb4,353464069,0,0x0,8
tick,0x7ffdb840feb4,353479207,0,0x0,8
tick,0x7ffdb840feb4,353494561,0,0x0,8
tick,0x7ffdb840feb4,353510615,0,0x0,8
tick,0x7ffdb840feb4,353526571,0,0x0,8
tick,0x7ffdb840feb4,353541586,0,0x0,8
tick,0x7ffdb840feb4,353556583,0,0x0,8
tick,0x7ffdb840feb4,353572377,0,0x0,8
tick,0x7ffdb840feb4,353587748,0,0x0,8
tick,0x7ffdb840feb4,353602587,0,0x0,8
tick,0x7ffdb840feb4,353618589,0,0x0,8
tick,0x7ffdb840feb4,353633866,0,0x0,8
tick,0x7ffdb840feb4,353649979,0,0x0,8
tick,0x7ffdb840feb4,353665878,0,0x0,8
tick,0x7ffdb840feb4,353681592,0,0x0,8
tick,0x7ffdb840feb4,353696591,0,0x0,8
tick,0x7ffdb840feb4,353712631,0,0x0,8
tick,0x7ffdb840feb4,353728594,0,0x0,8
tick,0x7ffdb840feb4,353744674,0,0x0,8
tick,0x7ffdb840feb4,353760351,0,0x0,8
tick,0x7ffdb840feb4,353775597,0,0x0,8
tick,0x7ffdb840feb4,353790770,0,0x0,8
tick,0x7ffdb840feb4,353806596,0,0x0,8
tick,0x7ffdb840feb4,353822596,0,0x0,8
tick,0x7ffdb840feb4,353838325,0,0x0,8
tick,0x7ffdb840feb4,353853261,0,0x0,8
tick,0x7ffdb840feb4,353868625,0,0x0,8
tick,0x7ffdb840feb4,353884610,0,0x0,8
tick,0x7ffdb840feb4,353899972,0,0x0,8
tick,0x7ffdb840feb4,353915607,0,0x0,8
tick,0x7ffdb840feb4,353931306,0,0x0,8
tick,0x7ffdb840feb4,353946680,0,0x0,8
tick,0x7ffdb840feb4,353962683,0,0x0,8
tick,0x7ffdb840feb4,353978624,0,0x0,8
tick,0x7ffdb840feb4,353994038,0,0x0,8
tick,0x7ffdb840feb4,354009802,0,0x0,8
tick,0x7ffdb840feb4,354025637,0,0x0,8
tick,0x7ffdb840feb4,354040341,0,0x0,8
tick,0x7ffdb840feb4,354055691,0,0x0,8
tick,0x7ffdb840feb4,354071689,0,0x0,8
tick,0x7ffdb840feb4,354087819,0,0x0,8
tick,0x7ffdb840feb4,354103707,0,0x0,8
tick,0x7ffdb840feb4,354119706,0,0x0,8
tick,0x7ffdb840feb4,354135704,0,0x0,8
tick,0x7ffdb840feb4,354151705,0,0x0,8
tick,0x7ffdb840feb4,354167712,0,0x0,8
tick,0x7ffdb840feb4,354183349,0,0x0,8
tick,0x7ffdb840feb4,354198349,0,0x0,8
tick,0x7ffdb840feb4,354214365,0,0x0,8
tick,0x7ffdb840feb4,354229656,0,0x0,8
tick,0x7ffdb840feb4,354245711,0,0x0,8
tick,0x7ffdb840feb4,354261189,0,0x0,8
tick,0x7ffdb840feb4,354277189,0,0x0,8
tick,0x7ffdb840feb4,354292659,0,0x0,8
tick,0x7ffdb840feb4,354307848,0,0x0,8
tick,0x7ffdb840feb4,354323310,0,0x0,8
tick,0x7ffdb840feb4,354338472,0,0x0,8
tick,0x7ffdb840feb4,354354139,0,0x0,8
tick,0x7ffdb840feb4,354370144,0,0x0,8
tick,0x7ffdb840feb4,354385663,0,0x0,8
tick,0x7ffdb840feb4,354400979,0,0x0,8
tick,0x7ffdb840feb4,354415860,0,0x0,8
tick,0x7ffdb840feb4,354431310,0,0x0,8
tick,0x7ffdb840feb4,354446719,0,0x0,8
tick,0x7ffdb840feb4,354462720,0,0x0,8
tick,0x7ffdb840feb4,354477853,0,0x0,8
tick,0x7ffdb840feb4,354493685,0,0x0,8
tick,0x7ffdb840feb4,354508702,0,0x0,8
tick,0x7ffdb840feb4,354524490,0,0x0,8
tick,0x7ffdb840feb4,354540486,0,0x0,8
tick,0x7ffdb840feb4,354556484,0,0x0,8
tick,0x7ffdb840feb4,354571807,0,0x0,8
tick,0x7ffdb840feb4,354587886,0,0x0,8
tick,0x7ffdb840feb4,354603693,0,0x0,8
tick,0x7ffdb840feb4,354619235,0,0x0,8
tick,0x7ffdb840feb4,354634713,0,0x0,8
tick,0x7ffdb840feb4,354649732,0,0x0,8
tick,0x7ffdb840feb4,354665701,0,0x0,8
tick,0x7ffdb840feb4,354681312,0,0x0,8
tick,0x7ffdb840feb4,354697227,0,0x0,8
tick,0x7ffdb840feb4,354712709,0,0x0,8
tick,0x7ffdb840feb4,354728237,0,0x0,8
tick,0x7ffdb840feb4,354743623,0,0x0,8
tick,0x7ffdb840feb4,354758614,0,0x0,8
tick,0x7ffdb840feb4,354774298,0,0x0,8
tick,0x7ffdb840feb4,354789557,0,0x0,8
tick,0x7ffdb840feb4,354804597,0,0x0,8
tick,0x7ffdb840feb4,354820243,0,0x0,8
tick,0x7ffdb840feb4,354836245,0,0x0,8
tick,0x7ffdb840feb4,354851745,0,0x0,8
tick,0x7ffdb840feb4,354867746,0,0x0,8
tick,0x7ffdb840feb4,354883316,0,0x0,8
tick,0x7ffdb840feb4,354898066,0,0x0,8
tick,0x7ffdb840feb4,354913732,0,0x0,8
tick,0x7ffdb840feb4,354929339,0,0x0,8
tick,0x7ffdb840feb4,354945352,0,0x0,8
tick,0x7ffdb840feb4,354961351,0,0x0,8
tick,0x7ffdb840feb4,354976742,0,0x0,8
tick,0x7ffdb840feb4,354991921,0,0x0,8
tick,0x7ffdb840feb4,355007751,0,0x0,8
tick,0x7ffdb840feb4,355022740,0,0x0,8
tick,0x7ffdb840feb4,355038344,0,0x0,8
tick,0x7ffdb840feb4,355053750,0,0x0,8
tick,0x7ffdb840feb4,355069074,0,0x0,8
tick,0x7ffdb840feb4,355084315,0,0x0,8
tick,0x7ffdb840feb4,355099980,0,0x0,8
tick,0x7ffdb840feb4,355115585,0,0x0,8
tick,0x7ffdb840feb4,355131574,0,0x0,8
tick,0x7ffdb840feb4,355147578,0,0x0,8
tick,0x7ffdb840feb4,355162582,0,0x0,8
tick,0x7ffdb840feb4,355178590,0,0x0,8
tick,0x7ffdb840feb4,355193590,0,0x0,8
tick,0x7ffdb840feb4,355209591,0,0x0,8
tick,0x7ffdb840feb4,355224769,0,0x0,8
tick,0x7ffdb840feb4,355239767,0,0x0,8
tick,0x7ffdb840feb4,355254584,0,0x0,8
tick,0x7ffdb840feb4,355269955,0,0x0,8
tick,0x7ffdb840feb4,355285779,0,0x0,8
tick,0x7ffdb840feb4,355300955,0,0x0,8
tick,0x7ffdb840feb4,355316211,0,0x0,8
tick,0x7ffdb840feb4,355331497,0,0x0,8
tick,0x7ffdb840feb4,355346773,0,0x0,8
tick,0x7ffdb840feb4,355362768,0,0x0,8
tick,0x7ffdb840feb4,355377964,0,0x0,8
tick,0x7ffdb840feb4,355393809,0,0x0,8
tick,0x7ffdb840feb4,355408806,0,0x0,8
tick,0x7ffdb840feb4,355424800,0,0x0,8
tick,0x7ffdb840feb4,355440781,0,0x0,8
tick,0x7ffdb840feb4,355456795,0,0x0,8
tick,0x7ffdb840feb4,355472921,0,0x0,8
tick,0x7ffdb840feb4,355488944,0,0x0,8
tick,0x7ffdb840feb4,355503594,0,0x0,8
tick,0x7ffdb840feb4,355518817,0,0x0,8
tick,0x7ffdb840feb4,355534317,0,0x0,8
tick,0x7ffdb840feb4,355549802,0,0x0,8
tick,0x7ffdb840feb4,355564812,0,0x0,8
tick,0x7ffdb840feb4,355580588,0,0x0,8
tick,0x7ffdb840feb4,355595812,0,0x0,8
tick,0x7ffdb840feb4,355610808,0,0x0,8
tick,0x7ffdb840feb4,355625994,0,0x0,8
tick,0x7ffdb840feb4,355641831,0,0x0,8
tick,0x7ffdb840feb4,355656827,0,0x0,8
tick,0x7ffdb840feb4,355672828,0,0x0,8
tick,0x7ffdb840feb4,355688579,0,0x0,8
tick,0x7ffdb840feb4,355704509,0,0x0,8
tick,0x7ffdb840feb4,355719812,0,0x0,8
tick,0x7ffdb840feb4,355734840,0,0x0,8
tick,0x7ffdb840feb4,355750816,0,0x0,8
tick,0x7ffdb840feb4,355766838,0,0x0,8
tick,0x7ffdb840feb4,355781350,0,0x0,8
tick,0x7ffdb840feb4,355796484,0,0x0,8
tick,0x7ffdb840feb4,355811821,0,0x0,8
tick,0x7ffdb840feb4,355827025,0,0x0,8
tick,0x7ffdb840feb4,355842694,0,0x0,8
tick,0x7ffdb840feb4,355858022,0,0x0,8
tick,0x7ffdb840feb4,355873849,0,0x0,8
tick,0x7ffdb840feb4,355889854,0,0x0,8
tick,0x7ffdb840feb4,355905846,0,0x0,8
tick,0x7ffdb840feb4,355921859,0,0x0,8
tick,0x7ffdb840feb4,355937866,0,0x0,8
tick,0x7ffdb840feb4,355953828,0,0x0,8
tick,0x7ffdb840feb4,355969855,0,0x0,8
tick,0x7ffdb840feb4,355985862,0,0x0,8
tick,0x7ffdb840feb4,356001802,0,0x0,8
tick,0x7ffdb840feb4,356016860,0,0x0,8
tick,0x7ffdb840feb4,356031882,0,0x0,8
tick,0x7ffdb840feb4,356047873,0,0x0,8
tick,0x7ffdb840feb4,356063275,0,0x0,8
tick,0x7ffdb840feb4,356078824,0,0x0,8
tick,0x7ffdb840feb4,356093875,0,0x0,8
tick,0x7ffdb840feb4,356109049,0,0x0,8
tick,0x7ffdb840feb4,356124887,0,0x0,8
tick,0x7ffdb840feb4,356140896,0,0x0,8
tick,0x7ffdb840feb4,356156907,0,0x0,8
tick,0x7ffdb840feb4,356172895,0,0x0,8
tick,0x7ffdb840feb4,356188067,0,0x0,8
tick,0x7ffdb840feb4,356203896,0,0x0,8
tick,0x7ffdb840feb4,356219079,0,0x0,8
tick,0x7ffdb840feb4,356235075,0,0x0,8
tick,0x7ffdb840feb4,356250892,0,0x0,8
tick,0x7ffdb840feb4,356266902,0,0x0,8
tick,0x7ffdb840feb4,356282317,0,0x0,8
tick,0x7ffdb840feb4,356297890,0,0x0,8
tick,0x7ffdb840feb4,356313882,0,0x0,8
tick,0x7ffdb840feb4,356329882,0,0x0,8
tick,0x7ffdb840feb4,356345901,0,0x0,8
tick,0x7ffdb840feb4,356361814,0,0x0,8
tick,0x7ffdb840feb4,356376913,0,0x0,8
tick,0x7ffdb840feb4,356392221,0,0x0,8
tick,0x7ffdb840feb4,356407919,0,0x0,8
tick,0x7ffdb840feb4,356423917,0,0x0,8
tick,0x7ffdb840feb4,356439089,0,0x0,8
tick,0x7ffdb840feb4,356454897,0,0x0,8
tick,0x7ffdb840feb4,356470096,0,0x0,8
tick,0x7ffdb840feb4,356485931,0,0x0,8
tick,0x7ffdb840feb4,356501928,0,0x0,8
tick,0x7ffdb840feb4,356517097,0,0x0,8
tick,0x7ffdb840feb4,356532316,0,0x0,8
tick,0x7ffdb840feb4,356547917,0,0x0,8
tick,0x7ffdb840feb4,356562830,0,0x0,8
tick,0x7ffdb840feb4,356577965,0,0x0,8
tick,0x7ffdb840feb4,356593950,0,0x0,8
tick,0x7ffdb840feb4,356608309,0,0x0,8
tick,0x7ffdb840feb4,356624304,0,0x0,8
tick,0x7ffdb840feb4,356639950,0,0x0,8
tick,0x7ffdb840feb4,356655945,0,0x0,8
tick,0x7ffdb840feb4,356671115,0,0x0,8
tick,0x7ffdb840feb4,356685964,0,0x0,8
tick,0x7ffdb840feb4,356701699,0,0x0,8
tick,0x7ffdb840feb4,356716968,0,0x0,8
tick,0x7ffdb840feb4,356731958,0,0x0,8
tick,0x7ffdb840feb4,356747970,0,0x0,8
tick,0x7ffdb840feb4,356762831,0,0x0,8
tick,0x7ffdb840feb4,356777971,0,0x0,8
tick,0x7ffdb840feb4,356793317,0,0x0,8
tick,0x7ffdb840feb4,356809336,0,0x0,8
tick,0x7ffdb840feb4,356824966,0,0x0,8
tick,0x7ffdb840feb4,356840978,0,0x0,8
tick,0x7ffdb840feb4,356856153,0,0x0,8
tick,0x7ffdb840feb4,356871968,0,0x0,8
tick,0x7ffdb840feb4,356886980,0,0x0,8
tick,0x7ffdb840feb4,356902973,0,0x0,8
tick,0x7ffdb840feb4,356918987,0,0x0,8
tick,0x7ffdb840feb4,356934321,0,0x0,8
tick,0x7ffdb840feb4,356950001,0,0x0,8
tick,0x7ffdb840feb4,356964978,0,0x0,8
tick,0x7ffdb840feb4,356980166,0,0x0,8
tick,0x7ffdb840feb4,356995989,0,0x0,8
tick,0x7ffdb840feb4,357011007,0,0x0,8
tick,0x7ffdb840feb4,357027003,0,0x0,8
tick,0x7ffdb840feb4,357041865,0,0x0,8
tick,0x7ffdb840feb4,357056996,0,0x0,8
tick,0x7ffdb840feb4,357072165,0,0x0,8
tick,0x7ffdb840feb4,357088173,0,0x0,8
tick,0x7ffdb840feb4,357103174,0,0x0,8
tick,0x7ffdb840feb4,357119031,0,0x0,8
tick,0x7ffdb840feb4,357135033,0,0x0,8
tick,0x7ffdb840feb4,357151020,0,0x0,8
tick,0x7ffdb840feb4,357167013,0,0x0,8
tick,0x7ffdb840feb4,357183021,0,0x0,8
tick,0x7ffdb840feb4,357199017,0,0x0,8
tick,0x7ffdb840feb4,357214753,0,0x0,8
tick,0x7ffdb840feb4,357229821,0,0x0,8
tick,0x7ffdb840feb4,357245023,0,0x0,8
tick,0x7ffdb840feb4,357260201,0,0x0,8
tick,0x7ffdb840feb4,357276026,0,0x0,8
tick,0x7ffdb840feb4,357291046,0,0x0,8
tick,0x7ffdb840feb4,357306192,0,0x0,8
tick,0x7ffdb840feb4,357322033,0,0x0,8
tick,0x7ffdb840feb4,357337035,0,0x0,8
tick,0x7ffdb840feb4,357353036,0,0x0,8
tick,0x7ffdb840feb4,357368636,0,0x0,8
tick,0x7ffdb840feb4,357384047,0,0x0,8
tick,0x7ffdb840feb4,357399868,0,0x0,8
tick,0x7ffdb840feb4,357414828,0,0x0,8
tick,0x7ffdb840feb4,357430030,0,0x0,8
tick,0x7ffdb840feb4,357446064,0,0x0,8
tick,0x7ffdb840feb4,357461624,0,0x0,8
tick,0x7ffdb840feb4,357477043,0,0x0,8
tick,0x7ffdb840feb4,357492057,0,0x0,8
tick,0x7ffdb840feb4,357508048,0,0x0,8
tick,0x7ffdb840feb4,357523812,0,0x0,8
tick,0x7ffdb840feb4,357539226,0,0x0,8
tick,0x7ffdb840feb4,357554629,0,0x0,8
tick,0x7ffdb840feb4,357570649,0,0x0,8
tick,0x7ffdb840feb4,357586052,0,0x0,8
tick,0x7ffdb840feb4,357602077,0,0x0,8
tick,0x7ffdb840feb4,357617056,0,0x0,8
tick,0x7ffdb840feb4,357633061,0,0x0,8
tick,0x7ffdb840feb4,357648064,0,0x0,8
tick,0x7ffdb840feb4,357663070,0,0x0,8
tick,0x7ffdb840feb4,357678416,0,0x0,8
tick,0x7ffdb840feb4,357694071,0,0x0,8
tick,0x7ffdb840feb4,357709668,0,0x0,8
tick,0x7ffdb840feb4,357724868,0,0x0,8
tick,0x7ffdb840feb4,357740878,0,0x0,8
tick,0x7ffdb840feb4,357756076,0,0x0,8
tick,0x7ffdb840feb4,357772083,0,0x0,8
tick,0x7ffdb840feb4,357787083,0,0x0,8
tick,0x7ffdb840feb4,357802890,0,0x0,8
tick,0x7ffdb840feb4,357818259,0,0x0,8
tick,0x7ffdb840feb4,357833345,0,0x0,8
tick,0x7ffdb840feb4,357848996,0,0x0,8
tick,0x7ffdb840feb4,357864198,0,0x0,8
tick,0x7ffdb840feb4,357879265,0,0x0,8
tick,0x7ffdb840feb4,357895101,0,0x0,8
tick,0x7ffdb840feb4,357910266,0,0x0,8
tick,0x7ffdb840feb4,357926095,0,0x0,8
tick,0x7ffdb840feb4,357941272,0,0x0,8
tick,0x7ffdb840feb4,357957134,0,0x0,8
tick,0x7ffdb840feb4,357972575,0,0x0,8
tick,0x7ffdb840feb4,357988289,0,0x0,8
tick,0x7ffdb840feb4,358003900,0,0x0,8
tick,0x7ffdb840feb4,358019295,0,0x0,8
tick,0x7ffdb840feb4,358035110,0,0x0,8
tick,0x7ffdb840feb4,358050115,0,0x0,8
tick,0x7ffdb840feb4,358066116,0,0x0,8
tick,0x7ffdb840feb4,358081333,0,0x0,8
tick,0x7ffdb840feb4,358096109,0,0x0,8
tick,0x7ffdb840feb4,358112072,0,0x0,8
tick,0x7ffdb840feb4,358128131,0,0x0,8
tick,0x7ffdb840feb4,358144126,0,0x0,8
tick,0x7ffdb840feb4,358160133,0,0x0,8
tick,0x7ffdb840feb4,358176137,0,0x0,8
tick,0x7ffdb840feb4,358192137,0,0x0,8
tick,0x7ffdb840feb4,358207306,0,0x0,8
tick,0x7ffdb840feb4,358223145,0,0x0,8
tick,0x7ffdb840feb4,358238128,0,0x0,8
tick,0x7ffdb840feb4,358254144,0,0x0,8
tick,0x7ffdb840feb4,358269316,0,0x0,8
tick,0x7ffdb840feb4,358284329,0,0x0,8
tick,0x7ffdb840feb4,358299901,0,0x0,8
tick,0x7ffdb840feb4,358315080,0,0x0,8
tick,0x7ffdb840feb4,358331093,0,0x0,8
tick,0x7ffdb840feb4,358347157,0,0x0,8
tick,0x7ffdb840feb4,358361933,0,0x0,8
tick,0x7ffdb840feb4,358377146,0,0x0,8
tick,0x7ffdb840feb4,358392324,0,0x0,8
tick,0x7ffdb840feb4,358408336,0,0x0,8
tick,0x7ffdb840feb4,358423324,0,0x0,8
tick,0x7ffdb840feb4,358438845,0,0x0,8
tick,0x7ffdb840feb4,358454158,0,0x0,8
tick,0x7ffdb840feb4,358469338,0,0x0,8
tick,0x7ffdb840feb4,358485165,0,0x0,8
tick,0x7ffdb840feb4,358500007,0,0x0,8
tick,0x7ffdb840feb4,358515166,0,0x0,8
tick,0x7ffdb840feb4,358531177,0,0x0,8
tick,0x7ffdb840feb4,358547169,0,0x0,8
tick,0x7ffdb840feb4,358562946,0,0x0,8
tick,0x7ffdb840feb4,358578343,0,0x0,8
tick,0x7ffdb840feb4,358593366,0,0x0,8
tick,0x7ffdb840feb4,358609052,0,0x0,8
tick,0x7ffdb840feb4,358624182,0,0x0,8
tick,0x7ffdb840feb4,358639355,0,0x0,8
tick,0x7ffdb840feb4,358655164,0,0x0,8
tick,0x7ffdb840feb4,358670868,0,0x0,8
tick,0x7ffdb840feb4,358686189,0,0x0,8
tick,0x7ffdb840feb4,358701997,0,0x0,8
tick,0x7ffdb840feb4,358717416,0,0x0,8
tick,0x7ffdb840feb4,358733344,0,0x0,8
tick,0x7ffdb840feb4,358747998,0,0x0,8
tick,0x7ffdb840feb4,358763956,0,0x0,8
tick,0x7ffdb840feb4,358779377,0,0x0,8
tick,0x7ffdb840feb4,358795197,0,0x0,8
tick,0x7ffdb840feb4,358811128,0,0x0,8
tick,0x7ffdb840feb4,358826369,0,0x0,8
tick,0x7ffdb840feb4,358841978,0,0x0,8
tick,0x7ffdb840feb4,358857206,0,0x0,8
tick,0x7ffdb840feb4,358872567,0,0x0,8
tick,0x7ffdb840feb4,358888395,0,0x0,8
tick,0x7ffdb840feb4,358904386,0,0x0,8
tick,0x7ffdb840feb4,358919693,0,0x0,8
tick,0x7ffdb840feb4,358935214,0,0x0,8
tick,0x7ffdb840feb4,358950183,0,0x0,8
tick,0x7ffdb840feb4,358966225,0,0x0,8
tick,0x7ffdb840feb4,358982233,0,0x0,8
tick,0x7ffdb840feb4,358998241,0,0x0,8
tick,0x7ffdb840feb4,359014159,0,0x0,8
tick,0x7ffdb840feb4,359029609,0,0x0,8
tick,0x7ffdb840feb4,359044961,0,0x0,8
tick,0x7ffdb840feb4,359060892,0,0x0,8
tick,0x7ffdb840feb4,359076238,0,0x0,8
tick,0x7ffdb840feb4,359092250,0,0x0,8
tick,0x7ffdb840feb4,359107415,0,0x0,8
tick,0x7ffdb840feb4,359122964,0,0x0,8
tick,0x7ffdb840feb4,359137413,0,0x0,8
tick,0x7ffdb840feb4,359152546,0,0x0,8
tick,0x7ffdb840feb4,359167552,0,0x0,8
tick,0x7ffdb840feb4,359183548,0,0x0,8
tick,0x7ffdb840feb4,359199568,0,0x0,8
tick,0x7ffdb840feb4,359215248,0,0x0,8
tick,0x7ffdb840feb4,359230424,0,0x0,8
tick,0x7ffdb840feb4,359246253,0,0x0,8
tick,0x7ffdb840feb4,359261220,0,0x0,8
tick,0x7ffdb840feb4,359277252,0,0x0,8
tick,0x7ffdb840feb4,359292265,0,0x0,8
tick,0x7ffdb840feb4,359307267,0,0x0,8
tick,0x7ffdb840feb4,359322953,0,0x0,8
tick,0x7ffdb840feb4,359338443,0,0x0,8
tick,0x7ffdb840feb4,359353553,0,0x0,8
tick,0x7ffdb840feb4,359368917,0,0x0,8
tick,0x7ffdb840feb4,359384908,0,0x0,8
tick,0x7ffdb840feb4,359400993,0,0x0,8
tick,0x7ffdb840feb4,359416279,0,0x0,8
tick,0x7ffdb840feb4,359431989,0,0x0,8
tick,0x7ffdb840feb4,359447279,0,0x0,8
tick,0x7ffdb840feb4,359462282,0,0x0,8
tick,0x7ffdb840feb4,359478272,0,0x0,8
tick,0x7ffdb840feb4,359494290,0,0x0,8
tick,0x7ffdb840feb4,359509483,0,0x0,8
tick,0x7ffdb840feb4,359525496,0,0x0,8
tick,0x7ffdb840feb4,359540498,0,0x0,8
tick,0x7ffdb840feb4,359556293,0,0x0,8
tick,0x7ffdb840feb4,359571586,0,0x0,8
tick,0x7ffdb840feb4,359587294,0,0x0,8
tick,0x7ffdb840feb4,359602994,0,0x0,8
tick,0x7ffdb840feb4,359618493,0,0x0,8
tick,0x7ffdb840feb4,359633994,0,0x0,8
tick,0x7ffdb840feb4,359649455,0,0x0,8
tick,0x7ffdb840feb4,359664624,0,0x0,8
tick,0x7ffdb840feb4,359679905,0,0x0,8
tick,0x7ffdb840feb4,359695306,0,0x0,8
tick,0x7ffdb840feb4,359711316,0,0x0,8
tick,0x7ffdb840feb4,359727331,0,0x0,8
tick,0x7ffdb840feb4,359742349,0,0x0,8
tick,0x7ffdb840feb4,359757334,0,0x0,8
tick,0x7ffdb840feb4,359773348,0,0x0,8
tick,0x7ffdb840feb4,359788531,0,0x0,8
tick,0x7ffdb840feb4,359803983,0,0x0,8
tick,0x7ffdb840feb4,359819351,0,0x0,8
tick,0x7ffdb840feb4,359835354,0,0x0,8
tick,0x7ffdb840feb4,359851339,0,0x0,8
tick,0x7ffdb840feb4,359867335,0,0x0,8
tick,0x7ffdb840feb4,359883340,0,0x0,8
tick,0x7ffdb840feb4,359898509,0,0x0,8
tick,0x7ffdb840feb4,359913919,0,0x0,8
tick,0x7ffdb840feb4,359929510,0,0x0,8
tick,0x7ffdb840feb4,359945522,0,0x0,8
tick,0x7ffdb840feb4,359960258,0,0x0,8
tick,0x7ffdb840feb4,359976337,0,0x0,8
tick,0x7ffdb840feb4,359991525,0,0x0,8
tick,0x7ffdb840feb4,360007348,0,0x0,8
tick,0x7ffdb840feb4,360023363,0,0x0,8
tick,0x7ffdb840feb4,360039307,0,0x0,8
tick,0x7ffdb840feb4,360055359,0,0x0,8
tick,0x7ffdb840feb4,360071357,0,0x0,8
tick,0x7ffdb840feb4,360087366,0,0x0,8
tick,0x7ffdb840feb4,360103027,0,0x0,8
tick,0x7ffdb840feb4,360118359,0,0x0,8
tick,0x7ffdb840feb4,360133338,0,0x0,8
tick,0x7ffdb840feb4,360148538,0,0x0,8
tick,0x7ffdb840feb4,360164002,0,0x0,8
tick,0x7ffdb840feb4,360179012,0,0x0,8
tick,0x7ffdb840feb4,360194997,0,0x0,8
tick,0x7ffdb840feb4,360210992,0,0x0,8
tick,0x7ffdb840feb4,360226381,0,0x0,8
tick,0x7ffdb840feb4,360241983,0,0x0,8
tick,0x7ffdb840feb4,360257376,0,0x0,8
tick,0x7ffdb840feb4,360272551,0,0x0,8
tick,0x7ffdb840feb4,360288569,0,0x0,8
tick,0x7ffdb840feb4,360303558,0,0x0,8
tick,0x7ffdb840feb4,360319179,0,0x0,8
tick,0x7ffdb840feb4,360334339,0,0x0,8
tick,0x7ffdb840feb4,360350003,0,0x0,8
tick,0x7ffdb840feb4,360364989,0,0x0,8
tick,0x7ffdb840feb4,360380399,0,0x0,8
tick,0x7ffdb840feb4,360396404,0,0x0,8
tick,0x7ffdb840feb4,360412397,0,0x0,8
tick,0x7ffdb840feb4,360427566,0,0x0,8
tick,0x7ffdb840feb4,360442998,0,0x0,8
tick,0x7ffdb840feb4,360457574,0,0x0,8
tick,0x7ffdb840feb4,360473402,0,0x0,8
tick,0x7ffdb840feb4,360488573,0,0x0,8
tick,0x7ffdb840feb4,360504421,0,0x0,8
tick,0x7ffdb840feb4,360519409,0,0x0,8
tick,0x7ffdb840feb4,360535343,0,0x0,8
tick,0x7ffdb840feb4,360551011,0,0x0,8
tick,0x7ffdb840feb4,360566413,0,0x0,8
tick,0x7ffdb840feb4,360581225,0,0x0,8
tick,0x7ffdb840feb4,360596417,0,0x0,8
tick,0x7ffdb840feb4,360612435,0,0x0,8
tick,0x7ffdb840feb4,360627327,0,0x0,8
tick,0x7ffdb840feb4,360643002,0,0x0,8
tick,0x7ffdb840feb4,360658596,0,0x0,8
tick,0x7ffdb840feb4,360673599,0,0x0,8
tick,0x7ffdb840feb4,360689080,0,0x0,8
tick,0x7ffdb840feb4,360704821,0,0x0,8
tick,0x7ffdb840feb4,360720272,0,0x0,8
tick,0x7ffdb840feb4,360735437,0,0x0,8
tick,0x7ffdb840feb4,360750616,0,0x0,8
tick,0x7ffdb840feb4,360765631,0,0x0,8
tick,0x7ffdb840feb4,360781635,0,0x0,8
tick,0x7ffdb840feb4,360797452,0,0x0,8
tick,0x7ffdb840feb4,360812633,0,0x0,8
tick,0x7ffdb840feb4,360828660,0,0x0,8
tick,0x7ffdb840feb4,360843646,0,0x0,8
tick,0x7ffdb840feb4,360859642,0,0x0,8
tick,0x7ffdb840feb4,360874791,0,0x0,8
tick,0x7ffdb840feb4,360889464,0,0x0,8
tick,0x7ffdb840feb4,360905457,0,0x0,8
tick,0x7ffdb840feb4,360921017,0,0x0,8
tick,0x7ffdb840feb4,360936463,0,0x0,8
tick,0x7ffdb840feb4,360952013,0,0x0,8
tick,0x7ffdb840feb4,360967465,0,0x0,8
tick,0x7ffdb840feb4,360983293,0,0x0,8
tick,0x7ffdb840feb4,360998464,0,0x0,8
tick,0x7ffdb840feb4,361013472,0,0x0,8
tick,0x7ffdb840feb4,361028640,0,0x0,8
tick,0x7ffdb840feb4,361044028,0,0x0,8
tick,0x7ffdb840feb4,361059650,0,0x0,8
tick,0x7ffdb840feb4,361075659,0,0x0,8
tick,0x7ffdb840feb4,361091623,0,0x0,8
tick,0x7ffdb840feb4,361107482,0,0x0,8
tick,0x7ffdb840feb4,361123488,0,0x0,8
tick,0x7ffdb840feb4,361138666,0,0x0,8
tick,0x7ffdb840feb4,361154646,0,0x0,8
tick,0x7ffdb840feb4,361169659,0,0x0,8
tick,0x7ffdb840feb4,361185658,0,0x0,8
tick,0x7ffdb840feb4,361201659,0,0x0,8
tick,0x7ffdb840feb4,361217679,0,0x0,8
tick,0x7ffdb840feb4,361232358,0,0x0,8
tick,0x7ffdb840feb4,361247515,0,0x0,8
tick,0x7ffdb840feb4,361262689,0,0x0,8
tick,0x7ffdb840feb4,361278512,0,0x0,8
tick,0x7ffdb840feb4,361294291,0,0x0,8
tick,0x7ffdb840feb4,361309512,0,0x0,8
tick,0x7ffdb840feb4,361324693,0,0x0,8
tick,0x7ffdb840feb4,361339518,0,0x0,8
tick,0x7ffdb840feb4,361354692,0,0x0,8
tick,0x7ffdb840feb4,361370524,0,0x0,8
tick,0x7ffdb840feb4,361385519,0,0x0,8
tick,0x7ffdb840feb4,361400698,0,0x0,8
tick,0x7ffdb840feb4,361416522,0,0x0,8
tick,0x7ffdb840feb4,361431712,0,0x0,8
tick,0x7ffdb840feb4,361446726,0,0x0,8
tick,0x7ffdb840feb4,361461707,0,0x0,8
tick,0x7ffdb840feb4,361477572,0,0x0,8
tick,0x7ffdb840feb4,361492527,0,0x0,8
tick,0x7ffdb840feb4,361508532,0,0x0,8
tick,0x7ffdb840feb4,361523727,0,0x0,8
tick,0x7ffdb840feb4,361538704,0,0x0,8
tick,0x7ffdb840feb4,361554703,0,0x0,8
tick,0x7ffdb840feb4,361569640,0,0x0,8
tick,0x7ffdb840feb4,361585646,0,0x0,8
tick,0x7ffdb840feb4,361601548,0,0x0,8
tick,0x7ffdb840feb4,361616550,0,0x0,8
tick,0x7ffdb840feb4,361631722,0,0x0,8
tick,0x7ffdb840feb4,361647731,0,0x0,8
tick,0x7ffdb840feb4,361663755,0,0x0,8
tick,0x7ffdb840feb4,361679566,0,0x0,8
tick,0x7ffdb840feb4,361694755,0,0x0,8
tick,0x7ffdb840feb4,361710745,0,0x0,8
tick,0x7ffdb840feb4,361725552,0,0x0,8
tick,0x7ffdb840feb4,361740738,0,0x0,8
tick,0x7ffdb840feb4,361756706,0,0x0,8
tick,0x7ffdb840feb4,361771741,0,0x0,8
tick,0x7ffdb840feb4,361787750,0,0x0,8
tick,0x7ffdb840feb4,361803763,0,0x0,8
tick,0x7ffdb840feb4,361819761,0,0x0,8
tick,0x7ffdb840feb4,361835091,0,0x0,8
tick,0x7ffdb840feb4,361851098,0,0x0,8
tick,0x7ffdb840feb4,361867096,0,0x0,8
tick,0x7ffdb840feb4,361882347,0,0x0,8
tick,0x7ffdb840feb4,361897581,0,0x0,8
tick,0x7ffdb840feb4,361913470,0,0x0,8
tick,0x7ffdb840feb4,361928768,0,0x0,8
tick,0x7ffdb840feb4,361944759,0,0x0,8
tick,0x7ffdb840feb4,361960758,0,0x0,8
tick,0x7ffdb840feb4,361976584,0,0x0,8
tick,0x7ffdb840feb4,361992590,0,0x0,8
tick,0x7ffdb840feb4,362007589,0,0x0,8
tick,0x7ffdb840feb4,362022774,0,0x0,8
tick,0x7ffdb840feb4,362038773,0,0x0,8
tick,0x7ffdb840feb4,362054721,0,0x0,8
tick,0x7ffdb840feb4,362070786,0,0x0,8
tick,0x7ffdb840feb4,362085600,0,0x0,8
tick,0x7ffdb840feb4,362100776,0,0x0,8
tick,0x7ffdb840feb4,362116600,0,0x0,8
tick,0x7ffdb840feb4,362131799,0,0x0,8
tick,0x7ffdb840feb4,362147600,0,0x0,8
tick,0x7ffdb840feb4,362162744,0,0x0,8
tick,0x7ffdb840feb4,362178782,0,0x0,8
tick,0x7ffdb840feb4,362193782,0,0x0,8
tick,0x7ffdb840feb4,362209782,0,0x0,8
tick,0x7ffdb840feb4,362225801,0,0x0,8
tick,0x7ffdb840feb4,362241818,0,0x0,8
tick,0x7ffdb840feb4,362257738,0,0x0,8
tick,0x7ffdb840feb4,362272742,0,0x0,8
tick,0x7ffdb840feb4,362288815,0,0x0,8
tick,0x7ffdb840feb4,362303771,0,0x0,8
tick,0x7ffdb840feb4,362319633,0,0x0,8
tick,0x7ffdb840feb4,362334390,0,0x0,8
tick,0x7ffdb840feb4,362350020,0,0x0,8
tick,0x7ffdb840feb4,362364688,0,0x0,8
tick,0x7ffdb840feb4,362379960,0,0x0,8
tick,0x7ffdb840feb4,362395634,0,0x0,8
tick,0x7ffdb840feb4,362411633,0,0x0,8
tick,0x7ffdb840feb4,362427425,0,0x0,8
tick,0x7ffdb840feb4,362443083,0,0x0,8
tick,0x7ffdb840feb4,362457816,0,0x0,8
tick,0x7ffdb840feb4,362472815,0,0x0,8
tick,0x7ffdb840feb4,362488821,0,0x0,8
tick,0x7ffdb840feb4,362504021,0,0x0,8
tick,0x7ffdb840feb4,362518866,0,0x0,8
tick,0x7ffdb840feb4,362534349,0,0x0,8
tick,0x7ffdb840feb4,362550031,0,0x0,8
tick,0x7ffdb840feb4,362565097,0,0x0,8
tick,0x7ffdb840feb4,362579829,0,0x0,8
tick,0x7ffdb840feb4,362594978,0,0x0,8
tick,0x7ffdb840feb4,362610554,0,0x0,8
tick,0x7ffdb840feb4,362626044,0,0x0,8
tick,0x7ffdb840feb4,362642050,0,0x0,8
tick,0x7ffdb840feb4,362657729,0,0x0,8
tick,0x7ffdb840feb4,362672671,0,0x0,8
tick,0x7ffdb840feb4,362687741,0,0x0,8
tick,0x7ffdb840feb4,362703022,0,0x0,8
tick,0x7ffdb840feb4,362718667,0,0x0,8
tick,0x7ffdb840feb4,362733872,0,0x0,8
tick,0x7ffdb840feb4,362749026,0,0x0,8
tick,0x7ffdb840feb4,362764853,0,0x0,8
tick,0x7ffdb840feb4,362779866,0,0x0,8
tick,0x7ffdb840feb4,362795844,0,0x0,8
tick,0x7ffdb840feb4,362811847,0,0x0,8
tick,0x7ffdb840feb4,362827858,0,0x0,8
tick,0x7ffdb840feb4,362843172,0,0x0,8
tick,0x7ffdb840feb4,362858867,0,0x0,8
tick,0x7ffdb840feb4,362874122,0,0x0,8
tick,0x7ffdb840feb4,362889866,0,0x0,8
tick,0x7ffdb840feb4,362905919,0,0x0,8
tick,0x7ffdb840feb4,362921911,0,0x0,8
tick,0x7ffdb840feb4,362936693,0,0x0,8
tick,0x7ffdb840feb4,362951869,0,0x0,8
tick,0x7ffdb840feb4,362967685,0,0x0,8
tick,0x7ffdb840feb4,362982877,0,0x0,8
tick,0x7ffdb840feb4,362998892,0,0x0,8
tick,0x7ffdb840feb4,363013887,0,0x0,8
tick,0x7ffdb840feb4,363028880,0,0x0,8
tick,0x7ffdb840feb4,363044162,0,0x0,8
tick,0x7ffdb840feb4,363059406,0,0x0,8
tick,0x7ffdb840feb4,363074919,0,0x0,8
tick,0x7ffdb840feb4,363090131,0,0x0,8
tick,0x7ffdb840feb4,363105910,0,0x0,8
tick,0x7ffdb840feb4,363121324,0,0x0,8
tick,0x7ffdb840feb4,363136718,0,0x0,8
tick,0x7ffdb840feb4,363151926,0,0x0,8
tick,0x7ffdb840feb4,363167909,0,0x0,8
tick,0x7ffdb840feb4,363183910,0,0x0,8
tick,0x7ffdb840feb4,363198921,0,0x0,8
tick,0x7ffdb840feb4,363214921,0,0x0,8
tick,0x7ffdb840feb4,363229913,0,0x0,8
tick,0x7ffdb840feb4,363244934,0,0x0,8
tick,0x7ffdb840feb4,363260910,0,0x0,8
tick,0x7ffdb840feb4,363276734,0,0x0,8
tick,0x7ffdb840feb4,363292742,0,0x0,8
tick,0x7ffdb840feb4,363307912,0,0x0,8
tick,0x7ffdb840feb4,363322932,0,0x0,8
tick,0x7ffdb840feb4,363338916,0,0x0,8
tick,0x7ffdb840feb4,363354913,0,0x0,8
tick,0x7ffdb840feb4,363370078,0,0x0,8
tick,0x7ffdb840feb4,363386078,0,0x0,8
tick,0x7ffdb840feb4,363401254,0,0x0,8
tick,0x7ffdb840feb4,363416750,0,0x0,8
tick,0x7ffdb840feb4,363432367,0,0x0,8
tick,0x7ffdb840feb4,363447755,0,0x0,8
tick,0x7ffdb840feb4,363462932,0,0x0,8
tick,0x7ffdb840feb4,363478766,0,0x0,8
tick,0x7ffdb840feb4,363493957,0,0x0,8
tick,0x7ffdb840feb4,363509934,0,0x0,8
tick,0x7ffdb840feb4,363525198,0,0x0,8
tick,0x7ffdb840feb4,363539950,0,0x0,8
tick,0x7ffdb840feb4,363555915,0,0x0,8
tick,0x7ffdb840feb4,363571772,0,0x0,8
tick,0x7ffdb840feb4,363587765,0,0x0,8
tick,0x7ffdb840feb4,363602964,0,0x0,8
tick,0x7ffdb840feb4,363617795,0,0x0,8
tick,0x7ffdb840feb4,363632962,0,0x0,8
tick,0x7ffdb840feb4,363648784,0,0x0,8
tick,0x7ffdb840feb4,363663969,0,0x0,8
tick,0x7ffdb840feb4,363679789,0,0x0,8
tick,0x7ffdb840feb4,363694971,0,0x0,8
tick,0x7ffdb840feb4,363709982,0,0x0,8
tick,0x7ffdb840feb4,363725956,0,0x0,8
tick,0x7ffdb840feb4,363741969,0,0x0,8
tick,0x7ffdb840feb4,363757987,0,0x0,8
tick,0x7ffdb840feb4,363773983,0,0x0,8
tick,0x7ffdb840feb4,363789381,0,0x0,8
tick,0x7ffdb840feb4,363805391,0,0x0,8
tick,0x7ffdb840feb4,363820986,0,0x0,8
tick,0x7ffdb840feb4,363835807,0,0x0,8
tick,0x7ffdb840feb4,363850987,0,0x0,8
tick,0x7ffdb840feb4,363866991,0,0x0,8
tick,0x7ffdb840feb4,363881993,0,0x0,8
tick,0x7ffdb840feb4,363896995,0,0x0,8
tick,0x7ffdb840feb4,363912670,0,0x0,8
tick,0x7ffdb840feb4,363927814,0,0x0,8
tick,0x7ffdb840feb4,363942996,0,0x0,8
tick,0x7ffdb840feb4,363958993,0,0x0,8
tick,0x7ffdb840feb4,363975005,0,0x0,8
tick,0x7ffdb840feb4,363990263,0,0x0,8
tick,0x7ffdb840feb4,364005818,0,0x0,8
tick,0x7ffdb840feb4,364021014,0,0x0,8
tick,0x7ffdb840feb4,364036822,0,0x0,8
tick,0x7ffdb840feb4,364052831,0,0x0,8
tick,0x7ffdb840feb4,364068003,0,0x0,8
tick,0x7ffdb840feb4,364083226,0,0x0,8
tick,0x7ffdb840feb4,364099024,0,0x0,8
tick,0x7ffdb840feb4,364114708,0,0x0,8
tick,0x7ffdb840feb4,364130019,0,0x0,8
tick,0x7ffdb840feb4,364145027,0,0x0,8
tick,0x7ffdb840feb4,364159713,0,0x0,8
tick,0x7ffdb840feb4,364175036,0,0x0,8
tick,0x7ffdb840feb4,364190666,0,0x0,8
tick,0x7ffdb840feb4,364205662,0,0x0,8
tick,0x7ffdb840feb4,364221661,0,0x0,8
tick,0x7ffdb840feb4,364236677,0,0x0,8
tick,0x7ffdb840feb4,364252687,0,0x0,8
tick,0x7ffdb840feb4,364268690,0,0x0,8
tick,0x7ffdb840feb4,364284696,0,0x0,8
tick,0x7ffdb840feb4,364299933,0,0x0,8
tick,0x7ffdb840feb4,364315043,0,0x0,8
tick,0x7ffdb840feb4,364331053,0,0x0,8
tick,0x7ffdb840feb4,364347048,0,0x0,8
tick,0x7ffdb840feb4,364362051,0,0x0,8
tick,0x7ffdb840feb4,364378050,0,0x0,8
tick,0x7ffdb840feb4,364393877,0,0x0,8
tick,0x7ffdb840feb4,364409060,0,0x0,8
tick,0x7ffdb840feb4,364424565,0,0x0,8
tick,0x7ffdb840feb4,364440274,0,0x0,8
tick,0x7ffdb840feb4,364456070,0,0x0,8
tick,0x7ffdb840feb4,364471405,0,0x0,8
tick,0x7ffdb840feb4,364486884,0,0x0,8
tick,0x7ffdb840feb4,364502077,0,0x0,8
tick,0x7ffdb840feb4,364517537,0,0x0,8
tick,0x7ffdb840feb4,364533068,0,0x0,8
tick,0x7ffdb840feb4,364549075,0,0x0,8
tick,0x7ffdb840feb4,364565067,0,0x0,8
tick,0x7ffdb840feb4,364580066,0,0x0,8
tick,0x7ffdb840feb4,364595088,0,0x0,8
tick,0x7ffdb840feb4,364610769,0,0x0,8
tick,0x7ffdb840feb4,364625917,0,0x0,8
tick,0x7ffdb840feb4,364641713,0,0x0,8
tick,0x7ffdb840feb4,364657082,0,0x0,8
tick,0x7ffdb840feb4,364672383,0,0x0,8
tick,0x7ffdb840feb4,364688083,0,0x0,8
tick,0x7ffdb840feb4,364703115,0,0x0,8
tick,0x7ffdb840feb4,364719082,0,0x0,8
tick,0x7ffdb840feb4,364735101,0,0x0,8
tick,0x7ffdb840feb4,364751025,0,0x0,8
tick,0x7ffdb840feb4,364766912,0,0x0,8
tick,0x7ffdb840feb4,364782095,0,0x0,8
tick,0x7ffdb840feb4,364797916,0,0x0,8
tick,0x7ffdb840feb4,364813773,0,0x0,8
tick,0x7ffdb840feb4,364829101,0,0x0,8
tick,0x7ffdb840feb4,364844249,0,0x0,8
tick,0x7ffdb840feb4,364860105,0,0x0,8
tick,0x7ffdb840feb4,364875928,0,0x0,8
tick,0x7ffdb840feb4,364891129,0,0x0,8
tick,0x7ffdb840feb4,364906116,0,0x0,8
tick,0x7ffdb840feb4,364922123,0,0x0,8
tick,0x7ffdb840feb4,364937929,0,0x0,8
tick,0x7ffdb840feb4,364953128,0,0x0,8
tick,0x7ffdb840feb4,364969126,0,0x0,8
tick,0x7ffdb840feb4,364984166,0,0x0,8
tick,0x7ffdb840feb4,364999945,0,0x0,8
tick,0x7ffdb840feb4,365015662,0,0x0,8
tick,0x7ffdb840feb4,365031120,0,0x0,8
tick,0x7ffdb840feb4,365045949,0,0x0,8
tick,0x7ffdb840feb4,365061097,0,0x0,8
tick,0x7ffdb840feb4,365076949,0,0x0,8
tick,0x7ffdb840feb4,365092128,0,0x0,8
tick,0x7ffdb840feb4,365107469,0,0x0,8
tick,0x7ffdb840feb4,365123140,0,0x0,8
tick,0x7ffdb840feb4,365139128,0,0x0,8
tick,0x7ffdb840feb4,365154415,0,0x0,8
tick,0x7ffdb840feb4,365170091,0,0x0,8
tick,0x7ffdb840feb4,365185100,0,0x0,8
tick,0x7ffdb840feb4,365200992,0,0x0,8
tick,0x7ffdb840feb4,365215991,0,0x0,8
tick,0x7ffdb840feb4,365231780,0,0x0,8
tick,0x7ffdb840feb4,365247802,0,0x0,8
tick,0x7ffdb840feb4,365263809,0,0x0,8
tick,0x7ffdb840feb4,365279812,0,0x0,8
tick,0x7ffdb840feb4,365295168,0,0x0,8
tick,0x7ffdb840feb4,365310392,0,0x0,8
tick,0x7ffdb840feb4,365325977,0,0x0,8
tick,0x7ffdb840feb4,365341168,0,0x0,8
tick,0x7ffdb840feb4,365356787,0,0x0,8
tick,0x7ffdb840feb4,365372161,0,0x0,8
tick,0x7ffdb840feb4,365387578,0,0x0,8
tick,0x7ffdb840feb4,365403264,0,0x0,8
tick,0x7ffdb840feb4,365418649,0,0x0,8
tick,0x7ffdb840feb4,365434366,0,0x0,8
tick,0x7ffdb840feb4,365449167,0,0x0,8
tick,0x7ffdb840feb4,365464966,0,0x0,8
tick,0x7ffdb840feb4,365480005,0,0x0,8
tick,0x7ffdb840feb4,365495543,0,0x0,8
tick,0x7ffdb840feb4,365510842,0,0x0,8
tick,0x7ffdb840feb4,365526009,0,0x0,8
tick,0x7ffdb840feb4,365542006,0,0x0,8
tick,0x7ffdb840feb4,365557793,0,0x0,8
tick,0x7ffdb840feb4,365573012,0,0x0,8
tick,0x7ffdb840feb4,365588186,0,0x0,8
tick,0x7ffdb840feb4,365604275,0,0x0,8
tick,0x7ffdb840feb4,365619014,0,0x0,8
tick,0x7ffdb840feb4,365635017,0,0x0,8
tick,0x7ffdb840feb4,365651031,0,0x0,8
tick,0x7ffdb840feb4,365665800,0,0x0,8
tick,0x7ffdb840feb4,365681232,0,0x0,8
tick,0x7ffdb840feb4,365696815,0,0x0,8
tick,0x7ffdb840feb4,365711876,0,0x0,8
tick,0x7ffdb840feb4,365727040,0,0x0,8
tick,0x7ffdb840feb4,365742207,0,0x0,8
tick,0x7ffdb840feb4,365757804,0,0x0,8
tick,0x7ffdb840feb4,365772813,0,0x0,8
tick,0x7ffdb840feb4,365788211,0,0x0,8
tick,0x7ffdb840feb4,365803533,0,0x0,8
tick,0x7ffdb840feb4,365819213,0,0x0,8
tick,0x7ffdb840feb4,365834226,0,0x0,8
tick,0x7ffdb840feb4,365850228,0,0x0,8
tick,0x7ffdb840feb4,365865885,0,0x0,8
tick,0x7ffdb840feb4,365881227,0,0x0,8
tick,0x7ffdb840feb4,365897060,0,0x0,8
tick,0x7ffdb840feb4,365911901,0,0x0,8
tick,0x7ffdb840feb4,365927822,0,0x0,8
tick,0x7ffdb840feb4,365943066,0,0x0,8
tick,0x7ffdb840feb4,365957810,0,0x0,8
tick,0x7ffdb840feb4,365972821,0,0x0,8
tick,0x7ffdb840feb4,365988236,0,0x0,8
tick,0x7ffdb840feb4,366003511,0,0x0,8
tick,0x7ffdb840feb4,366019071,0,0x0,8
tick,0x7ffdb840feb4,366034385,0,0x0,8
tick,0x7ffdb840feb4,366050070,0,0x0,8
tick,0x7ffdb840feb4,366065252,0,0x0,8
tick,0x7ffdb840feb4,366081186,0,0x0,8
tick,0x7ffdb840feb4,366096074,0,0x0,8
tick,0x7ffdb840feb4,366111262,0,0x0,8
tick,0x7ffdb840feb4,366127078,0,0x0,8
tick,0x7ffdb840feb4,366142271,0,0x0,8
tick,0x7ffdb840feb4,366157815,0,0x0,8
tick,0x7ffdb840feb4,366173093,0,0x0,8
tick,0x7ffdb840feb4,366188261,0,0x0,8
tick,0x7ffdb840feb4,366203472,0,0x0,8
tick,0x7ffdb840feb4,366219465,0,0x0,8
tick,0x7ffdb840feb4,366234973,0,0x0,8
tick,0x7ffdb840feb4,366250989,0,0x0,8
tick,0x7ffdb840feb4,366266988,0,0x0,8
tick,0x7ffdb840feb4,366282364,0,0x0,8
tick,0x7ffdb840feb4,366298099,0,0x0,8
tick,0x7ffdb840feb4,366312931,0,0x0,8
tick,0x7ffdb840feb4,366328792,0,0x0,8
tick,0x7ffdb840feb4,366344114,0,0x0,8
tick,0x7ffdb840feb4,366359270,0,0x0,8
tick,0x7ffdb840feb4,366374608,0,0x0,8
tick,0x7ffdb840feb4,366390283,0,0x0,8
tick,0x7ffdb840feb4,366405392,0,0x0,8
tick,0x7ffdb840feb4,366421309,0,0x0,8
tick,0x7ffdb840feb4,366437113,0,0x0,8
tick,0x7ffdb840feb4,366453128,0,0x0,8
tick,0x7ffdb840feb4,366468305,0,0x0,8
tick,0x7ffdb840feb4,366483294,0,0x0,8
tick,0x7ffdb840feb4,366498119,0,0x0,8
tick,0x7ffdb840feb4,366513306,0,0x0,8
tick,0x7ffdb840feb4,366528622,0,0x0,8
tick,0x7ffdb840feb4,366544126,0,0x0,8
tick,0x7ffdb840feb4,366560128,0,0x0,8
tick,0x7ffdb840feb4,366575684,0,0x0,8
tick,0x7ffdb840feb4,366591022,0,0x0,8
tick,0x7ffdb840feb4,366606138,0,0x0,8
tick,0x7ffdb840feb4,366621318,0,0x0,8
tick,0x7ffdb840feb4,366637143,0,0x0,8
tick,0x7ffdb840feb4,366652048,0,0x0,8
tick,0x7ffdb840feb4,366667330,0,0x0,8
tick,0x7ffdb840feb4,366683362,0,0x0,8
tick,0x7ffdb840feb4,366699319,0,0x0,8
tick,0x7ffdb840feb4,366715332,0,0x0,8
tick,0x7ffdb840feb4,366731367,0,0x0,8
tick,0x7ffdb840feb4,366747332,0,0x0,8
tick,0x7ffdb840feb4,366762337,0,0x0,8
tick,0x7ffdb840feb4,366778342,0,0x0,8
tick,0x7ffdb840feb4,366793346,0,0x0,8
tick,0x7ffdb840feb4,366809340,0,0x0,8
tick,0x7ffdb840feb4,366824564,0,0x0,8
tick,0x7ffdb840feb4,366840132,0,0x0,8
tick,0x7ffdb840feb4,366855341,0,0x0,8
tick,0x7ffdb840feb4,366871351,0,0x0,8
tick,0x7ffdb840feb4,366886165,0,0x0,8
tick,0x7ffdb840feb4,366901358,0,0x0,8
tick,0x7ffdb840feb4,366917172,0,0x0,8
tick,0x7ffdb840feb4,366932359,0,0x0,8
tick,0x7ffdb840feb4,366948357,0,0x0,8
tick,0x7ffdb840feb4,366964184,0,0x0,8
tick,0x7ffdb840feb4,366979975,0,0x0,8
tick,0x7ffdb840feb4,366995369,0,0x0,8
tick,0x7ffdb840feb4,367010375,0,0x0,8
tick,0x7ffdb840feb4,367026190,0,0x0,8
tick,0x7ffdb840feb4,367041362,0,0x0,8
tick,0x7ffdb840feb4,367057193,0,0x0,8
tick,0x7ffdb840feb4,367072382,0,0x0,8
tick,0x7ffdb840feb4,367088192,0,0x0,8
tick,0x7ffdb840feb4,367103375,0,0x0,8
tick,0x7ffdb840feb4,367119392,0,0x0,8
tick,0x7ffdb840feb4,367135200,0,0x0,8
tick,0x7ffdb840feb4,367150395,0,0x0,8
tick,0x7ffdb840feb4,367165712,0,0x0,8
tick,0x7ffdb840feb4,367181196,0,0x0,8
tick,0x7ffdb840feb4,367197206,0,0x0,8
tick,0x7ffdb840feb4,367213207,0,0x0,8
tick,0x7ffdb840feb4,367229218,0,0x0,8
tick,0x7ffdb840feb4,367245224,0,0x0,8
tick,0x7ffdb840feb4,367261219,0,0x0,8
tick,0x7ffdb840feb4,367277216,0,0x0,8
tick,0x7ffdb840feb4,367292406,0,0x0,8
tick,0x7ffdb840feb4,367307548,0,0x0,8
tick,0x7ffdb840feb4,367323233,0,0x0,8
tick,0x7ffdb840feb4,367339221,0,0x0,8
tick,0x7ffdb840feb4,367355038,0,0x0,8
tick,0x7ffdb840feb4,367370235,0,0x0,8
tick,0x7ffdb840feb4,367385383,0,0x0,8
tick,0x7ffdb840feb4,367400692,0,0x0,8
tick,0x7ffdb840feb4,367416230,0,0x0,8
tick,0x7ffdb840feb4,367431411,0,0x0,8
tick,0x7ffdb840feb4,367447246,0,0x0,8
tick,0x7ffdb840feb4,367463229,0,0x0,8
tick,0x7ffdb840feb4,367478417,0,0x0,8
tick,0x7ffdb840feb4,367493302,0,0x0,8
tick,0x7ffdb840feb4,367509424,0,0x0,8
tick,0x7ffdb840feb4,367525434,0,0x0,8
tick,0x7ffdb840feb4,367540897,0,0x0,8
tick,0x7ffdb840feb4,367556255,0,0x0,8
tick,0x7ffdb840feb4,367571430,0,0x0,8
tick,0x7ffdb840feb4,367587426,0,0x0,8
tick,0x7ffdb840feb4,367602769,0,0x0,8
tick,0x7ffdb840feb4,367618255,0,0x0,8
tick,0x7ffdb840feb4,367634270,0,0x0,8
tick,0x7ffdb840feb4,367650050,0,0x0,8
tick,0x7ffdb840feb4,367665247,0,0x0,8
tick,0x7ffdb840feb4,367681086,0,0x0,8
tick,0x7ffdb840feb4,367696266,0,0x0,8
tick,0x7ffdb840feb4,367712075,0,0x0,8
tick,0x7ffdb840feb4,367727282,0,0x0,8
tick,0x7ffdb840feb4,367743268,0,0x0,8
tick,0x7ffdb840feb4,367759237,0,0x0,8
tick,0x7ffdb840feb4,367775246,0,0x0,8
tick,0x7ffdb840feb4,367790457,0,0x0,8
tick,0x7ffdb840feb4,367805371,0,0x0,8
tick,0x7ffdb840feb4,367821287,0,0x0,8
tick,0x7ffdb840feb4,367837274,0,0x0,8
tick,0x7ffdb840feb4,367852501,0,0x0,8
tick,0x7ffdb840feb4,367867488,0,0x0,8
tick,0x7ffdb840feb4,367883389,0,0x0,8
tick,0x7ffdb840feb4,367898296,0,0x0,8
tick,0x7ffdb840feb4,367914100,0,0x0,8
tick,0x7ffdb840feb4,367929472,0,0x0,8
tick,0x7ffdb840feb4,367945283,0,0x0,8
tick,0x7ffdb840feb4,367961281,0,0x0,8
tick,0x7ffdb840feb4,367977300,0,0x0,8
tick,0x7ffdb840feb4,367993322,0,0x0,8
tick,0x7ffdb840feb4,368008307,0,0x0,8
tick,0x7ffdb840feb4,368023484,0,0x0,8
tick,0x7ffdb840feb4,368039482,0,0x0,8
tick,0x7ffdb840feb4,368054491,0,0x0,8
tick,0x7ffdb840feb4,368070485,0,0x0,8
tick,0x7ffdb840feb4,368086263,0,0x0,8
tick,0x7ffdb840feb4,368102052,0,0x0,8
tick,0x7ffdb840feb4,368117269,0,0x0,8
tick,0x7ffdb840feb4,368132266,0,0x0,8
tick,0x7ffdb840feb4,368147260,0,0x0,8
tick,0x7ffdb840feb4,368163029,0,0x0,8
tick,0x7ffdb840feb4,368178262,0,0x0,8
tick,0x7ffdb840feb4,368193513,0,0x0,8
tick,0x7ffdb840feb4,368209507,0,0x0,8
tick,0x7ffdb840feb4,368224509,0,0x0,8
tick,0x7ffdb840feb4,368240514,0,0x0,8
tick,0x7ffdb840feb4,368256518,0,0x0,8
tick,0x7ffdb840feb4,368272522,0,0x0,8
tick,0x7ffdb840feb4,368288339,0,0x0,8
tick,0x7ffdb840feb4,368304116,0,0x0,8
tick,0x7ffdb840feb4,368319337,0,0x0,8
tick,0x7ffdb840feb4,368334323,0,0x0,8
tick,0x7ffdb840feb4,368350052,0,0x0,8
tick,0x7ffdb840feb4,368365530,0,0x0,8
tick,0x7ffdb840feb4,368380531,0,0x0,8
tick,0x7ffdb840feb4,368396122,0,0x0,8
tick,0x7ffdb840feb4,368411530,0,0x0,8
tick,0x7ffdb840feb4,368427355,0,0x0,8
tick,0x7ffdb840feb4,368443103,0,0x0,8
tick,0x7ffdb840feb4,368458362,0,0x0,8
tick,0x7ffdb840feb4,368473536,0,0x0,8
tick,0x7ffdb840feb4,368489535,0,0x0,8
tick,0x7ffdb840feb4,368505051,0,0x0,8
tick,0x7ffdb840feb4,368520416,0,0x0,8
tick,0x7ffdb840feb4,368536374,0,0x0,8
tick,0x7ffdb840feb4,368552054,0,0x0,8
tick,0x7ffdb840feb4,368568082,0,0x0,8
tick,0x7ffdb840feb4,368583385,0,0x0,8
tick,0x7ffdb840feb4,368598546,0,0x0,8
tick,0x7ffdb840feb4,368614433,0,0x0,8
tick,0x7ffdb840feb4,368630384,0,0x0,8
tick,0x7ffdb840feb4,368646395,0,0x0,8
tick,0x7ffdb840feb4,368662368,0,0x0,8
tick,0x7ffdb840feb4,368678391,0,0x0,8
tick,0x7ffdb840feb4,368692805,0,0x0,8
tick,0x7ffdb840feb4,368707925,0,0x0,8
tick,0x7ffdb840feb4,368723203,0,0x0,8
tick,0x7ffdb840feb4,368738392,0,0x0,8
tick,0x7ffdb840feb4,368754051,0,0x0,8
tick,0x7ffdb840feb4,368769573,0,0x0,8
tick,0x7ffdb840feb4,368785381,0,0x0,8
tick,0x7ffdb840feb4,368801412,0,0x0,8
tick,0x7ffdb840feb4,368817399,0,0x0,8
tick,0x7ffdb840feb4,368833392,0,0x0,8
tick,0x7ffdb840feb4,368848405,0,0x0,8
tick,0x7ffdb840feb4,368864389,0,0x0,8
tick,0x7ffdb840feb4,368879542,0,0x0,8
tick,0x7ffdb840feb4,368895606,0,0x0,8
tick,0x7ffdb840feb4,368910975,0,0x0,8
tick,0x7ffdb840feb4,368926427,0,0x0,8
tick,0x7ffdb840feb4,368941185,0,0x0,8
tick,0x7ffdb840feb4,368956425,0,0x0,8
tick,0x7ffdb840feb4,368971598,0,0x0,8
tick,0x7ffdb840feb4,368987417,0,0x0,8
tick,0x7ffdb840feb4,369002382,0,0x0,8
tick,0x7ffdb840feb4,369018430,0,0x0,8
tick,0x7ffdb840feb4,369034385,0,0x0,8
tick,0x7ffdb840feb4,369049605,0,0x0,8
tick,0x7ffdb840feb4,369065407,0,0x0,8
tick,0x7ffdb840feb4,369080616,0,0x0,8
tick,0x7ffdb840feb4,369096430,0,0x0,8
tick,0x7ffdb840feb4,369111616,0,0x0,8
tick,0x7ffdb840feb4,369127436,0,0x0,8
tick,0x7ffdb840feb4,369142974,0,0x0,8
tick,0x7ffdb840feb4,369158440,0,0x0,8
tick,0x7ffdb840feb4,369173447,0,0x0,8
tick,0x7ffdb840feb4,369188626,0,0x0,8
tick,0x7ffdb840feb4,369204383,0,0x0,8
tick,0x7ffdb840feb4,369219626,0,0x0,8
tick,0x7ffdb840feb4,369235386,0,0x0,8
tick,0x7ffdb840feb4,369250390,0,0x0,8
tick,0x7ffdb840feb4,369266395,0,0x0,8
tick,0x7ffdb840feb4,369282395,0,0x0,8
tick,0x7ffdb840feb4,369297644,0,0x0,8
tick,0x7ffdb840feb4,369313237,0,0x0,8
tick,0x7ffdb840feb4,369329229,0,0x0,8
tick,0x7ffdb840feb4,369344648,0,0x0,8
tick,0x7ffdb840feb4,369359803,0,0x0,8
tick,0x7ffdb840feb4,369375805,0,0x0,8
tick,0x7ffdb840feb4,369390662,0,0x0,8
tick,0x7ffdb840feb4,369406440,0,0x0,8
tick,0x7ffdb840feb4,369421664,0,0x0,8
tick,0x7ffdb840feb4,369437073,0,0x0,8
tick,0x7ffdb840feb4,369452668,0,0x0,8
tick,0x7ffdb840feb4,369468070,0,0x0,8
tick,0x7ffdb840feb4,369483389,0,0x0,8
tick,0x7ffdb840feb4,369498661,0,0x0,8
tick,0x7ffdb840feb4,369514268,0,0x0,8
tick,0x7ffdb840feb4,369529993,0,0x0,8
tick,0x7ffdb840feb4,369545407,0,0x0,8
tick,0x7ffdb840feb4,369561361,0,0x0,8
tick,0x7ffdb840feb4,369576493,0,0x0,8
tick,0x7ffdb840feb4,369591663,0,0x0,8
tick,0x7ffdb840feb4,369607498,0,0x0,8
tick,0x7ffdb840feb4,369622680,0,0x0,8
tick,0x7ffdb840feb4,369638500,0,0x0,8
tick,0x7ffdb840feb4,369653415,0,0x0,8
tick,0x7ffdb840feb4,369669512,0,0x0,8
tick,0x7ffdb840feb4,369685394,0,0x0,8
tick,0x7ffdb840feb4,369700680,0,0x0,8
tick,0x7ffdb840feb4,369715718,0,0x0,8
tick,0x7ffdb840feb4,369730858,0,0x0,8
tick,0x7ffdb840feb4,369746188,0,0x0,8
tick,0x7ffdb840feb4,369761583,0,0x0,8
tick,0x7ffdb840feb4,369777513,0,0x0,8
tick,0x7ffdb840feb4,369792856,0,0x0,8
tick,0x7ffdb840feb4,369808539,0,0x0,8
tick,0x7ffdb840feb4,369823907,0,0x0,8
tick,0x7ffdb840feb4,369839703,0,0x0,8
tick,0x7ffdb840feb4,369855704,0,0x0,8
tick,0x7ffdb840feb4,369871529,0,0x0,8
tick,0x7ffdb840feb4,369886911,0,0x0,8
tick,0x7ffdb840feb4,369902059,0,0x0,8
tick,0x7ffdb840feb4,369917247,0,0x0,8
tick,0x7ffdb840feb4,369932387,0,0x0,8
tick,0x7ffdb840feb4,369947546,0,0x0,8
tick,0x7ffdb840feb4,369963610,0,0x0,8
tick,0x7ffdb840feb4,369979722,0,0x0,8
tick,0x7ffdb840feb4,369995556,0,0x0,8
tick,0x7ffdb840feb4,370010966,0,0x0,8
tick,0x7ffdb840feb4,370026418,0,0x0,8
tick,0x7ffdb840feb4,370041741,0,0x0,8
tick,0x7ffdb840feb4,370057757,0,0x0,8
tick,0x7ffdb840feb4,370072568,0,0x0,8
tick,0x7ffdb840feb4,370087740,0,0x0,8
tick,0x7ffdb840feb4,370103336,0,0x0,8
tick,0x7ffdb840feb4,370118557,0,0x0,8
tick,0x7ffdb840feb4,370133738,0,0x0,8
tick,0x7ffdb840feb4,370149744,0,0x0,8
tick,0x7ffdb840feb4,370165475,0,0x0,8
tick,0x7ffdb840feb4,370180751,0,0x0,8
tick,0x7ffdb840feb4,370196173,0,0x0,8
tick,0x7ffdb840feb4,370212127,0,0x0,8
tick,0x7ffdb840feb4,370228128,0,0x0,8
tick,0x7ffdb840feb4,370244048,0,0x0,8
tick,0x7ffdb840feb4,370259048,0,0x0,8
tick,0x7ffdb840feb4,370274065,0,0x0,8
tick,0x7ffdb840feb4,370290059,0,0x0,8
tick,0x7ffdb840feb4,370305772,0,0x0,8
tick,0x7ffdb840feb4,370321775,0,0x0,8
tick,0x7ffdb840feb4,370337769,0,0x0,8
tick,0x7ffdb840feb4,370353771,0,0x0,8
tick,0x7ffdb840feb4,370369772,0,0x0,8
tick,0x7ffdb840feb4,370385791,0,0x0,8
tick,0x7ffdb840feb4,370401786,0,0x0,8
tick,0x7ffdb840feb4,370417601,0,0x0,8
tick,0x7ffdb840feb4,370433411,0,0x0,8
tick,0x7ffdb840feb4,370448603,0,0x0,8
tick,0x7ffdb840feb4,370463782,0,0x0,8
tick,0x7ffdb840feb4,370479771,0,0x0,8
tick,0x7ffdb840feb4,370495393,0,0x0,8
tick,0x7ffdb840feb4,370510780,0,0x0,8
tick,0x7ffdb840feb4,370526493,0,0x0,8
tick,0x7ffdb840feb4,370541251,0,0x0,8
tick,0x7ffdb840feb4,370556610,0,0x0,8
tick,0x7ffdb840feb4,370572271,0,0x0,8
tick,0x7ffdb840feb4,370587613,0,0x0,8
tick,0x7ffdb840feb4,370602873,0,0x0,8
tick,0x7ffdb840feb4,370618622,0,0x0,8
tick,0x7ffdb840feb4,370634393,0,0x0,8
tick,0x7ffdb840feb4,370649799,0,0x0,8
tick,0x7ffdb840feb4,370664778,0,0x0,8
tick,0x7ffdb840feb4,370680788,0,0x0,8
tick,0x7ffdb840feb4,370696630,0,0x0,8
tick,0x7ffdb840feb4,370711795,0,0x0,8
tick,0x7ffdb840feb4,370727636,0,0x0,8
tick,0x7ffdb840feb4,370742638,0,0x0,8
tick,0x7ffdb840feb4,370758633,0,0x0,8
tick,0x7ffdb840feb4,370774232,0,0x0,8
tick,0x7ffdb840feb4,370790237,0,0x0,8
tick,0x7ffdb840feb4,370805500,0,0x0,8
tick,0x7ffdb840feb4,370820823,0,0x0,8
tick,0x7ffdb840feb4,370836046,0,0x0,8
tick,0x7ffdb840feb4,370852052,0,0x0,8
tick,0x7ffdb840feb4,370867660,0,0x0,8
tick,0x7ffdb840feb4,370883400,0,0x0,8
tick,0x7ffdb840feb4,370898645,0,0x0,8
tick,0x7ffdb840feb4,370914655,0,0x0,8
tick,0x7ffdb840feb4,370930434,0,0x0,8
tick,0x7ffdb840feb4,370946003,0,0x0,8
tick,0x7ffdb840feb4,370962001,0,0x0,8
tick,0x7ffdb840feb4,370977665,0,0x0,8
tick,0x7ffdb840feb4,370993112,0,0x0,8
tick,0x7ffdb840feb4,371008658,0,0x0,8
tick,0x7ffdb840feb4,371023663,0,0x0,8
tick,0x7ffdb840feb4,371038870,0,0x0,8
tick,0x7ffdb840feb4,371054852,0,0x0,8
tick,0x7ffdb840feb4,371069680,0,0x0,8
tick,0x7ffdb840feb4,371085524,0,0x0,8
tick,0x7ffdb840feb4,371100322,0,0x0,8
tick,0x7ffdb840feb4,371115682,0,0x0,8
tick,0x7ffdb840feb4,371131402,0,0x0,8
tick,0x7ffdb840feb4,371146696,0,0x0,8
tick,0x7ffdb840feb4,371161692,0,0x0,8
tick,0x7ffdb840feb4,371177683,0,0x0,8
tick,0x7ffdb840feb4,371192886,0,0x0,8
tick,0x7ffdb840feb4,371207695,0,0x0,8
tick,0x7ffdb840feb4,371222864,0,0x0,8
tick,0x7ffdb840feb4,371238696,0,0x0,8
tick,0x7ffdb840feb4,371253711,0,0x0,8
tick,0x7ffdb840feb4,371269698,0,0x0,8
tick,0x7ffdb840feb4,371284714,0,0x0,8
tick,0x7ffdb840feb4,371299711,0,0x0,8
tick,0x7ffdb840feb4,371315718,0,0x0,8
tick,0x7ffdb840feb4,371330870,0,0x0,8
tick,0x7ffdb840feb4,371345737,0,0x0,8
tick,0x7ffdb840feb4,371360463,0,0x0,8
tick,0x7ffdb840feb4,371376468,0,0x0,8
tick,0x7ffdb840feb4,371392285,0,0x0,8
tick,0x7ffdb840feb4,371407710,0,0x0,8
tick,0x7ffdb840feb4,371423480,0,0x0,8
tick,0x7ffdb840feb4,371438722,0,0x0,8
tick,0x7ffdb840feb4,371454499,0,0x0,8
tick,0x7ffdb840feb4,371469908,0,0x0,8
tick,0x7ffdb840feb4,371485412,0,0x0,8
tick,0x7ffdb840feb4,371500060,0,0x0,8
tick,0x7ffdb840feb4,371515465,0,0x0,8
tick,0x7ffdb840feb4,371531298,0,0x0,8
tick,0x7ffdb840feb4,371546525,0,0x0,8
tick,0x7ffdb840feb4,371562365,0,0x0,8
tick,0x7ffdb840feb4,371577722,0,0x0,8
tick,0x7ffdb840feb4,371592874,0,0x0,8
tick,0x7ffdb840feb4,371608741,0,0x0,8
tick,0x7ffdb840feb4,371623850,0,0x0,8
tick,0x7ffdb840feb4,371639910,0,0x0,8
tick,0x7ffdb840feb4,371655913,0,0x0,8
tick,0x7ffdb840feb4,371671904,0,0x0,8
tick,0x7ffdb840feb4,371687586,0,0x0,8
tick,0x7ffdb840feb4,371702926,0,0x0,8
tick,0x7ffdb840feb4,371718587,0,0x0,8
tick,0x7ffdb840feb4,371733933,0,0x0,8
tick,0x7ffdb840feb4,371749934,0,0x0,8
tick,0x7ffdb840feb4,371765933,0,0x0,8
tick,0x7ffdb840feb4,371780940,0,0x0,8
tick,0x7ffdb840feb4,371796761,0,0x0,8
tick,0x7ffdb840feb4,371811937,0,0x0,8
tick,0x7ffdb840feb4,371827765,0,0x0,8
tick,0x7ffdb840feb4,371843416,0,0x0,8
tick,0x7ffdb840feb4,371858794,0,0x0,8
tick,0x7ffdb840feb4,371873914,0,0x0,8
tick,0x7ffdb840feb4,371889945,0,0x0,8
tick,0x7ffdb840feb4,371905787,0,0x0,8
tick,0x7ffdb840feb4,371921775,0,0x0,8
tick,0x7ffdb840feb4,371937775,0,0x0,8
tick,0x7ffdb840feb4,371953445,0,0x0,8
tick,0x7ffdb840feb4,371968824,0,0x0,8
tick,0x7ffdb840feb4,371984786,0,0x0,8
tick,0x7ffdb840feb4,371999975,0,0x0,8
tick,0x7ffdb840feb4,372014968,0,0x0,8
tick,0x7ffdb840feb4,372030753,0,0x0,8
tick,0x7ffdb840feb4,372046404,0,0x0,8
tick,0x7ffdb840feb4,372061807,0,0x0,8
tick,0x7ffdb840feb4,372076806,0,0x0,8
tick,0x7ffdb840feb4,372091926,0,0x0,8
tick,0x7ffdb840feb4,372107799,0,0x0,8
tick,0x7ffdb840feb4,372123445,0,0x0,8
tick,0x7ffdb840feb4,372138751,0,0x0,8
tick,0x7ffdb840feb4,372154766,0,0x0,8
tick,0x7ffdb840feb4,372170768,0,0x0,8
tick,0x7ffdb840feb4,372186788,0,0x0,8
tick,0x7ffdb840feb4,372202789,0,0x0,8
tick,0x7ffdb840feb4,372218800,0,0x0,8
tick,0x7ffdb840feb4,372234802,0,0x0,8
tick,0x7ffdb840feb4,372250374,0,0x0,8
tick,0x7ffdb840feb4,372265720,0,0x0,8
tick,0x7ffdb840feb4,372281739,0,0x0,8
tick,0x7ffdb840feb4,372297731,0,0x0,8
tick,0x7ffdb840feb4,372313723,0,0x0,8
tick,0x7ffdb840feb4,372328736,0,0x0,8
tick,0x7ffdb840feb4,372344734,0,0x0,8
tick,0x7ffdb840feb4,372359735,0,0x0,8
tick,0x7ffdb840feb4,372374737,0,0x0,8
tick,0x7ffdb840feb4,372390736,0,0x0,8
tick,0x7ffdb840feb4,372405749,0,0x0,8
tick,0x7ffdb840feb4,372421753,0,0x0,8
tick,0x7ffdb840feb4,372437745,0,0x0,8
tick,0x7ffdb840feb4,372453025,0,0x0,8
tick,0x7ffdb840feb4,372468744,0,0x0,8
tick,0x7ffdb840feb4,372484022,0,0x0,8
tick,0x7ffdb840feb4,372500029,0,0x0,8
tick,0x7ffdb840feb4,372516028,0,0x0,8
tick,0x7ffdb840feb4,372532025,0,0x0,8
tick,0x7ffdb840feb4,372547851,0,0x0,8
tick,0x7ffdb840feb4,372563720,0,0x0,8
tick,0x7ffdb840feb4,372579377,0,0x0,8
tick,0x7ffdb840feb4,372594733,0,0x0,8
tick,0x7ffdb840feb4,372610041,0,0x0,8
tick,0x7ffdb840feb4,372625035,0,0x0,8
tick,0x7ffdb840feb4,372640184,0,0x0,8
tick,0x7ffdb840feb4,372655395,0,0x0,8
tick,0x7ffdb840feb4,372670774,0,0x0,8
tick,0x7ffdb840feb4,372686589,0,0x0,8
tick,0x7ffdb840feb4,372701875,0,0x0,8
tick,0x7ffdb840feb4,372716735,0,0x0,8
tick,0x7ffdb840feb4,372732407,0,0x0,8
tick,0x7ffdb840feb4,372747873,0,0x0,8
tick,0x7ffdb840feb4,372762711,0,0x0,8
tick,0x7ffdb840feb4,372777897,0,0x0,8
tick,0x7ffdb840feb4,372793799,0,0x0,8
tick,0x7ffdb840feb4,372808889,0,0x0,8
tick,0x7ffdb840feb4,372824805,0,0x0,8
tick,0x7ffdb840feb4,372840065,0,0x0,8
tick,0x7ffdb840feb4,372855013,0,0x0,8
tick,0x7ffdb840feb4,372870917,0,0x0,8
tick,0x7ffdb840feb4,372886051,0,0x0,8
tick,0x7ffdb840feb4,372900893,0,0x0,8
tick,0x7ffdb840feb4,372916030,0,0x0,8
tick,0x7ffdb840feb4,372932034,0,0x0,8
tick,0x7ffdb840feb4,372947045,0,0x0,8
tick,0x7ffdb840feb4,372963049,0,0x0,8
tick,0x7ffdb840feb4,372979057,0,0x0,8
tick,0x7ffdb840feb4,372994060,0,0x0,8
tick,0x7ffdb840feb4,373010079,0,0x0,8
tick,0x7ffdb840feb4,373025421,0,0x0,8
tick,0x7ffdb840feb4,373041434,0,0x0,8
tick,0x7ffdb840feb4,373056627,0,0x0,8
tick,0x7ffdb840feb4,373072070,0,0x0,8
tick,0x7ffdb840feb4,373086913,0,0x0,8
tick,0x7ffdb840feb4,373102066,0,0x0,8
tick,0x7ffdb840feb4,373117920,0,0x0,8
tick,0x7ffdb840feb4,373133103,0,0x0,8
tick,0x7ffdb840feb4,373148920,0,0x0,8
tick,0x7ffdb840feb4,373164124,0,0x0,8
tick,0x7ffdb840feb4,373180104,0,0x0,8
tick,0x7ffdb840feb4,373196074,0,0x0,8
tick,0x7ffdb840feb4,373211085,0,0x0,8
tick,0x7ffdb840feb4,373226289,0,0x0,8
tick,0x7ffdb840feb4,373242070,0,0x0,8
tick,0x7ffdb840feb4,373257944,0,0x0,8
tick,0x7ffdb840feb4,373273983,0,0x0,8
tick,0x7ffdb840feb4,373289004,0,0x0,8
tick,0x7ffdb840feb4,373303989,0,0x0,8
tick,0x7ffdb840feb4,373319998,0,0x0,8
tick,0x7ffdb840feb4,373335998,0,0x0,8
tick,0x7ffdb840feb4,373352001,0,0x0,8
tick,0x7ffdb840feb4,373367998,0,0x0,8
tick,0x7ffdb840feb4,373382948,0,0x0,8
tick,0x7ffdb840feb4,373398742,0,0x0,8
tick,0x7ffdb840feb4,373413991,0,0x0,8
tick,0x7ffdb840feb4,373429772,0,0x0,8
tick,0x7ffdb840feb4,373444965,0,0x0,8
tick,0x7ffdb840feb4,373460147,0,0x0,8
tick,0x7ffdb840feb4,373476006,0,0x0,8
tick,0x7ffdb840feb4,373490988,0,0x0,8
tick,0x7ffdb840feb4,373506225,0,0x0,8
tick,0x7ffdb840feb4,373521799,0,0x0,8
tick,0x7ffdb840feb4,373536845,0,0x0,8
tick,0x7ffdb840feb4,373552060,0,0x0,8
tick,0x7ffdb840feb4,373567884,0,0x0,8
tick,0x7ffdb840feb4,373583163,0,0x0,8
tick,0x7ffdb840feb4,373599277,0,0x0,8
tick,0x7ffdb840feb4,373614894,0,0x0,8
tick,0x7ffdb840feb4,373630909,0,0x0,8
tick,0x7ffdb840feb4,373646166,0,0x0,8
tick,0x7ffdb840feb4,373660946,0,0x0,8
tick,0x7ffdb840feb4,373677021,0,0x0,8
tick,0x7ffdb840feb4,373692180,0,0x0,8
tick,0x7ffdb840feb4,373707000,0,0x0,8
tick,0x7ffdb840feb4,373723012,0,0x0,8
tick,0x7ffdb840feb4,373738190,0,0x0,8
tick,0x7ffdb840feb4,373753200,0,0x0,8
tick,0x7ffdb840feb4,373768660,0,0x0,8
tick,0x7ffdb840feb4,373784183,0,0x0,8
tick,0x7ffdb840feb4,373800022,0,0x0,8
tick,0x7ffdb840feb4,373815196,0,0x0,8
tick,0x7ffdb840feb4,373830644,0,0x0,8
tick,0x7ffdb840feb4,373846205,0,0x0,8
tick,0x7ffdb840feb4,373861193,0,0x0,8
tick,0x7ffdb840feb4,373877187,0,0x0,8
tick,0x7ffdb840feb4,373892134,0,0x0,8
tick,0x7ffdb840feb4,373908026,0,0x0,8
tick,0x7ffdb840feb4,373923206,0,0x0,8
tick,0x7ffdb840feb4,373938037,0,0x0,8
tick,0x7ffdb840feb4,373954032,0,0x0,8
tick,0x7ffdb840feb4,373969219,0,0x0,8
tick,0x7ffdb840feb4,373984193,0,0x0,8
tick,0x7ffdb840feb4,374000221,0,0x0,8
tick,0x7ffdb840feb4,374016218,0,0x0,8
tick,0x7ffdb840feb4,374032229,0,0x0,8
tick,0x7ffdb840feb4,374048049,0,0x0,8
tick,0x7ffdb840feb4,374063222,0,0x0,8
tick,0x7ffdb840feb4,374079229,0,0x0,8
tick,0x7ffdb840feb4,374094053,0,0x0,8
tick,0x7ffdb840feb4,374110051,0,0x0,8
tick,0x7ffdb840feb4,374125231,0,0x0,8
tick,0x7ffdb840feb4,374140148,0,0x0,8
tick,0x7ffdb840feb4,374155451,0,0x0,8
tick,0x7ffdb840feb4,374171052,0,0x0,8
tick,0x7ffdb840feb4,374186242,0,0x0,8
tick,0x7ffdb840feb4,374202241,0,0x0,8
tick,0x7ffdb840feb4,374218237,0,0x0,8
tick,0x7ffdb840feb4,374233860,0,0x0,8
tick,0x7ffdb840feb4,374249067,0,0x0,8
tick,0x7ffdb840feb4,374264723,0,0x0,8
tick,0x7ffdb840feb4,374280251,0,0x0,8
tick,0x7ffdb840feb4,374296256,0,0x0,8
tick,0x7ffdb840feb4,374312248,0,0x0,8
tick,0x7ffdb840feb4,374328245,0,0x0,8
tick,0x7ffdb840feb4,374343478,0,0x0,8
tick,0x7ffdb840feb4,374359249,0,0x0,8
tick,0x7ffdb840feb4,374374250,0,0x0,8
tick,0x7ffdb840feb4,374390273,0,0x0,8
tick,0x7ffdb840feb4,374406263,0,0x0,8
tick,0x7ffdb840feb4,374421728,0,0x0,8
tick,0x7ffdb840feb4,374437055,0,0x0,8
tick,0x7ffdb840feb4,374452108,0,0x0,8
tick,0x7ffdb840feb4,374468084,0,0x0,8
tick,0x7ffdb840feb4,374483099,0,0x0,8
tick,0x7ffdb840feb4,374498102,0,0x0,8
tick,0x7ffdb840feb4,374513805,0,0x0,8
tick,0x7ffdb840feb4,374529100,0,0x0,8
tick,0x7ffdb840feb4,374544346,0,0x0,8
tick,0x7ffdb840feb4,374560093,0,0x0,8
tick,0x7ffdb840feb4,374576101,0,0x0,8
tick,0x7ffdb840feb4,374591562,0,0x0,8
tick,0x7ffdb840feb4,374607679,0,0x0,8
tick,0x7ffdb840feb4,374623123,0,0x0,8
tick,0x7ffdb840feb4,374639130,0,0x0,8
tick,0x7ffdb840feb4,374654114,0,0x0,8
tick,0x7ffdb840feb4,374669109,0,0x0,8
tick,0x7ffdb840feb4,374684487,0,0x0,8
tick,0x7ffdb840feb4,374700286,0,0x0,8
tick,0x7ffdb840feb4,374715748,0,0x0,8
tick,0x7ffdb840feb4,374731299,0,0x0,8
tick,0x7ffdb840feb4,374747151,0,0x0,8
tick,0x7ffdb840feb4,374763131,0,0x0,8
tick,0x7ffdb840feb4,374779114,0,0x0,8
tick,0x7ffdb840feb4,374793659,0,0x0,8
tick,0x7ffdb840feb4,374809145,0,0x0,8
tick,0x7ffdb840feb4,374825132,0,0x0,8
tick,0x7ffdb840feb4,374840307,0,0x0,8
tick,0x7ffdb840feb4,374855758,0,0x0,8
tick,0x7ffdb840feb4,374871261,0,0x0,8
tick,0x7ffdb840feb4,374886475,0,0x0,8
tick,0x7ffdb840feb4,374901771,0,0x0,8
tick,0x7ffdb840feb4,374917147,0,0x0,8
tick,0x7ffdb840feb4,374932905,0,0x0,8
tick,0x7ffdb840feb4,374948144,0,0x0,8
tick,0x7ffdb840feb4,374963141,0,0x0,8
tick,0x7ffdb840feb4,374978423,0,0x0,8
tick,0x7ffdb840feb4,374994136,0,0x0,8
tick,0x7ffdb840feb4,375009146,0,0x0,8
tick,0x7ffdb840feb4,375024987,0,0x0,8
tick,0x7ffdb840feb4,375040332,0,0x0,8
tick,0x7ffdb840feb4,375055343,0,0x0,8
tick,0x7ffdb840feb4,375071448,0,0x0,8
tick,0x7ffdb840feb4,375086662,0,0x0,8
tick,0x7ffdb840feb4,375102333,0,0x0,8
tick,0x7ffdb840feb4,375118171,0,0x0,8
tick,0x7ffdb840feb4,375133522,0,0x0,8
tick,0x7ffdb840feb4,375148882,0,0x0,8
tick,0x7ffdb840feb4,375164100,0,0x0,8
tick,0x7ffdb840feb4,375180161,0,0x0,8
tick,0x7ffdb840feb4,375195560,0,0x0,8
tick,0x7ffdb840feb4,375210832,0,0x0,8
tick,0x7ffdb840feb4,375226826,0,0x0,8
tick,0x7ffdb840feb4,375242831,0,0x0,8
tick,0x7ffdb840feb4,375258849,0,0x0,8
tick,0x7ffdb840feb4,375274848,0,0x0,8
tick,0x7ffdb840feb4,375290929,0,0x0,8
tick,0x7ffdb840feb4,375306927,0,0x0,8
tick,0x7ffdb840feb4,375322925,0,0x0,8
tick,0x7ffdb840feb4,375338929,0,0x0,8
tick,0x7ffdb840feb4,375354715,0,0x0,8
tick,0x7ffdb840feb4,375370363,0,0x0,8
tick,0x7ffdb840feb4,375385718,0,0x0,8
tick,0x7ffdb840feb4,375400758,0,0x0,8
tick,0x7ffdb840feb4,375416120,0,0x0,8
tick,0x7ffdb840feb4,375431419,0,0x0,8
tick,0x7ffdb840feb4,375446743,0,0x0,8
tick,0x7ffdb840feb4,375461843,0,0x0,8
tick,0x7ffdb840feb4,375477198,0,0x0,8
tick,0x7ffdb840feb4,375493218,0,0x0,8
tick,0x7ffdb840feb4,375509202,0,0x0,8
tick,0x7ffdb840feb4,375525009,0,0x0,8
tick,0x7ffdb840feb4,375540391,0,0x0,8
tick,0x7ffdb840feb4,375555859,0,0x0,8
tick,0x7ffdb840feb4,375571386,0,0x0,8
tick,0x7ffdb840feb4,375587028,0,0x0,8
tick,0x7ffdb840feb4,375603037,0,0x0,8
tick,0x7ffdb840feb4,375619036,0,0x0,8
tick,0x7ffdb840feb4,375634416,0,0x0,8
tick,0x7ffdb840feb4,375650393,0,0x0,8
tick,0x7ffdb840feb4,375665568,0,0x0,8
tick,0x7ffdb840feb4,375681205,0,0x0,8
tick,0x7ffdb840feb4,375697035,0,0x0,8
tick,0x7ffdb840feb4,375712217,0,0x0,8
tick,0x7ffdb840feb4,375727231,0,0x0,8
tick,0x7ffdb840feb4,375743042,0,0x0,8
tick,0x7ffdb840feb4,375758235,0,0x0,8
tick,0x7ffdb840feb4,375773398,0,0x0,8
tick,0x7ffdb840feb4,375789235,0,0x0,8
tick,0x7ffdb840feb4,375804816,0,0x0,8
tick,0x7ffdb840feb4,375820822,0,0x0,8
tick,0x7ffdb840feb4,375836826,0,0x0,8
tick,0x7ffdb840feb4,375852425,0,0x0,8
tick,0x7ffdb840feb4,375868249,0,0x0,8
tick,0x7ffdb840feb4,375884138,0,0x0,8
tick,0x7ffdb840feb4,375899432,0,0x0,8
tick,0x7ffdb840feb4,375914766,0,0x0,8
tick,0x7ffdb840feb4,375930761,0,0x0,8
tick,0x7ffdb840feb4,375946156,0,0x0,8
tick,0x7ffdb840feb4,375961441,0,0x0,8
tick,0x7ffdb840feb4,375977440,0,0x0,8
tick,0x7ffdb840feb4,375993011,0,0x0,8
tick,0x7ffdb840feb4,376008447,0,0x0,8
tick,0x7ffdb840feb4,376023466,0,0x0,8
tick,0x7ffdb840feb4,376039478,0,0x0,8
tick,0x7ffdb840feb4,376055207,0,0x0,8
tick,0x7ffdb840feb4,376071270,0,0x0,8
tick,0x7ffdb840feb4,376086809,0,0x0,8
tick,0x7ffdb840feb4,376102453,0,0x0,8
tick,0x7ffdb840feb4,376118275,0,0x0,8
tick,0x7ffdb840feb4,376134141,0,0x0,8
tick,0x7ffdb840feb4,376149286,0,0x0,8
tick,0x7ffdb840feb4,376164247,0,0x0,8
tick,0x7ffdb840feb4,376179455,0,0x0,8
tick,0x7ffdb840feb4,376195257,0,0x0,8
tick,0x7ffdb840feb4,376210472,0,0x0,8
tick,0x7ffdb840feb4,376225606,0,0x0,8
tick,0x7ffdb840feb4,376241261,0,0x0,8
tick,0x7ffdb840feb4,376256621,0,0x0,8
tick,0x7ffdb840feb4,376272417,0,0x0,8
tick,0x7ffdb840feb4,376288316,0,0x0,8
tick,0x7ffdb840feb4,376303939,0,0x0,8
tick,0x7ffdb840feb4,376319933,0,0x0,8
tick,0x7ffdb840feb4,376335944,0,0x0,8
tick,0x7ffdb840feb4,376351946,0,0x0,8
tick,0x7ffdb840feb4,376367333,0,0x0,8
tick,0x7ffdb840feb4,376382472,0,0x0,8
tick,0x7ffdb840feb4,376398322,0,0x0,8
tick,0x7ffdb840feb4,376413973,0,0x0,8
tick,0x7ffdb840feb4,376429343,0,0x0,8
tick,0x7ffdb840feb4,376444064,0,0x0,8
tick,0x7ffdb840feb4,376459317,0,0x0,8
tick,0x7ffdb840feb4,376475437,0,0x0,8
tick,0x7ffdb840feb4,376491349,0,0x0,8
tick,0x7ffdb840feb4,376506208,0,0x0,8
tick,0x7ffdb840feb4,376521514,0,0x0,8
tick,0x7ffdb840feb4,376537503,0,0x0,8
tick,0x7ffdb840feb4,376553232,0,0x0,8
tick,0x7ffdb840feb4,376568514,0,0x0,8
tick,0x7ffdb840feb4,376584492,0,0x0,8
tick,0x7ffdb840feb4,376600086,0,0x0,8
tick,0x7ffdb840feb4,376615764,0,0x0,8
tick,0x7ffdb840feb4,376630917,0,0x0,8
tick,0x7ffdb840feb4,376646168,0,0x0,8
tick,0x7ffdb840feb4,376661519,0,0x0,8
tick,0x7ffdb840feb4,376677345,0,0x0,8
tick,0x7ffdb840feb4,376692528,0,0x0,8
tick,0x7ffdb840feb4,376708358,0,0x0,8
tick,0x7ffdb840feb4,376724351,0,0x0,8
tick,0x7ffdb840feb4,376739519,0,0x0,8
tick,0x7ffdb840feb4,376755144,0,0x0,8
tick,0x7ffdb840feb4,376770532,0,0x0,8
tick,0x7ffdb840feb4,376786544,0,0x0,8
tick,0x7ffdb840feb4,376801955,0,0x0,8
tick,0x7ffdb840feb4,376817361,0,0x0,8
tick,0x7ffdb840feb4,376832542,0,0x0,8
tick,0x7ffdb840feb4,376848372,0,0x0,8
tick,0x7ffdb840feb4,376863549,0,0x0,8
tick,0x7ffdb840feb4,376878537,0,0x0,8
tick,0x7ffdb840feb4,376894561,0,0x0,8
tick,0x7ffdb840feb4,376910511,0,0x0,8
tick,0x7ffdb840feb4,376926506,0,0x0,8
tick,0x7ffdb840feb4,376942559,0,0x0,8
tick,0x7ffdb840feb4,376958378,0,0x0,8
tick,0x7ffdb840feb4,376973374,0,0x0,8
tick,0x7ffdb840feb4,376988565,0,0x0,8
tick,0x7ffdb840feb4,377003573,0,0x0,8
tick,0x7ffdb840feb4,377019560,0,0x0,8
tick,0x7ffdb840feb4,377034448,0,0x0,8
tick,0x7ffdb840feb4,377049554,0,0x0,8
tick,0x7ffdb840feb4,377064757,0,0x0,8
tick,0x7ffdb840feb4,377080572,0,0x0,8
tick,0x7ffdb840feb4,377096584,0,0x0,8
tick,0x7ffdb840feb4,377112482,0,0x0,8
tick,0x7ffdb840feb4,377127401,0,0x0,8
tick,0x7ffdb840feb4,377142580,0,0x0,8
tick,0x7ffdb840feb4,377158410,0,0x0,8
tick,0x7ffdb840feb4,377173427,0,0x0,8
tick,0x7ffdb840feb4,377188585,0,0x0,8
tick,0x7ffdb840feb4,377204411,0,0x0,8
tick,0x7ffdb840feb4,377219594,0,0x0,8
tick,0x7ffdb840feb4,377235450,0,0x0,8
tick,0x7ffdb840feb4,377250593,0,0x0,8
tick,0x7ffdb840feb4,377266442,0,0x0,8
tick,0x7ffdb840feb4,377281957,0,0x0,8
tick,0x7ffdb840feb4,377297953,0,0x0,8
tick,0x7ffdb840feb4,377314067,0,0x0,8
tick,0x7ffdb840feb4,377329077,0,0x0,8
tick,0x7ffdb840feb4,377345078,0,0x0,8
tick,0x7ffdb840feb4,377360073,0,0x0,8
tick,0x7ffdb840feb4,377375431,0,0x0,8
tick,0x7ffdb840feb4,377391427,0,0x0,8
tick,0x7ffdb840feb4,377407346,0,0x0,8
tick,0x7ffdb840feb4,377422619,0,0x0,8
tick,0x7ffdb840feb4,377437436,0,0x0,8
tick,0x7ffdb840feb4,377452623,0,0x0,8
tick,0x7ffdb840feb4,377468435,0,0x0,8
tick,0x7ffdb840feb4,377483427,0,0x0,8
tick,0x7ffdb840feb4,377499220,0,0x0,8
tick,0x7ffdb840feb4,377514756,0,0x0,8
tick,0x7ffdb840feb4,377530624,0,0x0,8
tick,0x7ffdb840feb4,377545784,0,0x0,8
tick,0x7ffdb840feb4,377560780,0,0x0,8
tick,0x7ffdb840feb4,377576130,0,0x0,8
tick,0x7ffdb840feb4,377591237,0,0x0,8
tick,0x7ffdb840feb4,377606641,0,0x0,8
tick,0x7ffdb840feb4,377622156,0,0x0,8
tick,0x7ffdb840feb4,377637479,0,0x0,8
tick,0x7ffdb840feb4,377652653,0,0x0,8
tick,0x7ffdb840feb4,377668479,0,0x0,8
tick,0x7ffdb840feb4,377684439,0,0x0,8
tick,0x7ffdb840feb4,377700442,0,0x0,8
tick,0x7ffdb840feb4,377715767,0,0x0,8
tick,0x7ffdb840feb4,377731438,0,0x0,8
tick,0x7ffdb840feb4,377746763,0,0x0,8
tick,0x7ffdb840feb4,377761974,0,0x0,8
tick,0x7ffdb840feb4,377777490,0,0x0,8
tick,0x7ffdb840feb4,377793478,0,0x0,8
tick,0x7ffdb840feb4,377809499,0,0x0,8
tick,0x7ffdb840feb4,377825495,0,0x0,8
tick,0x7ffdb840feb4,377840672,0,0x0,8
tick,0x7ffdb840feb4,377856510,0,0x0,8
tick,0x7ffdb840feb4,377871501,0,0x0,8
tick,0x7ffdb840feb4,377886683,0,0x0,8
tick,0x7ffdb840feb4,377901666,0,0x0,8
tick,0x7ffdb840feb4,377917501,0,0x0,8
tick,0x7ffdb840feb4,377933262,0,0x0,8
tick,0x7ffdb840feb4,377948489,0,0x0,8
tick,0x7ffdb840feb4,377963511,0,0x0,8
tick,0x7ffdb840feb4,377979512,0,0x0,8
tick,0x7ffdb840feb4,377995512,0,0x0,8
tick,0x7ffdb840feb4,378010683,0,0x0,8
tick,0x7ffdb840feb4,378026537,0,0x0,8
tick,0x7ffdb840feb4,378041684,0,0x0,8
tick,0x7ffdb840feb4,378057694,0,0x0,8
tick,0x7ffdb840feb4,378072699,0,0x0,8
tick,0x7ffdb840feb4,378087705,0,0x0,8
tick,0x7ffdb840feb4,378103722,0,0x0,8
tick,0x7ffdb840feb4,378119532,0,0x0,8
tick,0x7ffdb840feb4,378134733,0,0x0,8
tick,0x7ffdb840feb4,378150730,0,0x0,8
tick,0x7ffdb840feb4,378165741,0,0x0,8
tick,0x7ffdb840feb4,378181759,0,0x0,8
tick,0x7ffdb840feb4,378196750,0,0x0,8
tick,0x7ffdb840feb4,378211759,0,0x0,8
tick,0x7ffdb840feb4,378227745,0,0x0,8
tick,0x7ffdb840feb4,378242971,0,0x0,8
tick,0x7ffdb840feb4,378257977,0,0x0,8
tick,0x7ffdb840feb4,378273543,0,0x0,8
tick,0x7ffdb840feb4,378288709,0,0x0,8
tick,0x7ffdb840feb4,378304536,0,0x0,8
tick,0x7ffdb840feb4,378319545,0,0x0,8
tick,0x7ffdb840feb4,378335543,0,0x0,8
tick,0x7ffdb840feb4,378350553,0,0x0,8
tick,0x7ffdb840feb4,378366546,0,0x0,8
tick,0x7ffdb840feb4,378381738,0,0x0,8
tick,0x7ffdb840feb4,378397340,0,0x0,8
tick,0x7ffdb840feb4,378412731,0,0x0,8
tick,0x7ffdb840feb4,378428583,0,0x0,8
tick,0x7ffdb840feb4,378443754,0,0x0,8
tick,0x7ffdb840feb4,378459742,0,0x0,8
tick,0x7ffdb840feb4,378475553,0,0x0,8
tick,0x7ffdb840feb4,378490741,0,0x0,8
tick,0x7ffdb840feb4,378506227,0,0x0,8
tick,0x7ffdb840feb4,378522230,0,0x0,8
tick,0x7ffdb840feb4,378538245,0,0x0,8
tick,0x7ffdb840feb4,378553774,0,0x0,8
tick,0x7ffdb840feb4,378569860,0,0x0,8
tick,0x7ffdb840feb4,378585581,0,0x0,8
tick,0x7ffdb840feb4,378600750,0,0x0,8
tick,0x7ffdb840feb4,378615782,0,0x0,8
tick,0x7ffdb840feb4,378631753,0,0x0,8
tick,0x7ffdb840feb4,378647769,0,0x0,8
tick,0x7ffdb840feb4,378662919,0,0x0,8
tick,0x7ffdb840feb4,378677765,0,0x0,8
tick,0x7ffdb840feb4,378693775,0,0x0,8
tick,0x7ffdb840feb4,378708783,0,0x0,8
tick,0x7ffdb840feb4,378723987,0,0x0,8
tick,0x7ffdb840feb4,378739768,0,0x0,8
tick,0x7ffdb840feb4,378755251,0,0x0,8
tick,0x7ffdb840feb4,378770782,0,0x0,8
tick,0x7ffdb840feb4,378786773,0,0x0,8
tick,0x7ffdb840feb4,378802794,0,0x0,8
tick,0x7ffdb840feb4,378818804,0,0x0,8
tick,0x7ffdb840feb4,378834815,0,0x0,8
tick,0x7ffdb840feb4,378849818,0,0x0,8
tick,0x7ffdb840feb4,378864840,0,0x0,8
tick,0x7ffdb840feb4,378880820,0,0x0,8
tick,0x7ffdb840feb4,378896837,0,0x0,8
tick,0x7ffdb840feb4,378911820,0,0x0,8
tick,0x7ffdb840feb4,378928040,0,0x0,8
tick,0x7ffdb840feb4,378942905,0,0x0,8
tick,0x7ffdb840feb4,378958845,0,0x0,8
tick,0x7ffdb840feb4,378974862,0,0x0,8
tick,0x7ffdb840feb4,378990845,0,0x0,8
tick,0x7ffdb840feb4,379006851,0,0x0,8
tick,0x7ffdb840feb4,379022846,0,0x0,8
tick,0x7ffdb840feb4,379038866,0,0x0,8
tick,0x7ffdb840feb4,379054855,0,0x0,8
tick,0x7ffdb840feb4,379070873,0,0x0,8
tick,0x7ffdb840feb4,379086877,0,0x0,8
tick,0x7ffdb840feb4,379102866,0,0x0,8
tick,0x7ffdb840feb4,379118875,0,0x0,8
tick,0x7ffdb840feb4,379134895,0,0x0,8
tick,0x7ffdb840feb4,379150885,0,0x0,8
tick,0x7ffdb840feb4,379166882,0,0x0,8
tick,0x7ffdb840feb4,379182870,0,0x0,8
tick,0x7ffdb840feb4,379198918,0,0x0,8
tick,0x7ffdb840feb4,379214648,0,0x0,8
tick,0x7ffdb840feb4,379229847,0,0x0,8
tick,0x7ffdb840feb4,379244855,0,0x0,8
tick,0x7ffdb840feb4,379260857,0,0x0,8
tick,0x7ffdb840feb4,379276857,0,0x0,8
tick,0x7ffdb840feb4,379292446,0,0x0,8
tick,0x7ffdb840feb4,379307850,0,0x0,8
tick,0x7ffdb840feb4,379323681,0,0x0,8
tick,0x7ffdb840feb4,379339686,0,0x0,8
tick,0x7ffdb840feb4,379354829,0,0x0,8
tick,0x7ffdb840feb4,379369851,0,0x0,8
tick,0x7ffdb840feb4,379384690,0,0x0,8
tick,0x7ffdb840feb4,379399842,0,0x0,8
tick,0x7ffdb840feb4,379415295,0,0x0,8
tick,0x7ffdb840feb4,379430677,0,0x0,8
tick,0x7ffdb840feb4,379446464,0,0x0,8
tick,0x7ffdb840feb4,379461870,0,0x0,8
tick,0x7ffdb840feb4,379477378,0,0x0,8
tick,0x7ffdb840feb4,379493183,0,0x0,8
tick,0x7ffdb840feb4,379508501,0,0x0,8
tick,0x7ffdb840feb4,379523865,0,0x0,8
tick,0x7ffdb840feb4,379539501,0,0x0,8
tick,0x7ffdb840feb4,379554459,0,0x0,8
tick,0x7ffdb840feb4,379569865,0,0x0,8
tick,0x7ffdb840feb4,379585441,0,0x0,8
tick,0x7ffdb840feb4,379600873,0,0x0,8
tick,0x7ffdb840feb4,379615562,0,0x0,8
tick,0x7ffdb840feb4,379630869,0,0x0,8
tick,0x7ffdb840feb4,379646268,0,0x0,8
tick,0x7ffdb840feb4,379661545,0,0x0,8
tick,0x7ffdb840feb4,379676864,0,0x0,8
tick,0x7ffdb840feb4,379692571,0,0x0,8
tick,0x7ffdb840feb4,379708601,0,0x0,8
tick,0x7ffdb840feb4,379724590,0,0x0,8
tick,0x7ffdb840feb4,379740600,0,0x0,8
tick,0x7ffdb840feb4,379756602,0,0x0,8
tick,0x7ffdb840feb4,379772605,0,0x0,8
tick,0x7ffdb840feb4,379788602,0,0x0,8
tick,0x7ffdb840feb4,379804614,0,0x0,8
tick,0x7ffdb840feb4,379820615,0,0x0,8
tick,0x7ffdb840feb4,379835620,0,0x0,8
tick,0x7ffdb840feb4,379850623,0,0x0,8
tick,0x7ffdb840feb4,379866626,0,0x0,8
tick,0x7ffdb840feb4,379882630,0,0x0,8
tick,0x7ffdb840feb4,379898617,0,0x0,8
tick,0x7ffdb840feb4,379914625,0,0x0,8
tick,0x7ffdb840feb4,379929623,0,0x0,8
tick,0x7ffdb840feb4,379945628,0,0x0,8
tick,0x7ffdb840feb4,379960644,0,0x0,8
tick,0x7ffdb840feb4,379976634,0,0x0,8
tick,0x7ffdb840feb4,379992642,0,0x0,8
tick,0x7ffdb840feb4,380008655,0,0x0,8
tick,0x7ffdb840feb4,380024666,0,0x0,8
tick,0x7ffdb840feb4,380040646,0,0x0,8
tick,0x7ffdb840feb4,380055764,0,0x0,8
tick,0x7ffdb840feb4,380070684,0,0x0,8
tick,0x7ffdb840feb4,380086666,0,0x0,8
tick,0x7ffdb840feb4,380102668,0,0x0,8
tick,0x7ffdb840feb4,380118675,0,0x0,8
tick,0x7ffdb840feb4,380134681,0,0x0,8
tick,0x7ffdb840feb4,380149679,0,0x0,8
tick,0x7ffdb840feb4,380165681,0,0x0,8
tick,0x7ffdb840feb4,380180686,0,0x0,8
tick,0x7ffdb840feb4,380196687,0,0x0,8
tick,0x7ffdb840feb4,380212694,0,0x0,8
tick,0x7ffdb840feb4,380228690,0,0x0,8
tick,0x7ffdb840feb4,380244714,0,0x0,8
tick,0x7ffdb840feb4,380259732,0,0x0,8
tick,0x7ffdb840feb4,380275712,0,0x0,8
tick,0x7ffdb840feb4,380290721,0,0x0,8
tick,0x7ffdb840feb4,380306718,0,0x0,8
tick,0x7ffdb840feb4,380322604,0,0x0,8
tick,0x7ffdb840feb4,380337979,0,0x0,8
tick,0x7ffdb840feb4,380353999,0,0x0,8
tick,0x7ffdb840feb4,380369488,0,0x0,8
tick,0x7ffdb840feb4,380384980,0,0x0,8
tick,0x7ffdb840feb4,380400720,0,0x0,8
tick,0x7ffdb840feb4,380416713,0,0x0,8
tick,0x7ffdb840feb4,380432717,0,0x0,8
tick,0x7ffdb840feb4,380448727,0,0x0,8
tick,0x7ffdb840feb4,380464731,0,0x0,8
tick,0x7ffdb840feb4,380480726,0,0x0,8
tick,0x7ffdb840feb4,380496799,0,0x0,8
tick,0x7ffdb840feb4,380512751,0,0x0,8
tick,0x7ffdb840feb4,380528845,0,0x0,8
tick,0x7ffdb840feb4,380544840,0,0x0,8
tick,0x7ffdb840feb4,380560840,0,0x0,8
tick,0x7ffdb840feb4,380575873,0,0x0,8
tick,0x7ffdb840feb4,380591848,0,0x0,8
tick,0x7ffdb840feb4,380606992,0,0x0,8
tick,0x7ffdb840feb4,380622476,0,0x0,8
tick,0x7ffdb840feb4,380637829,0,0x0,8
tick,0x7ffdb840feb4,380653000,0,0x0,8
tick,0x7ffdb840feb4,380668837,0,0x0,8
tick,0x7ffdb840feb4,380684453,0,0x0,8
tick,0x7ffdb840feb4,380700001,0,0x0,8
tick,0x7ffdb840feb4,380715428,0,0x0,8
tick,0x7ffdb840feb4,380731021,0,0x0,8
tick,0x7ffdb840feb4,380746720,0,0x0,8
tick,0x7ffdb840feb4,380762733,0,0x0,8
tick,0x7ffdb840feb4,380778728,0,0x0,8
tick,0x7ffdb840feb4,380794790,0,0x0,8
tick,0x7ffdb840feb4,380809957,0,0x0,8
tick,0x7ffdb840feb4,380825797,0,0x0,8
tick,0x7ffdb840feb4,380841032,0,0x0,8
tick,0x7ffdb840feb4,380856797,0,0x0,8
tick,0x7ffdb840feb4,380872813,0,0x0,8
tick,0x7ffdb840feb4,380888865,0,0x0,8
tick,0x7ffdb840feb4,380903856,0,0x0,8
tick,0x7ffdb840feb4,380918863,0,0x0,8
tick,0x7ffdb840feb4,380934628,0,0x0,8
tick,0x7ffdb840feb4,380950041,0,0x0,8
tick,0x7ffdb840feb4,380964808,0,0x0,8
tick,0x7ffdb840feb4,380980032,0,0x0,8
tick,0x7ffdb840feb4,380996074,0,0x0,8
tick,0x7ffdb840feb4,381011471,0,0x0,8
tick,0x7ffdb840feb4,381027256,0,0x0,8
tick,0x7ffdb840feb4,381042053,0,0x0,8
tick,0x7ffdb840feb4,381057256,0,0x0,8
tick,0x7ffdb840feb4,381072813,0,0x0,8
tick,0x7ffdb840feb4,381088833,0,0x0,8
tick,0x7ffdb840feb4,381104040,0,0x0,8
tick,0x7ffdb840feb4,381118886,0,0x0,8
tick,0x7ffdb840feb4,381134243,0,0x0,8
tick,0x7ffdb840feb4,381149886,0,0x0,8
tick,0x7ffdb840feb4,381165898,0,0x0,8
tick,0x7ffdb840feb4,381181069,0,0x0,8
tick,0x7ffdb840feb4,381196906,0,0x0,8
tick,0x7ffdb840feb4,381212087,0,0x0,8
tick,0x7ffdb840feb4,381227829,0,0x0,8
tick,0x7ffdb840feb4,381242554,0,0x0,8
tick,0x7ffdb840feb4,381257874,0,0x0,8
tick,0x7ffdb840feb4,381272878,0,0x0,8
tick,0x7ffdb840feb4,381287854,0,0x0,8
tick,0x7ffdb840feb4,381303701,0,0x0,8
tick,0x7ffdb840feb4,381318881,0,0x0,8
tick,0x7ffdb840feb4,381333681,0,0x0,8
tick,0x7ffdb840feb4,381348883,0,0x0,8
tick,0x7ffdb840feb4,381363885,0,0x0,8
tick,0x7ffdb840feb4,381379880,0,0x0,8
tick,0x7ffdb840feb4,381394883,0,0x0,8
tick,0x7ffdb840feb4,381410887,0,0x0,8
tick,0x7ffdb840feb4,381426292,0,0x0,8
tick,0x7ffdb840feb4,381441899,0,0x0,8
tick,0x7ffdb840feb4,381457104,0,0x0,8
tick,0x7ffdb840feb4,381472907,0,0x0,8
tick,0x7ffdb840feb4,381488948,0,0x0,8
tick,0x7ffdb840feb4,381503739,0,0x0,8
tick,0x7ffdb840feb4,381519777,0,0x0,8
tick,0x7ffdb840feb4,381535747,0,0x0,8
tick,0x7ffdb840feb4,381552262,0,0x0,8
tick,0x7ffdb840feb4,381566781,0,0x0,8
tick,0x7ffdb840feb4,381582766,0,0x0,8
tick,0x7ffdb840feb4,381597776,0,0x0,8
tick,0x7ffdb840feb4,381612768,0,0x0,8
tick,0x7ffdb840feb4,381628781,0,0x0,8
tick,0x7ffdb840feb4,381643786,0,0x0,8
tick,0x7ffdb840feb4,381659775,0,0x0,8
tick,0x7ffdb840feb4,381675782,0,0x0,8
tick,0x7ffdb840feb4,381691773,0,0x0,8
tick,0x7ffdb840feb4,381707798,0,0x0,8
tick,0x7ffdb840feb4,381722868,0,0x0,8
tick,0x7ffdb840feb4,381738821,0,0x0,8
tick,0x7ffdb840feb4,381753802,0,0x0,8
tick,0x7ffdb840feb4,381769799,0,0x0,8
tick,0x7ffdb840feb4,381785798,0,0x0,8
tick,0x7ffdb840feb4,381800811,0,0x0,8
tick,0x7ffdb840feb4,381815826,0,0x0,8
tick,0x7ffdb840feb4,381831849,0,0x0,8
tick,0x7ffdb840feb4,381847822,0,0x0,8
tick,0x7ffdb840feb4,381863817,0,0x0,8
tick,0x7ffdb840feb4,381879824,0,0x0,8
tick,0x7ffdb840feb4,381895831,0,0x0,8
tick,0x7ffdb840feb4,381911848,0,0x0,8
tick,0x7ffdb840feb4,381927875,0,0x0,8
tick,0x7ffdb840feb4,381943843,0,0x0,8
tick,0x7ffdb840feb4,381959877,0,0x0,8
tick,0x7ffdb840feb4,381975838,0,0x0,8
tick,0x7ffdb840feb4,381991846,0,0x0,8
tick,0x7ffdb840feb4,382007845,0,0x0,8
tick,0x7ffdb840feb4,382023857,0,0x0,8
tick,0x7ffdb840feb4,382038871,0,0x0,8
tick,0x7ffdb840feb4,382054863,0,0x0,8
tick,0x7ffdb840feb4,382069870,0,0x0,8
tick,0x7ffdb840feb4,382085863,0,0x0,8
tick,0x7ffdb840feb4,382101870,0,0x0,8
tick,0x7ffdb840feb4,382117874,0,0x0,8
tick,0x7ffdb840feb4,382133926,0,0x0,8
tick,0x7ffdb840feb4,382149899,0,0x0,8
tick,0x7ffdb840feb4,382165892,0,0x0,8
tick,0x7ffdb840feb4,382181897,0,0x0,8
tick,0x7ffdb840feb4,382197931,0,0x0,8
tick,0x7ffdb840feb4,382213220,0,0x0,8
tick,0x7ffdb840feb4,382229049,0,0x0,8
tick,0x7ffdb840feb4,382244059,0,0x0,8
tick,0x7ffdb840feb4,382260042,0,0x0,8
tick,0x7ffdb840feb4,382275066,0,0x0,8
tick,0x7ffdb840feb4,382290062,0,0x0,8
tick,0x7ffdb840feb4,382306059,0,0x0,8
tick,0x7ffdb840feb4,382322057,0,0x0,8
tick,0x7ffdb840feb4,382339683,0,0x0,8
tick,0x7ffdb840feb4,382354083,0,0x0,8
tick,0x7ffdb840feb4,382370088,0,0x0,8
tick,0x7ffdb840feb4,382386089,0,0x0,8
tick,0x7ffdb840feb4,382402086,0,0x0,8
tick,0x7ffdb840feb4,382418100,0,0x0,8
tick,0x7ffdb840feb4,382434078,0,0x0,8
tick,0x7ffdb840feb4,382450083,0,0x0,8
tick,0x7ffdb840feb4,382466099,0,0x0,8
tick,0x7ffdb840feb4,382482107,0,0x0,8
tick,0x7ffdb840feb4,382497108,0,0x0,8
tick,0x7ffdb840feb4,382513124,0,0x0,8
tick,0x7ffdb840feb4,382528131,0,0x0,8
tick,0x7ffdb840feb4,382544134,0,0x0,8
tick,0x7ffdb840feb4,382560121,0,0x0,8
tick,0x7ffdb840feb4,382576132,0,0x0,8
tick,0x7ffdb840feb4,382592139,0,0x0,8
tick,0x7ffdb840feb4,382608125,0,0x0,8
tick,0x7ffdb840feb4,382623138,0,0x0,8
tick,0x7ffdb840feb4,382638116,0,0x0,8
tick,0x7ffdb840feb4,382654131,0,0x0,8
tick,0x7ffdb840feb4,382670140,0,0x0,8
tick,0x7ffdb840feb4,382685158,0,0x0,8
tick,0x7ffdb840feb4,382701154,0,0x0,8
tick,0x7ffdb840feb4,382716150,0,0x0,8
tick,0x7ffdb840feb4,382732157,0,0x0,8
tick,0x7ffdb840feb4,382747700,0,0x0,8
tick,0x7ffdb840feb4,382762262,0,0x0,8
tick,0x7ffdb840feb4,382777790,0,0x0,8
tick,0x7ffdb840feb4,382793820,0,0x0,8
tick,0x7ffdb840feb4,382809810,0,0x0,8
tick,0x7ffdb840feb4,382825886,0,0x0,8
tick,0x7ffdb840feb4,382841816,0,0x0,8
tick,0x7ffdb840feb4,382857833,0,0x0,8
tick,0x7ffdb840feb4,382872827,0,0x0,8
tick,0x7ffdb840feb4,382887838,0,0x0,8
tick,0x7ffdb840feb4,382903830,0,0x0,8
tick,0x7ffdb840feb4,382919852,0,0x0,8
tick,0x7ffdb840feb4,382934837,0,0x0,8
tick,0x7ffdb840feb4,382949837,0,0x0,8
tick,0x7ffdb840feb4,382964852,0,0x0,8
tick,0x7ffdb840feb4,382980852,0,0x0,8
tick,0x7ffdb840feb4,382995864,0,0x0,8
tick,0x7ffdb840feb4,383011879,0,0x0,8
tick,0x7ffdb840feb4,383027160,0,0x0,8
tick,0x7ffdb840feb4,383042156,0,0x0,8
tick,0x7ffdb840feb4,383058156,0,0x0,8
tick,0x7ffdb840feb4,383073164,0,0x0,8
tick,0x7ffdb840feb4,383089156,0,0x0,8
tick,0x7ffdb840feb4,383105169,0,0x0,8
tick,0x7ffdb840feb4,383120182,0,0x0,8
tick,0x7ffdb840feb4,383135178,0,0x0,8
tick,0x7ffdb840feb4,383151175,0,0x0,8
tick,0x7ffdb840feb4,383167192,0,0x0,8
tick,0x7ffdb840feb4,383183186,0,0x0,8
tick,0x7ffdb840feb4,383198186,0,0x0,8
tick,0x7ffdb840feb4,383214216,0,0x0,8
tick,0x7ffdb840feb4,383229199,0,0x0,8
tick,0x7ffdb840feb4,383244168,0,0x0,8
tick,0x7ffdb840feb4,383259229,0,0x0,8
tick,0x7ffdb840feb4,383274178,0,0x0,8
tick,0x7ffdb840feb4,383290023,0,0x0,8
tick,0x7ffdb840feb4,383305180,0,0x0,8
tick,0x7ffdb840feb4,383320198,0,0x0,8
tick,0x7ffdb840feb4,383336183,0,0x0,8
tick,0x7ffdb840feb4,383351175,0,0x0,8
tick,0x7ffdb840feb4,383366190,0,0x0,8
tick,0x7ffdb840feb4,383382171,0,0x0,8
tick,0x7ffdb840feb4,383398071,0,0x0,8
tick,0x7ffdb840feb4,383413171,0,0x0,8
tick,0x7ffdb840feb4,383429165,0,0x0,8
tick,0x7ffdb840feb4,383444337,0,0x0,8
tick,0x7ffdb840feb4,383460193,0,0x0,8
tick,0x7ffdb840feb4,383476171,0,0x0,8
tick,0x7ffdb840feb4,383491977,0,0x0,8
tick,0x7ffdb840feb4,383507971,0,0x0,8
tick,0x7ffdb840feb4,383523349,0,0x0,8
tick,0x7ffdb840feb4,383538982,0,0x0,8
tick,0x7ffdb840feb4,383554353,0,0x0,8
tick,0x7ffdb840feb4,383569672,0,0x0,8
tick,0x7ffdb840feb4,383584464,0,0x0,8
tick,0x7ffdb840feb4,383600187,0,0x0,8
tick,0x7ffdb840feb4,383615790,0,0x0,8
tick,0x7ffdb840feb4,383631363,0,0x0,8
tick,0x7ffdb840feb4,383647018,0,0x0,8
tick,0x7ffdb840feb4,383662360,0,0x0,8
tick,0x7ffdb840feb4,383677801,0,0x0,8
tick,0x7ffdb840feb4,383693222,0,0x0,8
tick,0x7ffdb840feb4,383708197,0,0x0,8
tick,0x7ffdb840feb4,383723379,0,0x0,8
tick,0x7ffdb840feb4,383739205,0,0x0,8
tick,0x7ffdb840feb4,383755214,0,0x0,8
tick,0x7ffdb840feb4,383770163,0,0x0,8
tick,0x7ffdb840feb4,383785474,0,0x0,8
tick,0x7ffdb840feb4,383800376,0,0x0,8
tick,0x7ffdb840feb4,383815738,0,0x0,8
tick,0x7ffdb840feb4,383831223,0,0x0,8
tick,0x7ffdb840feb4,383847221,0,0x0,8
tick,0x7ffdb840feb4,383862539,0,0x0,8
tick,0x7ffdb840feb4,383878229,0,0x0,8
tick,0x7ffdb840feb4,383893393,0,0x0,8
tick,0x7ffdb840feb4,383909222,0,0x0,8
tick,0x7ffdb840feb4,383925183,0,0x0,8
tick,0x7ffdb840feb4,383940222,0,0x0,8
tick,0x7ffdb840feb4,383955422,0,0x0,8
tick,0x7ffdb840feb4,383970396,0,0x0,8
tick,0x7ffdb840feb4,383986420,0,0x0,8
tick,0x7ffdb840feb4,384001414,0,0x0,8
tick,0x7ffdb840feb4,384017228,0,0x0,8
tick,0x7ffdb840feb4,384032923,0,0x0,8
tick,0x7ffdb840feb4,384048141,0,0x0,8
tick,0x7ffdb840feb4,384063408,0,0x0,8
tick,0x7ffdb840feb4,384079247,0,0x0,8
tick,0x7ffdb840feb4,384095075,0,0x0,8
tick,0x7ffdb840feb4,384110256,0,0x0,8
tick,0x7ffdb840feb4,384125238,0,0x0,8
tick,0x7ffdb840feb4,384141254,0,0x0,8
tick,0x7ffdb840feb4,384156518,0,0x0,8
tick,0x7ffdb840feb4,384172426,0,0x0,8
tick,0x7ffdb840feb4,384188255,0,0x0,8
tick,0x7ffdb840feb4,384203591,0,0x0,8
tick,0x7ffdb840feb4,384219277,0,0x0,8
tick,0x7ffdb840feb4,384234260,0,0x0,8
tick,0x7ffdb840feb4,384250257,0,0x0,8
tick,0x7ffdb840feb4,384264796,0,0x0,8
tick,0x7ffdb840feb4,384280261,0,0x0,8
tick,0x7ffdb840feb4,384296268,0,0x0,8
tick,0x7ffdb840feb4,384311448,0,0x0,8
tick,0x7ffdb840feb4,384326455,0,0x0,8
tick,0x7ffdb840feb4,384341628,0,0x0,8
tick,0x7ffdb840feb4,384357278,0,0x0,8
tick,0x7ffdb840feb4,384373092,0,0x0,8
tick,0x7ffdb840feb4,384389099,0,0x0,8
tick,0x7ffdb840feb4,384404094,0,0x0,8
tick,0x7ffdb840feb4,384419111,0,0x0,8
tick,0x7ffdb840feb4,384434349,0,0x0,8
tick,0x7ffdb840feb4,384450282,0,0x0,8
tick,0x7ffdb840feb4,384465121,0,0x0,8
tick,0x7ffdb840feb4,384480281,0,0x0,8
tick,0x7ffdb840feb4,384496098,0,0x0,8
tick,0x7ffdb840feb4,384511089,0,0x0,8
tick,0x7ffdb840feb4,384526101,0,0x0,8
tick,0x7ffdb840feb4,384541286,0,0x0,8
tick,0x7ffdb840feb4,384557106,0,0x0,8
tick,0x7ffdb840feb4,384572673,0,0x0,8
tick,0x7ffdb840feb4,384588668,0,0x0,8
tick,0x7ffdb840feb4,384604097,0,0x0,8
tick,0x7ffdb840feb4,384619293,0,0x0,8
tick,0x7ffdb840feb4,384635304,0,0x0,8
tick,0x7ffdb840feb4,384650482,0,0x0,8
tick,0x7ffdb840feb4,384665799,0,0x0,8
tick,0x7ffdb840feb4,384681481,0,0x0,8
tick,0x7ffdb840feb4,384697499,0,0x0,8
tick,0x7ffdb840feb4,384713519,0,0x0,8
tick,0x7ffdb840feb4,384729505,0,0x0,8
tick,0x7ffdb840feb4,384744780,0,0x0,8
tick,0x7ffdb840feb4,384760319,0,0x0,8
tick,0x7ffdb840feb4,384775508,0,0x0,8
tick,0x7ffdb840feb4,384791501,0,0x0,8
tick,0x7ffdb840feb4,384807318,0,0x0,8
tick,0x7ffdb840feb4,384822653,0,0x0,8
tick,0x7ffdb840feb4,384837515,0,0x0,8
tick,0x7ffdb840feb4,384853521,0,0x0,8
tick,0x7ffdb840feb4,384869333,0,0x0,8
tick,0x7ffdb840feb4,384885323,0,0x0,8
tick,0x7ffdb840feb4,384901330,0,0x0,8
tick,0x7ffdb840feb4,384917328,0,0x0,8
tick,0x7ffdb840feb4,384932468,0,0x0,8
tick,0x7ffdb840feb4,384947335,0,0x0,8
tick,0x7ffdb840feb4,384963348,0,0x0,8
tick,0x7ffdb840feb4,384979346,0,0x0,8
tick,0x7ffdb840feb4,384995453,0,0x0,8
tick,0x7ffdb840feb4,385011516,0,0x0,8
tick,0x7ffdb840feb4,385027355,0,0x0,8
tick,0x7ffdb840feb4,385042520,0,0x0,8
tick,0x7ffdb840feb4,385057538,0,0x0,8
tick,0x7ffdb840feb4,385073366,0,0x0,8
tick,0x7ffdb840feb4,385089361,0,0x0,8
tick,0x7ffdb840feb4,385105339,0,0x0,8
tick,0x7ffdb840feb4,385120539,0,0x0,8
tick,0x7ffdb840feb4,385135676,0,0x0,8
tick,0x7ffdb840feb4,385151550,0,0x0,8
tick,0x7ffdb840feb4,385167595,0,0x0,8
tick,0x7ffdb840feb4,385183370,0,0x0,8
tick,0x7ffdb840feb4,385198143,0,0x0,8
tick,0x7ffdb840feb4,385213912,0,0x0,8
tick,0x7ffdb840feb4,385229373,0,0x0,8
tick,0x7ffdb840feb4,385244922,0,0x0,8
tick,0x7ffdb840feb4,385260373,0,0x0,8
tick,0x7ffdb840feb4,385275508,0,0x0,8
tick,0x7ffdb840feb4,385291553,0,0x0,8
tick,0x7ffdb840feb4,385306368,0,0x0,8
tick,0x7ffdb840feb4,385322368,0,0x0,8
tick,0x7ffdb840feb4,385337651,0,0x0,8
tick,0x7ffdb840feb4,385353568,0,0x0,8
tick,0x7ffdb840feb4,385369382,0,0x0,8
tick,0x7ffdb840feb4,385384568,0,0x0,8
tick,0x7ffdb840feb4,385399591,0,0x0,8
tick,0x7ffdb840feb4,385415586,0,0x0,8
tick,0x7ffdb840feb4,385431579,0,0x0,8
tick,0x7ffdb840feb4,385447564,0,0x0,8
tick,0x7ffdb840feb4,385463396,0,0x0,8
tick,0x7ffdb840feb4,385479398,0,0x0,8
tick,0x7ffdb840feb4,385495407,0,0x0,8
tick,0x7ffdb840feb4,385510413,0,0x0,8
tick,0x7ffdb840feb4,385525590,0,0x0,8
tick,0x7ffdb840feb4,385541422,0,0x0,8
tick,0x7ffdb840feb4,385557403,0,0x0,8
tick,0x7ffdb840feb4,385572163,0,0x0,8
tick,0x7ffdb840feb4,385587581,0,0x0,8
tick,0x7ffdb840feb4,385603587,0,0x0,8
tick,0x7ffdb840feb4,385619424,0,0x0,8
tick,0x7ffdb840feb4,385634666,0,0x0,8
tick,0x7ffdb840feb4,385650421,0,0x0,8
tick,0x7ffdb840feb4,385665675,0,0x0,8
tick,0x7ffdb840feb4,385681606,0,0x0,8
tick,0x7ffdb840feb4,385696617,0,0x0,8
tick,0x7ffdb840feb4,385712467,0,0x0,8
tick,0x7ffdb840feb4,385727604,0,0x0,8
tick,0x7ffdb840feb4,385742611,0,0x0,8
tick,0x7ffdb840feb4,385758607,0,0x0,8
tick,0x7ffdb840feb4,385774167,0,0x0,8
tick,0x7ffdb840feb4,385789442,0,0x0,8
tick,0x7ffdb840feb4,385804602,0,0x0,8
tick,0x7ffdb840feb4,385820622,0,0x0,8
tick,0x7ffdb840feb4,385836628,0,0x0,8
tick,0x7ffdb840feb4,385852623,0,0x0,8
tick,0x7ffdb840feb4,385867812,0,0x0,8
tick,0x7ffdb840feb4,385883517,0,0x0,8
tick,0x7ffdb840feb4,385898885,0,0x0,8
tick,0x7ffdb840feb4,385914872,0,0x0,8
tick,0x7ffdb840feb4,385930452,0,0x0,8
tick,0x7ffdb840feb4,385946464,0,0x0,8
tick,0x7ffdb840feb4,385961648,0,0x0,8
tick,0x7ffdb840feb4,385976420,0,0x0,8
tick,0x7ffdb840feb4,385991634,0,0x0,8
tick,0x7ffdb840feb4,386007643,0,0x0,8
tick,0x7ffdb840feb4,386022912,0,0x0,8
tick,0x7ffdb840feb4,386038469,0,0x0,8
tick,0x7ffdb840feb4,386054203,0,0x0,8
tick,0x7ffdb840feb4,386069479,0,0x0,8
tick,0x7ffdb840feb4,386085524,0,0x0,8
tick,0x7ffdb840feb4,386101654,0,0x0,8
tick,0x7ffdb840feb4,386117479,0,0x0,8
tick,0x7ffdb840feb4,386133242,0,0x0,8
tick,0x7ffdb840feb4,386148478,0,0x0,8
tick,0x7ffdb840feb4,386164241,0,0x0,8
tick,0x7ffdb840feb4,386179494,0,0x0,8
tick,0x7ffdb840feb4,386194736,0,0x0,8
tick,0x7ffdb840feb4,386210480,0,0x0,8
tick,0x7ffdb840feb4,386226495,0,0x0,8
tick,0x7ffdb840feb4,386241672,0,0x0,8
tick,0x7ffdb840feb4,386256673,0,0x0,8
tick,0x7ffdb840feb4,386271819,0,0x0,8
tick,0x7ffdb840feb4,386287827,0,0x0,8
tick,0x7ffdb840feb4,386302660,0,0x0,8
tick,0x7ffdb840feb4,386317809,0,0x0,8
tick,0x7ffdb840feb4,386333287,0,0x0,8
tick,0x7ffdb840feb4,386348498,0,0x0,8
tick,0x7ffdb840feb4,386363685,0,0x0,8
tick,0x7ffdb840feb4,386379508,0,0x0,8
tick,0x7ffdb840feb4,386394520,0,0x0,8
tick,0x7ffdb840feb4,386410519,0,0x0,8
tick,0x7ffdb840feb4,386426523,0,0x0,8
tick,0x7ffdb840feb4,386442522,0,0x0,8
tick,0x7ffdb840feb4,386458432,0,0x0,8
tick,0x7ffdb840feb4,386474425,0,0x0,8
tick,0x7ffdb840feb4,386489693,0,0x0,8
tick,0x7ffdb840feb4,386505522,0,0x0,8
tick,0x7ffdb840feb4,386521519,0,0x0,8
tick,0x7ffdb840feb4,386537527,0,0x0,8
tick,0x7ffdb840feb4,386552704,0,0x0,8
tick,0x7ffdb840feb4,386567534,0,0x0,8
tick,0x7ffdb840feb4,386583477,0,0x0,8
tick,0x7ffdb840feb4,386598537,0,0x0,8
tick,0x7ffdb840feb4,386614056,0,0x0,8
tick,0x7ffdb840feb4,386629535,0,0x0,8
tick,0x7ffdb840feb4,386645542,0,0x0,8
tick,0x7ffdb840feb4,386660134,0,0x0,8
tick,0x7ffdb840feb4,386675921,0,0x0,8
tick,0x7ffdb840feb4,386690721,0,0x0,8
tick,0x7ffdb840feb4,386706537,0,0x0,8
tick,0x7ffdb840feb4,386721738,0,0x0,8
tick,0x7ffdb840feb4,386736950,0,0x0,8
tick,0x7ffdb840feb4,386752521,0,0x0,8
tick,0x7ffdb840feb4,386768186,0,0x0,8
tick,0x7ffdb840feb4,386783477,0,0x0,8
tick,0x7ffdb840feb4,386798032,0,0x0,8
tick,0x7ffdb840feb4,386813065,0,0x0,8
tick,0x7ffdb840feb4,386828549,0,0x0,8
tick,0x7ffdb840feb4,386843746,0,0x0,8
tick,0x7ffdb840feb4,386859564,0,0x0,8
tick,0x7ffdb840feb4,386874569,0,0x0,8
tick,0x7ffdb840feb4,386890582,0,0x0,8
tick,0x7ffdb840feb4,386905527,0,0x0,8
tick,0x7ffdb840feb4,386920580,0,0x0,8
tick,0x7ffdb840feb4,386936438,0,0x0,8
tick,0x7ffdb840feb4,386951752,0,0x0,8
tick,0x7ffdb840feb4,386966810,0,0x0,8
tick,0x7ffdb840feb4,386982263,0,0x0,8
tick,0x7ffdb840feb4,386998062,0,0x0,8
tick,0x7ffdb840feb4,387013081,0,0x0,8
tick,0x7ffdb840feb4,387028590,0,0x0,8
tick,0x7ffdb840feb4,387043770,0,0x0,8
tick,0x7ffdb840feb4,387059587,0,0x0,8
tick,0x7ffdb840feb4,387074874,0,0x0,8
tick,0x7ffdb840feb4,387090591,0,0x0,8
tick,0x7ffdb840feb4,387106314,0,0x0,8
tick,0x7ffdb840feb4,387121771,0,0x0,8
tick,0x7ffdb840feb4,387136608,0,0x0,8
tick,0x7ffdb840feb4,387151779,0,0x0,8
tick,0x7ffdb840feb4,387167797,0,0x0,8
tick,0x7ffdb840feb4,387182483,0,0x0,8
tick,0x7ffdb840feb4,387197784,0,0x0,8
tick,0x7ffdb840feb4,387213124,0,0x0,8
tick,0x7ffdb840feb4,387228609,0,0x0,8
tick,0x7ffdb840feb4,387244113,0,0x0,8
tick,0x7ffdb840feb4,387259634,0,0x0,8
tick,0x7ffdb840feb4,387274616,0,0x0,8
tick,0x7ffdb840feb4,387290632,0,0x0,8
tick,0x7ffdb840feb4,387305801,0,0x0,8
tick,0x7ffdb840feb4,387320631,0,0x0,8
tick,0x7ffdb840feb4,387335809,0,0x0,8
tick,0x7ffdb840feb4,387351810,0,0x0,8
tick,0x7ffdb840feb4,387367426,0,0x0,8
tick,0x7ffdb840feb4,387383416,0,0x0,8
tick,0x7ffdb840feb4,387398629,0,0x0,8
tick,0x7ffdb840feb4,387413641,0,0x0,8
tick,0x7ffdb840feb4,387429629,0,0x0,8
tick,0x7ffdb840feb4,387445638,0,0x0,8
tick,0x7ffdb840feb4,387461637,0,0x0,8
tick,0x7ffdb840feb4,387477655,0,0x0,8
tick,0x7ffdb840feb4,387492826,0,0x0,8
tick,0x7ffdb840feb4,387508837,0,0x0,8
tick,0x7ffdb840feb4,387523636,0,0x0,8
tick,0x7ffdb840feb4,387539649,0,0x0,8
tick,0x7ffdb840feb4,387554830,0,0x0,8
tick,0x7ffdb840feb4,387569837,0,0x0,8
tick,0x7ffdb840feb4,387585852,0,0x0,8
tick,0x7ffdb840feb4,387601837,0,0x0,8
tick,0x7ffdb840feb4,387617160,0,0x0,8
tick,0x7ffdb840feb4,387633262,0,0x0,8
tick,0x7ffdb840feb4,387649179,0,0x0,8
tick,0x7ffdb840feb4,387664816,0,0x0,8
tick,0x7ffdb840feb4,387680665,0,0x0,8
tick,0x7ffdb840feb4,387695870,0,0x0,8
tick,0x7ffdb840feb4,387710865,0,0x0,8
tick,0x7ffdb840feb4,387726101,0,0x0,8
tick,0x7ffdb840feb4,387741857,0,0x0,8
tick,0x7ffdb840feb4,387756857,0,0x0,8
tick,0x7ffdb840feb4,387772855,0,0x0,8
tick,0x7ffdb840feb4,387788175,0,0x0,8
tick,0x7ffdb840feb4,387803669,0,0x0,8
tick,0x7ffdb840feb4,387819694,0,0x0,8
tick,0x7ffdb840feb4,387835658,0,0x0,8
tick,0x7ffdb840feb4,387850709,0,0x0,8
tick,0x7ffdb840feb4,387865697,0,0x0,8
tick,0x7ffdb840feb4,387880866,0,0x0,8
tick,0x7ffdb840feb4,387896231,0,0x0,8
tick,0x7ffdb840feb4,387911873,0,0x0,8
tick,0x7ffdb840feb4,387927878,0,0x0,8
tick,0x7ffdb840feb4,387943884,0,0x0,8
tick,0x7ffdb840feb4,387959700,0,0x0,8
tick,0x7ffdb840feb4,387974706,0,0x0,8
tick,0x7ffdb840feb4,387990697,0,0x0,8
tick,0x7ffdb840feb4,388005895,0,0x0,8
tick,0x7ffdb840feb4,388021884,0,0x0,8
tick,0x7ffdb840feb4,388037330,0,0x0,8
tick,0x7ffdb840feb4,388052912,0,0x0,8
tick,0x7ffdb840feb4,388068337,0,0x0,8
tick,0x7ffdb840feb4,388083490,0,0x0,8
tick,0x7ffdb840feb4,388098686,0,0x0,8
tick,0x7ffdb840feb4,388114689,0,0x0,8
tick,0x7ffdb840feb4,388129724,0,0x0,8
tick,0x7ffdb840feb4,388145287,0,0x0,8
tick,0x7ffdb840feb4,388160725,0,0x0,8
tick,0x7ffdb840feb4,388176171,0,0x0,8
tick,0x7ffdb840feb4,388191915,0,0x0,8
tick,0x7ffdb840feb4,388207914,0,0x0,8
tick,0x7ffdb840feb4,388223910,0,0x0,8
tick,0x7ffdb840feb4,388239709,0,0x0,8
tick,0x7ffdb840feb4,388254922,0,0x0,8
tick,0x7ffdb840feb4,388270929,0,0x0,8
tick,0x7ffdb840feb4,388285929,0,0x0,8
tick,0x7ffdb840feb4,388301934,0,0x0,8
tick,0x7ffdb840feb4,388317944,0,0x0,8
tick,0x7ffdb840feb4,388333953,0,0x0,8
tick,0x7ffdb840feb4,388349768,0,0x0,8
tick,0x7ffdb840feb4,388364942,0,0x0,8
tick,0x7ffdb840feb4,388380772,0,0x0,8
tick,0x7ffdb840feb4,388395761,0,0x0,8
tick,0x7ffdb840feb4,388410935,0,0x0,8
tick,0x7ffdb840feb4,388426948,0,0x0,8
tick,0x7ffdb840feb4,388441945,0,0x0,8
tick,0x7ffdb840feb4,388457948,0,0x0,8
tick,0x7ffdb840feb4,388473958,0,0x0,8
tick,0x7ffdb840feb4,388489945,0,0x0,8
tick,0x7ffdb840feb4,388505687,0,0x0,8
tick,0x7ffdb840feb4,388520942,0,0x0,8
tick,0x7ffdb840feb4,388536943,0,0x0,8
tick,0x7ffdb840feb4,388552946,0,0x0,8
tick,0x7ffdb840feb4,388569039,0,0x0,8
tick,0x7ffdb840feb4,388584981,0,0x0,8
tick,0x7ffdb840feb4,388600958,0,0x0,8
tick,0x7ffdb840feb4,388616969,0,0x0,8
tick,0x7ffdb840feb4,388632556,0,0x0,8
tick,0x7ffdb840feb4,388648562,0,0x0,8
tick,0x7ffdb840feb4,388664555,0,0x0,8
tick,0x7ffdb840feb4,388679788,0,0x0,8
tick,0x7ffdb840feb4,388694990,0,0x0,8
tick,0x7ffdb840feb4,388710795,0,0x0,8
tick,0x7ffdb840feb4,388726595,0,0x0,8
tick,0x7ffdb840feb4,388741975,0,0x0,8
tick,0x7ffdb840feb4,388756982,0,0x0,8
tick,0x7ffdb840feb4,388772474,0,0x0,8
tick,0x7ffdb840feb4,388787985,0,0x0,8
tick,0x7ffdb840feb4,388802987,0,0x0,8
tick,0x7ffdb840feb4,388818808,0,0x0,8
tick,0x7ffdb840feb4,388833990,0,0x0,8
tick,0x7ffdb840feb4,388848987,0,0x0,8
tick,0x7ffdb840feb4,388864985,0,0x0,8
tick,0x7ffdb840feb4,388880985,0,0x0,8
tick,0x7ffdb840feb4,388896989,0,0x0,8
tick,0x7ffdb840feb4,388912997,0,0x0,8
tick,0x7ffdb840feb4,388928998,0,0x0,8
tick,0x7ffdb840feb4,388945008,0,0x0,8
tick,0x7ffdb840feb4,388960818,0,0x0,8
tick,0x7ffdb840feb4,388976821,0,0x0,8
tick,0x7ffdb840feb4,388991788,0,0x0,8
tick,0x7ffdb840feb4,389007799,0,0x0,8
tick,0x7ffdb840feb4,389023698,0,0x0,8
tick,0x7ffdb840feb4,389038838,0,0x0,8
tick,0x7ffdb840feb4,389054816,0,0x0,8
tick,0x7ffdb840feb4,389069834,0,0x0,8
tick,0x7ffdb840feb4,389085011,0,0x0,8
tick,0x7ffdb840feb4,389101025,0,0x0,8
tick,0x7ffdb840feb4,389116625,0,0x0,8
tick,0x7ffdb840feb4,389132613,0,0x0,8
tick,0x7ffdb840feb4,389147736,0,0x0,8
tick,0x7ffdb840feb4,389162563,0,0x0,8
tick,0x7ffdb840feb4,389178033,0,0x0,8
tick,0x7ffdb840feb4,389193838,0,0x0,8
tick,0x7ffdb840feb4,389208802,0,0x0,8
tick,0x7ffdb840feb4,389224044,0,0x0,8
tick,0x7ffdb840feb4,389239862,0,0x0,8
tick,0x7ffdb840feb4,389255031,0,0x0,8
tick,0x7ffdb840feb4,389270867,0,0x0,8
tick,0x7ffdb840feb4,389286040,0,0x0,8
tick,0x7ffdb840feb4,389301045,0,0x0,8
tick,0x7ffdb840feb4,389316831,0,0x0,8
tick,0x7ffdb840feb4,389332041,0,0x0,8
tick,0x7ffdb840feb4,389347044,0,0x0,8
tick,0x7ffdb840feb4,389362221,0,0x0,8
tick,0x7ffdb840feb4,389377552,0,0x0,8
tick,0x7ffdb840feb4,389392808,0,0x0,8
tick,0x7ffdb840feb4,389408821,0,0x0,8
tick,0x7ffdb840feb4,389424070,0,0x0,8
tick,0x7ffdb840feb4,389440067,0,0x0,8
tick,0x7ffdb840feb4,389455069,0,0x0,8
tick,0x7ffdb840feb4,389470081,0,0x0,8
tick,0x7ffdb840feb4,389485495,0,0x0,8
tick,0x7ffdb840feb4,389500887,0,0x0,8
tick,0x7ffdb840feb4,389516826,0,0x0,8
tick,0x7ffdb840feb4,389532864,0,0x0,8
tick,0x7ffdb840feb4,389548702,0,0x0,8
tick,0x7ffdb840feb4,389563542,0,0x0,8
tick,0x7ffdb840feb4,389579108,0,0x0,8
tick,0x7ffdb840feb4,389595114,0,0x0,8
tick,0x7ffdb840feb4,389611106,0,0x0,8
tick,0x7ffdb840feb4,389627100,0,0x0,8
tick,0x7ffdb840feb4,389643107,0,0x0,8
tick,0x7ffdb840feb4,389659113,0,0x0,8
tick,0x7ffdb840feb4,389674582,0,0x0,8
tick,0x7ffdb840feb4,389690286,0,0x0,8
tick,0x7ffdb840feb4,389705088,0,0x0,8
tick,0x7ffdb840feb4,389720919,0,0x0,8
tick,0x7ffdb840feb4,389736897,0,0x0,8
tick,0x7ffdb840feb4,389752090,0,0x0,8
tick,0x7ffdb840feb4,389767330,0,0x0,8
tick,0x7ffdb840feb4,389782645,0,0x0,8
tick,0x7ffdb840feb4,389798162,0,0x0,8
tick,0x7ffdb840feb4,389813101,0,0x0,8
tick,0x7ffdb840feb4,389828323,0,0x0,8
tick,0x7ffdb840feb4,389844106,0,0x0,8
tick,0x7ffdb840feb4,389859929,0,0x0,8
tick,0x7ffdb840feb4,389876015,0,0x0,8
tick,0x7ffdb840feb4,389892117,0,0x0,8
tick,0x7ffdb840feb4,389907939,0,0x0,8
tick,0x7ffdb840feb4,389923121,0,0x0,8
tick,0x7ffdb840feb4,389938786,0,0x0,8
tick,0x7ffdb840feb4,389954041,0,0x0,8
tick,0x7ffdb840feb4,389969384,0,0x0,8
tick,0x7ffdb840feb4,389985439,0,0x0,8
tick,0x7ffdb840feb4,390000946,0,0x0,8
tick,0x7ffdb840feb4,390016837,0,0x0,8
tick,0x7ffdb840feb4,390032920,0,0x0,8
tick,0x7ffdb840feb4,390048132,0,0x0,8
tick,0x7ffdb840feb4,390064195,0,0x0,8
tick,0x7ffdb840feb4,390079955,0,0x0,8
tick,0x7ffdb840feb4,390095128,0,0x0,8
tick,0x7ffdb840feb4,390110954,0,0x0,8
tick,0x7ffdb840feb4,390126136,0,0x0,8
tick,0x7ffdb840feb4,390140968,0,0x0,8
tick,0x7ffdb840feb4,390156351,0,0x0,8
tick,0x7ffdb840feb4,390172151,0,0x0,8
tick,0x7ffdb840feb4,390187416,0,0x0,8
tick,0x7ffdb840feb4,390203152,0,0x0,8
tick,0x7ffdb840feb4,390218834,0,0x0,8
tick,0x7ffdb840feb4,390234148,0,0x0,8
tick,0x7ffdb840feb4,390249481,0,0x0,8
tick,0x7ffdb840feb4,390264839,0,0x0,8
tick,0x7ffdb840feb4,390279979,0,0x0,8
tick,0x7ffdb840feb4,390295131,0,0x0,8
tick,0x7ffdb840feb4,390310519,0,0x0,8
tick,0x7ffdb840feb4,390325705,0,0x0,8
tick,0x7ffdb840feb4,390341160,0,0x0,8
tick,0x7ffdb840feb4,390356623,0,0x0,8
tick,0x7ffdb840feb4,390372180,0,0x0,8
tick,0x7ffdb840feb4,390387557,0,0x0,8
tick,0x7ffdb840feb4,390402680,0,0x0,8
tick,0x7ffdb840feb4,390418222,0,0x0,8
tick,0x7ffdb840feb4,390433771,0,0x0,8
tick,0x7ffdb840feb4,390448781,0,0x0,8
tick,0x7ffdb840feb4,390464777,0,0x0,8
tick,0x7ffdb840feb4,390480783,0,0x0,8
tick,0x7ffdb840feb4,390496409,0,0x0,8
tick,0x7ffdb840feb4,390512181,0,0x0,8
tick,0x7ffdb840feb4,390527602,0,0x0,8
tick,0x7ffdb840feb4,390543656,0,0x0,8
tick,0x7ffdb840feb4,390559016,0,0x0,8
tick,0x7ffdb840feb4,390574500,0,0x0,8
tick,0x7ffdb840feb4,390590011,0,0x0,8
tick,0x7ffdb840feb4,390605767,0,0x0,8
tick,0x7ffdb840feb4,390621020,0,0x0,8
tick,0x7ffdb840feb4,390635939,0,0x0,8
tick,0x7ffdb840feb4,390651202,0,0x0,8
tick,0x7ffdb840feb4,390666833,0,0x0,8
tick,0x7ffdb840feb4,390682200,0,0x0,8
tick,0x7ffdb840feb4,390698005,0,0x0,8
tick,0x7ffdb840feb4,390713211,0,0x0,8
tick,0x7ffdb840feb4,390728214,0,0x0,8
tick,0x7ffdb840feb4,390743667,0,0x0,8
tick,0x7ffdb840feb4,390759011,0,0x0,8
tick,0x7ffdb840feb4,390774369,0,0x0,8
tick,0x7ffdb840feb4,390790031,0,0x0,8
tick,0x7ffdb840feb4,390806037,0,0x0,8
tick,0x7ffdb840feb4,390822042,0,0x0,8
tick,0x7ffdb840feb4,390838001,0,0x0,8
tick,0x7ffdb840feb4,390852385,0,0x0,8
tick,0x7ffdb840feb4,390867835,0,0x0,8
tick,0x7ffdb840feb4,390883845,0,0x0,8
tick,0x7ffdb840feb4,390899863,0,0x0,8
tick,0x7ffdb840feb4,390915863,0,0x0,8
tick,0x7ffdb840feb4,390931228,0,0x0,8
tick,0x7ffdb840feb4,390946762,0,0x0,8
tick,0x7ffdb840feb4,390962240,0,0x0,8
tick,0x7ffdb840feb4,390978063,0,0x0,8
tick,0x7ffdb840feb4,390993241,0,0x0,8
tick,0x7ffdb840feb4,391009042,0,0x0,8
tick,0x7ffdb840feb4,391025078,0,0x0,8
tick,0x7ffdb840feb4,391040448,0,0x0,8
tick,0x7ffdb840feb4,391056381,0,0x0,8
tick,0x7ffdb840feb4,391072256,0,0x0,8
tick,0x7ffdb840feb4,391087459,0,0x0,8
tick,0x7ffdb840feb4,391103465,0,0x0,8
tick,0x7ffdb840feb4,391118600,0,0x0,8
tick,0x7ffdb840feb4,391133814,0,0x0,8
tick,0x7ffdb840feb4,391149079,0,0x0,8
tick,0x7ffdb840feb4,391164264,0,0x0,8
tick,0x7ffdb840feb4,391180092,0,0x0,8
tick,0x7ffdb840feb4,391195496,0,0x0,8
tick,0x7ffdb840feb4,391210502,0,0x0,8
tick,0x7ffdb840feb4,391225844,0,0x0,8
tick,0x7ffdb840feb4,391241100,0,0x0,8
tick,0x7ffdb840feb4,391256390,0,0x0,8
tick,0x7ffdb840feb4,391272267,0,0x0,8
tick,0x7ffdb840feb4,391287510,0,0x0,8
tick,0x7ffdb840feb4,391302276,0,0x0,8
tick,0x7ffdb840feb4,391317721,0,0x0,8
tick,0x7ffdb840feb4,391333428,0,0x0,8
tick,0x7ffdb840feb4,391348741,0,0x0,8
tick,0x7ffdb840feb4,391363495,0,0x0,8
tick,0x7ffdb840feb4,391378404,0,0x0,8
tick,0x7ffdb840feb4,391393789,0,0x0,8
tick,0x7ffdb840feb4,391409064,0,0x0,8
tick,0x7ffdb840feb4,391424559,0,0x0,8
tick,0x7ffdb840feb4,391440128,0,0x0,8
tick,0x7ffdb840feb4,391456136,0,0x0,8
tick,0x7ffdb840feb4,391472131,0,0x0,8
tick,0x7ffdb840feb4,391488140,0,0x0,8
tick,0x7ffdb840feb4,391504148,0,0x0,8
tick,0x7ffdb840feb4,391519123,0,0x0,8
tick,0x7ffdb840feb4,391534407,0,0x0,8
tick,0x7ffdb840feb4,391550127,0,0x0,8
tick,0x7ffdb840feb4,391565311,0,0x0,8
tick,0x7ffdb840feb4,391580645,0,0x0,8
tick,0x7ffdb840feb4,391596658,0,0x0,8
tick,0x7ffdb840feb4,391612677,0,0x0,8
tick,0x7ffdb840feb4,391627667,0,0x0,8
tick,0x7ffdb840feb4,391642661,0,0x0,8
tick,0x7ffdb840feb4,391658653,0,0x0,8
tick,0x7ffdb840feb4,391674336,0,0x0,8
tick,0x7ffdb840feb4,391690337,0,0x0,8
tick,0x7ffdb840feb4,391706335,0,0x0,8
tick,0x7ffdb840feb4,391722330,0,0x0,8
tick,0x7ffdb840feb4,391737462,0,0x0,8
tick,0x7ffdb840feb4,391752328,0,0x0,8
tick,0x7ffdb840feb4,391767845,0,0x0,8
tick,0x7ffdb840feb4,391783850,0,0x0,8
tick,0x7ffdb840feb4,391799332,0,0x0,8
tick,0x7ffdb840feb4,391814411,0,0x0,8
tick,0x7ffdb840feb4,391830188,0,0x0,8
tick,0x7ffdb840feb4,391845368,0,0x0,8
tick,0x7ffdb840feb4,391861177,0,0x0,8
tick,0x7ffdb840feb4,391876177,0,0x0,8
tick,0x7ffdb840feb4,391891308,0,0x0,8
tick,0x7ffdb840feb4,391907226,0,0x0,8
tick,0x7ffdb840feb4,391922183,0,0x0,8
tick,0x7ffdb840feb4,391937153,0,0x0,8
tick,0x7ffdb840feb4,391952173,0,0x0,8
tick,0x7ffdb840feb4,391967839,0,0x0,8
tick,0x7ffdb840feb4,391983464,0,0x0,8
tick,0x7ffdb840feb4,391999338,0,0x0,8
tick,0x7ffdb840feb4,392014491,0,0x0,8
tick,0x7ffdb840feb4,392030384,0,0x0,8
tick,0x7ffdb840feb4,392045390,0,0x0,8
tick,0x7ffdb840feb4,392061190,0,0x0,8
tick,0x7ffdb840feb4,392076848,0,0x0,8
tick,0x7ffdb840feb4,392092369,0,0x0,8
tick,0x7ffdb840feb4,392107653,0,0x0,8
tick,0x7ffdb840feb4,392123376,0,0x0,8
tick,0x7ffdb840feb4,392139200,0,0x0,8
tick,0x7ffdb840feb4,392154391,0,0x0,8
tick,0x7ffdb840feb4,392170222,0,0x0,8
tick,0x7ffdb840feb4,392185426,0,0x0,8
tick,0x7ffdb840feb4,392201361,0,0x0,8
tick,0x7ffdb840feb4,392216776,0,0x0,8
tick,0x7ffdb840feb4,392231929,0,0x0,8
tick,0x7ffdb840feb4,392247839,0,0x0,8
tick,0x7ffdb840feb4,392263572,0,0x0,8
tick,0x7ffdb840feb4,392279237,0,0x0,8
tick,0x7ffdb840feb4,392294272,0,0x0,8
tick,0x7ffdb840feb4,392309671,0,0x0,8
tick,0x7ffdb840feb4,392325477,0,0x0,8
tick,0x7ffdb840feb4,392341238,0,0x0,8
tick,0x7ffdb840feb4,392356931,0,0x0,8
tick,0x7ffdb840feb4,392372402,0,0x0,8
tick,0x7ffdb840feb4,392387153,0,0x0,8
tick,0x7ffdb840feb4,392402405,0,0x0,8
tick,0x7ffdb840feb4,392417842,0,0x0,8
tick,0x7ffdb840feb4,392433216,0,0x0,8
tick,0x7ffdb840feb4,392449176,0,0x0,8
tick,0x7ffdb840feb4,392465173,0,0x0,8
tick,0x7ffdb840feb4,392481189,0,0x0,8
tick,0x7ffdb840feb4,392497179,0,0x0,8
tick,0x7ffdb840feb4,392512423,0,0x0,8
tick,0x7ffdb840feb4,392528184,0,0x0,8
tick,0x7ffdb840feb4,392543187,0,0x0,8
tick,0x7ffdb840feb4,392558675,0,0x0,8
tick,0x7ffdb840feb4,392574434,0,0x0,8
tick,0x7ffdb840feb4,392589357,0,0x0,8
tick,0x7ffdb840feb4,392604497,0,0x0,8
tick,0x7ffdb840feb4,392619656,0,0x0,8
tick,0x7ffdb840feb4,392634829,0,0x0,8
tick,0x7ffdb840feb4,392650675,0,0x0,8
tick,0x7ffdb840feb4,392665843,0,0x0,8
tick,0x7ffdb840feb4,392681440,0,0x0,8
tick,0x7ffdb840feb4,392696933,0,0x0,8
tick,0x7ffdb840feb4,392712738,0,0x0,8
tick,0x7ffdb840feb4,392728277,0,0x0,8
tick,0x7ffdb840feb4,392743752,0,0x0,8
tick,0x7ffdb840feb4,392758765,0,0x0,8
tick,0x7ffdb840feb4,392774749,0,0x0,8
tick,0x7ffdb840feb4,392790275,0,0x0,8
tick,0x7ffdb840feb4,392805480,0,0x0,8
tick,0x7ffdb840feb4,392821278,0,0x0,8
tick,0x7ffdb840feb4,392836287,0,0x0,8
tick,0x7ffdb840feb4,392852290,0,0x0,8
tick,0x7ffdb840feb4,392868286,0,0x0,8
tick,0x7ffdb840feb4,392884296,0,0x0,8
tick,0x7ffdb840feb4,392900300,0,0x0,8
tick,0x7ffdb840feb4,392915840,0,0x0,8
tick,0x7ffdb840feb4,392931871,0,0x0,8
tick,0x7ffdb840feb4,392947425,0,0x0,8
tick,0x7ffdb840feb4,392963490,0,0x0,8
tick,0x7ffdb840feb4,392979482,0,0x0,8
tick,0x7ffdb840feb4,392994747,0,0x0,8
tick,0x7ffdb840feb4,393010761,0,0x0,8
tick,0x7ffdb840feb4,393026317,0,0x0,8
tick,0x7ffdb840feb4,393041503,0,0x0,8
tick,0x7ffdb840feb4,393056341,0,0x0,8
tick,0x7ffdb840feb4,393071487,0,0x0,8
tick,0x7ffdb840feb4,393086901,0,0x0,8
tick,0x7ffdb840feb4,393101497,0,0x0,8
tick,0x7ffdb840feb4,393117493,0,0x0,8
tick,0x7ffdb840feb4,393133509,0,0x0,8
tick,0x7ffdb840feb4,393149510,0,0x0,8
tick,0x7ffdb840feb4,393164929,0,0x0,8
tick,0x7ffdb840feb4,393180325,0,0x0,8
tick,0x7ffdb840feb4,393195522,0,0x0,8
tick,0x7ffdb840feb4,393210327,0,0x0,8
tick,0x7ffdb840feb4,393226082,0,0x0,8
tick,0x7ffdb840feb4,393241356,0,0x0,8
tick,0x7ffdb840feb4,393257172,0,0x0,8
tick,0x7ffdb840feb4,393272518,0,0x0,8
tick,0x7ffdb840feb4,393287525,0,0x0,8
tick,0x7ffdb840feb4,393302950,0,0x0,8
tick,0x7ffdb840feb4,393318456,0,0x0,8
tick,0x7ffdb840feb4,393334116,0,0x0,8
tick,0x7ffdb840feb4,393349146,0,0x0,8
tick,0x7ffdb840feb4,393364002,0,0x0,8
tick,0x7ffdb840feb4,393379355,0,0x0,8
tick,0x7ffdb840feb4,393394528,0,0x0,8
tick,0x7ffdb840feb4,393410265,0,0x0,8
tick,0x7ffdb840feb4,393426182,0,0x0,8
tick,0x7ffdb840feb4,393441361,0,0x0,8
tick,0x7ffdb840feb4,393457374,0,0x0,8
tick,0x7ffdb840feb4,393472375,0,0x0,8
tick,0x7ffdb840feb4,393488378,0,0x0,8
tick,0x7ffdb840feb4,393504384,0,0x0,8
tick,0x7ffdb840feb4,393519374,0,0x0,8
tick,0x7ffdb840feb4,393534734,0,0x0,8
tick,0x7ffdb840feb4,393550747,0,0x0,8
tick,0x7ffdb840feb4,393566856,0,0x0,8
tick,0x7ffdb840feb4,393582525,0,0x0,8
tick,0x7ffdb840feb4,393597372,0,0x0,8
tick,0x7ffdb840feb4,393612559,0,0x0,8
tick,0x7ffdb840feb4,393627493,0,0x0,8
tick,0x7ffdb840feb4,393643064,0,0x0,8
tick,0x7ffdb840feb4,393658899,0,0x0,8
tick,0x7ffdb840feb4,393674086,0,0x0,8
tick,0x7ffdb840feb4,393689394,0,0x0,8
tick,0x7ffdb840feb4,393704922,0,0x0,8
tick,0x7ffdb840feb4,393720392,0,0x0,8
tick,0x7ffdb840feb4,393735907,0,0x0,8
tick,0x7ffdb840feb4,393751399,0,0x0,8
tick,0x7ffdb840feb4,393766849,0,0x0,8
tick,0x7ffdb840feb4,393782505,0,0x0,8
tick,0x7ffdb840feb4,393797491,0,0x0,8
tick,0x7ffdb840feb4,393812817,0,0x0,8
tick,0x7ffdb840feb4,393828289,0,0x0,8
tick,0x7ffdb840feb4,393843592,0,0x0,8
tick,0x7ffdb840feb4,393858819,0,0x0,8
tick,0x7ffdb840feb4,393874227,0,0x0,8
tick,0x7ffdb840feb4,393889347,0,0x0,8
tick,0x7ffdb840feb4,393905170,0,0x0,8
tick,0x7ffdb840feb4,393920414,0,0x0,8
tick,0x7ffdb840feb4,393935521,0,0x0,8
tick,0x7ffdb840feb4,393951422,0,0x0,8
tick,0x7ffdb840feb4,393966859,0,0x0,8
tick,0x7ffdb840feb4,393982151,0,0x0,8
tick,0x7ffdb840feb4,393997540,0,0x0,8
tick,0x7ffdb840feb4,394013610,0,0x0,8
tick,0x7ffdb840feb4,394029351,0,0x0,8
tick,0x7ffdb840feb4,394044538,0,0x0,8
tick,0x7ffdb840feb4,394060441,0,0x0,8
tick,0x7ffdb840feb4,394075584,0,0x0,8
tick,0x7ffdb840feb4,394091449,0,0x0,8
tick,0x7ffdb840feb4,394106499,0,0x0,8
tick,0x7ffdb840feb4,394121612,0,0x0,8
tick,0x7ffdb840feb4,394137285,0,0x0,8
tick,0x7ffdb840feb4,394152626,0,0x0,8
tick,0x7ffdb840feb4,394168232,0,0x0,8
tick,0x7ffdb840feb4,394184279,0,0x0,8
tick,0x7ffdb840feb4,394199451,0,0x0,8
tick,0x7ffdb840feb4,394214615,0,0x0,8
tick,0x7ffdb840feb4,394230450,0,0x0,8
tick,0x7ffdb840feb4,394245371,0,0x0,8
tick,0x7ffdb840feb4,394261458,0,0x0,8
tick,0x7ffdb840feb4,394277216,0,0x0,8
tick,0x7ffdb840feb4,394292633,0,0x0,8
tick,0x7ffdb840feb4,394308156,0,0x0,8
tick,0x7ffdb840feb4,394323517,0,0x0,8
tick,0x7ffdb840feb4,394338953,0,0x0,8
tick,0x7ffdb840feb4,394354444,0,0x0,8
tick,0x7ffdb840feb4,394369681,0,0x0,8
tick,0x7ffdb840feb4,394384931,0,0x0,8
tick,0x7ffdb840feb4,394400542,0,0x0,8
tick,0x7ffdb840feb4,394416546,0,0x0,8
tick,0x7ffdb840feb4,394432665,0,0x0,8
tick,0x7ffdb840feb4,394448186,0,0x0,8
tick,0x7ffdb840feb4,394463390,0,0x0,8
tick,0x7ffdb840feb4,394479395,0,0x0,8
tick,0x7ffdb840feb4,394494400,0,0x0,8
tick,0x7ffdb840feb4,394510398,0,0x0,8
tick,0x7ffdb840feb4,394525676,0,0x0,8
tick,0x7ffdb840feb4,394541506,0,0x0,8
tick,0x7ffdb840feb4,394556756,0,0x0,8
tick,0x7ffdb840feb4,394572509,0,0x0,8
tick,0x7ffdb840feb4,394588132,0,0x0,8
tick,0x7ffdb840feb4,394603396,0,0x0,8
tick,0x7ffdb840feb4,394618429,0,0x0,8
tick,0x7ffdb840feb4,394634265,0,0x0,8
tick,0x7ffdb840feb4,394649515,0,0x0,8
tick,0x7ffdb840feb4,394664457,0,0x0,8
tick,0x7ffdb840feb4,394680508,0,0x0,8
tick,0x7ffdb840feb4,394696053,0,0x0,8
tick,0x7ffdb840feb4,394711511,0,0x0,8
tick,0x7ffdb840feb4,394727112,0,0x0,8
tick,0x7ffdb840feb4,394742515,0,0x0,8
tick,0x7ffdb840feb4,394757838,0,0x0,8
tick,0x7ffdb840feb4,394772698,0,0x0,8
tick,0x7ffdb840feb4,394788464,0,0x0,8
tick,0x7ffdb840feb4,394803976,0,0x0,8
tick,0x7ffdb840feb4,394819408,0,0x0,8
tick,0x7ffdb840feb4,394834674,0,0x0,8
tick,0x7ffdb840feb4,394850543,0,0x0,8
tick,0x7ffdb840feb4,394865867,0,0x0,8
tick,0x7ffdb840feb4,394880833,0,0x0,8
tick,0x7ffdb840feb4,394896065,0,0x0,8
tick,0x7ffdb840feb4,394911544,0,0x0,8
tick,0x7ffdb840feb4,394927218,0,0x0,8
tick,0x7ffdb840feb4,394942709,0,0x0,8
tick,0x7ffdb840feb4,394958268,0,0x0,8
tick,0x7ffdb840feb4,394972729,0,0x0,8
tick,0x7ffdb840feb4,394987926,0,0x0,8
tick,0x7ffdb840feb4,395003424,0,0x0,8
tick,0x7ffdb840feb4,395018630,0,0x0,8
tick,0x7ffdb840feb4,395034126,0,0x0,8
tick,0x7ffdb840feb4,395049278,0,0x0,8
tick,0x7ffdb840feb4,395064603,0,0x0,8
tick,0x7ffdb840feb4,395080573,0,0x0,8
tick,0x7ffdb840feb4,395095449,0,0x0,8
tick,0x7ffdb840feb4,395110555,0,0x0,8
tick,0x7ffdb840feb4,395126587,0,0x0,8
tick,0x7ffdb840feb4,395141733,0,0x0,8
tick,0x7ffdb840feb4,395156929,0,0x0,8
tick,0x7ffdb840feb4,395172586,0,0x0,8
tick,0x7ffdb840feb4,395188677,0,0x0,8
tick,0x7ffdb840feb4,395204320,0,0x0,8
tick,0x7ffdb840feb4,395219962,0,0x0,8
tick,0x7ffdb840feb4,395235503,0,0x0,8
tick,0x7ffdb840feb4,395251578,0,0x0,8
tick,0x7ffdb840feb4,395266854,0,0x0,8
tick,0x7ffdb840feb4,395282515,0,0x0,8
tick,0x7ffdb840feb4,395297774,0,0x0,8
tick,0x7ffdb840feb4,395313182,0,0x0,8
tick,0x7ffdb840feb4,395329049,0,0x0,8
tick,0x7ffdb840feb4,395344370,0,0x0,8
tick,0x7ffdb840feb4,395359587,0,0x0,8
tick,0x7ffdb840feb4,395374764,0,0x0,8
tick,0x7ffdb840feb4,395390589,0,0x0,8
tick,0x7ffdb840feb4,395406446,0,0x0,8
tick,0x7ffdb840feb4,395421602,0,0x0,8
tick,0x7ffdb840feb4,395437607,0,0x0,8
tick,0x7ffdb840feb4,395452771,0,0x0,8
tick,0x7ffdb840feb4,395468622,0,0x0,8
tick,0x7ffdb840feb4,395484623,0,0x0,8
tick,0x7ffdb840feb4,395500622,0,0x0,8
tick,0x7ffdb840feb4,395516637,0,0x0,8
tick,0x7ffdb840feb4,395532751,0,0x0,8
tick,0x7ffdb840feb4,395548798,0,0x0,8
tick,0x7ffdb840feb4,395563954,0,0x0,8
tick,0x7ffdb840feb4,395579156,0,0x0,8
tick,0x7ffdb840feb4,395594263,0,0x0,8
tick,0x7ffdb840feb4,395609496,0,0x0,8
tick,0x7ffdb840feb4,395624622,0,0x0,8
tick,0x7ffdb840feb4,395640732,0,0x0,8
tick,0x7ffdb840feb4,395656629,0,0x0,8
tick,0x7ffdb840feb4,395671625,0,0x0,8
tick,0x7ffdb840feb4,395687529,0,0x0,8
tick,0x7ffdb840feb4,395703639,0,0x0,8
tick,0x7ffdb840feb4,395719636,0,0x0,8
tick,0x7ffdb840feb4,395735377,0,0x0,8
tick,0x7ffdb840feb4,395750635,0,0x0,8
tick,0x7ffdb840feb4,395765805,0,0x0,8
tick,0x7ffdb840feb4,395781634,0,0x0,8
tick,0x7ffdb840feb4,395796877,0,0x0,8
tick,0x7ffdb840feb4,395812671,0,0x0,8
tick,0x7ffdb840feb4,395828068,0,0x0,8
tick,0x7ffdb840feb4,395842821,0,0x0,8
tick,0x7ffdb840feb4,395857824,0,0x0,8
tick,0x7ffdb840feb4,395872829,0,0x0,8
tick,0x7ffdb840feb4,395888653,0,0x0,8
tick,0x7ffdb840feb4,395904641,0,0x0,8
tick,0x7ffdb840feb4,395919889,0,0x0,8
tick,0x7ffdb840feb4,395935832,0,0x0,8
tick,0x7ffdb840feb4,395950666,0,0x0,8
tick,0x7ffdb840feb4,395965864,0,0x0,8
tick,0x7ffdb840feb4,395981661,0,0x0,8
tick,0x7ffdb840feb4,395996670,0,0x0,8
tick,0x7ffdb840feb4,396011835,0,0x0,8
tick,0x7ffdb840feb4,396027638,0,0x0,8
tick,0x7ffdb840feb4,396042842,0,0x0,8
tick,0x7ffdb840feb4,396058702,0,0x0,8
tick,0x7ffdb840feb4,396074704,0,0x0,8
tick,0x7ffdb840feb4,396090698,0,0x0,8
tick,0x7ffdb840feb4,396106702,0,0x0,8
tick,0x7ffdb840feb4,396121853,0,0x0,8
tick,0x7ffdb840feb4,396137448,0,0x0,8
tick,0x7ffdb840feb4,396152864,0,0x0,8
tick,0x7ffdb840feb4,396167867,0,0x0,8
tick,0x7ffdb840feb4,396183714,0,0x0,8
tick,0x7ffdb840feb4,396199190,0,0x0,8
tick,0x7ffdb840feb4,396214869,0,0x0,8
tick,0x7ffdb840feb4,396230690,0,0x0,8
tick,0x7ffdb840feb4,396246701,0,0x0,8
tick,0x7ffdb840feb4,396261696,0,0x0,8
tick,0x7ffdb840feb4,396276696,0,0x0,8
tick,0x7ffdb840feb4,396291873,0,0x0,8
tick,0x7ffdb840feb4,396307152,0,0x0,8
tick,0x7ffdb840feb4,396323002,0,0x0,8
tick,0x7ffdb840feb4,396339063,0,0x0,8
tick,0x7ffdb840feb4,396354882,0,0x0,8
tick,0x7ffdb840feb4,396370089,0,0x0,8
tick,0x7ffdb840feb4,396385768,0,0x0,8
tick,0x7ffdb840feb4,396400713,0,0x0,8
tick,0x7ffdb840feb4,396415859,0,0x0,8
tick,0x7ffdb840feb4,396431724,0,0x0,8
tick,0x7ffdb840feb4,396446732,0,0x0,8
tick,0x7ffdb840feb4,396461893,0,0x0,8
tick,0x7ffdb840feb4,396477724,0,0x0,8
tick,0x7ffdb840feb4,396492726,0,0x0,8
tick,0x7ffdb840feb4,396508734,0,0x0,8
tick,0x7ffdb840feb4,396524731,0,0x0,8
tick,0x7ffdb840feb4,396540734,0,0x0,8
tick,0x7ffdb840feb4,396555911,0,0x0,8
tick,0x7ffdb840feb4,396570749,0,0x0,8
tick,0x7ffdb840feb4,396586749,0,0x0,8
tick,0x7ffdb840feb4,396601915,0,0x0,8
tick,0x7ffdb840feb4,396616871,0,0x0,8
tick,0x7ffdb840feb4,396632875,0,0x0,8
tick,0x7ffdb840feb4,396648750,0,0x0,8
tick,0x7ffdb840feb4,396663370,0,0x0,8
tick,0x7ffdb840feb4,396678763,0,0x0,8
tick,0x7ffdb840feb4,396693924,0,0x0,8
tick,0x7ffdb840feb4,396709663,0,0x0,8
tick,0x7ffdb840feb4,396725079,0,0x0,8
tick,0x7ffdb840feb4,396740757,0,0x0,8
tick,0x7ffdb840feb4,396755936,0,0x0,8
tick,0x7ffdb840feb4,396771755,0,0x0,8
tick,0x7ffdb840feb4,396786642,0,0x0,8
tick,0x7ffdb840feb4,396801778,0,0x0,8
tick,0x7ffdb840feb4,396817866,0,0x0,8
tick,0x7ffdb840feb4,396832938,0,0x0,8
tick,0x7ffdb840feb4,396848771,0,0x0,8
tick,0x7ffdb840feb4,396863312,0,0x0,8
tick,0x7ffdb840feb4,396879287,0,0x0,8
tick,0x7ffdb840feb4,396894947,0,0x0,8
tick,0x7ffdb840feb4,396910775,0,0x0,8
tick,0x7ffdb840feb4,396925953,0,0x0,8
tick,0x7ffdb840feb4,396941783,0,0x0,8
tick,0x7ffdb840feb4,396956956,0,0x0,8
tick,0x7ffdb840feb4,396972956,0,0x0,8
tick,0x7ffdb840feb4,396988977,0,0x0,8
tick,0x7ffdb840feb4,397004947,0,0x0,8
tick,0x7ffdb840feb4,397020742,0,0x0,8
tick,0x7ffdb840feb4,397036537,0,0x0,8
tick,0x7ffdb840feb4,397051792,0,0x0,8
tick,0x7ffdb840feb4,397066866,0,0x0,8
tick,0x7ffdb840feb4,397081963,0,0x0,8
tick,0x7ffdb840feb4,397097798,0,0x0,8
tick,0x7ffdb840feb4,397112995,0,0x0,8
tick,0x7ffdb840feb4,397128446,0,0x0,8
tick,0x7ffdb840feb4,397143972,0,0x0,8
tick,0x7ffdb840feb4,397159388,0,0x0,8
tick,0x7ffdb840feb4,397174992,0,0x0,8
tick,0x7ffdb840feb4,397190806,0,0x0,8
tick,0x7ffdb840feb4,397205950,0,0x0,8
tick,0x7ffdb840feb4,397221749,0,0x0,8
tick,0x7ffdb840feb4,397236769,0,0x0,8
tick,0x7ffdb840feb4,397251971,0,0x0,8
tick,0x7ffdb840feb4,397267864,0,0x0,8
tick,0x7ffdb840feb4,397283528,0,0x0,8
tick,0x7ffdb840feb4,397298197,0,0x0,8
tick,0x7ffdb840feb4,397313467,0,0x0,8
tick,0x7ffdb840feb4,397328751,0,0x0,8
tick,0x7ffdb840feb4,397344000,0,0x0,8
tick,0x7ffdb840feb4,397359465,0,0x0,8
tick,0x7ffdb840feb4,397374847,0,0x0,8
tick,0x7ffdb840feb4,397390831,0,0x0,8
tick,0x7ffdb840feb4,397405964,0,0x0,8
tick,0x7ffdb840feb4,397420753,0,0x0,8
tick,0x7ffdb840feb4,397436397,0,0x0,8
tick,0x7ffdb840feb4,397451842,0,0x0,8
tick,0x7ffdb840feb4,397466877,0,0x0,8
tick,0x7ffdb840feb4,397482022,0,0x0,8
tick,0x7ffdb840feb4,397498033,0,0x0,8
tick,0x7ffdb840feb4,397513023,0,0x0,8
tick,0x7ffdb840feb4,397529030,0,0x0,8
tick,0x7ffdb840feb4,397545052,0,0x0,8
tick,0x7ffdb840feb4,397560867,0,0x0,8
tick,0x7ffdb840feb4,397576038,0,0x0,8
tick,0x7ffdb840feb4,397591857,0,0x0,8
tick,0x7ffdb840feb4,397607045,0,0x0,8
tick,0x7ffdb840feb4,397623024,0,0x0,8
tick,0x7ffdb840feb4,397638033,0,0x0,8
tick,0x7ffdb840feb4,397653346,0,0x0,8
tick,0x7ffdb840feb4,397668713,0,0x0,8
tick,0x7ffdb840feb4,397684542,0,0x0,8
tick,0x7ffdb840feb4,397699873,0,0x0,8
tick,0x7ffdb840feb4,397715048,0,0x0,8
tick,0x7ffdb840feb4,397730875,0,0x0,8
tick,0x7ffdb840feb4,397746299,0,0x0,8
tick,0x7ffdb840feb4,397761877,0,0x0,8
tick,0x7ffdb840feb4,397776884,0,0x0,8
tick,0x7ffdb840feb4,397792056,0,0x0,8
tick,0x7ffdb840feb4,397808045,0,0x0,8
tick,0x7ffdb840feb4,397823062,0,0x0,8
tick,0x7ffdb840feb4,397839063,0,0x0,8
tick,0x7ffdb840feb4,397854900,0,0x0,8
tick,0x7ffdb840feb4,397870894,0,0x0,8
tick,0x7ffdb840feb4,397886898,0,0x0,8
tick,0x7ffdb840feb4,397901900,0,0x0,8
tick,0x7ffdb840feb4,397917086,0,0x0,8
tick,0x7ffdb840feb4,397932348,0,0x0,8
tick,0x7ffdb840feb4,397947679,0,0x0,8
tick,0x7ffdb840feb4,397963076,0,0x0,8
tick,0x7ffdb840feb4,397979092,0,0x0,8
tick,0x7ffdb840feb4,397995115,0,0x0,8
tick,0x7ffdb840feb4,398010927,0,0x0,8
tick,0x7ffdb840feb4,398026085,0,0x0,8
tick,0x7ffdb840feb4,398042091,0,0x0,8
tick,0x7ffdb840feb4,398057100,0,0x0,8
tick,0x7ffdb840feb4,398073090,0,0x0,8
tick,0x7ffdb840feb4,398089097,0,0x0,8
tick,0x7ffdb840feb4,398105102,0,0x0,8
tick,0x7ffdb840feb4,398120925,0,0x0,8
tick,0x7ffdb840feb4,398136102,0,0x0,8
tick,0x7ffdb840feb4,398151926,0,0x0,8
tick,0x7ffdb840feb4,398166877,0,0x0,8
tick,0x7ffdb840feb4,398182103,0,0x0,8
tick,0x7ffdb840feb4,398197775,0,0x0,8
tick,0x7ffdb840feb4,398213445,0,0x0,8
tick,0x7ffdb840feb4,398228730,0,0x0,8
tick,0x7ffdb840feb4,398244120,0,0x0,8
tick,0x7ffdb840feb4,398260116,0,0x0,8
tick,0x7ffdb840feb4,398276121,0,0x0,8
tick,0x7ffdb840feb4,398292131,0,0x0,8
tick,0x7ffdb840feb4,398308118,0,0x0,8
tick,0x7ffdb840feb4,398323885,0,0x0,8
tick,0x7ffdb840feb4,398339505,0,0x0,8
tick,0x7ffdb840feb4,398355135,0,0x0,8
tick,0x7ffdb840feb4,398370502,0,0x0,8
tick,0x7ffdb840feb4,398385634,0,0x0,8
tick,0x7ffdb840feb4,398400956,0,0x0,8
tick,0x7ffdb840feb4,398416981,0,0x0,8
tick,0x7ffdb840feb4,398432147,0,0x0,8
tick,0x7ffdb840feb4,398448148,0,0x0,8
tick,0x7ffdb840feb4,398463159,0,0x0,8
tick,0x7ffdb840feb4,398479215,0,0x0,8
tick,0x7ffdb840feb4,398494552,0,0x0,8
tick,0x7ffdb840feb4,398510565,0,0x0,8
tick,0x7ffdb840feb4,398526556,0,0x0,8
tick,0x7ffdb840feb4,398542563,0,0x0,8
tick,0x7ffdb840feb4,398558568,0,0x0,8
tick,0x7ffdb840feb4,398573979,0,0x0,8
tick,0x7ffdb840feb4,398589151,0,0x0,8
tick,0x7ffdb840feb4,398604552,0,0x0,8
tick,0x7ffdb840feb4,398620170,0,0x0,8
tick,0x7ffdb840feb4,398635363,0,0x0,8
tick,0x7ffdb840feb4,398650986,0,0x0,8
tick,0x7ffdb840feb4,398666823,0,0x0,8
tick,0x7ffdb840feb4,398681950,0,0x0,8
tick,0x7ffdb840feb4,398696955,0,0x0,8
tick,0x7ffdb840feb4,398712170,0,0x0,8
tick,0x7ffdb840feb4,398727965,0,0x0,8
tick,0x7ffdb840feb4,398743173,0,0x0,8
tick,0x7ffdb840feb4,398759178,0,0x0,8
tick,0x7ffdb840feb4,398774973,0,0x0,8
tick,0x7ffdb840feb4,398790997,0,0x0,8
tick,0x7ffdb840feb4,398806566,0,0x0,8
tick,0x7ffdb840feb4,398822008,0,0x0,8
tick,0x7ffdb840feb4,398837364,0,0x0,8
tick,0x7ffdb840feb4,398853351,0,0x0,8
tick,0x7ffdb840feb4,398869193,0,0x0,8
tick,0x7ffdb840feb4,398884552,0,0x0,8
tick,0x7ffdb840feb4,398900198,0,0x0,8
tick,0x7ffdb840feb4,398916284,0,0x0,8
tick,0x7ffdb840feb4,398931714,0,0x0,8
tick,0x7ffdb840feb4,398947276,0,0x0,8
tick,0x7ffdb840feb4,398963193,0,0x0,8
tick,0x7ffdb840feb4,398978787,0,0x0,8
tick,0x7ffdb840feb4,398994203,0,0x0,8
tick,0x7ffdb840feb4,399009092,0,0x0,8
tick,0x7ffdb840feb4,399025101,0,0x0,8
tick,0x7ffdb840feb4,399041030,0,0x0,8
tick,0x7ffdb840feb4,399056330,0,0x0,8
tick,0x7ffdb840feb4,399072036,0,0x0,8
tick,0x7ffdb840feb4,399087213,0,0x0,8
tick,0x7ffdb840feb4,399102446,0,0x0,8
tick,0x7ffdb840feb4,399118112,0,0x0,8
tick,0x7ffdb840feb4,399134041,0,0x0,8
tick,0x7ffdb840feb4,399149211,0,0x0,8
tick,0x7ffdb840feb4,399164369,0,0x0,8
tick,0x7ffdb840feb4,399180053,0,0x0,8
tick,0x7ffdb840feb4,399195257,0,0x0,8
tick,0x7ffdb840feb4,399211058,0,0x0,8
tick,0x7ffdb840feb4,399226053,0,0x0,8
tick,0x7ffdb840feb4,399242054,0,0x0,8
tick,0x7ffdb840feb4,399258056,0,0x0,8
tick,0x7ffdb840feb4,399273232,0,0x0,8
tick,0x7ffdb840feb4,399288730,0,0x0,8
tick,0x7ffdb840feb4,399304591,0,0x0,8
tick,0x7ffdb840feb4,399320068,0,0x0,8
tick,0x7ffdb840feb4,399335593,0,0x0,8
tick,0x7ffdb840feb4,399351076,0,0x0,8
tick,0x7ffdb840feb4,399366596,0,0x0,8
tick,0x7ffdb840feb4,399382069,0,0x0,8
tick,0x7ffdb840feb4,399397075,0,0x0,8
tick,0x7ffdb840feb4,399413080,0,0x0,8
tick,0x7ffdb840feb4,399429073,0,0x0,8
tick,0x7ffdb840feb4,399444254,0,0x0,8
tick,0x7ffdb840feb4,399459910,0,0x0,8
tick,0x7ffdb840feb4,399475087,0,0x0,8
tick,0x7ffdb840feb4,399491088,0,0x0,8
tick,0x7ffdb840feb4,399506926,0,0x0,8
tick,0x7ffdb840feb4,399521924,0,0x0,8
tick,0x7ffdb840feb4,399537930,0,0x0,8
tick,0x7ffdb840feb4,399552943,0,0x0,8
tick,0x7ffdb840feb4,399568882,0,0x0,8
tick,0x7ffdb840feb4,399584297,0,0x0,8
tick,0x7ffdb840feb4,399600407,0,0x0,8
tick,0x7ffdb840feb4,399615343,0,0x0,8
tick,0x7ffdb840feb4,399631096,0,0x0,8
tick,0x7ffdb840feb4,399646288,0,0x0,8
tick,0x7ffdb840feb4,399662108,0,0x0,8
tick,0x7ffdb840feb4,399677282,0,0x0,8
tick,0x7ffdb840feb4,399693001,0,0x0,8
tick,0x7ffdb840feb4,399708291,0,0x0,8
tick,0x7ffdb840feb4,399723287,0,0x0,8
tick,0x7ffdb840feb4,399739296,0,0x0,8
tick,0x7ffdb840feb4,399755303,0,0x0,8
tick,0x7ffdb840feb4,399771117,0,0x0,8
tick,0x7ffdb840feb4,399786306,0,0x0,8
tick,0x7ffdb840feb4,399801302,0,0x0,8
tick,0x7ffdb840feb4,399817306,0,0x0,8
tick,0x7ffdb840feb4,399833327,0,0x0,8
tick,0x7ffdb840feb4,399848885,0,0x0,8
tick,0x7ffdb840feb4,399864310,0,0x0,8
tick,0x7ffdb840feb4,399879312,0,0x0,8
tick,0x7ffdb840feb4,399894497,0,0x0,8
tick,0x7ffdb840feb4,399909704,0,0x0,8
tick,0x7ffdb840feb4,399925313,0,0x0,8
tick,0x7ffdb840feb4,399941143,0,0x0,8
tick,0x7ffdb840feb4,399957143,0,0x0,8
tick,0x7ffdb840feb4,399972348,0,0x0,8
tick,0x7ffdb840feb4,399988363,0,0x0,8
tick,0x7ffdb840feb4,400003334,0,0x0,8
tick,0x7ffdb840feb4,400019344,0,0x0,8
tick,0x7ffdb840feb4,400034936,0,0x0,8
tick,0x7ffdb840feb4,400050164,0,0x0,8
tick,0x7ffdb840feb4,400066191,0,0x0,8
tick,0x7ffdb840feb4,400081182,0,0x0,8
tick,0x7ffdb840feb4,400096347,0,0x0,8
tick,0x7ffdb840feb4,400112341,0,0x0,8
tick,0x7ffdb840feb4,400127363,0,0x0,8
tick,0x7ffdb840feb4,400143328,0,0x0,8
tick,0x7ffdb840feb4,400159353,0,0x0,8
tick,0x7ffdb840feb4,400175186,0,0x0,8
tick,0x7ffdb840feb4,400191175,0,0x0,8
tick,0x7ffdb840feb4,400206170,0,0x0,8
tick,0x7ffdb840feb4,400221354,0,0x0,8
tick,0x7ffdb840feb4,400237356,0,0x0,8
tick,0x7ffdb840feb4,400253180,0,0x0,8
tick,0x7ffdb840feb4,400268870,0,0x0,8
tick,0x7ffdb840feb4,400284363,0,0x0,8
tick,0x7ffdb840feb4,400299601,0,0x0,8
tick,0x7ffdb840feb4,400315372,0,0x0,8
tick,0x7ffdb840feb4,400331183,0,0x0,8
tick,0x7ffdb840feb4,400346365,0,0x0,8
tick,0x7ffdb840feb4,400361377,0,0x0,8
tick,0x7ffdb840feb4,400376618,0,0x0,8
tick,0x7ffdb840feb4,400392189,0,0x0,8
tick,0x7ffdb840feb4,400408201,0,0x0,8
tick,0x7ffdb840feb4,400423379,0,0x0,8
tick,0x7ffdb840feb4,400439381,0,0x0,8
tick,0x7ffdb840feb4,400454393,0,0x0,8
tick,0x7ffdb840feb4,400469660,0,0x0,8
tick,0x7ffdb840feb4,400484885,0,0x0,8
tick,0x7ffdb840feb4,400500564,0,0x0,8
tick,0x7ffdb840feb4,400516424,0,0x0,8
tick,0x7ffdb840feb4,400532405,0,0x0,8
tick,0x7ffdb840feb4,400548396,0,0x0,8
tick,0x7ffdb840feb4,400564410,0,0x0,8
tick,0x7ffdb840feb4,400580222,0,0x0,8
tick,0x7ffdb840feb4,400595391,0,0x0,8
tick,0x7ffdb840feb4,400611225,0,0x0,8
tick,0x7ffdb840feb4,400627249,0,0x0,8
tick,0x7ffdb840feb4,400642409,0,0x0,8
tick,0x7ffdb840feb4,400657372,0,0x0,8
tick,0x7ffdb840feb4,400672418,0,0x0,8
tick,0x7ffdb840feb4,400687657,0,0x0,8
tick,0x7ffdb840feb4,400703409,0,0x0,8
tick,0x7ffdb840feb4,400719413,0,0x0,8
tick,0x7ffdb840feb4,400735237,0,0x0,8
tick,0x7ffdb840feb4,400751241,0,0x0,8
tick,0x7ffdb840feb4,400767250,0,0x0,8
tick,0x7ffdb840feb4,400782236,0,0x0,8
tick,0x7ffdb840feb4,400798254,0,0x0,8
tick,0x7ffdb840feb4,400813238,0,0x0,8
tick,0x7ffdb840feb4,400828434,0,0x0,8
tick,0x7ffdb840feb4,400844430,0,0x0,8
tick,0x7ffdb840feb4,400859443,0,0x0,8
tick,0x7ffdb840feb4,400874652,0,0x0,8
tick,0x7ffdb840feb4,400890255,0,0x0,8
tick,0x7ffdb840feb4,400905438,0,0x0,8
tick,0x7ffdb840feb4,400921459,0,0x0,8
tick,0x7ffdb840feb4,400936748,0,0x0,8
tick,0x7ffdb840feb4,400952273,0,0x0,8
tick,0x7ffdb840feb4,400967451,0,0x0,8
tick,0x7ffdb840feb4,400983448,0,0x0,8
tick,0x7ffdb840feb4,400999452,0,0x0,8
tick,0x7ffdb840feb4,401015288,0,0x0,8
tick,0x7ffdb840feb4,401030449,0,0x0,8
tick,0x7ffdb840feb4,401045599,0,0x0,8
tick,0x7ffdb840feb4,401061276,0,0x0,8
tick,0x7ffdb840feb4,401076450,0,0x0,8
tick,0x7ffdb840feb4,401092452,0,0x0,8
tick,0x7ffdb840feb4,401107459,0,0x0,8
tick,0x7ffdb840feb4,401123450,0,0x0,8
tick,0x7ffdb840feb4,401139059,0,0x0,8
tick,0x7ffdb840feb4,401154763,0,0x0,8
tick,0x7ffdb840feb4,401170483,0,0x0,8
tick,0x7ffdb840feb4,401186488,0,0x0,8
tick,0x7ffdb840feb4,401201499,0,0x0,8
tick,0x7ffdb840feb4,401216505,0,0x0,8
tick,0x7ffdb840feb4,401232500,0,0x0,8
tick,0x7ffdb840feb4,401248523,0,0x0,8
tick,0x7ffdb840feb4,401264502,0,0x0,8
tick,0x7ffdb840feb4,401280502,0,0x0,8
tick,0x7ffdb840feb4,401296257,0,0x0,8
tick,0x7ffdb840feb4,401311309,0,0x0,8
tick,0x7ffdb840feb4,401326882,0,0x0,8
tick,0x7ffdb840feb4,401342311,0,0x0,8
tick,0x7ffdb840feb4,401357925,0,0x0,8
tick,0x7ffdb840feb4,401373323,0,0x0,8
tick,0x7ffdb840feb4,401388330,0,0x0,8
tick,0x7ffdb840feb4,401403487,0,0x0,8
tick,0x7ffdb840feb4,401419513,0,0x0,8
tick,0x7ffdb840feb4,401435093,0,0x0,8
tick,0x7ffdb840feb4,401450329,0,0x0,8
tick,0x7ffdb840feb4,401466332,0,0x0,8
tick,0x7ffdb840feb4,401482073,0,0x0,8
tick,0x7ffdb840feb4,401497332,0,0x0,8
tick,0x7ffdb840feb4,401512327,0,0x0,8
tick,0x7ffdb840feb4,401527337,0,0x0,8
tick,0x7ffdb840feb4,401543353,0,0x0,8
tick,0x7ffdb840feb4,401558339,0,0x0,8
tick,0x7ffdb840feb4,401574362,0,0x0,8
tick,0x7ffdb840feb4,401590042,0,0x0,8
tick,0x7ffdb840feb4,401605524,0,0x0,8
tick,0x7ffdb840feb4,401621343,0,0x0,8
tick,0x7ffdb840feb4,401637139,0,0x0,8
tick,0x7ffdb840feb4,401652346,0,0x0,8
tick,0x7ffdb840feb4,401667243,0,0x0,8
tick,0x7ffdb840feb4,401682518,0,0x0,8
tick,0x7ffdb840feb4,401698381,0,0x0,8
tick,0x7ffdb840feb4,401713532,0,0x0,8
tick,0x7ffdb840feb4,401728367,0,0x0,8
tick,0x7ffdb840feb4,401743533,0,0x0,8
tick,0x7ffdb840feb4,401759431,0,0x0,8
tick,0x7ffdb840feb4,401774992,0,0x0,8
tick,0x7ffdb840feb4,401790293,0,0x0,8
tick,0x7ffdb840feb4,401805530,0,0x0,8
tick,0x7ffdb840feb4,401821372,0,0x0,8
tick,0x7ffdb840feb4,401836761,0,0x0,8
tick,0x7ffdb840feb4,401851539,0,0x0,8
tick,0x7ffdb840feb4,401867538,0,0x0,8
tick,0x7ffdb840feb4,401883538,0,0x0,8
tick,0x7ffdb840feb4,401899032,0,0x0,8
tick,0x7ffdb840feb4,401914712,0,0x0,8
tick,0x7ffdb840feb4,401929564,0,0x0,8
tick,0x7ffdb840feb4,401944753,0,0x0,8
tick,0x7ffdb840feb4,401959761,0,0x0,8
tick,0x7ffdb840feb4,401975490,0,0x0,8
tick,0x7ffdb840feb4,401990563,0,0x0,8
tick,0x7ffdb840feb4,402006386,0,0x0,8
tick,0x7ffdb840feb4,402021574,0,0x0,8
tick,0x7ffdb840feb4,402037533,0,0x0,8
tick,0x7ffdb840feb4,402052564,0,0x0,8
tick,0x7ffdb840feb4,402067634,0,0x0,8
tick,0x7ffdb840feb4,402083571,0,0x0,8
tick,0x7ffdb840feb4,402098962,0,0x0,8
tick,0x7ffdb840feb4,402113735,0,0x0,8
tick,0x7ffdb840feb4,402129383,0,0x0,8
tick,0x7ffdb840feb4,402144741,0,0x0,8
tick,0x7ffdb840feb4,402159831,0,0x0,8
tick,0x7ffdb840feb4,402175596,0,0x0,8
tick,0x7ffdb840feb4,402190488,0,0x0,8
tick,0x7ffdb840feb4,402205595,0,0x0,8
tick,0x7ffdb840feb4,402221574,0,0x0,8
tick,0x7ffdb840feb4,402236882,0,0x0,8
tick,0x7ffdb840feb4,402252603,0,0x0,8
tick,0x7ffdb840feb4,402267788,0,0x0,8
tick,0x7ffdb840feb4,402283789,0,0x0,8
tick,0x7ffdb840feb4,402299612,0,0x0,8
tick,0x7ffdb840feb4,402314901,0,0x0,8
tick,0x7ffdb840feb4,402329726,0,0x0,8
tick,0x7ffdb840feb4,402345077,0,0x0,8
tick,0x7ffdb840feb4,402360434,0,0x0,8
tick,0x7ffdb840feb4,402375602,0,0x0,8
tick,0x7ffdb840feb4,402391693,0,0x0,8
tick,0x7ffdb840feb4,402407377,0,0x0,8
tick,0x7ffdb840feb4,402422433,0,0x0,8
tick,0x7ffdb840feb4,402437621,0,0x0,8
tick,0x7ffdb840feb4,402453612,0,0x0,8
tick,0x7ffdb840feb4,402469785,0,0x0,8
tick,0x7ffdb840feb4,402484618,0,0x0,8
tick,0x7ffdb840feb4,402499739,0,0x0,8
tick,0x7ffdb840feb4,402515095,0,0x0,8
tick,0x7ffdb840feb4,402530612,0,0x0,8
tick,0x7ffdb840feb4,402546456,0,0x0,8
tick,0x7ffdb840feb4,402562461,0,0x0,8
tick,0x7ffdb840feb4,402578476,0,0x0,8
tick,0x7ffdb840feb4,402594628,0,0x0,8
tick,0x7ffdb840feb4,402610469,0,0x0,8
tick,0x7ffdb840feb4,402625692,0,0x0,8
tick,0x7ffdb840feb4,402641486,0,0x0,8
tick,0x7ffdb840feb4,402656649,0,0x0,8
tick,0x7ffdb840feb4,402672698,0,0x0,8
tick,0x7ffdb840feb4,402688700,0,0x0,8
tick,0x7ffdb840feb4,402704656,0,0x0,8
tick,0x7ffdb840feb4,402719858,0,0x0,8
tick,0x7ffdb840feb4,402734646,0,0x0,8
tick,0x7ffdb840feb4,402750723,0,0x0,8
tick,0x7ffdb840feb4,402766657,0,0x0,8
tick,0x7ffdb840feb4,402782477,0,0x0,8
tick,0x7ffdb840feb4,402797664,0,0x0,8
tick,0x7ffdb840feb4,402812671,0,0x0,8
tick,0x7ffdb840feb4,402828684,0,0x0,8
tick,0x7ffdb840feb4,402844673,0,0x0,8
tick,0x7ffdb840feb4,402859661,0,0x0,8
tick,0x7ffdb840feb4,402875676,0,0x0,8
tick,0x7ffdb840feb4,402890498,0,0x0,8
tick,0x7ffdb840feb4,402905689,0,0x0,8
tick,0x7ffdb840feb4,402921692,0,0x0,8
tick,0x7ffdb840feb4,402936688,0,0x0,8
tick,0x7ffdb840feb4,402952682,0,0x0,8
tick,0x7ffdb840feb4,402967944,0,0x0,8
tick,0x7ffdb840feb4,402983676,0,0x0,8
tick,0x7ffdb840feb4,402999689,0,0x0,8
tick,0x7ffdb840feb4,403015812,0,0x0,8
tick,0x7ffdb840feb4,403031512,0,0x0,8
tick,0x7ffdb840feb4,403046687,0,0x0,8
tick,0x7ffdb840feb4,403062512,0,0x0,8
tick,0x7ffdb840feb4,403077691,0,0x0,8
tick,0x7ffdb840feb4,403093515,0,0x0,8
tick,0x7ffdb840feb4,403108681,0,0x0,8
tick,0x7ffdb840feb4,403123708,0,0x0,8
tick,0x7ffdb840feb4,403138727,0,0x0,8
tick,0x7ffdb840feb4,403153839,0,0x0,8
tick,0x7ffdb840feb4,403168738,0,0x0,8
tick,0x7ffdb840feb4,403183884,0,0x0,8
tick,0x7ffdb840feb4,403199711,0,0x0,8
tick,0x7ffdb840feb4,403214715,0,0x0,8
tick,0x7ffdb840feb4,403229423,0,0x0,8
tick,0x7ffdb840feb4,403244855,0,0x0,8
tick,0x7ffdb840feb4,403259714,0,0x0,8
tick,0x7ffdb840feb4,403274948,0,0x0,8
tick,0x7ffdb840feb4,403290556,0,0x0,8
tick,0x7ffdb840feb4,403305718,0,0x0,8
tick,0x7ffdb840feb4,403320714,0,0x0,8
tick,0x7ffdb840feb4,403335928,0,0x0,8
tick,0x7ffdb840feb4,403351538,0,0x0,8
tick,0x7ffdb840feb4,403366557,0,0x0,8
tick,0x7ffdb840feb4,403382541,0,0x0,8
tick,0x7ffdb840feb4,403398262,0,0x0,8
tick,0x7ffdb840feb4,403413375,0,0x0,8
tick,0x7ffdb840feb4,403428730,0,0x0,8
tick,0x7ffdb840feb4,403443757,0,0x0,8
tick,0x7ffdb840feb4,403458732,0,0x0,8
tick,0x7ffdb840feb4,403474754,0,0x0,8
tick,0x7ffdb840feb4,403489933,0,0x0,8
tick,0x7ffdb840feb4,403505741,0,0x0,8
tick,0x7ffdb840feb4,403521761,0,0x0,8
tick,0x7ffdb840feb4,403536938,0,0x0,8
tick,0x7ffdb840feb4,403553109,0,0x0,8
tick,0x7ffdb840feb4,403568941,0,0x0,8
tick,0x7ffdb840feb4,403585126,0,0x0,8
tick,0x7ffdb840feb4,403600746,0,0x0,8
tick,0x7ffdb840feb4,403615933,0,0x0,8
tick,0x7ffdb840feb4,403631592,0,0x0,8
tick,0x7ffdb840feb4,403647247,0,0x0,8
tick,0x7ffdb840feb4,403661771,0,0x0,8
tick,0x7ffdb840feb4,403677442,0,0x0,8
tick,0x7ffdb840feb4,403692795,0,0x0,8
tick,0x7ffdb840feb4,403707821,0,0x0,8
tick,0x7ffdb840feb4,403723827,0,0x0,8
tick,0x7ffdb840feb4,403739827,0,0x0,8
tick,0x7ffdb840feb4,403755830,0,0x0,8
tick,0x7ffdb840feb4,403770617,0,0x0,8
tick,0x7ffdb840feb4,403785837,0,0x0,8
tick,0x7ffdb840feb4,403801840,0,0x0,8
tick,0x7ffdb840feb4,403817912,0,0x0,8
tick,0x7ffdb840feb4,403833788,0,0x0,8
tick,0x7ffdb840feb4,403849235,0,0x0,8
tick,0x7ffdb840feb4,403864802,0,0x0,8
tick,0x7ffdb840feb4,403879805,0,0x0,8
tick,0x7ffdb840feb4,403895792,0,0x0,8
tick,0x7ffdb840feb4,403911829,0,0x0,8
tick,0x7ffdb840feb4,403926999,0,0x0,8
tick,0x7ffdb840feb4,403942620,0,0x0,8
tick,0x7ffdb840feb4,403958628,0,0x0,8
tick,0x7ffdb840feb4,403973644,0,0x0,8
tick,0x7ffdb840feb4,403988844,0,0x0,8
tick,0x7ffdb840feb4,404004315,0,0x0,8
tick,0x7ffdb840feb4,404020167,0,0x0,8
tick,0x7ffdb840feb4,404035636,0,0x0,8
tick,0x7ffdb840feb4,404051644,0,0x0,8
tick,0x7ffdb840feb4,404067647,0,0x0,8
tick,0x7ffdb840feb4,404082564,0,0x0,8
tick,0x7ffdb840feb4,404097576,0,0x0,8
tick,0x7ffdb840feb4,404112821,0,0x0,8
tick,0x7ffdb840feb4,404128826,0,0x0,8
tick,0x7ffdb840feb4,404143819,0,0x0,8
tick,0x7ffdb840feb4,404158829,0,0x0,8
tick,0x7ffdb840feb4,404174825,0,0x0,8
tick,0x7ffdb840feb4,404190841,0,0x0,8
tick,0x7ffdb840feb4,404206840,0,0x0,8
tick,0x7ffdb840feb4,404222838,0,0x0,8
tick,0x7ffdb840feb4,404238839,0,0x0,8
tick,0x7ffdb840feb4,404254667,0,0x0,8
tick,0x7ffdb840feb4,404270671,0,0x0,8
tick,0x7ffdb840feb4,404285840,0,0x0,8
tick,0x7ffdb840feb4,404300646,0,0x0,8
tick,0x7ffdb840feb4,404315828,0,0x0,8
tick,0x7ffdb840feb4,404331670,0,0x0,8
tick,0x7ffdb840feb4,404346670,0,0x0,8
tick,0x7ffdb840feb4,404362683,0,0x0,8
tick,0x7ffdb840feb4,404377850,0,0x0,8
tick,0x7ffdb840feb4,404392678,0,0x0,8
tick,0x7ffdb840feb4,404408285,0,0x0,8
tick,0x7ffdb840feb4,404423857,0,0x0,8
tick,0x7ffdb840feb4,404438863,0,0x0,8
tick,0x7ffdb840feb4,404454694,0,0x0,8
tick,0x7ffdb840feb4,404469868,0,0x0,8
tick,0x7ffdb840feb4,404484871,0,0x0,8
tick,0x7ffdb840feb4,404500949,0,0x0,8
tick,0x7ffdb840feb4,404516691,0,0x0,8
tick,0x7ffdb840feb4,404532577,0,0x0,8
tick,0x7ffdb840feb4,404548584,0,0x0,8
tick,0x7ffdb840feb4,404564587,0,0x0,8
tick,0x7ffdb840feb4,404580581,0,0x0,8
tick,0x7ffdb840feb4,404596589,0,0x0,8
tick,0x7ffdb840feb4,404611706,0,0x0,8
tick,0x7ffdb840feb4,404626897,0,0x0,8
tick,0x7ffdb840feb4,404642904,0,0x0,8
tick,0x7ffdb840feb4,404658909,0,0x0,8
tick,0x7ffdb840feb4,404674902,0,0x0,8
tick,0x7ffdb840feb4,404690920,0,0x0,8
tick,0x7ffdb840feb4,404706920,0,0x0,8
tick,0x7ffdb840feb4,404722921,0,0x0,8
tick,0x7ffdb840feb4,404738925,0,0x0,8
tick,0x7ffdb840feb4,404754928,0,0x0,8
tick,0x7ffdb840feb4,404770737,0,0x0,8
tick,0x7ffdb840feb4,404786735,0,0x0,8
tick,0x7ffdb840feb4,404802086,0,0x0,8
tick,0x7ffdb840feb4,404818099,0,0x0,8
tick,0x7ffdb840feb4,404834101,0,0x0,8
tick,0x7ffdb840feb4,404850105,0,0x0,8
tick,0x7ffdb840feb4,404866121,0,0x0,8
tick,0x7ffdb840feb4,404881122,0,0x0,8
tick,0x7ffdb840feb4,404896116,0,0x0,8
tick,0x7ffdb840feb4,404912135,0,0x0,8
tick,0x7ffdb840feb4,404927124,0,0x0,8
tick,0x7ffdb840feb4,404942128,0,0x0,8
tick,0x7ffdb840feb4,404957743,0,0x0,8
tick,0x7ffdb840feb4,404972760,0,0x0,8
tick,0x7ffdb840feb4,404987920,0,0x0,8
tick,0x7ffdb840feb4,405003929,0,0x0,8
tick,0x7ffdb840feb4,405018999,0,0x0,8
tick,0x7ffdb840feb4,405034773,0,0x0,8
tick,0x7ffdb840feb4,405049938,0,0x0,8
tick,0x7ffdb840feb4,405065149,0,0x0,8
tick,0x7ffdb840feb4,405080162,0,0x0,8
tick,0x7ffdb840feb4,405096005,0,0x0,8
tick,0x7ffdb840feb4,405111764,0,0x0,8
tick,0x7ffdb840feb4,405127771,0,0x0,8
tick,0x7ffdb840feb4,405142934,0,0x0,8
tick,0x7ffdb840feb4,405157941,0,0x0,8
tick,0x7ffdb840feb4,405173934,0,0x0,8
tick,0x7ffdb840feb4,405189650,0,0x0,8
tick,0x7ffdb840feb4,405204949,0,0x0,8
tick,0x7ffdb840feb4,405220776,0,0x0,8
tick,0x7ffdb840feb4,405235960,0,0x0,8
tick,0x7ffdb840feb4,405251780,0,0x0,8
tick,0x7ffdb840feb4,405267798,0,0x0,8
tick,0x7ffdb840feb4,405282976,0,0x0,8
tick,0x7ffdb840feb4,405298988,0,0x0,8
tick,0x7ffdb840feb4,405313770,0,0x0,8
tick,0x7ffdb840feb4,405328965,0,0x0,8
tick,0x7ffdb840feb4,405344961,0,0x0,8
tick,0x7ffdb840feb4,405359978,0,0x0,8
tick,0x7ffdb840feb4,405375980,0,0x0,8
tick,0x7ffdb840feb4,405391969,0,0x0,8
tick,0x7ffdb840feb4,405407301,0,0x0,8
tick,0x7ffdb840feb4,405422816,0,0x0,8
tick,0x7ffdb840feb4,405437994,0,0x0,8
tick,0x7ffdb840feb4,405453809,0,0x0,8
tick,0x7ffdb840feb4,405469001,0,0x0,8
tick,0x7ffdb840feb4,405483989,0,0x0,8
tick,0x7ffdb840feb4,405499410,0,0x0,8
tick,0x7ffdb840feb4,405514948,0,0x0,8
tick,0x7ffdb840feb4,405529988,0,0x0,8
tick,0x7ffdb840feb4,405545990,0,0x0,8
tick,0x7ffdb840feb4,405562004,0,0x0,8
tick,0x7ffdb840feb4,405578008,0,0x0,8
tick,0x7ffdb840feb4,405594008,0,0x0,8
tick,0x7ffdb840feb4,405610016,0,0x0,8
tick,0x7ffdb840feb4,405626032,0,0x0,8
tick,0x7ffdb840feb4,405641637,0,0x0,8
tick,0x7ffdb840feb4,405656844,0,0x0,8
tick,0x7ffdb840feb4,405672024,0,0x0,8
tick,0x7ffdb840feb4,405688019,0,0x0,8
tick,0x7ffdb840feb4,405704030,0,0x0,8
tick,0x7ffdb840feb4,405720025,0,0x0,8
tick,0x7ffdb840feb4,405736034,0,0x0,8
tick,0x7ffdb840feb4,405751845,0,0x0,8
tick,0x7ffdb840feb4,405767847,0,0x0,8
tick,0x7ffdb840feb4,405782840,0,0x0,8
tick,0x7ffdb840feb4,405798851,0,0x0,8
tick,0x7ffdb840feb4,405814007,0,0x0,8
tick,0x7ffdb840feb4,405829796,0,0x0,8
tick,0x7ffdb840feb4,405845038,0,0x0,8
tick,0x7ffdb840feb4,405860033,0,0x0,8
tick,0x7ffdb840feb4,405876033,0,0x0,8
tick,0x7ffdb840feb4,405891856,0,0x0,8
tick,0x7ffdb840feb4,405907079,0,0x0,8
tick,0x7ffdb840feb4,405923047,0,0x0,8
tick,0x7ffdb840feb4,405938048,0,0x0,8
tick,0x7ffdb840feb4,405954043,0,0x0,8
tick,0x7ffdb840feb4,405970050,0,0x0,8
tick,0x7ffdb840feb4,405986049,0,0x0,8
tick,0x7ffdb840feb4,406002044,0,0x0,8
tick,0x7ffdb840feb4,406018046,0,0x0,8
tick,0x7ffdb840feb4,406034064,0,0x0,8
tick,0x7ffdb840feb4,406050055,0,0x0,8
tick,0x7ffdb840feb4,406066079,0,0x0,8
tick,0x7ffdb840feb4,406082060,0,0x0,8
tick,0x7ffdb840feb4,406098061,0,0x0,8
tick,0x7ffdb840feb4,406114018,0,0x0,8
tick,0x7ffdb840feb4,406129888,0,0x0,8
tick,0x7ffdb840feb4,406145053,0,0x0,8
tick,0x7ffdb840feb4,406161065,0,0x0,8
tick,0x7ffdb840feb4,406176068,0,0x0,8
tick,0x7ffdb840feb4,406191886,0,0x0,8
tick,0x7ffdb840feb4,406207066,0,0x0,8
tick,0x7ffdb840feb4,406222076,0,0x0,8
tick,0x7ffdb840feb4,406237901,0,0x0,8
tick,0x7ffdb840feb4,406252894,0,0x0,8
tick,0x7ffdb840feb4,406268898,0,0x0,8
tick,0x7ffdb840feb4,406284083,0,0x0,8
tick,0x7ffdb840feb4,406300127,0,0x0,8
tick,0x7ffdb840feb4,406315030,0,0x0,8
tick,0x7ffdb840feb4,406330512,0,0x0,8
tick,0x7ffdb840feb4,406346082,0,0x0,8
tick,0x7ffdb840feb4,406361085,0,0x0,8
tick,0x7ffdb840feb4,406377201,0,0x0,8
tick,0x7ffdb840feb4,406393096,0,0x0,8
tick,0x7ffdb840feb4,406409111,0,0x0,8
tick,0x7ffdb840feb4,406424246,0,0x0,8
tick,0x7ffdb840feb4,406439104,0,0x0,8
tick,0x7ffdb840feb4,406455092,0,0x0,8
tick,0x7ffdb840feb4,406470549,0,0x0,8
tick,0x7ffdb840feb4,406486100,0,0x0,8
tick,0x7ffdb840feb4,406501419,0,0x0,8
tick,0x7ffdb840feb4,406517047,0,0x0,8
tick,0x7ffdb840feb4,406532104,0,0x0,8
tick,0x7ffdb840feb4,406547934,0,0x0,8
tick,0x7ffdb840feb4,406562941,0,0x0,8
tick,0x7ffdb840feb4,406578948,0,0x0,8
tick,0x7ffdb840feb4,406594951,0,0x0,8
tick,0x7ffdb840feb4,406610963,0,0x0,8
tick,0x7ffdb840feb4,406625598,0,0x0,8
tick,0x7ffdb840feb4,406640968,0,0x0,8
tick,0x7ffdb840feb4,406656977,0,0x0,8
tick,0x7ffdb840feb4,406672131,0,0x0,8
tick,0x7ffdb840feb4,406687123,0,0x0,8
tick,0x7ffdb840feb4,406702946,0,0x0,8
tick,0x7ffdb840feb4,406718164,0,0x0,8
tick,0x7ffdb840feb4,406733970,0,0x0,8
tick,0x7ffdb840feb4,406749631,0,0x0,8
tick,0x7ffdb840feb4,406765129,0,0x0,8
tick,0x7ffdb840feb4,406779919,0,0x0,8
tick,0x7ffdb840feb4,406795138,0,0x0,8
tick,0x7ffdb840feb4,406810967,0,0x0,8
tick,0x7ffdb840feb4,406826158,0,0x0,8
tick,0x7ffdb840feb4,406842147,0,0x0,8
tick,0x7ffdb840feb4,406857978,0,0x0,8
tick,0x7ffdb840feb4,406873142,0,0x0,8
tick,0x7ffdb840feb4,406888608,0,0x0,8
tick,0x7ffdb840feb4,406904157,0,0x0,8
tick,0x7ffdb840feb4,406919180,0,0x0,8
tick,0x7ffdb840feb4,406935407,0,0x0,8
tick,0x7ffdb840feb4,406950152,0,0x0,8
tick,0x7ffdb840feb4,406965333,0,0x0,8
tick,0x7ffdb840feb4,406981170,0,0x0,8
tick,0x7ffdb840feb4,406996164,0,0x0,8
tick,0x7ffdb840feb4,407012038,0,0x0,8
tick,0x7ffdb840feb4,407027673,0,0x0,8
tick,0x7ffdb840feb4,407042999,0,0x0,8
tick,0x7ffdb840feb4,407058174,0,0x0,8
tick,0x7ffdb840feb4,407074358,0,0x0,8
tick,0x7ffdb840feb4,407090184,0,0x0,8
tick,0x7ffdb840feb4,407105359,0,0x0,8
tick,0x7ffdb840feb4,407120285,0,0x0,8
tick,0x7ffdb840feb4,407136187,0,0x0,8
tick,0x7ffdb840feb4,407152021,0,0x0,8
tick,0x7ffdb840feb4,407167697,0,0x0,8
tick,0x7ffdb840feb4,407183018,0,0x0,8
tick,0x7ffdb840feb4,407198191,0,0x0,8
tick,0x7ffdb840feb4,407213356,0,0x0,8
tick,0x7ffdb840feb4,407228543,0,0x0,8
tick,0x7ffdb840feb4,407244015,0,0x0,8
tick,0x7ffdb840feb4,407260180,0,0x0,8
tick,0x7ffdb840feb4,407275360,0,0x0,8
tick,0x7ffdb840feb4,407290215,0,0x0,8
tick,0x7ffdb840feb4,407305887,0,0x0,8
tick,0x7ffdb840feb4,407321158,0,0x0,8
tick,0x7ffdb840feb4,407336210,0,0x0,8
tick,0x7ffdb840feb4,407352207,0,0x0,8
tick,0x7ffdb840feb4,407368233,0,0x0,8
tick,0x7ffdb840feb4,407383208,0,0x0,8
tick,0x7ffdb840feb4,407399378,0,0x0,8
tick,0x7ffdb840feb4,407414122,0,0x0,8
tick,0x7ffdb840feb4,407429415,0,0x0,8
tick,0x7ffdb840feb4,407445469,0,0x0,8
tick,0x7ffdb840feb4,407460062,0,0x0,8
tick,0x7ffdb840feb4,407475435,0,0x0,8
tick,0x7ffdb840feb4,407490895,0,0x0,8
tick,0x7ffdb840feb4,407506456,0,0x0,8
tick,0x7ffdb840feb4,407522043,0,0x0,8
tick,0x7ffdb840feb4,407537387,0,0x0,8
tick,0x7ffdb840feb4,407553237,0,0x0,8
tick,0x7ffdb840feb4,407568620,0,0x0,8
tick,0x7ffdb840feb4,407583462,0,0x0,8
tick,0x7ffdb840feb4,407599684,0,0x0,8
tick,0x7ffdb840feb4,407615466,0,0x0,8
tick,0x7ffdb840feb4,407630753,0,0x0,8
tick,0x7ffdb840feb4,407646276,0,0x0,8
tick,0x7ffdb840feb4,407662080,0,0x0,8
tick,0x7ffdb840feb4,407678256,0,0x0,8
tick,0x7ffdb840feb4,407693086,0,0x0,8
tick,0x7ffdb840feb4,407708640,0,0x0,8
tick,0x7ffdb840feb4,407724410,0,0x0,8
tick,0x7ffdb840feb4,407740097,0,0x0,8
tick,0x7ffdb840feb4,407755251,0,0x0,8
tick,0x7ffdb840feb4,407771257,0,0x0,8
tick,0x7ffdb840feb4,407786488,0,0x0,8
tick,0x7ffdb840feb4,407802099,0,0x0,8
tick,0x7ffdb840feb4,407817470,0,0x0,8
tick,0x7ffdb840feb4,407832270,0,0x0,8
tick,0x7ffdb840feb4,407847646,0,0x0,8
tick,0x7ffdb840feb4,407863111,0,0x0,8
tick,0x7ffdb840feb4,407878727,0,0x0,8
tick,0x7ffdb840feb4,407894094,0,0x0,8
tick,0x7ffdb840feb4,407909288,0,0x0,8
tick,0x7ffdb840feb4,407924958,0,0x0,8
tick,0x7ffdb840feb4,407940472,0,0x0,8
tick,0x7ffdb840feb4,407955446,0,0x0,8
tick,0x7ffdb840feb4,407970644,0,0x0,8
tick,0x7ffdb840feb4,407986467,0,0x0,8
tick,0x7ffdb840feb4,408002312,0,0x0,8
tick,0x7ffdb840feb4,408018290,0,0x0,8
tick,0x7ffdb840feb4,408034631,0,0x0,8
tick,0x7ffdb840feb4,408049578,0,0x0,8
tick,0x7ffdb840feb4,408064841,0,0x0,8
tick,0x7ffdb840feb4,408079933,0,0x0,8
tick,0x7ffdb840feb4,408095954,0,0x0,8
tick,0x7ffdb840feb4,408112144,0,0x0,8
tick,0x7ffdb840feb4,408128008,0,0x0,8
tick,0x7ffdb840feb4,408143571,0,0x0,8
tick,0x7ffdb840feb4,408159081,0,0x0,8
tick,0x7ffdb840feb4,408174313,0,0x0,8
tick,0x7ffdb840feb4,408189485,0,0x0,8
tick,0x7ffdb840feb4,408204674,0,0x0,8
tick,0x7ffdb840feb4,408220799,0,0x0,8
tick,0x7ffdb840feb4,408236324,0,0x0,8
tick,0x7ffdb840feb4,408252143,0,0x0,8
tick,0x7ffdb840feb4,408268141,0,0x0,8
tick,0x7ffdb840feb4,408284171,0,0x0,8
tick,0x7ffdb840feb4,408299628,0,0x0,8
tick,0x7ffdb840feb4,408315241,0,0x0,8
tick,0x7ffdb840feb4,408330331,0,0x0,8
tick,0x7ffdb840feb4,408345590,0,0x0,8
tick,0x7ffdb840feb4,408360936,0,0x0,8
tick,0x7ffdb840feb4,408376154,0,0x0,8
tick,0x7ffdb840feb4,408392158,0,0x0,8
tick,0x7ffdb840feb4,408407287,0,0x0,8
tick,0x7ffdb840feb4,408422177,0,0x0,8
tick,0x7ffdb840feb4,408438173,0,0x0,8
tick,0x7ffdb840feb4,408453348,0,0x0,8
tick,0x7ffdb840feb4,408468343,0,0x0,8
tick,0x7ffdb840feb4,408484341,0,0x0,8
tick,0x7ffdb840feb4,408499822,0,0x0,8
tick,0x7ffdb840feb4,408515367,0,0x0,8
tick,0x7ffdb840feb4,408530599,0,0x0,8
tick,0x7ffdb840feb4,408546004,0,0x0,8
tick,0x7ffdb840feb4,408561178,0,0x0,8
tick,0x7ffdb840feb4,408577189,0,0x0,8
tick,0x7ffdb840feb4,408592174,0,0x0,8
tick,0x7ffdb840feb4,408608194,0,0x0,8
tick,0x7ffdb840feb4,408624181,0,0x0,8
tick,0x7ffdb840feb4,408640183,0,0x0,8
tick,0x7ffdb840feb4,408655205,0,0x0,8
tick,0x7ffdb840feb4,408670673,0,0x0,8
tick,0x7ffdb840feb4,408686363,0,0x0,8
tick,0x7ffdb840feb4,408702206,0,0x0,8
tick,0x7ffdb840feb4,408717627,0,0x0,8
tick,0x7ffdb840feb4,408733191,0,0x0,8
tick,0x7ffdb840feb4,408748665,0,0x0,8
tick,0x7ffdb840feb4,408764369,0,0x0,8
tick,0x7ffdb840feb4,408779591,0,0x0,8
tick,0x7ffdb840feb4,408795378,0,0x0,8
tick,0x7ffdb840feb4,408811375,0,0x0,8
tick,0x7ffdb840feb4,408827382,0,0x0,8
tick,0x7ffdb840feb4,408843237,0,0x0,8
tick,0x7ffdb840feb4,408858392,0,0x0,8
tick,0x7ffdb840feb4,408873391,0,0x0,8
tick,0x7ffdb840feb4,408889397,0,0x0,8
tick,0x7ffdb840feb4,408905400,0,0x0,8
tick,0x7ffdb840feb4,408921396,0,0x0,8
tick,0x7ffdb840feb4,408937228,0,0x0,8
tick,0x7ffdb840feb4,408952435,0,0x0,8
tick,0x7ffdb840feb4,408968401,0,0x0,8
tick,0x7ffdb840feb4,408983399,0,0x0,8
tick,0x7ffdb840feb4,408999415,0,0x0,8
tick,0x7ffdb840feb4,409014406,0,0x0,8
tick,0x7ffdb840feb4,409029417,0,0x0,8
tick,0x7ffdb840feb4,409045016,0,0x0,8
tick,0x7ffdb840feb4,409060432,0,0x0,8
tick,0x7ffdb840feb4,409075435,0,0x0,8
tick,0x7ffdb840feb4,409090634,0,0x0,8
tick,0x7ffdb840feb4,409106438,0,0x0,8
tick,0x7ffdb840feb4,409121418,0,0x0,8
tick,0x7ffdb840feb4,409137237,0,0x0,8
tick,0x7ffdb840feb4,409152427,0,0x0,8
tick,0x7ffdb840feb4,409167459,0,0x0,8
tick,0x7ffdb840feb4,409182241,0,0x0,8
tick,0x7ffdb840feb4,409197429,0,0x0,8
tick,0x7ffdb840feb4,409213264,0,0x0,8
tick,0x7ffdb840feb4,409229266,0,0x0,8
tick,0x7ffdb840feb4,409244437,0,0x0,8
tick,0x7ffdb840feb4,409259440,0,0x0,8
tick,0x7ffdb840feb4,409275432,0,0x0,8
tick,0x7ffdb840feb4,409290743,0,0x0,8
tick,0x7ffdb840feb4,409306455,0,0x0,8
tick,0x7ffdb840feb4,409322434,0,0x0,8
tick,0x7ffdb840feb4,409338237,0,0x0,8
tick,0x7ffdb840feb4,409353445,0,0x0,8
tick,0x7ffdb840feb4,409368448,0,0x0,8
tick,0x7ffdb840feb4,409384449,0,0x0,8
tick,0x7ffdb840feb4,409400453,0,0x0,8
tick,0x7ffdb840feb4,409416464,0,0x0,8
tick,0x7ffdb840feb4,409432286,0,0x0,8
tick,0x7ffdb840feb4,409447457,0,0x0,8
tick,0x7ffdb840feb4,409463282,0,0x0,8
tick,0x7ffdb840feb4,409478459,0,0x0,8
tick,0x7ffdb840feb4,409494460,0,0x0,8
tick,0x7ffdb840feb4,409510473,0,0x0,8
tick,0x7ffdb840feb4,409526486,0,0x0,8
tick,0x7ffdb840feb4,409542313,0,0x0,8
tick,0x7ffdb840feb4,409557935,0,0x0,8
tick,0x7ffdb840feb4,409573173,0,0x0,8
tick,0x7ffdb840feb4,409588506,0,0x0,8
tick,0x7ffdb840feb4,409604508,0,0x0,8
tick,0x7ffdb840feb4,409620532,0,0x0,8
tick,0x7ffdb840feb4,409636538,0,0x0,8
tick,0x7ffdb840feb4,409652538,0,0x0,8
tick,0x7ffdb840feb4,409668042,0,0x0,8
tick,0x7ffdb840feb4,409683313,0,0x0,8
tick,0x7ffdb840feb4,409698714,0,0x0,8
tick,0x7ffdb840feb4,409714486,0,0x0,8
tick,0x7ffdb840feb4,409729483,0,0x0,8
tick,0x7ffdb840feb4,409745491,0,0x0,8
tick,0x7ffdb840feb4,409761325,0,0x0,8
tick,0x7ffdb840feb4,409776741,0,0x0,8
tick,0x7ffdb840feb4,409792315,0,0x0,8
tick,0x7ffdb840feb4,409808324,0,0x0,8
tick,0x7ffdb840feb4,409823327,0,0x0,8
tick,0x7ffdb840feb4,409838331,0,0x0,8
tick,0x7ffdb840feb4,409853496,0,0x0,8
tick,0x7ffdb840feb4,409869502,0,0x0,8
tick,0x7ffdb840feb4,409885502,0,0x0,8
tick,0x7ffdb840feb4,409901328,0,0x0,8
tick,0x7ffdb840feb4,409917373,0,0x0,8
tick,0x7ffdb840feb4,409932333,0,0x0,8
tick,0x7ffdb840feb4,409947511,0,0x0,8
tick,0x7ffdb840feb4,409962900,0,0x0,8
tick,0x7ffdb840feb4,409978793,0,0x0,8
tick,0x7ffdb840feb4,409994674,0,0x0,8
tick,0x7ffdb840feb4,410010420,0,0x0,8
tick,0x7ffdb840feb4,410025425,0,0x0,8
tick,0x7ffdb840feb4,410040886,0,0x0,8
tick,0x7ffdb840feb4,410056707,0,0x0,8
tick,0x7ffdb840feb4,410073135,0,0x0,8
tick,0x7ffdb840feb4,410088960,0,0x0,8
tick,0x7ffdb840feb4,410104921,0,0x0,8
tick,0x7ffdb840feb4,410120794,0,0x0,8
tick,0x7ffdb840feb4,410136411,0,0x0,8
tick,0x7ffdb840feb4,410151560,0,0x0,8
tick,0x7ffdb840feb4,410166858,0,0x0,8
tick,0x7ffdb840feb4,410182956,0,0x0,8
tick,0x7ffdb840feb4,410198999,0,0x0,8
tick,0x7ffdb840feb4,410214442,0,0x0,8
tick,0x7ffdb840feb4,410230371,0,0x0,8
tick,0x7ffdb840feb4,410245685,0,0x0,8
tick,0x7ffdb840feb4,410261868,0,0x0,8
tick,0x7ffdb840feb4,410277693,0,0x0,8
tick,0x7ffdb840feb4,410293825,0,0x0,8
tick,0x7ffdb840feb4,410309269,0,0x0,8
tick,0x7ffdb840feb4,410325620,0,0x0,8
tick,0x7ffdb840feb4,410341236,0,0x0,8
tick,0x7ffdb840feb4,410357066,0,0x0,8
tick,0x7ffdb840feb4,410372876,0,0x0,8
tick,0x7ffdb840feb4,410389023,0,0x0,8
tick,0x7ffdb840feb4,410404221,0,0x0,8
tick,0x7ffdb840feb4,410419345,0,0x0,8
tick,0x7ffdb840feb4,410435624,0,0x0,8
tick,0x7ffdb840feb4,410451768,0,0x0,8
tick,0x7ffdb840feb4,410467308,0,0x0,8
tick,0x7ffdb840feb4,410483046,0,0x0,8
tick,0x7ffdb840feb4,410498836,0,0x0,8
